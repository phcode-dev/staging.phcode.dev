define(function(require,exports,module){let WorkspaceManager=require("view/WorkspaceManager");function Notification(tooltip){this.$tooltip=tooltip,this._result=new $.Deferred,this._promise=this._result.promise()}function createFromTemplate(template,elementID,options){options.allowedPlacements=options.allowedPlacements||["top","bottom","left","right"],options.dismissOnClick=options.dismissOnClick||!0,elementID||(elementID="notificationUIDefaultAnchor");const tooltip=_createDomElementWithArrowElement(template,elementID,options);tooltip.addClass("notification-ui-visible");let notification=new Notification(tooltip);return options.autoCloseTimeS&&setTimeout(()=>{notification.close(exports.CLOSE_TIMEOUT)},1e3*options.autoCloseTimeS),options.dismissOnClick&&tooltip.click(()=>{notification.close(exports.CLOSE_CLICK_DISMISS)}),notification}Notification.prototype.close=function(closeType){let $tooltip=this.$tooltip;return $tooltip?($tooltip.removeClass("notification-ui-visible").addClass("notification-ui-hidden"),setTimeout(()=>{$tooltip.remove(),this.$tooltip=null,WorkspaceManager.off(WorkspaceManager.EVENT_WORKSPACE_UPDATE_LAYOUT,$tooltip[0].update),this._result.resolve(closeType)},1e3),this):this},Notification.prototype.done=function(callback){this._promise.done(callback)};let notificationWidgetCount=0;function _computePlacementWithArrowElement(tooltip,arrowElement,{x:x,y:y,placement:placement,middlewareData:middlewareData}){if(Object.assign(tooltip.style,{left:`${x}px`,top:`${y}px`}),arrowElement){const{x:arrowX,y:arrowY}=middlewareData.arrow,staticSide={top:"bottom",right:"left",bottom:"top",left:"right"}[placement.split("-")[0]];Object.assign(arrowElement.style,{left:null!=arrowX?`${arrowX}px`:"",top:null!=arrowY?`${arrowY}px`:"",right:"",bottom:"",[staticSide]:"-4px"})}}function _updatePositions(tooltip,onElement,arrowElement,options){let middleWare=[FloatingUIDOM.offset(6),FloatingUIDOM.autoPlacement({allowedPlacements:options.allowedPlacements}),FloatingUIDOM.shift({padding:5})];arrowElement&&middleWare.push(FloatingUIDOM.arrow({element:arrowElement})),tooltip.update=function(){FloatingUIDOM.computePosition(onElement,tooltip,{placement:"top",middleware:middleWare}).then(({x:x,y:y,placement:placement,middlewareData:middlewareData})=>{_computePlacementWithArrowElement(tooltip,arrowElement,{x:x,y:y,placement:placement,middlewareData:middlewareData})})},tooltip.update(),WorkspaceManager.on(WorkspaceManager.EVENT_WORKSPACE_UPDATE_LAYOUT,tooltip.update)}function _createDomElementWithArrowElement(domTemplate,elementID,options){notificationWidgetCount++;const onElement=document.getElementById(elementID);let arrowElement,widgetID,arrowID=`notification-ui-arrow-${notificationWidgetCount}`,textTemplate=null;("string"==typeof domTemplate||domTemplate instanceof String)&&(textTemplate=domTemplate);let floatingDom=$(`<div id="${`notification-ui-widget-${notificationWidgetCount}`}" class="notification-ui-tooltip" role="tooltip">\n                                ${textTemplate||""}</div>`);return!textTemplate&&domTemplate&&floatingDom.append($(domTemplate)),onElement&&(arrowElement=$(`<div id="${arrowID}" class="notification-ui-arrow"></div>`),floatingDom.append(arrowElement)),$("body").append(floatingDom),_updatePositions(floatingDom[0],onElement,arrowElement[0],options),floatingDom}exports.createFromTemplate=createFromTemplate,exports.CLOSE_TIMEOUT="closeTimeout",exports.CLOSE_CLICK_DISMISS="clickDismiss"});
//# sourceMappingURL=NotificationUI.js.map
