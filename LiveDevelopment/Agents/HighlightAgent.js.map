{"version":3,"sources":["LiveDevelopment/Agents/HighlightAgent.js"],"names":["define","HighlightAgent","require","exports","module","DOMAgent","EventDispatcher","Inspector","LiveDevelopment","RemoteAgent","_","_highlight","_onRemoteHighlight","event","res","node","value","nodeWithId","nodeId","trigger","hide","type","DOM","hideHighlight","call","n","config","experimental","highlight","parent","ref","highlightNode","highlightConfig","rule","name","domElement","ids","selector","Array","isArray","each","id","redraw","load","on","unload","off","makeEventDispatcher"],"mappings":"AA2BAA,OAAO,SAASC,eAAeC,QAASC,QAASC,QAG7C,IAAIC,SAAkBH,QAAQ,mCAC1BI,gBAAkBJ,QAAQ,yBAC1BK,UAAkBL,QAAQ,uCAC1BM,gBAAkBN,QAAQ,mCAC1BO,YAAkBP,QAAQ,sCAC1BQ,EAAkBR,QAAQ,qBAE1BS,WAAa,GAGjB,SAASC,mBAAmBC,MAAOC,KAC/B,IAAIC,KACc,MAAdD,IAAIE,QACJD,KAAOV,SAASY,WAAWH,IAAII,SAEnCf,QAAQgB,QAAQ,YAAaJ,MAIjC,SAASK,OACL,OAAQT,WAAWU,MACnB,IAAK,OACDd,UAAUe,IAAIC,gBACd,MACJ,IAAK,MACDd,YAAYe,KAAK,iBAGrBb,WAAa,GAMjB,SAASI,KAAKU,GACV,GAAKjB,gBAAgBkB,OAAOC,cAIvBpB,UAAUmB,OAAOE,UAAtB,CAUA,GALIH,GAAgB,IAAXA,EAAEJ,OACPI,EAAIA,EAAEI,SAILJ,IAAMA,EAAEP,QAAqB,IAAXO,EAAEJ,KACrB,OAAOD,OAIa,SAApBT,WAAWU,MAAmBV,WAAWmB,MAAQL,EAAEP,SAKvDP,WAAa,CAACU,KAAM,OAAQS,IAAKL,EAAEP,QACnCX,UAAUe,IAAIS,cAAcN,EAAEP,OAAQX,UAAUmB,OAAOM,mBAM3D,SAASC,KAAKC,MACNvB,WAAWmB,MAAQI,OAGvBd,OACAT,WAAa,CAACU,KAAM,MAAOS,IAAKI,MAChCzB,YAAYe,KAAK,gBAAiBU,OAQtC,SAASC,WAAWC,KAChB,IAAIC,SAAW,GACVC,MAAMC,QAAQH,OACfA,IAAM,CAACA,MAEX1B,EAAE8B,KAAKJ,IAAK,SAAUK,IACD,KAAbJ,WACAA,UAAY,KAEhBA,UAAY,sBAAwBI,GAAK,OAE7CR,KAAKI,UAMT,SAASK,SACLjC,YAAYe,KAAK,oBAIrB,SAASmB,OACDnC,gBAAgBkB,OAAOC,cACvBlB,YAAYmC,GAAG,2BAA4BhC,oBAKnD,SAASiC,SACDrC,gBAAgBkB,OAAOC,cACvBlB,YAAYqC,IAAI,mBAKxBxC,gBAAgByC,oBAAoB5C,SAGpCA,QAAQiB,KAAOA,KACfjB,QAAQY,KAAOA,KACfZ,QAAQ8B,KAAOA,KACf9B,QAAQgC,WAAaA,WACrBhC,QAAQuC,OAASA,OACjBvC,QAAQwC,KAAOA,KACfxC,QAAQ0C,OAASA","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2012 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/**\n * HighlightAgent dispatches events for highlight requests from in-browser\n * highlight requests, and allows highlighting nodes and rules in the browser.\n *\n * Trigger \"highlight\" when a node should be highlighted\n */\ndefine(function HighlightAgent(require, exports, module) {\n\n\n    var DOMAgent        = require(\"LiveDevelopment/Agents/DOMAgent\"),\n        EventDispatcher = require(\"utils/EventDispatcher\"),\n        Inspector       = require(\"LiveDevelopment/Inspector/Inspector\"),\n        LiveDevelopment = require(\"LiveDevelopment/LiveDevelopment\"),\n        RemoteAgent     = require(\"LiveDevelopment/Agents/RemoteAgent\"),\n        _               = require(\"thirdparty/lodash\");\n\n    var _highlight = {}; // active highlight\n\n    // Remote Event: Highlight\n    function _onRemoteHighlight(event, res) {\n        var node;\n        if (res.value === \"1\") {\n            node = DOMAgent.nodeWithId(res.nodeId);\n        }\n        exports.trigger(\"highlight\", node);\n    }\n\n    /** Hide in-browser highlighting */\n    function hide() {\n        switch (_highlight.type) {\n        case \"node\":\n            Inspector.DOM.hideHighlight();\n            break;\n        case \"css\":\n            RemoteAgent.call(\"hideHighlight\");\n            break;\n        }\n        _highlight = {};\n    }\n\n    /** Highlight a single node using DOM.highlightNode\n     * @param {DOMNode} node\n     */\n    function node(n) {\n        if (!LiveDevelopment.config.experimental) {\n            return;\n        }\n\n        if (!Inspector.config.highlight) {\n            return;\n        }\n\n        // go to the parent of a text node\n        if (n && n.type === 3) {\n            n = n.parent;\n        }\n\n        // node cannot be highlighted\n        if (!n || !n.nodeId || n.type !== 1) {\n            return hide();\n        }\n\n        // node is already highlighted\n        if (_highlight.type === \"node\" && _highlight.ref === n.nodeId) {\n            return;\n        }\n\n        // highlight the node\n        _highlight = {type: \"node\", ref: n.nodeId};\n        Inspector.DOM.highlightNode(n.nodeId, Inspector.config.highlightConfig);\n    }\n\n    /** Highlight all nodes affected by a CSS rule\n     * @param {string} rule selector\n     */\n    function rule(name) {\n        if (_highlight.ref === name) {\n            return;\n        }\n        hide();\n        _highlight = {type: \"css\", ref: name};\n        RemoteAgent.call(\"highlightRule\", name);\n    }\n\n    /** Highlight all nodes with 'data-brackets-id' value\n     * that matches id, or if id is an array, matches any of the given ids.\n     * @param {string|Array<string>} value of the 'data-brackets-id' to match,\n     * or an array of such.\n     */\n    function domElement(ids) {\n        var selector = \"\";\n        if (!Array.isArray(ids)) {\n            ids = [ids];\n        }\n        _.each(ids, function (id) {\n            if (selector !== \"\") {\n                selector += \",\";\n            }\n            selector += \"[data-brackets-id='\" + id + \"']\";\n        });\n        rule(selector);\n    }\n\n    /**\n     * Redraw active highlights\n     */\n    function redraw() {\n        RemoteAgent.call(\"redrawHighlights\");\n    }\n\n    /** Initialize the agent */\n    function load() {\n        if (LiveDevelopment.config.experimental) {\n            RemoteAgent.on(\"highlight.HighlightAgent\", _onRemoteHighlight);\n        }\n    }\n\n    /** Clean up */\n    function unload() {\n        if (LiveDevelopment.config.experimental) {\n            RemoteAgent.off(\".HighlightAgent\");\n        }\n    }\n\n\n    EventDispatcher.makeEventDispatcher(exports);\n\n    // Export public functions\n    exports.hide = hide;\n    exports.node = node;\n    exports.rule = rule;\n    exports.domElement = domElement;\n    exports.redraw = redraw;\n    exports.load = load;\n    exports.unload = unload;\n});\n"],"file":"HighlightAgent.js"}