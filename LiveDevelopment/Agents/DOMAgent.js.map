{"version":3,"sources":["LiveDevelopment/Agents/DOMAgent.js"],"names":["define","DOMAgent","require","exports","module","Inspector","EventDispatcher","EditAgent","DOMNode","DOMHelpers","_load","_idToNode","_pendingRequests","nodeBeforeLocation","location","node","root","each","n","allNodesAtLocation","nodes","type","TYPE_ELEMENT","isAtLocation","push","nodeAtLocation","find","nodeWithId","nodeId","removeNode","addNode","requestChildNodes","DOM","_cleanURL","url","index","search","substr","_mapDocumentToSource","source","eachNode","payload","closing","parent","findParentForNextNodeMatchingPayload","console","warn","sourceOffset","nodeName","closeLocation","closeLength","sourceLength","next","findNextNodeMatchingPayload","length","closed","_onFinishedLoadingDOM","request","XMLHttpRequest","open","onload","onLoad","status","response","resolve","msg","reject","message","onerror","onError","send","_onLoadEventFired","event","res","getDocument","onGetDocument","trigger","_onFrameNavigated","frame","parentId","_onDocumentUpdated","_onSetChildNodes","setChildrenPayload","_onChildNodeCountUpdated","_onChildNodeInserted","parentNodeId","previousNode","previousNodeId","insertChildAfter","_onChildNodeRemoved","remove","applyChange","from","to","text","delta","value","isEditing","setNodeValue","test","undefined","enable","disable","load","$","Deferred","Page","on","promise","unload","off","makeEventDispatcher"],"mappings":"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","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2012 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/**\n * DOMAgent constructs and maintains a tree of {DOMNode}s that represents the\n * rendered DOM tree in the remote browser. Nodes can be accessed by id or\n * location (source offset). To update the DOM tree in response to a change of\n * the source document (replace [from,to] with text) call\n * `applyChange(from, to, text)`.\n *\n * The DOMAgent triggers `getDocument` once it has loaded\n * the document.\n */\ndefine(function DOMAgent(require, exports, module) {\n\n\n    var Inspector       = require(\"LiveDevelopment/Inspector/Inspector\"),\n        EventDispatcher = require(\"utils/EventDispatcher\"),\n        EditAgent       = require(\"LiveDevelopment/Agents/EditAgent\"),\n        DOMNode         = require(\"LiveDevelopment/Agents/DOMNode\"),\n        DOMHelpers      = require(\"LiveDevelopment/Agents/DOMHelpers\");\n\n    var _load; // {$.Deferred} load promise\n    var _idToNode; // {nodeId -> node}\n    var _pendingRequests; // {integer} number of pending requests before initial loading is complete\n\n    /** Get the last node before the given location\n     * @param {integer} location\n     */\n    function nodeBeforeLocation(location) {\n        var node;\n        exports.root.each(function each(n) {\n            if (!n.location || location < n.location) {\n                return true;\n            }\n            if (!node || node.location < n.location) {\n                node = n;\n            }\n        });\n        return node;\n    }\n\n    /** Get the element node that encloses the given location\n     * @param {location}\n     */\n    function allNodesAtLocation(location) {\n        var nodes = [];\n        exports.root.each(function each(n) {\n            if (n.type === DOMNode.TYPE_ELEMENT && n.isAtLocation(location)) {\n                nodes.push(n);\n            }\n        });\n        return nodes;\n    }\n\n    /** Get the node at the given location\n     * @param {location}\n     */\n    function nodeAtLocation(location) {\n        return exports.root.find(function each(n) {\n            return n.isAtLocation(location, false);\n        });\n    }\n\n    /** Find the node for the given id\n     * @param {DOMNode} node\n     */\n    function nodeWithId(nodeId) {\n        return _idToNode[nodeId];\n    }\n\n    /** Update the node index\n     * @param {DOMNode} node\n     */\n    function removeNode(node) {\n        if (node.nodeId) {\n            delete _idToNode[node.nodeId];\n        }\n    }\n\n    /** Update the node index\n     * @param {DOMNode} node\n     */\n    function addNode(node) {\n        if (node.nodeId) {\n            _idToNode[node.nodeId] = node;\n        }\n    }\n\n    /** Request the child nodes for a node\n     * @param {DOMNode} node\n     */\n    function requestChildNodes(node) {\n        if (_pendingRequests >= 0) {\n            _pendingRequests++;\n        }\n        Inspector.DOM.requestChildNodes(node.nodeId);\n    }\n\n    /** Eliminate the query string from a URL\n     * @param {string} URL\n     */\n    function _cleanURL(url) {\n        var index = url.search(/[#\\?]/);\n        if (index >= 0) {\n            url = url.substr(0, index);\n        }\n        return url;\n    }\n\n    /** Map the DOM document to the source text\n     * @param {string} source\n     */\n    function _mapDocumentToSource(source) {\n        var node = exports.root;\n        DOMHelpers.eachNode(source, function each(payload) {\n            if (!node) {\n                return true;\n            }\n            if (payload.closing) {\n                var parent = node.findParentForNextNodeMatchingPayload(payload);\n                if (!parent) {\n                    return console.warn(\"Matching Parent not at \" + payload.sourceOffset + \" (\" + payload.nodeName + \")\");\n                }\n                parent.closeLocation = payload.sourceOffset;\n                parent.closeLength = payload.sourceLength;\n            } else {\n                var next = node.findNextNodeMatchingPayload(payload);\n                if (!next) {\n                    return console.warn(\"Skipping Source Node at \" + payload.sourceOffset);\n                }\n                node = next;\n                node.location = payload.sourceOffset;\n                node.length = payload.sourceLength;\n                if (payload.closed) {\n                    node.closed = payload.closed;\n                }\n            }\n        });\n    }\n\n    /** Load the source document and match it with the DOM tree*/\n    function _onFinishedLoadingDOM() {\n        var request = new XMLHttpRequest();\n        request.open(\"GET\", exports.url);\n        request.onload = function onLoad() {\n            if ((request.status >= 200 && request.status < 300) ||\n                    request.status === 304 || request.status === 0) {\n                _mapDocumentToSource(request.response);\n                _load.resolve();\n            } else {\n                var msg = \"Received status \" + request.status + \" from XMLHttpRequest while attempting to load source file at \" + exports.url;\n                _load.reject(msg, { message: msg });\n            }\n        };\n        request.onerror = function onError() {\n            var msg = \"Could not load source file at \" + exports.url;\n            _load.reject(msg, { message: msg });\n        };\n        request.send(null);\n    }\n\n    // WebInspector Event: Page.loadEventFired\n    function _onLoadEventFired(event, res) {\n        // res = {timestamp}\n        Inspector.DOM.getDocument(function onGetDocument(res) {\n            exports.trigger(\"getDocument\", res);\n            // res = {root}\n            _idToNode = {};\n            _pendingRequests = 0;\n            exports.root = new DOMNode(exports, res.root);\n        });\n    }\n\n    // WebInspector Event: Page.frameNavigated\n    function _onFrameNavigated(event, res) {\n        // res = {frame}\n        if (!res.frame.parentId) {\n            exports.url = _cleanURL(res.frame.url);\n        }\n    }\n\n     // WebInspector Event: DOM.documentUpdated\n    function _onDocumentUpdated(event, res) {\n        // res = {}\n    }\n\n    // WebInspector Event: DOM.setChildNodes\n    function _onSetChildNodes(event, res) {\n        // res = {parentId, nodes}\n        var node = nodeWithId(res.parentId);\n        node.setChildrenPayload(res.nodes);\n        if (_pendingRequests > 0 && --_pendingRequests === 0) {\n            _onFinishedLoadingDOM();\n        }\n    }\n\n    // WebInspector Event: DOM.childNodeCountUpdated\n    function _onChildNodeCountUpdated(event, res) {\n        // res = {nodeId, childNodeCount}\n        if (res.nodeId > 0) {\n            Inspector.DOM.requestChildNodes(res.nodeId);\n        }\n    }\n\n    // WebInspector Event: DOM.childNodeInserted\n    function _onChildNodeInserted(event, res) {\n        // res = {parentNodeId, previousNodeId, node}\n        if (res.node.nodeId > 0) {\n            var parent = nodeWithId(res.parentNodeId);\n            var previousNode = nodeWithId(res.previousNodeId);\n            var node = new DOMNode(exports, res.node);\n            parent.insertChildAfter(node, previousNode);\n        }\n    }\n\n    // WebInspector Event: DOM.childNodeRemoved\n    function _onChildNodeRemoved(event, res) {\n        // res = {parentNodeId, nodeId}\n        if (res.nodeId > 0) {\n            var node = nodeWithId(res.nodeId);\n            node.remove();\n        }\n    }\n\n    /** Apply a change\n     * @param {integer} start offset of the change\n     * @param {integer} end offset of the change\n     * @param {string} change text\n     */\n    function applyChange(from, to, text) {\n        var delta = from - to + text.length;\n        var node = nodeAtLocation(from);\n\n        // insert a text node\n        if (!node) {\n            if (!(/^\\s*$/).test(text)) {\n                console.warn(\"Inserting nodes not supported.\");\n                node = nodeBeforeLocation(from);\n            }\n        } else if (node.type === 3) {\n            // update a text node\n            var value = node.value.substr(0, from - node.location);\n            value += text;\n            value += node.value.substr(to - node.location);\n            node.value = value;\n            if (!EditAgent.isEditing) {\n                // only update the DOM if the change was not caused by the edit agent\n                Inspector.DOM.setNodeValue(node.nodeId, node.value);\n            }\n        } else {\n            console.warn(\"Changing non-text nodes not supported.\");\n        }\n\n        // adjust the location of all nodes after the change\n        if (node) {\n            node.length += delta;\n            exports.root.each(function each(n) {\n                if (n.location > node.location) {\n                    n.location += delta;\n                }\n                if (n.closeLocation !== undefined && n.closeLocation > node.location) {\n                    n.closeLocation += delta;\n                }\n            });\n        }\n    }\n\n    /** Enable the domain */\n    function enable() {\n        return Inspector.DOM.enable();\n    }\n\n    /** Disable the domain */\n    function disable() {\n        return Inspector.DOM.disable();\n    }\n\n\n    /** Initialize the agent */\n    function load() {\n        _load = new $.Deferred();\n        Inspector.Page\n            .on(\"frameNavigated.DOMAgent\", _onFrameNavigated)\n            .on(\"loadEventFired.DOMAgent\", _onLoadEventFired);\n        Inspector.DOM\n            .on(\"documentUpdated.DOMAgent\", _onDocumentUpdated)\n            .on(\"setChildNodes.DOMAgent\", _onSetChildNodes)\n            .on(\"childNodeCountUpdated.DOMAgent\", _onChildNodeCountUpdated)\n            .on(\"childNodeInserted.DOMAgent\", _onChildNodeInserted)\n            .on(\"childNodeRemoved.DOMAgent\", _onChildNodeRemoved);\n        return _load.promise();\n    }\n\n    /** Clean up */\n    function unload() {\n        Inspector.Page.off(\".DOMAgent\");\n        Inspector.DOM.off(\".DOMAgent\");\n    }\n\n\n    EventDispatcher.makeEventDispatcher(exports);\n\n    // Export private functions\n    exports.enable = enable;\n    exports.disable = disable;\n    exports.nodeBeforeLocation = nodeBeforeLocation;\n    exports.allNodesAtLocation = allNodesAtLocation;\n    exports.nodeAtLocation = nodeAtLocation;\n    exports.nodeWithId = nodeWithId;\n    exports.removeNode = removeNode;\n    exports.addNode = addNode;\n    exports.requestChildNodes = requestChildNodes;\n    exports.applyChange = applyChange;\n    exports.load = load;\n    exports.unload = unload;\n});\n"],"file":"DOMAgent.js"}