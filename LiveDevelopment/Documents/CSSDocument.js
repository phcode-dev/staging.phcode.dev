define(function CSSDocumentModule(require,exports,module){var _=require("thirdparty/lodash"),EventDispatcher=require("utils/EventDispatcher"),CSSAgent=require("LiveDevelopment/Agents/CSSAgent"),CSSUtils=require("language/CSSUtils"),EditorManager=require("editor/EditorManager"),HighlightAgent=require("LiveDevelopment/Agents/HighlightAgent"),Inspector=require("LiveDevelopment/Inspector/Inspector"),CSSDocument=function CSSDocument(doc,editor){this.doc=doc,this._highlight=[],this.onHighlight=this.onHighlight.bind(this),this.onCursorActivity=this.onCursorActivity.bind(this),this.doc.addRef(),this.onChange=this.onChange.bind(this),this.onDeleted=this.onDeleted.bind(this),this.doc.on("change.CSSDocument",this.onChange),this.doc.on("deleted.CSSDocument",this.onDeleted),this.onActiveEditorChange=this.onActiveEditorChange.bind(this),EditorManager.on("activeEditorChange",this.onActiveEditorChange),editor&&this.attachToEditor(editor)};EventDispatcher.makeEventDispatcher(CSSDocument.prototype),CSSDocument.prototype._getStyleSheetHeader=function(){return CSSAgent.styleForURL(this.doc.url)},CSSDocument.prototype.getSourceFromBrowser=function getSourceFromBrowser(){function getOnlyValue(obj){var key;for(key in obj)if(_.has(obj,key))return obj[key];return null}var deferred=new $.Deferred,styleSheetHeader,styleSheet=getOnlyValue(this._getStyleSheetHeader());return styleSheet?Inspector.CSS.getStyleSheetText(styleSheet.styleSheetId).then(function(res){deferred.resolve(res.text)},deferred.reject):deferred.reject(),deferred.promise()},CSSDocument.prototype.close=function close(){this.doc.off(".CSSDocument"),EditorManager.off("activeEditorChange",this.onActiveEditorChange),this.doc.releaseRef(),this.detachFromEditor()},CSSDocument.prototype._updateBrowser=function(){var reloadPromise=CSSAgent.reloadCSSForDocument(this.doc);Inspector.config.highlight&&reloadPromise.done(HighlightAgent.redraw)},CSSDocument.prototype.attachToEditor=function(editor){this.editor=editor,this.editor&&(HighlightAgent.on("highlight",this.onHighlight),this.editor.on("cursorActivity.CSSDocument",this.onCursorActivity),this.updateHighlight())},CSSDocument.prototype.detachFromEditor=function(){this.editor&&(HighlightAgent.hide(),HighlightAgent.off("highlight",this.onHighlight),this.editor.off(".CSSDocument"),this.onHighlight(),this.editor=null)},CSSDocument.prototype.updateHighlight=function(){if(Inspector.config.highlight&&this.editor){var editor=this.editor,selectors=[];_.each(this.editor.getSelections(),function(sel){var selector=CSSUtils.findSelectorAtDocumentPos(editor,sel.reversed?sel.end:sel.start);selector&&selectors.push(selector)}),selectors.length?HighlightAgent.rule(selectors.join(",")):HighlightAgent.hide()}},CSSDocument.prototype.setInstrumentationEnabled=function setInstrumentationEnabled(enabled){},CSSDocument.prototype.isLiveEditingEnabled=function(){return!0},CSSDocument.prototype.getResponseData=function getResponseData(enabled){return{body:this.doc.getText()}},CSSDocument.prototype.onCursorActivity=function onCursorActivity(event,editor){this.updateHighlight()},CSSDocument.prototype.onChange=function onChange(event,editor,change){this._updateBrowser()},CSSDocument.prototype.onDeleted=function onDeleted(event,editor,change){CSSAgent.clearCSSForDocument(this.doc),this.close(),this.trigger("deleted",this)},CSSDocument.prototype.onActiveEditorChange=function(event,newActive,oldActive){this.detachFromEditor(),newActive&&newActive.document===this.doc&&this.attachToEditor(newActive)},CSSDocument.prototype.onHighlight=function onHighlight(event,node){var i;for(i in this._highlight)this._highlight[i].clear();this._highlight=[],node&&node.location&&Inspector.CSS.getMatchedStylesForNode(node.nodeId,function onGetMatchesStyles(res){var codeMirror=this.editor._codeMirror,styleSheetIds=this._getStyleSheetHeader(),i,rule,from,to;for(i in res.matchedCSSRules)(rule=res.matchedCSSRules[i]).ruleId&&styleSheetIds[rule.ruleId.styleSheetId]&&(from=codeMirror.posFromIndex(rule.selectorRange.start),to=codeMirror.posFromIndex(rule.style.range.end),this._highlight.push(codeMirror.markText(from,to,{className:"highlight"})))}.bind(this))},module.exports=CSSDocument});
//# sourceMappingURL=CSSDocument.js.map
