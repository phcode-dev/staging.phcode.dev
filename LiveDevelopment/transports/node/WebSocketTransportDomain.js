var WebSocketServer=require("ws").Server,_wsServer,_domainManager;function _createServer(socketPort){_wsServer||(_wsServer=new WebSocketServer({port:socketPort})).on("connection",function(ws){ws.on("message",function(msg){var msgObj;console.log("WebSocketServer - received - "+msg);try{msgObj=JSON.parse(msg)}catch(e){return void console.error("webSocketTransport: Error parsing message: "+msg)}"message"===msgObj.type?_domainManager.emitEvent("webSocketTransport","message",msgObj.message):console.error("webSocketTransport: Got bad socket message type: "+msg)}).on("error",function(e){console.error("webSocketTransport: Error on socket : "+e)}).on("close",function(){console.log("webSocketTransport closed")})}).on("error",function(e){console.error("webSocketTransport: Error on live preview server creation: "+e)})}function _cmdStart(port){_createServer(port)}function _cmdClose(){_wsServer&&(_wsServer.close(),_wsServer=null)}function init(domainManager){_domainManager=domainManager,domainManager.hasDomain("webSocketTransport")||domainManager.registerDomain("webSocketTransport",{major:0,minor:1}),domainManager.registerEvent("webSocketTransport","message",[{name:"msg",type:"string",description:"JSON message from client page"}]),domainManager.registerCommand("webSocketTransport","start",_cmdStart,!1,"Creates the WS server",[{name:"port",type:"number",description:"Port on which server needs to listen"}],[]),domainManager.registerCommand("webSocketTransport","close",_cmdClose,!1,"Kills the websocket server",[])}exports.init=init;
//# sourceMappingURL=WebSocketTransportDomain.js.map
