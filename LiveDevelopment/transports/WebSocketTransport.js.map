{"version":3,"sources":["LiveDevelopment/transports/WebSocketTransport.js"],"names":["define","require","exports","module","FileUtils","NodeDomain","EditorManager","HTMLInstrumentation","domainPath","WebSocketTransportDomain","getNativeBracketsDirectoryPath","getNativeModuleDirectoryPath","createWebSocketServer","port","exec","parseInt","closeWebSocketServer","on","obj","message","console","log","editor","getActiveEditor","position","getPositionFromTagId","setCursorPos","line","ch"],"mappings":"AA4BAA,OAAO,SAAUC,QAASC,QAASC,QAG/B,IAAIC,UAAsBH,QAAQ,kBAC9BI,WAAsBJ,QAAQ,oBAC9BK,cAAsBL,QAAQ,wBAC9BM,oBAAsBN,QAAQ,gCAI9BO,WAEAC,yBAA2B,IAAIJ,WAAW,qBAF7BD,UAAUM,iCAAmC,IAAMN,UAAUO,6BAA6BR,QAAU,kCAerH,SAASS,sBAAsBC,MAC3BJ,yBAAyBK,KAAK,QAASC,SAASF,KAAM,KAG1D,SAASG,uBACLP,yBAAyBK,KAAK,SAdlCL,yBAAyBQ,GAAG,UAAW,SAAUC,IAAKC,SAClDC,QAAQC,IAAI,0CAAiDF,SAC7D,IAAIG,OAAShB,cAAciB,kBACvBC,SAAWjB,oBAAoBkB,qBAAqBH,OAAQP,SAASI,QAAS,KAC9EK,UACAF,OAAOI,aAAaF,SAASG,KAAMH,SAASI,IAAI,KAYxD1B,QAAQU,sBAAwBA,sBAChCV,QAAQc,qBAAwBA","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2017 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/**\n * This transport provides a WebSocket connection between Brackets and a live browser preview.\n * This is just a thin wrapper around the Node extension (WebSocketTransportDomain) that actually\n * provides the WebSocket server and handles the communication. We also rely on an injected script in\n * the browser for the other end of the transport.\n */\n\ndefine(function (require, exports, module) {\n\n\n    var FileUtils           = require(\"file/FileUtils\"),\n        NodeDomain          = require(\"utils/NodeDomain\"),\n        EditorManager       = require(\"editor/EditorManager\"),\n        HTMLInstrumentation = require(\"language/HTMLInstrumentation\");\n\n    // The node extension that actually provides the WebSocket server.\n\n    var domainPath = FileUtils.getNativeBracketsDirectoryPath() + \"/\" + FileUtils.getNativeModuleDirectoryPath(module) + \"/node/WebSocketTransportDomain\";\n\n    var WebSocketTransportDomain = new NodeDomain(\"webSocketTransport\", domainPath);\n\n    // Events\n\n    WebSocketTransportDomain.on(\"message\", function (obj, message) {\n        console.log(\"WebSocketTransport - event - message\" + \" - \" + message);\n        var editor = EditorManager.getActiveEditor(),\n            position = HTMLInstrumentation.getPositionFromTagId(editor, parseInt(message, 10));\n        if (position) {\n            editor.setCursorPos(position.line, position.ch, true);\n        }\n    });\n\n    function createWebSocketServer(port) {\n        WebSocketTransportDomain.exec(\"start\", parseInt(port, 10));\n    }\n\n    function closeWebSocketServer() {\n        WebSocketTransportDomain.exec(\"close\");\n    }\n\n    exports.createWebSocketServer = createWebSocketServer;\n    exports.closeWebSocketServer  = closeWebSocketServer;\n});\n"],"file":"WebSocketTransport.js"}