{"version":3,"sources":["LiveDevelopment/BrowserScripts/pageLoaderWorker.js"],"names":["_setupBroadcastChannel","broadcastChannel","clientID","_livePreviewNavigationChannel","BroadcastChannel","_sendOnlineHeartbeat","postMessage","type","URL","location","href","onmessage","event","data","setInterval","console","error"],"mappings":"AA2BA,SAASA,uBAAuBC,iBAAkBC,UAC9C,IAAID,iBACA,OAEJ,MAAME,8BAA8B,IAAIC,iBAAiBH,kBAQzD,SAASI,uBACLF,8BAA8BG,YAAY,CACtCC,KAAM,aACNL,SAAAA,SACAM,IAAKC,SAASC,OAXtBP,8BAA8BQ,UAAY,CAACC,QACvC,MAAML,KAAOK,MAAMC,KAAKN,KACxB,OAAQA,MACR,IAAK,gBAAiBD,YAAY,CAACC,KAAAA,KAAMC,IAAKI,MAAMC,KAAKL,SAW7DH,uBACAS,YAAY,KACRT,wBACD,KAGPM,UAAY,CAACC,QACT,MAAML,KAAOK,MAAMC,KAAKN,KACxB,OAAQA,MACR,IAAK,iBAAkBP,uBAAuBY,MAAMC,KAAKZ,iBAAkBW,MAAMC,KAAKX,UAAW,MACjG,QAASa,QAAQC,MAAM,oDAAqDJ","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/**\n * We need to set this up in a worker as if the user is debugging a live preview page, the heartbeat messages will\n * be blocked in main thread, but fine in isolated worker thread.\n * @private\n */\n\n\nfunction _setupBroadcastChannel(broadcastChannel, clientID) {\n    if(!broadcastChannel){\n        return;\n    }\n    const _livePreviewNavigationChannel=new BroadcastChannel(broadcastChannel);\n    _livePreviewNavigationChannel.onmessage = (event) => {\n        const type = event.data.type;\n        switch (type) {\n        case 'REDIRECT_PAGE': postMessage({type, URL: event.data.URL}); break;\n        case 'TAB_ONLINE': break; // do nothing. This is a loopback message from another live preview tab\n        }\n    };\n    function _sendOnlineHeartbeat() {\n        _livePreviewNavigationChannel.postMessage({\n            type: 'TAB_ONLINE',\n            clientID,\n            URL: location.href\n        });\n    }\n    _sendOnlineHeartbeat();\n    setInterval(()=>{\n        _sendOnlineHeartbeat();\n    }, 1000);\n}\n\nonmessage = (event) => {\n    const type = event.data.type;\n    switch (type) {\n    case 'setupBroadcast': _setupBroadcastChannel(event.data.broadcastChannel, event.data.clientID); break;\n    default: console.error(\"Live Preview page worker: received unknown event:\", event);\n    }\n};\n"],"file":"pageLoaderWorker.js"}