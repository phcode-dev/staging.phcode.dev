{"version":3,"sources":["thirdparty/CodeMirror/mode/eiffel/eiffel.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","wordObj","words","o","i","e","length","keywords","operators","chain","newtok","stream","state","tokenize","push","tokenBase","eatSpace","ch","next","readQuoted","eat","skipToEnd","test","eatWhile","quote","style","unescaped","escaped","pop","startState","token","word","current","propertyIsEnumerable","lineComment","defineMIME"],"mappings":"CAGA,SAAUA,KACc,iBAAXC,SAAwC,iBAAVC,OACvCF,IAAIG,QAAQ,yBACY,mBAAVC,QAAwBA,OAAOC,IAC7CD,OAAO,CAAC,wBAAyBJ,KAEjCA,IAAIM,YANR,CAOG,SAASA,YACZ,aAEAA,WAAWC,WAAW,SAAU,WAC9B,SAASC,QAAQC,OAEf,IADA,IAAIC,EAAI,GACCC,EAAI,EAAGC,EAAIH,MAAMI,OAAQF,EAAIC,IAAKD,EAAGD,EAAED,MAAME,KAAM,EAC5D,OAAOD,EAET,IAAII,SAAWN,QAAQ,CACrB,OACA,SACA,OACA,UACA,QACA,SACA,WACA,OACA,QACA,SACA,QACA,SACA,UACA,SACA,YACA,WACA,SACA,OACA,MACA,WACA,OACA,QACA,OACA,KACA,UACA,QACA,UACA,KACA,SACA,OACA,WACA,SACA,SACA,MACA,SACA,OACA,KACA,WACA,SACA,QACA,QACA,QACA,WACA,YACA,UACA,WACA,UACA,WACA,WACA,QACA,OACA,OACA,SACA,YACA,QACA,UACA,SACA,WACA,aACA,KACA,MACA,UACA,MACA,OAEEO,UAAYP,QAAQ,CAAC,KAAM,WAAW,MAAO,KAAK,KAAK,OAE3D,SAASQ,MAAMC,OAAQC,OAAQC,OAE7B,OADAA,MAAMC,SAASC,KAAKJ,QACbA,OAAOC,OAAQC,OAGxB,SAASG,UAAUJ,OAAQC,OACzB,GAAID,OAAOK,WAAY,OAAO,KAC9B,IAAIC,GAAKN,OAAOO,OAChB,MAAU,KAAND,IAAiB,KAANA,GACNR,MAAMU,WAAWF,GAAI,UAAWN,OAAQC,OAChC,KAANK,IAAWN,OAAOS,IAAI,MAC/BT,OAAOU,YACA,WACQ,KAANJ,IAAWN,OAAOS,IAAI,KACxB,WACE,QAAQE,KAAKL,KACtBN,OAAOY,SAAS,iBAChBZ,OAAOS,IAAI,UACJ,SACE,eAAeE,KAAKL,KAC7BN,OAAOY,SAAS,gBAChBZ,OAAOS,IAAI,UACJ,SACE,iBAAiBE,KAAKL,KAC/BN,OAAOY,SAAS,kBACT,YAEA,KAIX,SAASJ,WAAWK,MAAOC,MAAQC,WACjC,OAAO,SAASf,OAAQC,OAEtB,IADA,IAAIe,SAAU,EAAOV,GACU,OAAvBA,GAAKN,OAAOO,SAAiB,CACnC,GAAID,IAAMO,QAAUE,YAAcC,SAAU,CAC1Cf,MAAMC,SAASe,MACf,MAEFD,SAAWA,SAAiB,KAANV,GAExB,OAAOQ,OAIX,MAAO,CACLI,WAAY,WACV,MAAO,CAAChB,SAAU,CAACE,aAGrBe,MAAO,SAASnB,OAAQC,OACtB,IAAIa,MAAQb,MAAMC,SAASD,MAAMC,SAASP,OAAO,GAAGK,OAAQC,OAC5D,GAAa,SAATa,MAAkB,CACpB,IAAIM,KAAOpB,OAAOqB,UAClBP,MAAQlB,SAAS0B,qBAAqBtB,OAAOqB,WAAa,UACtDxB,UAAUyB,qBAAqBtB,OAAOqB,WAAa,WACnD,qBAAqBV,KAAKS,MAAQ,MAClC,iBAAiBT,KAAKS,MAAQ,SAC9B,iBAAiBT,KAAKS,MAAQ,SAC9B,uBAAuBT,KAAKS,MAAQ,SACpC,uCAAuCT,KAAKS,MAAQ,SACpD,YAAYT,KAAKS,MAAQ,SACzB,WAEN,OAAON,OAETS,YAAa,QAIjBnC,WAAWoC,WAAW,gBAAiB","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"eiffel\", function() {\n  function wordObj(words) {\n    var o = {};\n    for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n    return o;\n  }\n  var keywords = wordObj([\n    'note',\n    'across',\n    'when',\n    'variant',\n    'until',\n    'unique',\n    'undefine',\n    'then',\n    'strip',\n    'select',\n    'retry',\n    'rescue',\n    'require',\n    'rename',\n    'reference',\n    'redefine',\n    'prefix',\n    'once',\n    'old',\n    'obsolete',\n    'loop',\n    'local',\n    'like',\n    'is',\n    'inspect',\n    'infix',\n    'include',\n    'if',\n    'frozen',\n    'from',\n    'external',\n    'export',\n    'ensure',\n    'end',\n    'elseif',\n    'else',\n    'do',\n    'creation',\n    'create',\n    'check',\n    'alias',\n    'agent',\n    'separate',\n    'invariant',\n    'inherit',\n    'indexing',\n    'feature',\n    'expanded',\n    'deferred',\n    'class',\n    'Void',\n    'True',\n    'Result',\n    'Precursor',\n    'False',\n    'Current',\n    'create',\n    'attached',\n    'detachable',\n    'as',\n    'and',\n    'implies',\n    'not',\n    'or'\n  ]);\n  var operators = wordObj([\":=\", \"and then\",\"and\", \"or\",\"<<\",\">>\"]);\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.eatSpace()) return null;\n    var ch = stream.next();\n    if (ch == '\"'||ch == \"'\") {\n      return chain(readQuoted(ch, \"string\"), stream, state);\n    } else if (ch == \"-\"&&stream.eat(\"-\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \":\"&&stream.eat(\"=\")) {\n      return \"operator\";\n    } else if (/[0-9]/.test(ch)) {\n      stream.eatWhile(/[xXbBCc0-9\\.]/);\n      stream.eat(/[\\?\\!]/);\n      return \"ident\";\n    } else if (/[a-zA-Z_0-9]/.test(ch)) {\n      stream.eatWhile(/[a-zA-Z_0-9]/);\n      stream.eat(/[\\?\\!]/);\n      return \"ident\";\n    } else if (/[=+\\-\\/*^%<>~]/.test(ch)) {\n      stream.eatWhile(/[=+\\-\\/*^%<>~]/);\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function readQuoted(quote, style,  unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        escaped = !escaped && ch == \"%\";\n      }\n      return style;\n    };\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase]};\n    },\n\n    token: function(stream, state) {\n      var style = state.tokenize[state.tokenize.length-1](stream, state);\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : operators.propertyIsEnumerable(stream.current()) ? \"operator\"\n          : /^[A-Z][A-Z_0-9]*$/g.test(word) ? \"tag\"\n          : /^0[bB][0-1]+$/g.test(word) ? \"number\"\n          : /^0[cC][0-7]+$/g.test(word) ? \"number\"\n          : /^0[xX][a-fA-F0-9]+$/g.test(word) ? \"number\"\n          : /^([0-9]+\\.[0-9]*)|([0-9]*\\.[0-9]+)$/g.test(word) ? \"number\"\n          : /^[0-9]+$/g.test(word) ? \"number\"\n          : \"variable\";\n      }\n      return style;\n    },\n    lineComment: \"--\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-eiffel\", \"eiffel\");\n\n});\n"],"file":"eiffel.js"}