{"version":3,"sources":["thirdparty/CodeMirror/mode/spreadsheet/spreadsheet.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","startState","stringType","stack","token","stream","state","length","peek","next","unshift","eol","shift","match","indexOf","eatSpace","defineMIME"],"mappings":"CAGA,SAAUA,KACc,iBAAXC,SAAwC,iBAAVC,OACvCF,IAAIG,QAAQ,yBACY,mBAAVC,QAAwBA,OAAOC,IAC7CD,OAAO,CAAC,wBAAyBJ,KAEjCA,IAAIM,YANR,CAOG,SAASA,YACV,aAEAA,WAAWC,WAAW,cAAe,WACnC,MAAO,CACLC,WAAY,WACV,MAAO,CACLC,WAAY,KACZC,MAAO,KAGXC,MAAO,SAAUC,OAAQC,OACvB,GAAKD,OAAL,CAcA,OAX2B,IAAvBC,MAAMH,MAAMI,SAEQ,KAAjBF,OAAOG,QAAoC,KAAjBH,OAAOG,SACpCF,MAAMJ,WAAaG,OAAOG,OAC1BH,OAAOI,OACPH,MAAMH,MAAMO,QAAQ,YAMhBJ,MAAMH,MAAM,IACpB,IAAK,SACH,KAA0B,WAAnBG,MAAMH,MAAM,KAAoBE,OAAOM,OACxCN,OAAOG,SAAWF,MAAMJ,YAC1BG,OAAOI,OACPH,MAAMH,MAAMS,SACe,OAAlBP,OAAOG,QAChBH,OAAOI,OACPJ,OAAOI,QAEPJ,OAAOQ,MAAM,gBAGjB,MAAO,SAET,IAAK,iBACH,KAA0B,mBAAnBP,MAAMH,MAAM,KAA4BE,OAAOM,OAC9CN,OAAOQ,MAAM,cAAgBR,OAAOQ,MAAM,SAC9CP,MAAMH,MAAMS,QAEhB,MAAO,WAGT,IAAIJ,KAAOH,OAAOG,OAGlB,OAAQA,MACR,IAAK,IAGH,OAFAH,OAAOI,OACPH,MAAMH,MAAMO,QAAQ,kBACb,UACT,IAAK,IAEH,OADAL,OAAOI,OACA,WACT,IAAK,KACH,OAAIJ,OAAOQ,MAAM,YAAoB,YAEnCR,OAAOI,OACA,QAEX,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IAEH,OADAJ,OAAOI,OACA,OACT,IAAK,IAEH,OADAJ,OAAOI,OACA,UAGT,OAAIJ,OAAOQ,MAAM,OACXR,OAAOQ,MAAM,QAAgB,QAC1B,SACER,OAAOQ,MAAM,iBAClBR,OAAOQ,MAAM,aAAa,GAAe,UACtC,cACmD,GAAjD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKC,QAAQN,OAChDH,OAAOI,OACA,YACGJ,OAAOU,YACjBV,OAAOI,OAEF,WAKbV,WAAWiB,WAAW,qBAAsB","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"spreadsheet\", function () {\n    return {\n      startState: function () {\n        return {\n          stringType: null,\n          stack: []\n        };\n      },\n      token: function (stream, state) {\n        if (!stream) return;\n\n        //check for state changes\n        if (state.stack.length === 0) {\n          //strings\n          if ((stream.peek() == '\"') || (stream.peek() == \"'\")) {\n            state.stringType = stream.peek();\n            stream.next(); // Skip quote\n            state.stack.unshift(\"string\");\n          }\n        }\n\n        //return state\n        //stack has\n        switch (state.stack[0]) {\n        case \"string\":\n          while (state.stack[0] === \"string\" && !stream.eol()) {\n            if (stream.peek() === state.stringType) {\n              stream.next(); // Skip quote\n              state.stack.shift(); // Clear flag\n            } else if (stream.peek() === \"\\\\\") {\n              stream.next();\n              stream.next();\n            } else {\n              stream.match(/^.[^\\\\\\\"\\']*/);\n            }\n          }\n          return \"string\";\n\n        case \"characterClass\":\n          while (state.stack[0] === \"characterClass\" && !stream.eol()) {\n            if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./)))\n              state.stack.shift();\n          }\n          return \"operator\";\n        }\n\n        var peek = stream.peek();\n\n        //no stack\n        switch (peek) {\n        case \"[\":\n          stream.next();\n          state.stack.unshift(\"characterClass\");\n          return \"bracket\";\n        case \":\":\n          stream.next();\n          return \"operator\";\n        case \"\\\\\":\n          if (stream.match(/\\\\[a-z]+/)) return \"string-2\";\n          else {\n            stream.next();\n            return \"atom\";\n          }\n        case \".\":\n        case \",\":\n        case \";\":\n        case \"*\":\n        case \"-\":\n        case \"+\":\n        case \"^\":\n        case \"<\":\n        case \"/\":\n        case \"=\":\n          stream.next();\n          return \"atom\";\n        case \"$\":\n          stream.next();\n          return \"builtin\";\n        }\n\n        if (stream.match(/\\d+/)) {\n          if (stream.match(/^\\w+/)) return \"error\";\n          return \"number\";\n        } else if (stream.match(/^[a-zA-Z_]\\w*/)) {\n          if (stream.match(/(?=[\\(.])/, false)) return \"keyword\";\n          return \"variable-2\";\n        } else if ([\"[\", \"]\", \"(\", \")\", \"{\", \"}\"].indexOf(peek) != -1) {\n          stream.next();\n          return \"bracket\";\n        } else if (!stream.eatSpace()) {\n          stream.next();\n        }\n        return null;\n      }\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-spreadsheet\", \"spreadsheet\");\n});\n"],"file":"spreadsheet.js"}