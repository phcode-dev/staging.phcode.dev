{"version":3,"sources":["thirdparty/CodeMirror/addon/hint/css-hint.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","pseudoClasses","active","after","before","checked","default","disabled","empty","enabled","first-child","first-letter","first-line","first-of-type","focus","hover","in-range","indeterminate","invalid","lang","last-child","last-of-type","link","not","nth-child","nth-last-child","nth-last-of-type","nth-of-type","only-of-type","only-child","optional","out-of-range","placeholder","read-only","read-write","required","root","selection","target","valid","visited","registerHelper","cm","cur","getCursor","token","getTokenAt","inner","innerMode","getMode","state","mode","name","type","indexOf","string","list","from","Pos","line","start","to","end","ch","word","slice","test","spec","resolveMode","result","st","add","propertyKeywords","valueKeywords","colorKeywords","mediaTypes","mediaFeatures","length","keywords","lastIndexOf","push"],"mappings":"CAGA,SAAUA,KACc,iBAAXC,SAAwC,iBAAVC,OACvCF,IAAIG,QAAQ,wBAAyBA,QAAQ,uBACrB,mBAAVC,QAAwBA,OAAOC,IAC7CD,OAAO,CAAC,uBAAwB,sBAAuBJ,KAEvDA,IAAIM,YANR,CAOG,SAASA,YACV,aAEA,IAAIC,cAAgB,CAACC,OAAS,EAAGC,MAAQ,EAAGC,OAAS,EAAGC,QAAU,EAAGC,QAAU,EAC7EC,SAAW,EAAGC,MAAQ,EAAGC,QAAU,EAAGC,cAAc,EAAGC,eAAe,EACtEC,aAAa,EAAGC,gBAAgB,EAAGC,MAAQ,EAAGC,MAAQ,EAAGC,WAAW,EACpEC,cAAgB,EAAGC,QAAU,EAAGC,KAAO,EAAGC,aAAa,EAAGC,eAAe,EACzEC,KAAO,EAAGC,IAAM,EAAGC,YAAY,EAAGC,iBAAiB,EAAGC,mBAAmB,EACzEC,cAAc,EAAGC,eAAe,EAAGC,aAAa,EAAGC,SAAW,EAAGC,eAAe,EAChFC,YAAc,EAAGC,YAAY,EAAGC,aAAa,EAAGC,SAAW,EAAGC,KAAO,EACrEC,UAAY,EAAGC,OAAS,EAAGC,MAAQ,EAAGC,QAAU,GAGlDxC,WAAWyC,eAAe,OAAQ,MAAO,SAASC,IAChD,IAAIC,IAAMD,GAAGE,YAAaC,MAAQH,GAAGI,WAAWH,KAC5CI,MAAQ/C,WAAWgD,UAAUN,GAAGO,UAAWJ,MAAMK,OACrD,GAAuB,OAAnBH,MAAMI,KAAKC,KAAf,CAEA,GAAkB,WAAdP,MAAMQ,MAA2D,GAAtC,aAAaC,QAAQT,MAAMU,QACxD,MAAO,CAACC,KAAM,CAAC,cAAeC,KAAMzD,WAAW0D,IAAIf,IAAIgB,KAAMd,MAAMe,OAC3DC,GAAI7D,WAAW0D,IAAIf,IAAIgB,KAAMd,MAAMiB,MAE7C,IAAIF,MAAQf,MAAMe,MAAOE,IAAMnB,IAAIoB,GAAIC,KAAOnB,MAAMU,OAAOU,MAAM,EAAGH,IAAMF,OACtE,WAAWM,KAAKF,QAClBA,KAAO,GAAIJ,MAAQE,IAAMnB,IAAIoB,IAG/B,IAAII,KAAOnE,WAAWoE,YAAY,YAE9BC,OAAS,GAOTC,GAAKvB,MAAMG,MAAMA,MAarB,MAZU,UAANoB,IAAgC,cAAdzB,MAAMQ,KAC1BkB,IAAItE,eACW,SAANqE,IAAuB,aAANA,GAC1BC,IAAIJ,KAAKK,kBACM,QAANF,IAAsB,UAANA,IAAwB,MAANA,IAAoB,UAANA,IACzDC,IAAIJ,KAAKM,eACTF,IAAIJ,KAAKO,gBACM,SAANJ,IAAuB,gBAANA,KAC1BC,IAAIJ,KAAKQ,YACTJ,IAAIJ,KAAKS,gBAGPP,OAAOQ,OAAe,CACxBrB,KAAMa,OACNZ,KAAMzD,WAAW0D,IAAIf,IAAIgB,KAAMC,OAC/BC,GAAI7D,WAAW0D,IAAIf,IAAIgB,KAAMG,WAH/B,EAnBA,SAASS,IAAIO,UACX,IAAK,IAAI1B,QAAQ0B,SACVd,MAAqC,GAA7BZ,KAAK2B,YAAYf,KAAM,IAClCK,OAAOW,KAAK5B","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../mode/css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../mode/css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var pseudoClasses = {\"active\":1, \"after\":1, \"before\":1, \"checked\":1, \"default\":1,\n    \"disabled\":1, \"empty\":1, \"enabled\":1, \"first-child\":1, \"first-letter\":1,\n    \"first-line\":1, \"first-of-type\":1, \"focus\":1, \"hover\":1, \"in-range\":1,\n    \"indeterminate\":1, \"invalid\":1, \"lang\":1, \"last-child\":1, \"last-of-type\":1,\n    \"link\":1, \"not\":1, \"nth-child\":1, \"nth-last-child\":1, \"nth-last-of-type\":1,\n    \"nth-of-type\":1, \"only-of-type\":1, \"only-child\":1, \"optional\":1, \"out-of-range\":1,\n    \"placeholder\":1, \"read-only\":1, \"read-write\":1, \"required\":1, \"root\":1,\n    \"selection\":1, \"target\":1, \"valid\":1, \"visited\":1\n  };\n\n  CodeMirror.registerHelper(\"hint\", \"css\", function(cm) {\n    var cur = cm.getCursor(), token = cm.getTokenAt(cur);\n    var inner = CodeMirror.innerMode(cm.getMode(), token.state);\n    if (inner.mode.name != \"css\") return;\n\n    if (token.type == \"keyword\" && \"!important\".indexOf(token.string) == 0)\n      return {list: [\"!important\"], from: CodeMirror.Pos(cur.line, token.start),\n              to: CodeMirror.Pos(cur.line, token.end)};\n\n    var start = token.start, end = cur.ch, word = token.string.slice(0, end - start);\n    if (/[^\\w$_-]/.test(word)) {\n      word = \"\"; start = end = cur.ch;\n    }\n\n    var spec = CodeMirror.resolveMode(\"text/css\");\n\n    var result = [];\n    function add(keywords) {\n      for (var name in keywords)\n        if (!word || name.lastIndexOf(word, 0) == 0)\n          result.push(name);\n    }\n\n    var st = inner.state.state;\n    if (st == \"pseudo\" || token.type == \"variable-3\") {\n      add(pseudoClasses);\n    } else if (st == \"block\" || st == \"maybeprop\") {\n      add(spec.propertyKeywords);\n    } else if (st == \"prop\" || st == \"parens\" || st == \"at\" || st == \"params\") {\n      add(spec.valueKeywords);\n      add(spec.colorKeywords);\n    } else if (st == \"media\" || st == \"media_parens\") {\n      add(spec.mediaTypes);\n      add(spec.mediaFeatures);\n    }\n\n    if (result.length) return {\n      list: result,\n      from: CodeMirror.Pos(cur.line, start),\n      to: CodeMirror.Pos(cur.line, end)\n    };\n  });\n});\n"],"file":"css-hint.js"}