{"version":3,"sources":["thirdparty/CodeMirror/addon/hint/xml-hint.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","Pos","matches","hint","typed","matchInMiddle","indexOf","lastIndexOf","getHints","cm","options","tags","schemaInfo","quote","quoteChar","cur","getCursor","token","getTokenAt","inner","end","ch","string","slice","start","innerMode","getMode","state","mode","xmlCurrentTag","result","replaceToken","prefix","tag","test","type","tagName","tagStart","before","getLine","line","Math","max","tagType","tagInfo","context","xmlCurrentContext","curTag","length","childList","children","i","push","name","hasOwnProperty","attrs","globalAttrs","set","nm","atName","getRange","match","atValues","call","this","n","charAt","len","substr","returnHintsFromAtValues","returnHints","then","attr","list","from","to","registerHelper"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var Pos = CodeMirror.Pos;\n\n  function matches(hint, typed, matchInMiddle) {\n    if (matchInMiddle) return hint.indexOf(typed) >= 0;\n    else return hint.lastIndexOf(typed, 0) == 0;\n  }\n\n  function getHints(cm, options) {\n    var tags = options && options.schemaInfo;\n    var quote = (options && options.quoteChar) || '\"';\n    var matchInMiddle = options && options.matchInMiddle;\n    if (!tags) return;\n    var cur = cm.getCursor(), token = cm.getTokenAt(cur);\n    if (token.end > cur.ch) {\n      token.end = cur.ch;\n      token.string = token.string.slice(0, cur.ch - token.start);\n    }\n    var inner = CodeMirror.innerMode(cm.getMode(), token.state);\n    if (!inner.mode.xmlCurrentTag) return\n    var result = [], replaceToken = false, prefix;\n    var tag = /\\btag\\b/.test(token.type) && !/>$/.test(token.string);\n    var tagName = tag && /^\\w/.test(token.string), tagStart;\n\n    if (tagName) {\n      var before = cm.getLine(cur.line).slice(Math.max(0, token.start - 2), token.start);\n      var tagType = /<\\/$/.test(before) ? \"close\" : /<$/.test(before) ? \"open\" : null;\n      if (tagType) tagStart = token.start - (tagType == \"close\" ? 2 : 1);\n    } else if (tag && token.string == \"<\") {\n      tagType = \"open\";\n    } else if (tag && token.string == \"</\") {\n      tagType = \"close\";\n    }\n\n    var tagInfo = inner.mode.xmlCurrentTag(inner.state)\n    if (!tag && !tagInfo || tagType) {\n      if (tagName)\n        prefix = token.string;\n      replaceToken = tagType;\n      var context = inner.mode.xmlCurrentContext ? inner.mode.xmlCurrentContext(inner.state) : []\n      var inner = context.length && context[context.length - 1]\n      var curTag = inner && tags[inner]\n      var childList = inner ? curTag && curTag.children : tags[\"!top\"];\n      if (childList && tagType != \"close\") {\n        for (var i = 0; i < childList.length; ++i) if (!prefix || matches(childList[i], prefix, matchInMiddle))\n          result.push(\"<\" + childList[i]);\n      } else if (tagType != \"close\") {\n        for (var name in tags)\n          if (tags.hasOwnProperty(name) && name != \"!top\" && name != \"!attrs\" && (!prefix || matches(name, prefix, matchInMiddle)))\n            result.push(\"<\" + name);\n      }\n      if (inner && (!prefix || tagType == \"close\" && matches(inner, prefix, matchInMiddle)))\n        result.push(\"</\" + inner + \">\");\n    } else {\n      // Attribute completion\n      var curTag = tagInfo && tags[tagInfo.name], attrs = curTag && curTag.attrs;\n      var globalAttrs = tags[\"!attrs\"];\n      if (!attrs && !globalAttrs) return;\n      if (!attrs) {\n        attrs = globalAttrs;\n      } else if (globalAttrs) { // Combine tag-local and global attributes\n        var set = {};\n        for (var nm in globalAttrs) if (globalAttrs.hasOwnProperty(nm)) set[nm] = globalAttrs[nm];\n        for (var nm in attrs) if (attrs.hasOwnProperty(nm)) set[nm] = attrs[nm];\n        attrs = set;\n      }\n      if (token.type == \"string\" || token.string == \"=\") { // A value\n        var before = cm.getRange(Pos(cur.line, Math.max(0, cur.ch - 60)),\n                                 Pos(cur.line, token.type == \"string\" ? token.start : token.end));\n        var atName = before.match(/([^\\s\\u00a0=<>\\\"\\']+)=$/), atValues;\n        if (!atName || !attrs.hasOwnProperty(atName[1]) || !(atValues = attrs[atName[1]])) return;\n        if (typeof atValues == 'function') atValues = atValues.call(this, cm); // Functions can be used to supply values for autocomplete widget\n        if (token.type == \"string\") {\n          prefix = token.string;\n          var n = 0;\n          if (/['\"]/.test(token.string.charAt(0))) {\n            quote = token.string.charAt(0);\n            prefix = token.string.slice(1);\n            n++;\n          }\n          var len = token.string.length;\n          if (/['\"]/.test(token.string.charAt(len - 1))) {\n            quote = token.string.charAt(len - 1);\n            prefix = token.string.substr(n, len - 2);\n          }\n          if (n) { // an opening quote\n            var line = cm.getLine(cur.line);\n            if (line.length > token.end && line.charAt(token.end) == quote) token.end++; // include a closing quote\n          }\n          replaceToken = true;\n        }\n        var returnHintsFromAtValues = function(atValues) {\n          if (atValues)\n            for (var i = 0; i < atValues.length; ++i) if (!prefix || matches(atValues[i], prefix, matchInMiddle))\n              result.push(quote + atValues[i] + quote);\n          return returnHints();\n        };\n        if (atValues && atValues.then) return atValues.then(returnHintsFromAtValues);\n        return returnHintsFromAtValues(atValues);\n      } else { // An attribute name\n        if (token.type == \"attribute\") {\n          prefix = token.string;\n          replaceToken = true;\n        }\n        for (var attr in attrs) if (attrs.hasOwnProperty(attr) && (!prefix || matches(attr, prefix, matchInMiddle)))\n          result.push(attr);\n      }\n    }\n    function returnHints() {\n      return {\n        list: result,\n        from: replaceToken ? Pos(cur.line, tagStart == null ? token.start : tagStart) : cur,\n        to: replaceToken ? Pos(cur.line, token.end) : cur\n      };\n    }\n    return returnHints();\n  }\n\n  CodeMirror.registerHelper(\"hint\", \"xml\", getHints);\n});\n"],"file":"xml-hint.js"}