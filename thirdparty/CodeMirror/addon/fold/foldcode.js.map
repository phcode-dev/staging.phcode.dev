{"version":3,"sources":["thirdparty/CodeMirror/addon/fold/foldcode.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","doFold","cm","pos","options","force","call","finder","getOption","Pos","minSize","getRange","allowFolded","range","to","line","from","marks","findMarksAt","i","length","__isFold","cleared","clear","firstLine","myWidget","makeWidget","on","e","myRange","e_preventDefault","markText","replacedWith","clearOnEnter","signal","widget","text","document","createTextNode","createElement","appendChild","className","cloneNode","newFoldFunction","rangeFinder","defineExtension","this","commands","toggleFold","foldCode","getCursor","fold","unfold","scanUp","foldAll","operation","lastLine","unfoldAll","registerHelper","funcs","Array","prototype","slice","arguments","start","found","helpers","getHelpers","cur","defaultOptions","auto","minFoldSize","name","undefined","editorOptions","foldOptions","defineOption"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function doFold(cm, pos, options, force) {\n    if (options && options.call) {\n      var finder = options;\n      options = null;\n    } else {\n      var finder = getOption(cm, options, \"rangeFinder\");\n    }\n    if (typeof pos == \"number\") pos = CodeMirror.Pos(pos, 0);\n    var minSize = getOption(cm, options, \"minFoldSize\");\n\n    function getRange(allowFolded) {\n      var range = finder(cm, pos);\n      if (!range || range.to.line - range.from.line < minSize) return null;\n      if (force === \"fold\") return range;\n\n      var marks = cm.findMarksAt(range.from);\n      for (var i = 0; i < marks.length; ++i) {\n        if (marks[i].__isFold) {\n          if (!allowFolded) return null;\n          range.cleared = true;\n          marks[i].clear();\n        }\n      }\n      return range;\n    }\n\n    var range = getRange(true);\n    if (getOption(cm, options, \"scanUp\")) while (!range && pos.line > cm.firstLine()) {\n      pos = CodeMirror.Pos(pos.line - 1, 0);\n      range = getRange(false);\n    }\n    if (!range || range.cleared || force === \"unfold\") return;\n\n    var myWidget = makeWidget(cm, options, range);\n    CodeMirror.on(myWidget, \"mousedown\", function(e) {\n      myRange.clear();\n      CodeMirror.e_preventDefault(e);\n    });\n    var myRange = cm.markText(range.from, range.to, {\n      replacedWith: myWidget,\n      clearOnEnter: getOption(cm, options, \"clearOnEnter\"),\n      __isFold: true\n    });\n    myRange.on(\"clear\", function(from, to) {\n      CodeMirror.signal(cm, \"unfold\", cm, from, to);\n    });\n    CodeMirror.signal(cm, \"fold\", cm, range.from, range.to);\n  }\n\n  function makeWidget(cm, options, range) {\n    var widget = getOption(cm, options, \"widget\");\n\n    if (typeof widget == \"function\") {\n      widget = widget(range.from, range.to);\n    }\n\n    if (typeof widget == \"string\") {\n      var text = document.createTextNode(widget);\n      widget = document.createElement(\"span\");\n      widget.appendChild(text);\n      widget.className = \"CodeMirror-foldmarker\";\n    } else if (widget) {\n      widget = widget.cloneNode(true)\n    }\n    return widget;\n  }\n\n  // Clumsy backwards-compatible interface\n  CodeMirror.newFoldFunction = function(rangeFinder, widget) {\n    return function(cm, pos) { doFold(cm, pos, {rangeFinder: rangeFinder, widget: widget}); };\n  };\n\n  // New-style interface\n  CodeMirror.defineExtension(\"foldCode\", function(pos, options, force) {\n    doFold(this, pos, options, force);\n  });\n\n  CodeMirror.defineExtension(\"isFolded\", function(pos) {\n    var marks = this.findMarksAt(pos);\n    for (var i = 0; i < marks.length; ++i)\n      if (marks[i].__isFold) return true;\n  });\n\n  CodeMirror.commands.toggleFold = function(cm) {\n    cm.foldCode(cm.getCursor());\n  };\n  CodeMirror.commands.fold = function(cm) {\n    cm.foldCode(cm.getCursor(), null, \"fold\");\n  };\n  CodeMirror.commands.unfold = function(cm) {\n    cm.foldCode(cm.getCursor(), { scanUp: false }, \"unfold\");\n  };\n  CodeMirror.commands.foldAll = function(cm) {\n    cm.operation(function() {\n      for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++)\n        cm.foldCode(CodeMirror.Pos(i, 0), { scanUp: false }, \"fold\");\n    });\n  };\n  CodeMirror.commands.unfoldAll = function(cm) {\n    cm.operation(function() {\n      for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++)\n        cm.foldCode(CodeMirror.Pos(i, 0), { scanUp: false }, \"unfold\");\n    });\n  };\n\n  CodeMirror.registerHelper(\"fold\", \"combine\", function() {\n    var funcs = Array.prototype.slice.call(arguments, 0);\n    return function(cm, start) {\n      for (var i = 0; i < funcs.length; ++i) {\n        var found = funcs[i](cm, start);\n        if (found) return found;\n      }\n    };\n  });\n\n  CodeMirror.registerHelper(\"fold\", \"auto\", function(cm, start) {\n    var helpers = cm.getHelpers(start, \"fold\");\n    for (var i = 0; i < helpers.length; i++) {\n      var cur = helpers[i](cm, start);\n      if (cur) return cur;\n    }\n  });\n\n  var defaultOptions = {\n    rangeFinder: CodeMirror.fold.auto,\n    widget: \"\\u2194\",\n    minFoldSize: 0,\n    scanUp: false,\n    clearOnEnter: true\n  };\n\n  CodeMirror.defineOption(\"foldOptions\", null);\n\n  function getOption(cm, options, name) {\n    if (options && options[name] !== undefined)\n      return options[name];\n    var editorOptions = cm.options.foldOptions;\n    if (editorOptions && editorOptions[name] !== undefined)\n      return editorOptions[name];\n    return defaultOptions[name];\n  }\n\n  CodeMirror.defineExtension(\"foldOption\", function(options, name) {\n    return getOption(this, options, name);\n  });\n});\n"],"file":"foldcode.js"}