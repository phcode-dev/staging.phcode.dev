!function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("../../lib/codemirror"),require("htmlhint")):"function"==typeof define&&define.amd?define(["../../lib/codemirror","htmlhint"],mod):mod(CodeMirror,window.HTMLHint)}(function(CodeMirror,HTMLHint){"use strict";var defaultRules={"tagname-lowercase":!0,"attr-lowercase":!0,"attr-value-double-quotes":!0,"doctype-first":!1,"tag-pair":!0,"spec-char-escape":!0,"id-unique":!0,"src-not-empty":!0,"attr-no-duplication":!0};CodeMirror.registerHelper("lint","html",function(text,options){var found=[];if(HTMLHint&&!HTMLHint.verify&&(HTMLHint=void 0!==HTMLHint.default?HTMLHint.default:HTMLHint.HTMLHint),HTMLHint||(HTMLHint=window.HTMLHint),!HTMLHint)return window.console&&window.console.error("Error: HTMLHint not found, not defined on window, or not available through define/require, CodeMirror HTML linting cannot run."),found;for(var messages=HTMLHint.verify(text,options&&options.rules||defaultRules),i=0;i<messages.length;i++){var message=messages[i],startLine=message.line-1,endLine=message.line-1,startCol=message.col-1,endCol=message.col;found.push({from:CodeMirror.Pos(startLine,startCol),to:CodeMirror.Pos(endLine,endCol),message:message.message,severity:message.type})}return found})});
//# sourceMappingURL=html-lint.js.map
