var config={},_domainManager,MessageIds,ternOptions,self={postMessage:function(data){_domainManager.emitEvent("TernNodeDomain","data",[data])}},Tern=require("tern"),Infer=require("tern/lib/infer");require("tern/plugin/requirejs"),require("tern/plugin/doc_comment"),require("tern/plugin/angular");var ExtractContent=require("./ExtractFileContent"),ternServer=null,isUntitledDoc=!1,inferenceTimeout,fileCallBacks={};function _log(msg){console.log(msg)}function _reportError(e,file){e instanceof Infer.TimedOut?self.postMessage({type:MessageIds.TERN_INFERENCE_TIMEDOUT,file:file}):_log("Error thrown in tern_node domain:"+e.message+"\n"+e.stack)}function handleGetFile(file,text){var next=fileCallBacks[file];if(next)try{next(null,text)}catch(e){_reportError(e,file)}delete fileCallBacks[file]}function _getNormalizedFilename(fileName){return!isUntitledDoc&&ternServer.projectDir&&-1===fileName.indexOf(ternServer.projectDir)&&(fileName=ternServer.projectDir+fileName),fileName}function _getDenormalizedFilename(fileName){return!isUntitledDoc&&ternServer.projectDir&&0===fileName.indexOf(ternServer.projectDir)&&(fileName=fileName.slice(ternServer.projectDir.length)),fileName}function _requestFileContent(name){self.postMessage({type:MessageIds.TERN_GET_FILE_MSG,file:name})}function getFile(name,next){fileCallBacks[name]=next,setImmediate(function(){try{ExtractContent.extractContent(name,handleGetFile,_requestFileContent)}catch(error){console.log(error)}})}function initTernServer(env,files){ternOptions={defs:env,async:!0,getFile:getFile,plugins:{requirejs:{},doc_comment:!0,angular:!0},ecmaVersion:9},ternServer&&(ternServer.reset(),Infer.resetGuessing()),ternServer=new Tern.Server(ternOptions),files.forEach(function(file){ternServer.addFile(file)})}function resetTernServer(){ternServer&&(ternServer.reset(),Infer.resetGuessing(),self.postMessage({type:MessageIds.TERN_WORKER_READY}))}function createEmptyUpdate(path){return{type:MessageIds.TERN_FILE_INFO_TYPE_EMPTY,name:path,offsetLines:0,text:""}}function buildRequest(fileInfo,query,offset){(query={type:query}).start=offset,query.end=offset,query.file=fileInfo.type===MessageIds.TERN_FILE_INFO_TYPE_PART?"#0":fileInfo.name,query.filter=!1,query.sort=!1,query.depths=!0,query.guess=!0,query.origins=!0,query.types=!0,query.expandWordForward=!1,query.lineCharPositions=!0,query.docs=!0,query.urls=!0;var request={query:query,files:[],offset:offset,timeout:inferenceTimeout};if(fileInfo.type!==MessageIds.TERN_FILE_INFO_TYPE_EMPTY){var fileInfoCopy=JSON.parse(JSON.stringify(fileInfo));request.files.push(fileInfoCopy)}return request}function getRefs(fileInfo,offset){var request=buildRequest(fileInfo,"refs",offset);try{ternServer.request(request,function(error,data){if(error){_log("Error returned from Tern 'refs' request: "+error);var response={type:MessageIds.TERN_REFS,error:error.message};self.postMessage(response)}else{var response={type:MessageIds.TERN_REFS,file:fileInfo.name,offset:offset,references:data};self.postMessage(response)}})}catch(e){_reportError(e,fileInfo.name)}}function getScopeData(fileInfo,offset){ternOptions.plugins={};var ternServer=new Tern.Server(ternOptions),error;ternServer.addFile(fileInfo.name,fileInfo.text);var request=buildRequest(fileInfo,"completions",offset);try{ternServer.request(request,function(ternError,data){if(ternError)_log("Error for Tern request: \n"+JSON.stringify(request)+"\n"+ternError),error=ternError.toString();else{var file=ternServer.findFile(fileInfo.name),scope=Infer.scopeAt(file.ast,Tern.resolvePos(file,offset),file.scope);scope&&(scope=JSON.parse(JSON.stringify(scope,function(key,value){if(!["proto","propertyOf","onNewProp","sourceFile","maybeProps"].includes(key)){if("fnType"===key)return value.name||"FunctionExpression";if("props"===key){for(var key in value)value[key]=value[key].propertyName;return value}return"originNode"===key?value&&{start:value.start,end:value.end,type:value.type,body:{start:value.body.start,end:value.body.end}}:value}}))),self.postMessage({type:MessageIds.TERN_SCOPEDATA_MSG,file:_getNormalizedFilename(fileInfo.name),offset:offset,scope:scope})}})}catch(e){_reportError(e,fileInfo.name)}finally{ternServer.reset(),Infer.resetGuessing()}}function getJumptoDef(fileInfo,offset){var request=buildRequest(fileInfo,"definition",offset);try{ternServer.request(request,function(error,data){if(error)return _log("Error returned from Tern 'definition' request: "+error),void self.postMessage({type:MessageIds.TERN_JUMPTODEF_MSG,file:fileInfo.name,offset:offset});var response={type:MessageIds.TERN_JUMPTODEF_MSG,file:_getNormalizedFilename(fileInfo.name),resultFile:data.file,offset:offset,start:data.start,end:data.end};request=buildRequest(fileInfo,"type",offset),ternServer.request(request,function(error,data){error||(response.isFunction=data.type.length>2&&"fn"===data.type.substring(0,2)),self.postMessage(response)})})}catch(e){_reportError(e,fileInfo.name)}}function getTernProperties(fileInfo,offset,type){var request=buildRequest(fileInfo,"properties",offset),i;try{ternServer.request(request,function(error,data){var properties=[];error?_log("Error returned from Tern 'properties' request: "+error):properties=data.completions.map(function(completion){return{value:completion,type:completion.type,guess:!0}}),self.postMessage({type:type,file:_getNormalizedFilename(fileInfo.name),offset:offset,properties:properties})})}catch(e){_reportError(e,fileInfo.name)}}function getTernHints(fileInfo,offset,isProperty){var request=buildRequest(fileInfo,"completions",offset),i;try{ternServer.request(request,function(error,data){var completions=[];error?_log("Error returned from Tern 'completions' request: "+error):completions=data.completions.map(function(completion){return{value:completion.name,type:completion.type,depth:completion.depth,guess:completion.guess,origin:completion.origin,doc:completion.doc,url:completion.url}}),completions.length>0||!isProperty?self.postMessage({type:MessageIds.TERN_COMPLETIONS_MSG,file:_getNormalizedFilename(fileInfo.name),offset:offset,completions:completions}):getTernProperties(fileInfo,offset,MessageIds.TERN_COMPLETIONS_MSG)})}catch(e){_reportError(e,fileInfo.name)}}function getParameters(inferFnType){var recordTypeToString,inferTypeToString,processInferFnTypeParameters,inferFnTypeToString;function inferArrTypeToString(inferArrType){var result="Array.<";return result+=inferArrType.props["<i>"].types.map(inferTypeToString).join(", "),0===inferArrType.props["<i>"].types.length&&(result+="Object"),result+=">"}function formatParameterHint(params,appendSeparators,appendParameter,typesOnly){var result="",pendingOptional=!1;return params.forEach(function(value,i){var param=value.type,separators="";value.isOptional&&(pendingOptional&&(separators+="]"),pendingOptional=!0),i>0&&(separators+=", "),value.isOptional&&(separators+="["),appendSeparators&&appendSeparators(separators),result+=separators,typesOnly||(param+=" "+value.name),appendParameter&&appendParameter(param,i),result+=param}),pendingOptional&&(appendSeparators&&appendSeparators("]"),result+="]"),result}return recordTypeToString=function(props){var result="{",first=!0,prop;return result+=Object.keys(props).map(function(key){return key+": "+inferTypeToString(props[key])}).join(", "),result+="}"},inferTypeToString=function(inferType){var result;return inferType instanceof Infer.AVal&&(inferType=inferType.types[0]),inferType instanceof Infer.Prim?"string"===(result=inferType.toString())?result="String":"number"===result?result="Number":"boolean"===result&&(result="Boolean"):result=inferType instanceof Infer.Arr?inferArrTypeToString(inferType):inferType instanceof Infer.Fn?inferFnTypeToString(inferType):inferType instanceof Infer.Obj?void 0===inferType.name?recordTypeToString(inferType.props):inferType.name:"Object",result},inferFnTypeToString=function(inferType){var result="function(",params;return result+=formatParameterHint(processInferFnTypeParameters(inferType),null,null,!0),inferType.retval&&(result+="):",result+=inferTypeToString(inferType.retval)),result},(processInferFnTypeParameters=function(inferType){var params=[],i;for(i=0;i<inferType.args.length;i++){var param={},name=inferType.argNames[i],type=inferType.args[i];name||(name="param"+(i+1)),"?"===name[name.length-1]&&(name=name.substring(0,name.length-1),param.isOptional=!0),param.name=name,param.type=inferTypeToString(type),params.push(param)}return params})(inferFnType)}function handleFunctionType(fileInfo,offset){var request=buildRequest(fileInfo,"type",offset),error;request.query.preferFunction=!0;var fnType="";try{ternServer.request(request,function(ternError,data){if(ternError)_log("Error for Tern request: \n"+JSON.stringify(request)+"\n"+ternError),error=ternError.toString();else{var file=ternServer.findFile(fileInfo.name),newOffset=offset;fileInfo.type===MessageIds.TERN_FILE_INFO_TYPE_PART&&(newOffset={line:offset.line+fileInfo.offsetLines,ch:offset.ch}),request=buildRequest(createEmptyUpdate(fileInfo.name),"type",newOffset);var expr=Tern.findQueryExpr(file,request.query);Infer.resetGuessing();var type=Infer.expressionType(expr);(type=type.getFunctionType()||type.getType())?fnType=getParameters(type):_log(ternError="No parameter type found")}})}catch(e){_reportError(e,fileInfo.name)}self.postMessage({type:MessageIds.TERN_CALLED_FUNC_TYPE_MSG,file:_getNormalizedFilename(fileInfo.name),offset:offset,fnType:fnType,error:error})}function handleAddFiles(files){files.forEach(function(file){ternServer.addFile(file)})}function handleUpdateFile(path,text){ternServer.addFile(path,text),self.postMessage({type:MessageIds.TERN_UPDATE_FILE_MSG,path:path}),ternServer.reset(),Infer.resetGuessing()}function handlePrimePump(path){var fileName,fileInfo,request=buildRequest(createEmptyUpdate(_getDenormalizedFilename(path)),"completions",{line:0,ch:0});try{ternServer.request(request,function(error,data){self.postMessage({type:MessageIds.TERN_PRIME_PUMP_MSG,path:_getNormalizedFilename(path)})})}catch(e){_reportError(e,path)}}function setConfig(configUpdate){config=configUpdate}function _requestTernServer(commandConfig){var file,text,offset,request=commandConfig,type=request.type;if(config.debug&&_log("Message received "+type),type===MessageIds.TERN_INIT_MSG){var env=request.env,files=request.files;inferenceTimeout=request.timeout,initTernServer(env,files)}else type===MessageIds.TERN_COMPLETIONS_MSG?(offset=request.offset,getTernHints(request.fileInfo,offset,request.isProperty)):type===MessageIds.TERN_GET_FILE_MSG?handleGetFile(file=request.file,text=request.text):type===MessageIds.TERN_CALLED_FUNC_TYPE_MSG?(offset=request.offset,handleFunctionType(request.fileInfo,offset)):type===MessageIds.TERN_JUMPTODEF_MSG?(offset=request.offset,getJumptoDef(request.fileInfo,offset)):type===MessageIds.TERN_SCOPEDATA_MSG?(offset=request.offset,getScopeData(request.fileInfo,offset)):type===MessageIds.TERN_REFS?(offset=request.offset,getRefs(request.fileInfo,offset)):type===MessageIds.TERN_ADD_FILES_MSG?handleAddFiles(request.files):type===MessageIds.TERN_PRIME_PUMP_MSG?(isUntitledDoc=request.isUntitledDoc,handlePrimePump(request.path)):type===MessageIds.TERN_GET_GUESSES_MSG?(offset=request.offset,getTernProperties(request.fileInfo,offset,MessageIds.TERN_GET_GUESSES_MSG)):type===MessageIds.TERN_UPDATE_FILE_MSG?handleUpdateFile(request.path,request.text):type===MessageIds.SET_CONFIG?setConfig(request.config):type===MessageIds.TERN_UPDATE_DIRTY_FILE?ExtractContent.updateFilesCache(request.name,request.action):type===MessageIds.TERN_CLEAR_DIRTY_FILES_LIST?ExtractContent.clearFilesCache():_log("Unknown message: "+JSON.stringify(request))}function invokeTernCommand(commandConfig){try{_requestTernServer(commandConfig)}catch(error){console.warn(error)}}function setInterface(msgInterface){MessageIds=msgInterface.messageIds}function checkInterfaceAndReInit(){MessageIds||self.postMessage({type:"RE_INIT_TERN"})}function init(domainManager){domainManager.hasDomain("TernNodeDomain")||domainManager.registerDomain("TernNodeDomain",{major:0,minor:1}),_domainManager=domainManager,domainManager.registerCommand("TernNodeDomain","invokeTernCommand",invokeTernCommand,!1,"Invokes a tern command on node",[{name:"commandConfig",type:"object",description:"Object containing tern command configuration"}]),domainManager.registerCommand("TernNodeDomain","setInterface",setInterface,!1,"Sets the shared message interface",[{name:"msgInterface",type:"object",description:"Object containing messageId enums"}]),domainManager.registerCommand("TernNodeDomain","resetTernServer",resetTernServer,!0,"Resets an existing tern server"),domainManager.registerEvent("TernNodeDomain","data",[{name:"data",type:"Object",description:"data to be returned to main thread"}]),setTimeout(checkInterfaceAndReInit,1e3)}exports.init=init;
//# sourceMappingURL=TernNodeDomain.js.map
