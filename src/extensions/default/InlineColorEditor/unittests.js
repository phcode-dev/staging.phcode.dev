define(function(require,exports,module){var KeyEvent=brackets.getModule("utils/KeyEvent"),PreferencesManager=brackets.getModule("preferences/PreferencesManager"),SpecRunnerUtils=brackets.getModule("spec/SpecRunnerUtils"),testContentCSS=require("text!unittest-files/unittests.css"),testContentHTML=require("text!unittest-files/unittests.html"),provider=require("main").inlineColorEditorProvider,InlineColorEditor=require("InlineColorEditor").InlineColorEditor,ColorEditor=require("ColorEditor").ColorEditor,tinycolor=require("thirdparty/tinycolor-min");function fixPos(pos){return"sticky"in pos||(pos.sticky=null),pos}function fixSel(sel){return fixPos(sel.start),fixPos(sel.end),"reversed"in sel||(sel.reversed=!1),sel}function fixSels(sels){return sels.forEach(function(sel){fixSel(sel)}),sels}describe("unit:Inline Color Editor - unit",function(){var testDocument,testEditor,inline;async function makeColorEditor(cursor){var promise=provider(testEditor,cursor);promise&&(promise.done(function(inlineResult){inlineResult.onAdded(),inline=inlineResult}),await awaitsForDone(promise,"open color editor"))}async function testOpenColor(cursor,color){await makeColorEditor(cursor),expect(inline).toBeTruthy(),expect(inline._color).toBe(color)}function eventAtRatio(event,$item,ratios){$item.trigger($.Event(event,{clientX:$item.offset().left+ratios[0]*$item.width(),clientY:$item.offset().top+ratios[1]*$item.height()}))}describe("Inline editor - CSS",function(){beforeEach(function(){var mock=SpecRunnerUtils.createMockEditor(testContentCSS,"css");testDocument=mock.doc,testEditor=mock.editor}),afterEach(function(){SpecRunnerUtils.destroyMockEditor(testDocument),testEditor=null,testDocument=null,inline=null}),describe("simple open cases",function(){it("should show the correct color when opened on an #rrggbb color",async function(){await testOpenColor({line:1,ch:18},"#abcdef")}),it("should open when at the beginning of the color",async function(){await testOpenColor({line:1,ch:16},"#abcdef")}),it("should open when at the end of the color",async function(){await testOpenColor({line:1,ch:23},"#abcdef")}),it("should show the correct color when opened on an #rgb color",async function(){await testOpenColor({line:5,ch:18},"#abc")}),it("should show the correct color when opened on an rgb() color",async function(){await testOpenColor({line:9,ch:18},"rgb(100, 200, 150)")}),it("should show the correct color when opened on an rgba() color",async function(){await testOpenColor({line:13,ch:18},"rgba(100, 200, 150, 0.5)")}),it("should show the correct color when opened on an hsl() color",async function(){await testOpenColor({line:17,ch:18},"hsl(180, 50%, 50%)")}),it("should show the correct color when opened on an hsla() color",async function(){await testOpenColor({line:21,ch:18},"hsla(180, 50%, 50%, 0.5)")}),it("should show the correct color when opened on an uppercase hex color",async function(){await testOpenColor({line:33,ch:18},"#DEFCBA")}),it("should show the correct color when opened on a color in a shorthand property",async function(){await testOpenColor({line:41,ch:27},"#0f0f0f")}),it("should show the correct color when opened on an rgba() color with a leading period in the alpha field",async function(){await testOpenColor({line:45,ch:18},"rgba(100, 200, 150, .5)")}),it("should show the correct color when opened on an hsla() color with a leading period in the alpha field",async function(){await testOpenColor({line:49,ch:18},"hsla(180, 50%, 50%, .5)")}),it("should not open when not on a color",async function(){await makeColorEditor({line:1,ch:6}),expect(inline).toEqual(null)}),it("should not open when on an invalid color",async function(){await makeColorEditor({line:25,ch:18}),expect(inline).toEqual(null)}),it("should not open when on an hsl color with missing percent signs",async function(){await makeColorEditor({line:37,ch:18}),expect(inline).toEqual(null)}),it("should open on the second color when there are two colors in the same line",async function(){await testOpenColor({line:29,ch:48},"#ddeeff")}),it("should properly add/remove ref to document when opened/closed",async function(){spyOn(testDocument,"addRef").and.callThrough(),spyOn(testDocument,"releaseRef").and.callThrough(),await makeColorEditor({line:1,ch:18}),expect(testDocument.addRef).toHaveBeenCalled(),expect(testDocument.addRef.calls.count()).toBe(1),inline.onClosed(),expect(testDocument.releaseRef).toHaveBeenCalled(),expect(testDocument.releaseRef.calls.count()).toBe(1)})}),describe("update host document on edit in color editor",function(){it("should update host document when change is committed in color editor",async function(){await makeColorEditor({line:1,ch:18}),inline.colorEditor.setColorFromString("#c0c0c0"),expect(testDocument.getRange({line:1,ch:16},{line:1,ch:23})).toBe("#c0c0c0")}),it("should update correct range of host document with color format of different length",async function(){await makeColorEditor({line:1,ch:18}),inline.colorEditor.setColorFromString("rgb(20, 20, 20)"),expect(testDocument.getRange({line:1,ch:16},{line:1,ch:31})).toBe("rgb(20, 20, 20)")}),it("should not invalidate range when change is committed",async function(){await makeColorEditor({line:1,ch:18}),inline.colorEditor.setColorFromString("rgb(20, 20, 20)"),expect(inline.getCurrentRange()).toBeTruthy()}),it("should update correct range of host document when the in-editor color string is invalid",async function(){await makeColorEditor({line:1,ch:18}),testDocument.replaceRange("",{line:1,ch:22},{line:1,ch:24}),inline.colorEditor.setColorFromString("#c0c0c0"),expect(fixSel(inline.getCurrentRange())).toEql(fixSel({start:{line:1,ch:16},end:{line:1,ch:23}})),expect(testDocument.getRange({line:1,ch:16},{line:1,ch:23})).toBe("#c0c0c0")})}),describe("update color editor on edit in host editor",function(){it("should update when edit is made to color range in host editor",async function(){await makeColorEditor({line:1,ch:18}),spyOn(inline,"close"),testDocument.replaceRange("0",{line:1,ch:18},{line:1,ch:19}),expect(inline._color).toBe("#a0cdef"),expect(inline.colorEditor.getColor().toHexString().toLowerCase()).toBe("#a0cdef"),expect(inline.close).not.toHaveBeenCalled(),expect(fixSel(inline.getCurrentRange())).toEql(fixSel({start:{line:1,ch:16},end:{line:1,ch:23}}))}),it("should close itself if edit is made that destroys end textmark and leaves color invalid",async function(){await makeColorEditor({line:1,ch:18}),spyOn(inline,"close"),testDocument.replaceRange("rgb(255, 25",{line:1,ch:16},{line:1,ch:24}),expect(inline.close).toHaveBeenCalled()}),it("should maintain the range if the user deletes the last character of the color and types a new one",async function(){await makeColorEditor({line:1,ch:18}),spyOn(inline,"close"),testDocument.replaceRange("",{line:1,ch:22},{line:1,ch:23}),testDocument.replaceRange("0",{line:1,ch:22},{line:1,ch:22}),expect(inline._color).toBe("#abcde0"),expect(inline.close).not.toHaveBeenCalled(),expect(fixSel(inline.getCurrentRange())).toEql(fixSel({start:{line:1,ch:16},end:{line:1,ch:23}}))}),it("should not update the end textmark and the color shown to a shorter valid match if the marker still exists and the color becomes invalid",async function(){await makeColorEditor({line:1,ch:18}),testDocument.replaceRange("",{line:1,ch:22},{line:1,ch:23}),expect(inline._color).toBe("#abcdef"),expect(fixSel(inline.getCurrentRange())).toEql(fixSel({start:{line:1,ch:16},end:{line:1,ch:22}}))}),it("should not update the end textmark and the color shown to a shorter valid match if the marker no longer exists and the color becomes invalid",async function(){await makeColorEditor({line:1,ch:18}),testDocument.replaceRange("",{line:1,ch:22},{line:1,ch:24}),expect(inline._color).toBe("#abcdef"),expect(fixSel(inline.getCurrentRange())).toEql(fixSel({start:{line:1,ch:16},end:{line:1,ch:22}}))})}),describe("edit batching",function(){it("should combine multiple edits within the same inline editor into a single undo in the host editor",async function(){await makeColorEditor({line:1,ch:18}),inline.colorEditor.setColorFromString("#010101"),inline.colorEditor.setColorFromString("#123456"),inline.colorEditor.setColorFromString("#bdafe0"),testDocument._masterEditor._codeMirror.undo(),expect(testDocument.getRange({line:1,ch:16},{line:1,ch:23})).toBe("#abcdef")})})}),describe("Inline editor - HTML",function(){beforeEach(function(){var mock=SpecRunnerUtils.createMockEditor(testContentHTML,"html");testDocument=mock.doc,testEditor=mock.editor}),afterEach(function(){SpecRunnerUtils.destroyMockEditor(testDocument),testEditor=null,testDocument=null}),it("should open on a color in an HTML file",async function(){await testOpenColor({line:4,ch:30},"#dead01")})}),describe("Inline editor - used colors processing",function(){it("should trim the original array to the given length",function(){var inline,result=(new InlineColorEditor)._collateColors(["#abcdef","#fedcba","#aabbcc","#bbccdd"],2);expect(result).toEqual([{value:"#abcdef",count:1},{value:"#fedcba",count:1}])}),it("should remove duplicates from the original array and sort it by usage",function(){var inline,result=(new InlineColorEditor)._collateColors(["#abcdef","#fedcba","#123456","#FEDCBA","#123456","#123456","rgb(100, 100, 100)"],100);expect(result).toEqual([{value:"#123456",count:3},{value:"#fedcba",count:2},{value:"#abcdef",count:1},{value:"rgb(100, 100, 100)",count:1}])})}),describe("Color editor UI",function(){var colorEditor,defaultSwatches=[{value:"#abcdef",count:3},{value:"rgba(100, 200, 250, 0.5)",count:2}];function makeUI(initialColor,callback,swatches,hide){colorEditor=new ColorEditor($(window.document.body),initialColor,callback||function(){},swatches||defaultSwatches),!1!==hide&&colorEditor.getRootElement().css("display","none")}function checkNear(val1,val2,tolerance){expect(Math.abs(Number(val1)-Number(val2))<(tolerance||1)).toBe(!0)}function checkPercentageNear(pct,val){expect(checkNear(pct.substr(0,pct.length-1),val))}function getColorString(){return tinycolor(colorEditor.getColor()).getOriginalInput()}function testConvert(initialColor,mode,result){var buttonMap;makeUI(initialColor),colorEditor[{rgba:"$rgbaButton",hsla:"$hslButton",hex:"$hexButton"}[mode]].trigger("click"),expect(colorEditor.getColor().getOriginalInput()).toBe(result)}afterEach(function(){colorEditor.getRootElement().remove()}),describe("simple load/commit",function(){it("should load the initial color correctly",async function(){var colorStr="rgba(77, 122, 31, 0.5)",colorStrRgb="rgb(77, 122, 31)";makeUI(colorStr),expect(colorEditor.getColor().getOriginalInput()).toBe(colorStr),expect(colorEditor.$colorValue.val()).toBe(colorStr),expect(tinycolor.equals(colorEditor.$currentColor.css("background-color"),colorStr)).toBe(!0),checkNear(tinycolor(colorEditor.$selection.css("background-color")).toHsv().h,90,2),checkNear(tinycolor(colorEditor.$hueBase.css("background-color")).toHsv().h,90,2),expect(tinycolor.equals(colorEditor.$selectionBase.css("background-color"),colorStrRgb)).toBe(!0),await awaits(1),checkPercentageNear(colorEditor.$hueSelector[0].style.bottom,25),checkPercentageNear(colorEditor.$opacitySelector[0].style.bottom,50),checkPercentageNear(colorEditor.$selectionBase[0].style.left,74),checkPercentageNear(colorEditor.$selectionBase[0].style.bottom,47)}),it("should load a committed color correctly",async function(){var colorStr="rgba(77, 122, 31, 0.5)",colorStrRgb="rgb(77, 122, 31)";makeUI("#0a0a0a"),colorEditor.setColorFromString(colorStr),expect(colorEditor.getColor().getOriginalInput()).toBe(colorStr),expect(colorEditor.$colorValue.val()).toBe(colorStr),expect(tinycolor.equals(colorEditor.$currentColor.css("background-color"),colorStr)).toBe(!0),checkNear(tinycolor(colorEditor.$selection.css("background-color")).toHsv().h,tinycolor(colorStr).toHsv().h),checkNear(tinycolor(colorEditor.$hueBase.css("background-color")).toHsv().h,tinycolor(colorStr).toHsv().h),expect(tinycolor.equals(colorEditor.$selectionBase.css("background-color"),colorStrRgb)).toBe(!0),await awaits(1),checkPercentageNear(colorEditor.$hueSelector[0].style.bottom,25),checkPercentageNear(colorEditor.$opacitySelector[0].style.bottom,50),checkPercentageNear(colorEditor.$selectionBase[0].style.left,74),checkPercentageNear(colorEditor.$selectionBase[0].style.bottom,47)}),it("should call the callback when a new color is committed",function(){var lastColor;makeUI("rgba(100, 100, 100, 0.5)",function(color){lastColor=color}),colorEditor.setColorFromString("#a0a0a0"),expect(lastColor).toBe("#a0a0a0")})}),describe("conversions in lower case",function(){it("should convert a hex color to rgb when mode button clicked",function(){testConvert("#112233","rgba","rgb(17, 34, 51)")}),it("should convert a hex color to hsl when mode button clicked",function(){testConvert("#112233","hsla","hsl(210, 50%, 13%)")}),it("should convert an rgb color to hex when mode button clicked",function(){testConvert("rgb(15, 160, 21)","hex","#0fa015")}),it("should convert an rgba color to hex (dropping alpha) when mode button clicked",function(){testConvert("rgba(15, 160, 21, 0.5)","hex","#0fa015")}),it("should convert an rgb color to hsl when mode button clicked",function(){testConvert("rgb(15, 160, 21)","hsla","hsl(122, 83%, 34%)")}),it("should convert an rgba color to hsla when mode button clicked",function(){testConvert("rgba(15, 160, 21, 0.3)","hsla","hsla(122, 83%, 34%, 0.3)")}),it("should convert an hsl color to hex when mode button clicked",function(){testConvert("hsl(152, 12%, 22%)","hex","#313f39")}),it("should convert an hsla color to hex (dropping alpha) when mode button clicked",function(){testConvert("hsla(152, 12%, 22%, 0.7)","hex","#313f39")}),it("should convert an hsl color to rgb when mode button clicked",function(){testConvert("hsl(152, 12%, 22%)","rgba","rgb(49, 63, 57)")}),it("should convert an hsla color to rgba when mode button clicked",function(){testConvert("hsla(152, 12%, 22%, 0.7)","rgba","rgba(49, 63, 57, 0.7)")}),it("should convert a mixed case hsla color to rgba when mode button clicked",function(){testConvert("HsLa(152, 12%, 22%, 0.7)","rgba","rgba(49, 63, 57, 0.7)")}),it("should convert a mixed case hex color to rgb when mode button clicked",function(){testConvert("#fFfFfF","rgba","rgb(255, 255, 255)")})}),describe("conversions in UPPER CASE",function(){beforeEach(function(){PreferencesManager.set("uppercaseColors",!0)}),afterEach(function(){PreferencesManager.set("uppercaseColors",!1)}),it("should use uppercase colors",function(){expect(PreferencesManager.get("uppercaseColors")).toBe(!0)}),it("should convert a hex color to rgb in uppercase when mode button clicked",function(){testConvert("#112233","rgba","RGB(17, 34, 51)")}),it("should convert a hex color to hsl in uppercase when mode button clicked",function(){testConvert("#112233","hsla","HSL(210, 50%, 13%)")}),it("should convert an rgb color to hex in uppercase when mode button clicked",function(){testConvert("RGB(15, 160, 21)","hex","#0FA015")}),it("should convert an rgba color to hex (dropping alpha) in uppercase when mode button clicked",function(){testConvert("RGBA(15, 160, 21, 0.5)","hex","#0FA015")}),it("should convert an rgb color to hsl in uppercase when mode button clicked",function(){testConvert("RGB(15, 160, 21)","hsla","HSL(122, 83%, 34%)")}),it("should convert an rgba color to hsla in uppercase when mode button clicked",function(){testConvert("RGBA(15, 160, 21, 0.3)","hsla","HSLA(122, 83%, 34%, 0.3)")}),it("should convert an hsl color to hex in uppercase when mode button clicked",function(){testConvert("HSL(152, 12%, 22%)","hex","#313F39")}),it("should convert an hsla color to hex (dropping alpha) in uppercase when mode button clicked",function(){testConvert("HSLA(152, 12%, 22%, 0.7)","hex","#313F39")}),it("should convert an hsl color to rgb in uppercase when mode button clicked",function(){testConvert("HSL(152, 12%, 22%)","rgba","RGB(49, 63, 57)")}),it("should convert an hsla color to rgba in uppercase when mode button clicked",function(){testConvert("HSLA(152, 12%, 22%, 0.7)","rgba","RGBA(49, 63, 57, 0.7)")}),it("should convert a mixed case hsla color to rgba in uppercase when mode button clicked",function(){testConvert("HsLa(152, 12%, 22%, 0.7)","rgba","RGBA(49, 63, 57, 0.7)")}),it("should convert a mixed case hex color to rgb in uppercase when mode button clicked",function(){testConvert("#fFfFfF","rgba","RGB(255, 255, 255)")})}),describe("parameter editing with mouse",function(){function testMousedown(opts){makeUI("#0000ff"),eventAtRatio("mousedown",colorEditor[opts.item],opts.clickAt),checkNear(tinycolor(colorEditor.getColor()).toHsv()[opts.param],opts.expected,opts.tolerance),colorEditor[opts.item].trigger("mouseup")}function testDrag(opts){makeUI("#0000ff"),eventAtRatio("mousedown",colorEditor[opts.item],opts.clickAt),eventAtRatio("mousemove",colorEditor[opts.item],opts.dragTo),checkNear(tinycolor(colorEditor.getColor()).toHsv()[opts.param],opts.expected,opts.tolerance),colorEditor[opts.item].trigger("mouseup")}it("should set saturation on mousedown",function(){testMousedown({item:"$selection",clickAt:[.25,0],param:"s",expected:.25,tolerance:.1})}),it("should set saturation on drag",function(){testDrag({item:"$selection",clickAt:[.25,0],dragTo:[.75,0],param:"s",expected:.75,tolerance:.1})}),it("should clip saturation to min value",function(){testDrag({item:"$selection",clickAt:[.25,0],dragTo:[-.25,0],param:"s",expected:0,tolerance:.1})}),it("should clip saturation to max value",function(){testDrag({item:"$selection",clickAt:[.25,0],dragTo:[1.25,0],param:"s",expected:1,tolerance:.1})}),it("should set value on mousedown",function(){testMousedown({item:"$selection",clickAt:[1,.75],param:"v",expected:.25,tolerance:.1})}),it("should set value on drag",function(){testDrag({item:"$selection",clickAt:[1,.75],dragTo:[1,.25],param:"v",expected:.75,tolerance:.1})}),it("should clip value to min value",function(){testDrag({item:"$selection",clickAt:[1,.75],dragTo:[1,1.25],param:"v",expected:0,tolerance:.1})}),it("should clip value to max value",function(){testDrag({item:"$selection",clickAt:[1,.75],dragTo:[1,-.25],param:"v",expected:1,tolerance:.1})}),it("should set hue on mousedown",function(){testMousedown({item:"$hueSlider",clickAt:[0,.75],param:"h",expected:90,tolerance:1})}),it("should set hue on drag",function(){testDrag({item:"$hueSlider",clickAt:[0,.75],dragTo:[0,.25],param:"h",expected:270,tolerance:1})}),it("should clip hue to min value",function(){testDrag({item:"$hueSlider",clickAt:[0,.75],dragTo:[0,1.25],param:"h",expected:0,tolerance:1})}),it("should clip hue to max value",function(){testDrag({item:"$hueSlider",clickAt:[0,.75],dragTo:[0,-.25],param:"h",expected:0,tolerance:1})}),it("should set opacity on mousedown",function(){testMousedown({item:"$opacitySlider",clickAt:[0,.75],param:"a",expected:.25,tolerance:.1})}),it("should set opacity on drag",function(){testDrag({item:"$opacitySlider",clickAt:[0,.75],dragTo:[0,.25],param:"a",expected:.75,tolerance:.1})}),it("should clip opacity to min value",function(){testDrag({item:"$opacitySlider",clickAt:[0,.75],dragTo:[0,1.25],param:"a",expected:0,tolerance:.1})}),it("should clip opacity to max value",function(){testDrag({item:"$opacitySlider",clickAt:[0,.75],dragTo:[0,-.25],param:"a",expected:1,tolerance:.1})})}),describe("parameter editing with keyboard",function(){function makeKeyEvent(opts){return $.Event("keydown",{keyCode:opts.key,shiftKey:!!opts.shift})}function testKey(opts){function getParam(){if(opts.exact){var result=colorEditor._hsv[opts.param];return"string"==typeof result&&"%"===result.charAt(result.length-1)&&(result=Number(result.substr(0,result.length-1))),result}return tinycolor(colorEditor.getColor()).toHsv()[opts.param]}makeUI(opts.color||"hsla(50, 25%, 50%, 0.5)");var before=getParam(),after;colorEditor[opts.item].trigger(makeKeyEvent(opts)),checkNear(getParam(),before+opts.delta,opts.tolerance)}function testPreventDefault(opts){var event,$item;makeUI(opts.color||"hsla(50, 25%, 50%, 0.5)",function(){},defaultSwatches,!1),($item=colorEditor[opts.item]).focus(),opts.selection&&$item[0].setSelectionRange(opts.selection[0],opts.selection[1]),event=makeKeyEvent(opts),$item.trigger(event),expect(event.isDefaultPrevented()).toBe(opts.expected)}it("should increase saturation by 1.5% on right arrow",function(){testKey({item:"$selectionBase",key:KeyEvent.DOM_VK_RIGHT,param:"s",delta:.015,tolerance:.01})}),it("should clip max saturation on right arrow",function(){testKey({color:"hsla(50, 100%, 50%, 0.5)",item:"$selectionBase",key:KeyEvent.DOM_VK_RIGHT,param:"s",delta:0,tolerance:.01})}),it("should increase saturation by 7.5% on shift right arrow",function(){testKey({item:"$selectionBase",key:KeyEvent.DOM_VK_RIGHT,shift:!0,param:"s",delta:.075,tolerance:.01})}),it("should clip max saturation on shift right arrow",function(){testKey({color:"hsla(50, 100%, 50%, 0.5)",item:"$selectionBase",key:KeyEvent.DOM_VK_RIGHT,shift:!0,param:"s",delta:0,tolerance:.01})}),it("should decrease saturation by 1.5% on left arrow",function(){testKey({item:"$selectionBase",key:KeyEvent.DOM_VK_LEFT,param:"s",delta:-.015,tolerance:.01})}),it("should clip min saturation on left arrow",function(){testKey({color:"hsla(50, 0%, 50%, 0.5)",item:"$selectionBase",key:KeyEvent.DOM_VK_LEFT,param:"s",delta:0,tolerance:.01})}),it("should decrease saturation by 7.5% on shift left arrow",function(){testKey({item:"$selectionBase",key:KeyEvent.DOM_VK_LEFT,shift:!0,param:"s",delta:-.075,tolerance:.01})}),it("should clip min saturation on shift left arrow",function(){testKey({color:"hsla(50, 0%, 50%, 0.5)",item:"$selectionBase",key:KeyEvent.DOM_VK_LEFT,shift:!0,param:"s",delta:0,tolerance:.01})}),it("should increase value by 1.5% on up arrow",function(){testKey({item:"$selectionBase",key:KeyEvent.DOM_VK_UP,param:"v",delta:.015,tolerance:.01})}),it("should clip max value on up arrow",function(){testKey({color:"hsla(50, 25%, 100%, 0.5)",item:"$selectionBase",key:KeyEvent.DOM_VK_UP,param:"v",delta:0,tolerance:.01})}),it("should increase value by 7.5% on shift up arrow",function(){testKey({item:"$selectionBase",key:KeyEvent.DOM_VK_UP,shift:!0,param:"v",delta:.075,tolerance:.01})}),it("should clip max value on shift up arrow",function(){testKey({color:"hsla(50, 25%, 100%, 0.5)",item:"$selectionBase",key:KeyEvent.DOM_VK_UP,shift:!0,param:"v",delta:0,tolerance:.01})}),it("should decrease value by 1.5% on down arrow",function(){testKey({item:"$selectionBase",key:KeyEvent.DOM_VK_DOWN,param:"v",delta:-.015,tolerance:.01})}),it("should clip min value on down arrow",function(){testKey({color:"hsla(50, 25%, 0%, 0.5)",item:"$selectionBase",key:KeyEvent.DOM_VK_DOWN,param:"v",delta:0,tolerance:.01})}),it("should decrease value by 7.5% on shift down arrow",function(){testKey({item:"$selectionBase",key:KeyEvent.DOM_VK_DOWN,shift:!0,param:"v",delta:-.075,tolerance:.01})}),it("should clip min value on shift down arrow",function(){testKey({color:"hsla(50, 25%, 0%, 0.5)",item:"$selectionBase",key:KeyEvent.DOM_VK_DOWN,shift:!0,param:"v",delta:0,tolerance:.01})}),it("should increase hue by 3.6 on up arrow",function(){testKey({item:"$hueBase",key:KeyEvent.DOM_VK_UP,param:"h",delta:3.6,tolerance:1})}),it("should wrap around max hue on up arrow",function(){testKey({color:"hsla(359, 25%, 50%, 0.5)",item:"$hueBase",key:KeyEvent.DOM_VK_UP,param:"h",delta:-355.4,tolerance:1})}),it("should increase hue by 18 on shift up arrow",function(){testKey({item:"$hueBase",key:KeyEvent.DOM_VK_UP,shift:!0,param:"h",delta:18,tolerance:1})}),it("should wrap around max hue on shift up arrow",function(){testKey({color:"hsla(359, 25%, 50%, 0.5)",item:"$hueBase",key:KeyEvent.DOM_VK_UP,shift:!0,param:"h",delta:-341,tolerance:1})}),it("should decrease hue by 3.6 on down arrow",function(){testKey({item:"$hueBase",key:KeyEvent.DOM_VK_DOWN,param:"h",delta:-3.6,tolerance:1})}),it("should wrap around min hue on down arrow",function(){testKey({color:"hsla(0, 25%, 50%, 0.5)",item:"$hueBase",key:KeyEvent.DOM_VK_DOWN,param:"h",delta:356.4,tolerance:1})}),it("should decrease hue by 18 on shift down arrow",function(){testKey({item:"$hueBase",key:KeyEvent.DOM_VK_DOWN,shift:!0,param:"h",delta:-18,tolerance:1})}),it("should wrap around min hue on shift down arrow",function(){testKey({color:"hsla(0, 25%, 50%, 0.5)",item:"$hueBase",key:KeyEvent.DOM_VK_DOWN,shift:!0,param:"h",delta:342,tolerance:1})}),it("should increase opacity by 0.01 on up arrow",function(){testKey({item:"$opacitySelector",key:KeyEvent.DOM_VK_UP,param:"a",delta:.01,tolerance:.005})}),it("should clip max opacity on up arrow",function(){testKey({color:"hsla(90, 25%, 50%, 1.0)",item:"$opacitySelector",key:KeyEvent.DOM_VK_UP,param:"a",delta:0,tolerance:.005})}),it("should increase opacity by 0.05 on shift up arrow",function(){testKey({item:"$opacitySelector",key:KeyEvent.DOM_VK_UP,shift:!0,param:"a",delta:.05,tolerance:.005})}),it("should clip max opacity on shift up arrow",function(){testKey({color:"hsla(90, 25%, 50%, 1.0)",item:"$opacitySelector",key:KeyEvent.DOM_VK_UP,shift:!0,param:"a",delta:0,tolerance:.005})}),it("should decrease opacity by 0.01 on down arrow",function(){testKey({item:"$opacitySelector",key:KeyEvent.DOM_VK_DOWN,param:"a",delta:-.01,tolerance:.005})}),it("should clip min opacity on down arrow",function(){testKey({color:"hsla(90, 25%, 50%, 0)",item:"$opacitySelector",key:KeyEvent.DOM_VK_DOWN,param:"a",delta:0,tolerance:.005})}),it("should decrease opacity by 0.05 on shift down arrow",function(){testKey({item:"$opacitySelector",key:KeyEvent.DOM_VK_DOWN,shift:!0,param:"a",delta:-.05,tolerance:.005})}),it("should clip min opacity on shift down arrow",function(){testKey({color:"hsla(90, 25%, 50%, 0)",item:"$opacitySelector",key:KeyEvent.DOM_VK_DOWN,shift:!0,param:"a",delta:0,tolerance:.005})}),it("should increase hue by 18 on shift up arrow even if saturation is 0",function(){testKey({color:"hsl(180, 0, 0)",item:"$hueBase",key:KeyEvent.DOM_VK_UP,shift:!0,param:"h",delta:18,tolerance:1,exact:!0})}),it("should increase hue by 18 on shift up arrow for a near-gray hex color",function(){testKey({color:"#5c5b56",item:"$hueBase",key:KeyEvent.DOM_VK_UP,shift:!0,param:"h",delta:18,tolerance:1,exact:!0})}),it("should not change value when hue changes",function(){testKey({color:"#8e8247",item:"$hueBase",key:KeyEvent.DOM_VK_UP,shift:!0,param:"v",delta:0,tolerance:.01,exact:!0})}),it("should prevent default on the key event for an unhandled arrow key on non-text-field",function(){testPreventDefault({color:"#8e8247",item:"$hueBase",key:KeyEvent.DOM_VK_RIGHT,expected:!0})}),it("should prevent default on left arrow at the start of the text field",function(){testPreventDefault({color:"#8e8247",item:"$colorValue",selection:[0,0],key:KeyEvent.DOM_VK_LEFT,expected:!0})}),it("should not prevent default on left arrow in the middle of the text field",function(){testPreventDefault({color:"#8e8247",item:"$colorValue",selection:[3,3],key:KeyEvent.DOM_VK_LEFT,expected:!1})}),it("should not prevent default on left arrow at the end of the text field",function(){testPreventDefault({color:"#8e8247",item:"$colorValue",selection:[7,7],key:KeyEvent.DOM_VK_LEFT,expected:!1})}),it("should not prevent default on left arrow with a range selection",function(){testPreventDefault({color:"#8e8247",item:"$colorValue",selection:[0,7],key:KeyEvent.DOM_VK_LEFT,expected:!1})}),it("should not prevent default on right arrow at the start of the text field",function(){testPreventDefault({color:"#8e8247",item:"$colorValue",selection:[0,0],key:KeyEvent.DOM_VK_RIGHT,expected:!1})}),it("should not prevent default on right arrow in the middle of the text field",function(){testPreventDefault({color:"#8e8247",item:"$colorValue",selection:[3,3],key:KeyEvent.DOM_VK_RIGHT,expected:!1})}),it("should prevent default on right arrow at the end of the text field",function(){testPreventDefault({color:"#8e8247",item:"$colorValue",selection:[7,7],key:KeyEvent.DOM_VK_RIGHT,expected:!0})}),it("should not prevent default on right arrow with a range selection",function(){testPreventDefault({color:"#8e8247",item:"$colorValue",selection:[0,7],key:KeyEvent.DOM_VK_RIGHT,expected:!1})})}),describe("color swatches and original color",function(){it("should restore to original color when clicked on",function(){makeUI("#abcdef"),colorEditor.setColorFromString("#0000ff"),colorEditor.$originalColor.trigger("click"),expect(tinycolor(colorEditor.getColor()).toHexString()).toBe("#abcdef")}),it("should create swatches",function(){makeUI("#abcdef"),expect($(".swatch").length).toBe(2)}),it("should set color to a swatch when clicked on",function(){makeUI("#fedcba"),$($(".swatch")[0]).trigger("click"),expect(tinycolor(colorEditor.getColor()).toHexString()).toBe("#abcdef")})}),describe("input text field syncing",function(){it("should commit valid changes made in the input field on the input event",function(){makeUI("#abcdef"),colorEditor.$colorValue.val("#fedcba"),colorEditor.$colorValue.trigger("input"),expect(tinycolor(colorEditor.getColor()).toHexString()).toBe("#fedcba")}),it("should commit valid changes made in the input field on the change event",function(){makeUI("#abcdef"),colorEditor.$colorValue.val("#fedcba"),colorEditor.$colorValue.trigger("change"),expect(tinycolor(colorEditor.getColor()).toHexString()).toBe("#fedcba")}),it("should not commit changes on the input event while the value is invalid, but should keep them in the text field",function(){makeUI("#abcdef"),colorEditor.$colorValue.val("rgb(0, 0, 0"),colorEditor.$colorValue.trigger("input"),expect(tinycolor(colorEditor.getColor()).toHexString()).toBe("#abcdef"),expect(colorEditor.$colorValue.val()).toBe("rgb(0, 0, 0")}),it("should revert to the previous value on the change event while the value is invalid",function(){makeUI("#abcdef"),colorEditor.$colorValue.val("rgb(0, 0, 0"),colorEditor.$colorValue.trigger("change"),expect(tinycolor(colorEditor.getColor()).toHexString()).toBe("#abcdef"),expect(colorEditor.$colorValue.val()).toBe("#abcdef")}),it("should convert percentage RGB values to normal values",function(){makeUI("#abcdef"),expect(colorEditor._convertToNormalRGB("rgb(25%, 50%, 75%)")).toBe("rgb(64, 128, 191)")}),it("should normalize a string to match tinycolor's format",function(){makeUI("#abcdef"),expect(colorEditor._normalizeColorString("rgb(10,20,   30)")).toBe("rgb(10, 20, 30)")})}),describe("undo/redo",function(){function triggerCtrlKey($element,key,shift){var ctrlKeyProperty,eventProps={keyCode:key,shiftKey:shift};eventProps["win"===brackets.platform?"ctrlKey":"metaKey"]=!0,$element.trigger($.Event("keydown",eventProps))}it("should undo when Ctrl-Z is pressed on a focused element in the color editor",async function(){makeUI("#abcdef"),colorEditor.setColorFromString("#a0a0a0"),colorEditor.$hueBase.focus(),triggerCtrlKey(colorEditor.$hueBase,KeyEvent.DOM_VK_Z),expect(getColorString()).toBe("#abcdef")}),it("should redo when Ctrl-Shift-Z is pressed on a focused element in the color editor",async function(){makeUI("#abcdef"),colorEditor._commitColor("#a0a0a0",!0),colorEditor.$hueBase.focus(),triggerCtrlKey(colorEditor.$hueBase,KeyEvent.DOM_VK_Z),triggerCtrlKey(colorEditor.$hueBase,KeyEvent.DOM_VK_Z,!0),expect(getColorString()).toBe("#a0a0a0")}),it("should redo when Ctrl-Y is pressed on a focused element in the color editor",async function(){makeUI("#abcdef"),colorEditor._commitColor("#a0a0a0",!0),colorEditor.$hueBase.focus(),triggerCtrlKey(colorEditor.$hueBase,KeyEvent.DOM_VK_Z),triggerCtrlKey(colorEditor.$hueBase,KeyEvent.DOM_VK_Y),expect(getColorString()).toBe("#a0a0a0")}),it("should redo when Ctrl-Y is pressed after two Ctrl-Zs (only one Ctrl-Z should take effect)",async function(){makeUI("#abcdef"),colorEditor._commitColor("#a0a0a0",!0),colorEditor.$hueBase.focus(),triggerCtrlKey(colorEditor.$hueBase,KeyEvent.DOM_VK_Z),triggerCtrlKey(colorEditor.$hueBase,KeyEvent.DOM_VK_Z),triggerCtrlKey(colorEditor.$hueBase,KeyEvent.DOM_VK_Y),expect(getColorString()).toBe("#a0a0a0")}),it("should undo when Ctrl-Z is pressed after two Ctrl-Ys (only one Ctrl-Y should take effect)",async function(){makeUI("#abcdef"),colorEditor._commitColor("#a0a0a0",!0),colorEditor.$hueBase.focus(),triggerCtrlKey(colorEditor.$hueBase,KeyEvent.DOM_VK_Z),triggerCtrlKey(colorEditor.$hueBase,KeyEvent.DOM_VK_Y),triggerCtrlKey(colorEditor.$hueBase,KeyEvent.DOM_VK_Y),triggerCtrlKey(colorEditor.$hueBase,KeyEvent.DOM_VK_Z),expect(getColorString()).toBe("#abcdef")}),it("should undo an rgba conversion",async function(){makeUI("#abcdef"),colorEditor.$rgbaButton.click(),triggerCtrlKey(colorEditor.$rgbaButton,KeyEvent.DOM_VK_Z),expect(getColorString()).toBe("#abcdef")}),it("should undo an hsla conversion",async function(){makeUI("#abcdef"),colorEditor.$hslButton.click(),triggerCtrlKey(colorEditor.$hslButton,KeyEvent.DOM_VK_Z),expect(getColorString()).toBe("#abcdef")}),it("should undo a hex conversion",async function(){makeUI("rgba(12, 32, 65, 0.2)"),colorEditor.$hexButton.trigger("click"),triggerCtrlKey(colorEditor.$hexButton,KeyEvent.DOM_VK_Z),expect(getColorString()).toBe("rgba(12, 32, 65, 0.2)")}),it("should undo a saturation/value change",async function(){makeUI("rgba(100, 150, 200, 0.3)"),eventAtRatio("mousedown",colorEditor.$selectionBase,[.5,.5]),triggerCtrlKey(colorEditor.$selectionBase,KeyEvent.DOM_VK_Z),expect(getColorString()).toBe("rgba(100, 150, 200, 0.3)"),colorEditor.$selectionBase.trigger("mouseup")}),it("should undo a hue change",async function(){makeUI("rgba(100, 150, 200, 0.3)"),eventAtRatio("mousedown",colorEditor.$hueBase,[0,.5]),triggerCtrlKey(colorEditor.$hueBase,KeyEvent.DOM_VK_Z),expect(getColorString()).toBe("rgba(100, 150, 200, 0.3)"),colorEditor.$hueBase.trigger("mouseup")}),it("should undo an opacity change",async function(){makeUI("rgba(100, 150, 200, 0.3)"),eventAtRatio("mousedown",colorEditor.$opacitySelector,[0,.5]),triggerCtrlKey(colorEditor.$opacitySelector,KeyEvent.DOM_VK_Z),expect(getColorString()).toBe("rgba(100, 150, 200, 0.3)"),colorEditor.$opacitySelector.trigger("mouseup")}),it("should undo a text field change",async function(){makeUI("rgba(100, 150, 200, 0.3)"),colorEditor.$colorValue.val("rgba(50, 50, 50, 0.9)"),triggerCtrlKey(colorEditor.$colorValue,KeyEvent.DOM_VK_Z),expect(getColorString()).toBe("rgba(100, 150, 200, 0.3)")}),it("should undo a swatch click",async function(){makeUI("rgba(100, 150, 200, 0.3)");var $swatch=$(colorEditor.$swatches.find("li")[0]);$swatch.trigger("click"),triggerCtrlKey($swatch,KeyEvent.DOM_VK_Z),expect(getColorString()).toBe("rgba(100, 150, 200, 0.3)")})})})})});
//# sourceMappingURL=unittests.js.map
