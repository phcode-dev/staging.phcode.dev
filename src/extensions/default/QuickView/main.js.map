{"version":3,"sources":["extensions/default/QuickView/main.js"],"names":["define","require","exports","module","ColorUtils","brackets","getModule","CommandManager","Commands","CSSUtils","EditorManager","ExtensionUtils","FileUtils","FileSystem","Menus","PreferencesManager","LanguageManager","Strings","ViewUtils","TokenUtils","PathUtils","previewContainerHTML","enabled","prefs","$previewContainer","$previewContent","lastMousePos","animationRequest","extensionlessImagePreview","CMD_ENABLE_QUICK_VIEW","HOVER_DELAY","POINTER_HEIGHT","POPOVER_HORZ_MARGIN","styleLanguages","validProtocols","getExtensionPrefs","definePreference","description","DESCRIPTION_QUICK_VIEW_ENABLED","DESCRIPTION_EXTENSION_LESS_IMAGE_PREVIEW","popoverState","hidePreview","visible","marker","clear","empty","hide","removeClass","window","clearTimeout","hoverTimer","positionPreview","editor","xpos","ypos","ybot","previewWidth","outerWidth","top","outerHeight","left","elementRect","height","width","clip","getElementClipSize","$","getRootElement","right","addClass","css","divContainsMouse","$div","mousePos","offset","clientX","clientY","colorAndGradientPreviewProvider","pos","token","line","gradientRegEx","colorRegEx","RegExp","COLOR_REGEX","mode","getModeAt","_codeMirror","isStyleSheet","indexOf","areParensBalanced","str","i","nestLevel","len","reduceStyleSheetForRegExParsing","length","execGradientMatch","parensBalanced","gradientMatch","exec","prefix","colorValue","match","execColorMatch","colorMatch","ignoreNamedColors","hyphenOnMatchBoundary","beforeIndex","afterIndex","index","isNamedColor","test","undefined","name","splitStyleProperty","property","recurse","array","result","trim","join","push","isGradientColorStop","args","hasLengthInPixels","ensureHexFormat","replace","normalizeGradientExpressionForQuickview","expression","paramStart","paramEnd","lastIndexOf","parameters","params","substring","lowerBound","upperBound","thisSize","split","parseFloat","Math","max","min","abs","cm","ch","previewCSS","preview","startPos","endPos","startCoords","charCoords","xPos","start","end","content","ytop","bottom","_previewCSS","imagePreviewProvider","urlRegEx","tokenString","urlMatch","sPos","ePos","type","string","docPath","document","file","fullPath","imgPath","parsed","parseUrl","hasProtocol","protocol","toLowerCase","ext","filenameExtension","language","getLanguageForExtension","id","getId","isImage","loadFromDisk","path","normalize","getDirectoryPath","imgPreview","coord","showHandler","showHandlerWithImageURL","imageURL","img","find","src","on","append","this","naturalWidth","naturalHeight","UNIT_PIXELS","show","e","preventDefault","_imageToDataURI","cb","contentType","endsWith","read","encoding","fs","BYTE_ARRAY_ENCODING","err","stat","base64","btoa","Uint8Array","reduce","data","byte","String","fromCharCode","dataURL","onShow","imageFile","getFileForPath","_imgPath","queryPreviewProviders","getLine","popover","getHoveredEditor","fullEditor","getCurrentFullEditor","inlines","getInlineWidgets","$inlineEditorRoot","$otherDiv","$htmlContent","showPreview","coordsChar","getTokenAt","extend","markText","className","processMouseMove","showImmediately","posWithinRange","setTimeout","handleMouseMove","event","which","requestAnimationFrame","onActiveEditorChange","current","previous","off","updateMenuItemCheckmark","get","setChecked","setExtensionlessImagePreview","_extensionlessImagePreview","doNotSave","set","save","setEnabled","_enabled","editorHolder","addEventListener","getActiveEditor","removeEventListener","toggleEnableQuickView","_forceShow","floor","appendTo","loadStyleSheet","register","getMenu","AppMenuBar","VIEW_MENU","addMenuItem","AFTER","VIEW_TOGGLE_INSPECTION","_queryPreviewProviders"],"mappings":"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","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2013 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/*jslint regexp: true */\n\ndefine(function (require, exports, module) {\n\n\n    // Brackets modules\n    var ColorUtils          = brackets.getModule(\"utils/ColorUtils\"),\n        CommandManager      = brackets.getModule(\"command/CommandManager\"),\n        Commands            = brackets.getModule(\"command/Commands\"),\n        CSSUtils            = brackets.getModule(\"language/CSSUtils\"),\n        EditorManager       = brackets.getModule(\"editor/EditorManager\"),\n        ExtensionUtils      = brackets.getModule(\"utils/ExtensionUtils\"),\n        FileUtils           = brackets.getModule(\"file/FileUtils\"),\n        FileSystem          = brackets.getModule(\"filesystem/FileSystem\"),\n        Menus               = brackets.getModule(\"command/Menus\"),\n        PreferencesManager  = brackets.getModule(\"preferences/PreferencesManager\"),\n        LanguageManager     = brackets.getModule(\"language/LanguageManager\"),\n        Strings             = brackets.getModule(\"strings\"),\n        ViewUtils           = brackets.getModule(\"utils/ViewUtils\"),\n        TokenUtils          = brackets.getModule(\"utils/TokenUtils\"),\n        PathUtils           = brackets.getModule(\"thirdparty/path-utils/path-utils\");\n\n    var previewContainerHTML       = require(\"text!QuickViewTemplate.html\");\n\n    var enabled,                             // Only show preview if true\n        prefs                      = null,   // Preferences\n        $previewContainer,                   // Preview container\n        $previewContent,                     // Preview content holder\n        lastMousePos,                        // Last mouse position\n        animationRequest,                    // Request for animation frame\n        extensionlessImagePreview;           // Whether to try and preview extensionless URLs\n\n    // Constants\n    var CMD_ENABLE_QUICK_VIEW       = \"view.enableQuickView\",\n        HOVER_DELAY                 = 350,  // Time (ms) mouse must remain over a provider's matched text before popover appears\n        POINTER_HEIGHT              = 15,   // Pointer height, used to shift popover above pointer (plus a little bit of space)\n        POPOVER_HORZ_MARGIN         =  5;   // Horizontal margin\n\n    var styleLanguages = [\"css\", \"text/x-less\", \"sass\", \"text/x-scss\", \"stylus\"];\n\n    // List of protocols which we will support for image preview urls\n    var validProtocols = [\"data:\", \"http:\", \"https:\", \"ftp:\", \"file:\"];\n\n    prefs = PreferencesManager.getExtensionPrefs(\"quickview\");\n    prefs.definePreference(\"enabled\", \"boolean\", true, {\n        description: Strings.DESCRIPTION_QUICK_VIEW_ENABLED\n    });\n\n    // Whether or not to try and show image previews for URLs missing extensions\n    // (e.g., https://avatars2.githubusercontent.com/u/476009?v=3&s=200)\n    prefs.definePreference(\"extensionlessImagePreview\", \"boolean\", true, {\n        description: Strings.DESCRIPTION_EXTENSION_LESS_IMAGE_PREVIEW\n    });\n\n    /**\n     * There are three states for this var:\n     * 1. If null, there is no provider result for the given mouse position.\n     * 2. If non-null, and visible==true, there is a popover currently showing.\n     * 3. If non-null, but visible==false, we're waiting for HOVER_DELAY, which\n     *    is tracked by hoverTimer. The state changes to visible==true as soon as\n     *    there is a provider. If the mouse moves before then, timer is restarted.\n     *\n     * @type {{\n     *      visible: boolean,\n     *      editor: !Editor,\n     *      hoverTimer: number,             - setTimeout() token\n     *      start: !{line, ch},             - start of matched text range\n     *      end: !{line, ch},               - end of matched text range\n     *      content: !string,               - HTML content to display in popover\n     *      onShow: ?function():void,       - called once popover content added to the DOM (may never be called)\n     *        - if specified, must call positionPreview()\n     *      xpos: number,                   - x of center of popover\n     *      ytop: number,                   - y of top of matched text (when popover placed above text, normally)\n     *      ybot: number,                   - y of bottom of matched text (when popover moved below text, avoiding window top)\n     *      marker: ?CodeMirror.TextMarker  - only set once visible==true\n     * }}\n     */\n    var popoverState = null;\n\n\n\n    // Popover widget management ----------------------------------------------\n\n    /**\n     * Cancels whatever popoverState was currently pending and sets it back to null. If the popover was visible,\n     * hides it; if the popover was invisible and still pending, cancels hoverTimer so it will never be shown.\n     */\n    function hidePreview() {\n        if (!popoverState) {\n            return;\n        }\n\n        if (popoverState.visible) {\n            popoverState.marker.clear();\n\n            $previewContent.empty();\n            $previewContainer.hide();\n            $previewContainer.removeClass(\"active\");\n        } else {\n            window.clearTimeout(popoverState.hoverTimer);\n        }\n        popoverState = null;\n    }\n\n    function positionPreview(editor, xpos, ypos, ybot) {\n        var previewWidth  = $previewContainer.outerWidth(),\n            top           = ypos - $previewContainer.outerHeight() - POINTER_HEIGHT,\n            left          = xpos - previewWidth / 2,\n            elementRect = {\n                top: top,\n                left: left - POPOVER_HORZ_MARGIN,\n                height: $previewContainer.outerHeight() + POINTER_HEIGHT,\n                width: previewWidth + 2 * POPOVER_HORZ_MARGIN\n            },\n            clip = ViewUtils.getElementClipSize($(editor.getRootElement()), elementRect);\n\n        // Prevent horizontal clipping\n        if (clip.left > 0) {\n            left += clip.left;\n        } else if (clip.right > 0) {\n            left -= clip.right;\n        }\n\n        // If clipped on top, flip popover below line\n        if (clip.top > 0) {\n            top = ybot + POINTER_HEIGHT;\n            $previewContainer\n                .removeClass(\"preview-bubble-above\")\n                .addClass(\"preview-bubble-below\");\n        } else {\n            $previewContainer\n                .removeClass(\"preview-bubble-below\")\n                .addClass(\"preview-bubble-above\");\n        }\n\n        $previewContainer\n            .css({\n                left: left,\n                top: top\n            })\n            .addClass(\"active\");\n    }\n\n    function divContainsMouse($div, mousePos) {\n        var offset = $div.offset();\n\n        return (mousePos.clientX >= offset.left &&\n                mousePos.clientX <= offset.left + $div.width() &&\n                mousePos.clientY >= offset.top &&\n                mousePos.clientY <= offset.top + $div.height());\n    }\n\n\n    // Color & gradient preview provider --------------------------------------\n\n    function colorAndGradientPreviewProvider(editor, pos, token, line) {\n\n        // Check for gradient. -webkit-gradient() can have parens in parameters\n        // nested 2 levels. Other gradients can only nest 1 level.\n        var gradientRegEx = /-webkit-gradient\\((?:[^\\(]*?(?:\\((?:[^\\(]*?(?:\\([^\\)]*?\\))*?)*?\\))*?)*?\\)|(?:(?:-moz-|-ms-|-o-|-webkit-|:|\\s)((repeating-)?linear-gradient)|(?:-moz-|-ms-|-o-|-webkit-|:|\\s)((repeating-)?radial-gradient))(\\((?:[^\\)]*?(?:\\([^\\)]*?\\))*?)*?\\))/gi,\n            colorRegEx    = new RegExp(ColorUtils.COLOR_REGEX),\n            mode          = TokenUtils.getModeAt(editor._codeMirror, pos, false),\n            isStyleSheet  = (styleLanguages.indexOf(mode) !== -1);\n\n        function areParensBalanced(str) {\n            var i,\n                nestLevel = 0,\n                len;\n\n            if (isStyleSheet) {\n                // Remove comments & strings from style sheets\n                str = CSSUtils.reduceStyleSheetForRegExParsing(str);\n            }\n            len = str.length;\n\n            for (i = 0; i < len; i++) {\n                switch (str[i]) {\n                case \"(\":\n                    nestLevel++;\n                    break;\n                case \")\":\n                    nestLevel--;\n                    break;\n                case \"\\\\\":\n                    i++;    // next char is escaped, so skip it\n                    break;\n                }\n            }\n\n            // if parens are balanced, nest level will be 0\n            return (nestLevel === 0);\n        }\n\n        function execGradientMatch(line, parensBalanced) {\n            // Unbalanced parens cause infinite loop (see issue #4650)\n            var gradientMatch = (parensBalanced ? gradientRegEx.exec(line) : null),\n                prefix = \"\",\n                colorValue;\n\n            if (gradientMatch) {\n                if (gradientMatch[0].indexOf(\"@\") !== -1) {\n                    // If the gradient match has \"@\" in it, it is most likely a less or\n                    // sass variable. Ignore it since it won't be displayed correctly.\n                    gradientMatch = null;\n\n                } else {\n                    // If it was a linear-gradient or radial-gradient variant with a vendor prefix\n                    // add \"-webkit-\" so it shows up correctly in Brackets.\n                    if (gradientMatch[0].match(/-o-|-moz-|-ms-|-webkit-/i)) {\n                        prefix = \"-webkit-\";\n                    }\n\n                    // For prefixed gradients, use the non-prefixed value as the color value.\n                    // \"-webkit-\" will be added before this value later\n                    if (gradientMatch[1]) {\n                        colorValue = gradientMatch[1] + gradientMatch[5];    // linear gradiant\n                    } else if (gradientMatch[3]) {\n                        colorValue = gradientMatch[3] + gradientMatch[5];    // radial gradiant\n                    } else if (gradientMatch[0]) {\n                        colorValue = gradientMatch[0];                       // -webkit-gradient\n                        prefix = \"\";                                         // do not prefix\n                    }\n                }\n            }\n\n            return {\n                match: gradientMatch,\n                prefix: prefix,\n                colorValue: colorValue\n            };\n        }\n\n        function execColorMatch(editor, line, pos) {\n            var colorMatch,\n                ignoreNamedColors;\n\n            function hyphenOnMatchBoundary(match, line) {\n                var beforeIndex, afterIndex;\n                if (match) {\n                    beforeIndex = match.index - 1;\n                    if (beforeIndex >= 0 && line[beforeIndex] === \"-\") {\n                        return true;\n                    }\n                    afterIndex = match.index + match[0].length;\n                    if (afterIndex < line.length && line[afterIndex] === \"-\") {\n                        return true;\n                    }\n\n                }\n\n                return false;\n            }\n            function isNamedColor(match) {\n                if (match && match[0] && /^[a-z]+$/i.test(match[0])) { // only for color names, not for hex-/rgb-values\n                    return true;\n                }\n            }\n\n            // Hyphens do not count as a regex word boundary (\\b), so check for those here\n            do {\n                colorMatch = colorRegEx.exec(line);\n                if (!colorMatch) {\n                    break;\n                }\n                if (ignoreNamedColors === undefined) {\n                    var mode = TokenUtils.getModeAt(editor._codeMirror, pos, false).name;\n                    ignoreNamedColors = styleLanguages.indexOf(mode) === -1;\n                }\n            } while (hyphenOnMatchBoundary(colorMatch, line) ||\n                    (ignoreNamedColors && isNamedColor(colorMatch)));\n\n            return colorMatch;\n        }\n\n        // simple css property splitter (used to find color stop arguments in gradients)\n        function splitStyleProperty(property) {\n            var token = /((?:[^\"']|\".*?\"|'.*?')*?)([(,)]|$)/g;\n            var recurse = function () {\n                var array = [];\n                for (;;) {\n                    var result = token.exec(property);\n                    if (result[2] === \"(\") {\n                        var str = result[1].trim() + \"(\" + recurse().join(\",\") + \")\";\n                        result = token.exec(property);\n                        str += result[1];\n                        array.push(str);\n                    } else {\n                        array.push(result[1].trim());\n                    }\n                    if (result[2] !== \",\") {\n                        return array;\n                    }\n                }\n            };\n            return (recurse());\n        }\n\n        // color stop helpers\n        function isGradientColorStop(args) {\n            return (args.length > 0 && args[0].match(colorRegEx) !== null);\n        }\n\n        function hasLengthInPixels(args) {\n            return (args.length > 1 && args[1].indexOf(\"px\") > 0);\n        }\n\n        // Ensures that input is in usable hex format\n        function ensureHexFormat(str) {\n            return (/^0x/).test(str) ? str.replace(\"0x\", \"#\") : str;\n        }\n\n        // Normalizes px color stops to %\n        function normalizeGradientExpressionForQuickview(expression) {\n            if (expression.indexOf(\"px\") > 0) {\n                var paramStart = expression.indexOf(\"(\") + 1,\n                    paramEnd = expression.lastIndexOf(\")\"),\n                    parameters = expression.substring(paramStart, paramEnd),\n                    params = splitStyleProperty(parameters),\n                    lowerBound = 0,\n                    upperBound = $previewContainer.width(),\n                    args,\n                    thisSize,\n                    i;\n\n                // find lower bound\n                for (i = 0; i < params.length; i++) {\n                    args = params[i].split(\" \");\n\n                    if (hasLengthInPixels(args)) {\n                        thisSize = parseFloat(args[1]);\n\n                        upperBound = Math.max(upperBound, thisSize);\n                        // we really only care about converting negative\n                        //  pixel values -- so take the smallest negative pixel\n                        //  value and use that as baseline for display purposes\n                        if (thisSize < 0) {\n                            lowerBound = Math.min(lowerBound, thisSize);\n                        }\n                    }\n                }\n\n                // convert negative lower bound to positive and adjust all pixel values\n                //  so that -20px is now 0px and 100px is now 120px\n                lowerBound = Math.abs(lowerBound);\n\n                // Offset the upperbound by the lowerBound to give us a corrected context\n                upperBound += lowerBound;\n\n                // convert to %\n                for (i = 0; i < params.length; i++) {\n                    args = params[i].split(\" \");\n                    if (isGradientColorStop(args) && hasLengthInPixels(args)) {\n                        if (upperBound === 0) {\n                            thisSize = 0;\n                        } else {\n                            thisSize = ((parseFloat(args[1]) + lowerBound) / upperBound) * 100;\n                        }\n                        args[1] = thisSize + \"%\";\n                    }\n                    params[i] = args.join(\" \");\n                }\n\n                // put it back together.\n                expression = expression.substring(0, paramStart) + params.join(\", \") + expression.substring(paramEnd);\n            }\n            return expression;\n        }\n\n        var parensBalanced = areParensBalanced(line),\n            gradientMatch = execGradientMatch(line, parensBalanced),\n            match = gradientMatch.match || execColorMatch(editor, line, pos),\n            cm = editor._codeMirror;\n\n        while (match) {\n            if (pos.ch < match.index) {\n                // Gradients are matched first, then colors, so...\n                if (gradientMatch.match) {\n                    // ... gradient match is past cursor -- stop looking for gradients, start searching for colors\n                    gradientMatch = { match: null, prefix: \"\", colorValue: null };\n                } else {\n                    // ... color match is past cursor -- stop looping\n                    break;\n                }\n            } else if (pos.ch <= match.index + match[0].length) {\n                // build the css for previewing the gradient from the regex result\n                var previewCSS = gradientMatch.prefix + (gradientMatch.colorValue || match[0]);\n\n                // normalize the arguments to something that we can display to the user\n                // NOTE: we need both the div and the popover's _previewCSS member\n                //          (used by unit tests) to match so normalize the css for both\n                previewCSS = normalizeGradientExpressionForQuickview(ensureHexFormat(previewCSS));\n\n                var preview = \"<div class='color-swatch' style='background:\" + previewCSS + \"'>\" + \"</div>\";\n                var startPos = {line: pos.line, ch: match.index},\n                    endPos = {line: pos.line, ch: match.index + match[0].length},\n                    startCoords = cm.charCoords(startPos),\n                    xPos;\n\n                xPos = (cm.charCoords(endPos).left - startCoords.left) / 2 + startCoords.left;\n\n                return {\n                    start: startPos,\n                    end: endPos,\n                    content: preview,\n                    xpos: xPos,\n                    ytop: startCoords.top,\n                    ybot: startCoords.bottom,\n                    _previewCSS: previewCSS\n                };\n            }\n\n            // Get next match\n            if (gradientMatch.match) {\n                gradientMatch = execGradientMatch(line, parensBalanced);\n            }\n            match = gradientMatch.match || execColorMatch(editor, line, pos);\n        }\n\n        return null;\n    }\n\n\n    // Image preview provider -------------------------------------------------\n\n    function imagePreviewProvider(editor, pos, token, line) {\n        var cm = editor._codeMirror;\n\n        // Check for image name\n        var urlRegEx = /url\\(([^\\)]*)\\)/gi,\n            tokenString,\n            urlMatch;\n\n        if (token.type === \"string\") {\n            tokenString = token.string;\n        } else {\n            urlMatch = urlRegEx.exec(line);\n            while (urlMatch) {\n                if (pos.ch < urlMatch.index) {\n                    // match is past cursor, so stop looping\n                    break;\n                } else if (pos.ch <= urlMatch.index + urlMatch[0].length) {\n                    tokenString = urlMatch[1];\n                    break;\n                }\n                urlMatch = urlRegEx.exec(line);\n            }\n        }\n\n        if (!tokenString) {\n            return null;\n        }\n\n        // Strip leading/trailing quotes, if present\n        tokenString = tokenString.replace(/(^['\"])|(['\"]$)/g, \"\");\n\n        var sPos, ePos;\n        var docPath = editor.document.file.fullPath;\n        var imgPath;\n\n        // Determine whether or not this URL/path is likely to be an image.\n        var parsed = PathUtils.parseUrl(tokenString);\n        // If the URL has a protocol, check if it's one of the supported protocols\n        var hasProtocol = parsed.protocol !== \"\" && validProtocols.indexOf(parsed.protocol.trim().toLowerCase()) !== -1;\n        var ext = parsed.filenameExtension.replace(/^\\./, '');\n        var language = LanguageManager.getLanguageForExtension(ext);\n        var id = language && language.getId();\n        var isImage = id === \"image\" || id === \"svg\";\n        var loadFromDisk = null;\n\n        // Use this URL if this is an absolute URL and either points to a\n        // filename with a known image extension, or lacks an extension (e.g.,\n        // a web service that returns an image). Honour the extensionlessImagePreview\n        // preference as well in the latter case.\n        if (hasProtocol && (isImage || (!ext && extensionlessImagePreview))) {\n            imgPath = tokenString;\n        }\n        // Use this filename if this is a path with a known image extension.\n        else if (!hasProtocol && isImage) {\n            imgPath = '';\n            loadFromDisk = window.path.normalize(FileUtils.getDirectoryPath(docPath) + tokenString);\n        }\n\n        if (!loadFromDisk && !imgPath) {\n            return null;\n        }\n\n        if (urlMatch) {\n            sPos = {line: pos.line, ch: urlMatch.index};\n            ePos = {line: pos.line, ch: urlMatch.index + urlMatch[0].length};\n        } else {\n            sPos = {line: pos.line, ch: token.start};\n            ePos = {line: pos.line, ch: token.end};\n        }\n\n        var imgPreview = \"<div class='image-preview'>\"          +\n                         \"    <img src=\\\"\" + imgPath + \"\\\">\"    +\n                         \"</div>\";\n        var coord = cm.charCoords(sPos);\n        var xpos = (cm.charCoords(ePos).left - coord.left) / 2 + coord.left;\n\n        function showHandlerWithImageURL(imageURL) {\n            // Hide the preview container until the image is loaded.\n            $previewContainer.hide();\n            var img = $previewContainer.find(\".image-preview > img\");\n            if(imageURL){\n                img[0].src = imageURL;\n            }\n\n            img.on(\"load\", function () {\n                $previewContent\n                    .append(\"<div class='img-size'>\" +\n                        this.naturalWidth + \" &times; \" + this.naturalHeight + \" \" + Strings.UNIT_PIXELS +\n                        \"</div>\"\n                    );\n                $previewContainer.show();\n                positionPreview(editor, popoverState.xpos, popoverState.ytop, popoverState.ybot);\n            }).on(\"error\", function (e) {\n                e.preventDefault();\n                hidePreview();\n            });\n        };\n\n        function _imageToDataURI(file, cb) {\n            let contentType = \"data:image;base64,\";\n            if(file.name.endsWith('.svg')){\n                contentType = \"data:image/svg+xml;base64,\";\n            }\n            file.read({encoding: window.fs.BYTE_ARRAY_ENCODING}, function (err, content, encoding, stat) {\n                var base64 = window.btoa(\n                    new Uint8Array(content)\n                        .reduce((data, byte) => data + String.fromCharCode(byte), '')\n                );\n                var dataURL= contentType + base64;\n                cb(null, dataURL);\n            });\n        }\n\n        var showHandler = function () {\n            if(loadFromDisk){\n                var imageFile = FileSystem.getFileForPath(loadFromDisk);\n                _imageToDataURI(imageFile, function (err, dataURL){\n                    showHandlerWithImageURL(dataURL);\n                });\n            } else {\n                showHandlerWithImageURL();\n            }\n        };\n\n        return {\n            start: sPos,\n            end: ePos,\n            content: imgPreview,\n            onShow: showHandler,\n            xpos: xpos,\n            ytop: coord.top,\n            ybot: coord.bottom,\n            _imgPath: imgPath || loadFromDisk\n        };\n    }\n\n\n    // Preview hide/show logic ------------------------------------------------\n\n    /**\n     * Returns a 'ready for use' popover state object:\n     * { visible: false, editor, start, end, content, ?onShow, xpos, ytop, ybot }\n     * Lacks only hoverTimer (supplied by handleMouseMove()) and marker (supplied by showPreview()).\n     */\n    function queryPreviewProviders(editor, pos, token) {\n        var line = editor.document.getLine(pos.line);\n\n        // FUTURE: Support plugin providers. For now we just hard-code...\n        var popover = colorAndGradientPreviewProvider(editor, pos, token, line) ||\n                      imagePreviewProvider(editor, pos, token, line);\n\n        if (popover) {\n            // Providers return just { start, end, content, ?onShow, xpos, ytop, ybot }\n            popover.visible = false;\n            popover.editor  = editor;\n            return popover;\n        }\n\n        return null;\n    }\n\n    function getHoveredEditor(mousePos) {\n        // Figure out which editor we are over\n        var fullEditor = EditorManager.getCurrentFullEditor();\n\n        if (!fullEditor || !mousePos) {\n            return;\n        }\n\n        // Check for inline Editor instances first\n        var inlines = fullEditor.getInlineWidgets(),\n            i,\n            editor;\n\n        for (i = 0; i < inlines.length; i++) {\n            var $inlineEditorRoot = inlines[i].editor && $(inlines[i].editor.getRootElement()), // see MultiRangeInlineEditor\n                $otherDiv = inlines[i].$htmlContent;\n\n            if ($inlineEditorRoot && divContainsMouse($inlineEditorRoot, mousePos)) {\n                editor = inlines[i].editor;\n                break;\n            } else if ($otherDiv && divContainsMouse($otherDiv, mousePos)) {\n                // Mouse inside unsupported inline editor like Quick Docs or Color Editor\n                return;\n            }\n        }\n\n        // Check main editor\n        if (!editor) {\n            if (divContainsMouse($(fullEditor.getRootElement()), mousePos)) {\n                editor = fullEditor;\n            }\n        }\n\n        return editor;\n    }\n\n    /**\n     * Changes the current hidden popoverState to visible, showing it in the UI and highlighting\n     * its matching text in the editor.\n     */\n    function showPreview(editor, popover) {\n        var token, cm;\n\n        // Figure out which editor we are over\n        if (!editor) {\n            editor = getHoveredEditor(lastMousePos);\n        }\n\n        if (!editor || !editor._codeMirror) {\n            hidePreview();\n            return;\n        }\n\n        cm = editor._codeMirror;\n\n        // Find char mouse is over\n        var pos = cm.coordsChar({left: lastMousePos.clientX, top: lastMousePos.clientY});\n\n        // No preview if mouse is past last char on line\n        if (pos.ch >= editor.document.getLine(pos.line).length) {\n            return;\n        }\n\n        if (popover) {\n            popoverState = popover;\n        } else {\n            // Query providers and append to popoverState\n            token = TokenUtils.getTokenAt(cm, pos);\n            popoverState = $.extend({}, popoverState, queryPreviewProviders(editor, pos, token));\n        }\n\n        if (popoverState && popoverState.start && popoverState.end) {\n            popoverState.marker = cm.markText(\n                popoverState.start,\n                popoverState.end,\n                {className: \"quick-view-highlight\"}\n            );\n\n            $previewContent.append(popoverState.content);\n            $previewContainer.show();\n\n            popoverState.visible = true;\n\n            if (popoverState.onShow) {\n                popoverState.onShow();\n            } else {\n                positionPreview(editor, popoverState.xpos, popoverState.ytop, popoverState.ybot);\n            }\n        }\n    }\n\n    function processMouseMove() {\n        animationRequest = null;\n\n        if (!lastMousePos) {\n            return;         // should never get here, but safety first!\n        }\n\n        var showImmediately = false,\n            editor = null;\n\n        if (popoverState && popoverState.visible) {\n            // Only figure out which editor we are over when there is already a popover\n            // showing (otherwise wait until after delay to minimize processing)\n            editor = getHoveredEditor(lastMousePos);\n            if (editor && editor._codeMirror) {\n                // Find char mouse is over\n                var cm = editor._codeMirror,\n                    pos = cm.coordsChar({left: lastMousePos.clientX, top: lastMousePos.clientY});\n\n                if (popoverState.start && popoverState.end &&\n                        editor.posWithinRange(pos, popoverState.start, popoverState.end, true) &&\n                        (pos.ch < editor.document.getLine(pos.line).length)) {\n\n                    // That one's still relevant - nothing more to do\n                    // Note: posWithinRange() includes mouse past end of line, so need to check for that case\n                    return;\n                }\n            }\n\n            // That one doesn't cover this pos - hide it and start anew\n            showImmediately = true;\n        }\n\n        // Initialize popoverState\n        hidePreview();\n        popoverState = {};\n\n        // Set timer to scan and show. This will get cancelled (in hidePreview())\n        // if mouse movement rendered this popover inapplicable before timer fires.\n        // When showing \"immediately\", still use setTimeout() to make this async\n        // so we return from this mousemove event handler ASAP.\n        popoverState.hoverTimer = window.setTimeout(function () {\n            showPreview(editor);\n        }, showImmediately ? 0 : HOVER_DELAY);\n    }\n\n    function handleMouseMove(event) {\n        lastMousePos = null;\n\n        if (!enabled) {\n            return;\n        }\n\n        if (event.which) {\n            // Button is down - don't show popovers while dragging\n            hidePreview();\n            return;\n        }\n\n        // Keep track of last mouse position\n        lastMousePos = {\n            clientX: event.clientX,\n            clientY: event.clientY\n        };\n\n        // Prevent duplicate animation frame requests\n        if (!animationRequest) {\n            animationRequest = window.requestAnimationFrame(processMouseMove);\n        }\n    }\n\n    function onActiveEditorChange(event, current, previous) {\n        // Hide preview when editor changes\n        hidePreview();\n\n        if (previous && previous.document) {\n            previous.document.off(\"change\", hidePreview);\n        }\n\n        if (current && current.document) {\n            current.document.on(\"change\", hidePreview);\n        }\n    }\n\n    // Menu command handlers\n    function updateMenuItemCheckmark() {\n        CommandManager.get(CMD_ENABLE_QUICK_VIEW).setChecked(enabled);\n    }\n\n    function setExtensionlessImagePreview(_extensionlessImagePreview, doNotSave) {\n        if (extensionlessImagePreview !== _extensionlessImagePreview) {\n            extensionlessImagePreview = _extensionlessImagePreview;\n            if (!doNotSave) {\n                prefs.set(\"extensionlessImagePreview\", enabled);\n                prefs.save();\n            }\n        }\n    }\n\n    function setEnabled(_enabled, doNotSave) {\n        if (enabled !== _enabled) {\n            enabled = _enabled;\n            var editorHolder = $(\"#editor-holder\")[0];\n            if (enabled) {\n                // Note: listening to \"scroll\" also catches text edits, which bubble a scroll event up from the hidden text area. This means\n                // we auto-hide on text edit, which is probably actually a good thing.\n                editorHolder.addEventListener(\"mousemove\", handleMouseMove, true);\n                editorHolder.addEventListener(\"scroll\", hidePreview, true);\n                editorHolder.addEventListener(\"mouseout\", hidePreview, true);\n\n                // Setup doc \"change\" listener\n                onActiveEditorChange(null, EditorManager.getActiveEditor(), null);\n                EditorManager.on(\"activeEditorChange\", onActiveEditorChange);\n\n            } else {\n                editorHolder.removeEventListener(\"mousemove\", handleMouseMove, true);\n                editorHolder.removeEventListener(\"scroll\", hidePreview, true);\n                editorHolder.removeEventListener(\"mouseout\", hidePreview, true);\n\n                // Cleanup doc \"change\" listener\n                onActiveEditorChange(null, null, EditorManager.getActiveEditor());\n                EditorManager.off(\"activeEditorChange\", onActiveEditorChange);\n\n                hidePreview();\n            }\n            if (!doNotSave) {\n                prefs.set(\"enabled\", enabled);\n                prefs.save();\n            }\n        }\n        // Always update the checkmark, even if the enabled flag hasn't changed.\n        updateMenuItemCheckmark();\n    }\n\n    function toggleEnableQuickView() {\n        setEnabled(!enabled);\n    }\n\n    function _forceShow(popover) {\n        hidePreview();\n        lastMousePos = {\n            clientX: popover.xpos,\n            clientY: Math.floor((popover.ybot + popover.ytop) / 2)\n        };\n        showPreview(popover.editor, popover);\n    }\n\n    // Create the preview container\n    $previewContainer = $(previewContainerHTML).appendTo($(\"body\"));\n    $previewContent = $previewContainer.find(\".preview-content\");\n\n    // Load our stylesheet\n    ExtensionUtils.loadStyleSheet(module, \"QuickView.less\");\n\n    // Register command\n    // Insert menu at specific pos since this may load before OR after code folding extension\n    CommandManager.register(Strings.CMD_ENABLE_QUICK_VIEW, CMD_ENABLE_QUICK_VIEW, toggleEnableQuickView);\n    Menus.getMenu(Menus.AppMenuBar.VIEW_MENU).addMenuItem(CMD_ENABLE_QUICK_VIEW, null, Menus.AFTER, Commands.VIEW_TOGGLE_INSPECTION);\n\n    // Setup initial UI state\n    setEnabled(prefs.get(\"enabled\"), true);\n    setExtensionlessImagePreview(prefs.get(\"extensionlessImagePreview\"), true);\n\n    prefs.on(\"change\", \"enabled\", function () {\n        setEnabled(prefs.get(\"enabled\"), true);\n    });\n\n    prefs.on(\"change\", \"extensionlessImagePreview\", function () {\n        setExtensionlessImagePreview(prefs.get(\"extensionlessImagePreview\"));\n    });\n\n    // For unit testing\n    exports._queryPreviewProviders  = queryPreviewProviders;\n    exports._forceShow              = _forceShow;\n});\n"],"file":"main.js"}