{"version":3,"sources":["extensions/default/icons/main.js"],"names":["define","require","exports","module","extensionUtils","brackets","getModule","fileUtils","ProjectManager","LanguageManager","loadStyleSheet","languages","folder","css","htm","html","javascript","typescript","map","js.map","css.map","xml","jsx","hbs","eot","woff","ttf","txt","text","json","yml","yaml","conf","config","plist","htaccess","htpasswd","project","org","properties","markdown","markdown (github)","python","pyc","pyd","pyo","php","lua","gitignore","gitattributes","gitmodules","sass","scss","less","c","cpp","objective-c","kotlin","c#","bat","sh","command","sql","java","jar","erb_html","ruby","rbw","rdoc","haml","coffeescript","groovy","clojure","styl","dart","npmignore","scala","go","swift","sln","perl","hs","lhs","psd","ai","image","png","ico","jpg","jpeg","tiff","gif","svg","audio","mp3","wav","avi","mp4","wmv","mkv","ogg","webm","gz","7z","bzip","zip","rar","tar","tgz","files","gruntfile.js","gulpfile.js","package.json",".eslintignore",".eslintrc.js","getExtension","filePath","pathSplit","split","length","iconProvider","entry","color","span","$","addClass","el","append","isFile","removeClass","ext","fullPath","name","substr","filename","getBaseName","toLowerCase","includes","lang","getLanguageForPath","getName","addIconProvider"],"mappings":"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","sourcesContent":["/*jslint vars: true, plusplus: true, devel: true, nomen: true, regexp: true, indent: 4, maxerr: 50 */\n/*global define, $, brackets, window */\n\ndefine(function (require, exports, module) {\n\n    let extensionUtils = brackets.getModule('utils/ExtensionUtils'),\n        fileUtils = brackets.getModule('file/FileUtils'),\n        ProjectManager = brackets.getModule('project/ProjectManager'),\n        LanguageManager = brackets.getModule(\"language/LanguageManager\");\n\n    extensionUtils.loadStyleSheet(module, 'css/main.css');\n\n    // use this cheetsheet for fontawesome icons https://fontawesome.com/v5/cheatsheet/free/brands\n    // or https://fontawesome.com/v5/cheatsheet/free/solid or https://fontawesome.com/v5/cheatsheet/free/regular\n    // or https://devicon.dev/\n    var languages = {\n        folder: \"fa-folder fa-solid\",\n\n        css: \"devicon-css3-plain\",\n        htm: \"devicon-html5-plain\",\n        html: \"devicon-html5-plain\",\n        javascript: \"devicon-javascript-plain\",\n        typescript: \"devicon-typescript-plain\",\n        map: \"fa-map-signs fa-solid\",\n        'js.map': \"fa-map-signs fa-solid\",\n        'css.map': \"fa-map-signs fa-solid\",\n        xml: 'fa-code fa-solid',\n        jsx: 'fa-react fa-brands',\n        hbs: \"devicon-handlebars-plain\",\n        eot: \"fa-font fa-solid\",\n        woff: \"fa-font fa-solid\",\n        ttf: \"fa-font fa-solid\",\n        txt: \"fa-file-alt fa-solid\",\n        text: \"fa-file-alt fa-solid\",\n\n        json: \"fa-cogs fa-solid\",\n        yml: \"fa-cogs fa-solid\",\n        yaml: \"fa-cogs fa-solid\",\n        conf: \"fa-cogs fa-solid\",\n        config: \"fa-cogs fa-solid\",\n        plist: \"fa-cogs fa-solid\",\n        htaccess: \"fa-cogs fa-solid\",\n        htpasswd: \"fa-cogs fa-solid\",\n        project: \"fa-cogs fa-solid\",\n        org: \"fa-cogs fa-solid\",\n        properties: \"fa-cogs fa-solid\",\n\n        markdown: \"devicon-markdown-original nocolor\",\n        'markdown (github)': \"devicon-markdown-original nocolor\",\n\n        python: \"devicon-python-plain\",\n        pyc: \"devicon-python-plain\",\n        pyd: \"devicon-python-plain\",\n        pyo: \"devicon-python-plain\",\n\n        php: \"devicon-php-plain\",\n\n        lua: \"devicon-lua-plain\",\n\n        gitignore: \"devicon-git-plain\",\n        gitattributes: \"devicon-git-plain\",\n        gitmodules: \"devicon-git-plain\",\n\n        sass: \"devicon-sass-original\",\n        scss: \"devicon-sass-original\",\n        less: 'fa-less fa-brands',\n\n        c: \"devicon-c-plain nocolor\",\n        cpp: \"devicon-cplusplus-plain nocolor\",\n        'objective-c': \"devicon-objectivec-plain nocolor\",\n        kotlin: \"devicon-kotlin-plain\",\n        'c#': \"devicon-csharp-plain\",\n\n        bat: \"fa-file-code fa-solid\",\n        sh: \"fa-file-code fa-solid\",\n        command: \"fa-file-code fa-solid\",\n\n        sql: \"fa-file-code fa-solid\",\n\n        java: \"fa-java fa-brands\",\n        jar: \"fa-archive fa-solid\",\n\n        'erb_html': \"devicon-ruby-plain\",\n        ruby: \"devicon-ruby-plain\",\n        rbw: \"devicon-ruby-plain\",\n        rdoc: \"devicon-ruby-plain\",\n        haml: \"devicon-rails-plain\",\n\n        coffeescript: \"devicon-coffeescript-original nocolor\",\n\n        groovy: \"devicon-groovy-plain\",\n\n        clojure: \"devicon-clojure-plain\",\n\n        styl: \"devicon-stylus-original nocolor\",\n\n        dart: \"devicon-dart-plain\",\n\n        npmignore: \"fa-npm fa-brands\",\n\n        scala: \"devicon-scala-plain\",\n\n        go: \"devicon-go-plain\",\n\n        swift: 'devicon-swift-plain',\n\n        sln: 'devicon-visualstudio-plain',\n\n        perl: 'devicon-perl-plain nocolor',\n\n        hs: 'devicon-haskell-plain nocolor',\n        lhs: 'devicon-haskell-plain nocolor',\n\n        psd: 'devicon-photoshop-plain',\n        ai: 'devicon-illustrator-plain',\n        image: 'fa-image fa-solid',\n        png: 'fa-image fa-solid',\n        ico: 'fa-image fa-solid',\n        jpg: 'fa-image fa-solid',\n        jpeg: 'fa-image fa-solid',\n        tiff: 'fa-image fa-solid',\n        gif: 'fa-photo-video fa-solid',\n        svg: 'fa-code fa-solid',\n\n        audio: 'fa-music fa-solid',\n        mp3: 'fa-music fa-solid',\n        wav: 'fa-music fa-solid',\n\n        avi: 'fa-film fa-solid',\n        mp4: 'fa-film fa-solid',\n        wmv: 'fa-film fa-solid',\n        mkv: 'fa-film fa-solid',\n        ogg: 'fa-film fa-solid',\n        webm: 'fa-film fa-solid',\n\n        gz: \"fa-archive fa-solid\",\n        '7z': \"fa-archive fa-solid\",\n        bzip: \"fa-archive fa-solid\",\n        zip: \"fa-archive fa-solid\",\n        rar: \"fa-archive fa-solid\",\n        tar: \"fa-archive fa-solid\",\n        tgz: \"fa-archive fa-solid\"\n    };\n\n    var files = {\n        'gruntfile.js': 'devicon-grunt-plain',\n        'gulpfile.js': 'devicon-gulp-plain',\n        'package.json': 'fa-npm fa-brands',\n        '.eslintignore': 'devicon-eslint-original',\n        '.eslintrc.js': 'devicon-eslint-original'\n    };\n\n    function getExtension(filePath) {\n        filePath = filePath || '';\n        let pathSplit = filePath.split('.');\n        return pathSplit && pathSplit.length>1 ? pathSplit[pathSplit.length-1] : '';\n    }\n\n    var iconProvider = function (entry) {\n        let color = true;\n\n        let span = $('<span>');\n        span.addClass('bd-icon');\n        let el = $('<i>');\n        span.append(el);\n        el.addClass('fa-solid fa-file');\n\n        if (!entry.isFile) {\n            el.removeClass('fa-solid fa-file');\n            el.addClass(languages.folder);\n            return span;\n        }\n\n        let ext = getExtension(entry.fullPath) || entry.name.substr(1);\n        let filename = fileUtils.getBaseName(entry.fullPath).toLowerCase();\n\n        if (files[filename]) {\n            el.removeClass('fa-solid fa-file');\n            el.addClass(files[filename]);\n            if(!files[filename].includes('nocolor') && color){\n                el.addClass('colored');\n            }\n        } else if (languages[ext]) {\n            el.removeClass('fa-solid fa-file');\n            el.addClass(languages[ext]);\n            if(!languages[ext].includes('nocolor') && color){\n                el.addClass('colored');\n            }\n        } else{\n            let lang = LanguageManager.getLanguageForPath(entry.fullPath).getName().toLowerCase();\n            if(!languages[lang]){\n                return span;\n            }\n            el.removeClass('fa-solid fa-file');\n            el.addClass(languages[lang]);\n            if(!languages[lang].includes('nocolor') && color){\n                el.addClass('colored');\n            }\n        }\n\n        return span;\n    };\n\n    ProjectManager.addIconProvider(iconProvider, -1);\n});\n"],"file":"main.js"}