{"version":3,"sources":["extensions/default/StaticServer/main.js"],"names":["define","require","exports","module","AppInit","brackets","getModule","LiveDevServerManager","ProjectManager","StaticServer","_createStaticServer","config","pathResolver","makeProjectRelativeIfPossible","root","getProjectRoot","fullPath","appReady","registerServer","create","_getStaticServerProvider"],"mappings":"AAuBAA,OAAO,SAAUC,QAASC,QAASC,QAE/B,IAAIC,QAAuBC,SAASC,UAAU,iBAC1CC,qBAAuBF,SAASC,UAAU,wCAC1CE,eAAuBH,SAASC,UAAU,0BAC1CG,aAAuBR,QAAQ,gBAOnC,SAASS,sBACL,IAAIC,OAAS,CACTC,aAAcJ,eAAeK,8BAC7BC,KAAMN,eAAeO,iBAAiBC,UAG1C,OAAO,IAAIP,aAAaE,QAG5BP,QAAQa,SAAS,WACbV,qBAAqBW,eAAe,CAAEC,OAAQT,qBAAuB,KAIzER,QAAQkB,yBAA2BV","sourcesContent":["/*\n * Copyright (c) 2012 - present Adobe Systems Incorporated. All rights reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n *\n */\n\ndefine(function (require, exports, module) {\n\n    var AppInit              = brackets.getModule(\"utils/AppInit\"),\n        LiveDevServerManager = brackets.getModule(\"LiveDevelopment/LiveDevServerManager\"),\n        ProjectManager       = brackets.getModule(\"project/ProjectManager\"),\n        StaticServer         = require(\"StaticServer\");\n\n    /**\n     * @private\n     * @return {StaticServerProvider} The singleton StaticServerProvider initialized\n     * on app ready.\n     */\n    function _createStaticServer() {\n        var config = {\n            pathResolver: ProjectManager.makeProjectRelativeIfPossible,\n            root: ProjectManager.getProjectRoot().fullPath\n        };\n\n        return new StaticServer(config);\n    }\n\n    AppInit.appReady(function () {\n        LiveDevServerManager.registerServer({ create: _createStaticServer }, 5);\n    });\n\n    // For unit tests only\n    exports._getStaticServerProvider = _createStaticServer;\n});\n"],"file":"main.js"}