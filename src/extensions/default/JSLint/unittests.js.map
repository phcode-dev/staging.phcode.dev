{"version":3,"sources":["extensions/default/JSLint/unittests.js"],"names":["define","require","exports","module","SpecRunnerUtils","brackets","getModule","describe","testFolder","getTestPath","testWindow","$","CodeInspection","EditorManager","toggleJSLintResults","visible","triggerHandler","expect","is","toBe","beforeEach","async","createTestWindowAndRun","test","toggleEnabled","loadProjectInTestWindow","afterEach","closeTestWindow","it","spyOn","and","callThrough","awaitsForDone","openProjectFiles","JSLINT","toHaveBeenCalled"],"mappings":"AAuBAA,OAAO,SAAUC,QAASC,QAASC,QAG/B,IAAIC,gBAAkBC,SAASC,UAAU,wBAEzCC,SAAS,mBAAoB,WACzB,IAAIC,WAAaJ,gBAAgBK,YAAY,uCACzCC,WACAC,EACAN,SACAO,eACAC,cAEAC,oBAAsB,SAAUC,SAChCJ,EAAE,sBAAsBK,eAAe,SACvCC,OAAON,EAAE,mBAAmBO,GAAG,aAAaC,KAAKJ,UAGrDK,WAAWC,iBACPX,iBAAmBN,gBAAgBkB,yBAEnCX,EAAID,WAAWC,EACfN,SAAWK,WAAWL,SACtBQ,cAAgBH,WAAWL,SAASkB,KAAKV,eACzCD,eAAiBF,WAAWL,SAASkB,KAAKX,gBAC3BY,eAAc,SAEvBpB,gBAAgBqB,wBAAwBjB,cAGlDkB,UAAUL,iBACNX,WAAgB,KAChBC,EAAgB,KAChBN,SAAgB,KAChBQ,cAAgB,WACVT,gBAAgBuB,oBAG1BC,GAAG,4DAA6DP,iBAC5DQ,MAAMnB,WAAY,UAAUoB,IAAIC,oBAE1BC,cAAc5B,gBAAgB6B,iBAAiB,CAAC,cAAe,kBAErEhB,OAAOP,WAAWwB,QAAQC,qBAG9BP,GAAG,6DAA8DP,uBACvDW,cAAc5B,gBAAgB6B,iBAAiB,CAAC,cAAe,kBAErEnB,qBAAoB,GACpBA,qBAAoB","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2013 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/*global describe, it, expect, beforeEach, afterEach, awaitsForDone, spyOn */\n\ndefine(function (require, exports, module) {\n\n\n    var SpecRunnerUtils = brackets.getModule(\"spec/SpecRunnerUtils\");\n\n    describe(\"extension:JSLint\", function () {\n        var testFolder = SpecRunnerUtils.getTestPath(\"/spec/Extension-test-project-files/\"),\n            testWindow,\n            $,\n            brackets,\n            CodeInspection,\n            EditorManager;\n\n        var toggleJSLintResults = function (visible) {\n            $(\"#status-inspection\").triggerHandler(\"click\");\n            expect($(\"#problems-panel\").is(\":visible\")).toBe(visible);\n        };\n\n        beforeEach(async function () {\n            testWindow = await SpecRunnerUtils.createTestWindowAndRun();\n            // Load module instances from brackets.test\n            $ = testWindow.$;\n            brackets = testWindow.brackets;\n            EditorManager = testWindow.brackets.test.EditorManager;\n            CodeInspection = testWindow.brackets.test.CodeInspection;\n            CodeInspection.toggleEnabled(true);\n\n            await SpecRunnerUtils.loadProjectInTestWindow(testFolder);\n        });\n\n        afterEach(async function () {\n            testWindow    = null;\n            $             = null;\n            brackets      = null;\n            EditorManager = null;\n            await SpecRunnerUtils.closeTestWindow();\n        });\n\n        it(\"should run JSLint linter when a JavaScript document opens\", async function () {\n            spyOn(testWindow, \"JSLINT\").and.callThrough();\n\n            await awaitsForDone(SpecRunnerUtils.openProjectFiles([\"errors.js\"]), \"open test file\");\n\n            expect(testWindow.JSLINT).toHaveBeenCalled();\n        });\n\n        it(\"status icon should toggle Errors panel when errors present\", async function () {\n            await awaitsForDone(SpecRunnerUtils.openProjectFiles([\"errors.js\"]), \"open test file\");\n\n            toggleJSLintResults(false);\n            toggleJSLintResults(true);\n        });\n\n        // the file no-errors.js has actually js lint errors, so the below tests as failing.\n        // as we are deprecating jslint, we are not investing in the fix.\n        // it(\"status icon should not toggle Errors panel when no errors present\", async function () {\n        //     await awaitsForDone(SpecRunnerUtils.openProjectFiles([\"no-errors.js\"]), \"open test file\");\n        //\n        //     toggleJSLintResults(false);\n        //     toggleJSLintResults(false);\n        // });\n        //\n        // it(\"should default to the editor's indent\", async function () {\n        //     await awaitsForDone(SpecRunnerUtils.openProjectFiles([\"different-indent.js\"]), \"open test file\");\n        //\n        //     toggleJSLintResults(false);\n        //     toggleJSLintResults(false);\n        // });\n    });\n});\n"],"file":"unittests.js"}