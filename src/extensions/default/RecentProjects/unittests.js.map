{"version":3,"sources":["extensions/default/RecentProjects/unittests.js"],"names":["define","require","exports","module","SpecRunnerUtils","brackets","getModule","FileUtils","KeyEvent","_","describe","extensionPath","getNativeModuleDirectoryPath","testWindow","$","CommandManager","PreferencesManager","async","openRecentProjectDropDown","execute","awaitsFor","is","setupRecentProjectsSpy","howManyProjects","spyOn","and","callFake","prefId","map","range","num","beforeAll","createTestWindowAndRun","test","afterAll","closeTestWindow","it","$dropDown","expect","children","length","toEqual","find","simulateKeyEvent","DOM_VK_DOWN","DOM_VK_DELETE"],"mappings":"AAuBAA,OAAO,SAAUC,QAASC,QAASC,QAG/B,IAAIC,gBAAkBC,SAASC,UAAU,wBACrCC,UAAkBF,SAASC,UAAU,kBACrCE,SAAkBH,SAASC,UAAU,kBACrCG,EAAkBJ,SAASC,UAAU,qBAEzCI,SAAS,4BAA6B,WAClC,IAAIC,cAAgBJ,UAAUK,6BAA6BT,QACvDU,WACAC,EACAC,eACAC,mBAcJC,eAAeC,4BACXH,eAAeI,QAAQ,+BACjBC,UAAU,WACZ,OAAON,EAAE,qBAAqBO,GAAG,cAIzC,SAASC,uBAAuBC,iBAC5BC,MAAMR,mBAAoB,gBAAgBS,IAAIC,SAAS,SAAUC,QAC7D,MAAe,mBAAXA,OAEOlB,EAAEmB,IAAInB,EAAEoB,MAAM,EAAGN,gBAAkB,GAAI,SAAUO,KAAO,OAAOnB,cAAgB,iBAAmBmB,MAEtG,KAzBfC,UAAUd,iBACNJ,iBAAmBT,gBAAgB4B,yBACnClB,EAAID,WAAWC,EACfC,eAAkBF,WAAWR,SAAS4B,KAAKlB,eAC3CC,mBAAqBH,WAAWR,SAAS4B,KAAKjB,oBAC/C,KAEHkB,SAASjB,iBACLJ,WAAa,WACPT,gBAAgB+B,oBAqB1BzB,SAAS,KAAM,WACX0B,GAAG,6EAA8EnB,uBACvEC,4BAEN,IAAImB,UAAYvB,EAAE,qBAClBwB,OAAOD,UAAUE,WAAWC,QAAQC,QAAQ,KAGhDL,GAAG,iEAAkEnB,iBACjEK,uBAAuB,SAEjBJ,4BAEN,IAAImB,UAAYvB,EAAE,qBAClBwB,OAAOD,UAAUK,KAAK,uBAAuBF,QAAQC,QAAQ,KAGjEL,GAAG,mFAAoFnB,iBACnFK,uBAAuB,SAEjBJ,4BAEN,IAAImB,UAAYvB,EAAE,qBAClBV,gBAAgBuC,iBAAiBnC,SAASoC,YAAa,UAAWP,UAAU,IAC5EjC,gBAAgBuC,iBAAiBnC,SAASqC,cAAe,UAAWR,UAAU,IAE9E,IAAIA,UAAYvB,EAAE,qBAClBwB,OAAOD,UAAUK,KAAK,uBAAuBF,QAAQC,QAAQ","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2014 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/*global describe, it, expect, beforeAll, afterAll, awaitsFor, spyOn */\n\ndefine(function (require, exports, module) {\n\n\n    var SpecRunnerUtils = brackets.getModule(\"spec/SpecRunnerUtils\"),\n        FileUtils       = brackets.getModule(\"file/FileUtils\"),\n        KeyEvent        = brackets.getModule(\"utils/KeyEvent\"),\n        _               = brackets.getModule(\"thirdparty/lodash\");\n\n    describe(\"extension:Recent Projects\", function () {\n        var extensionPath = FileUtils.getNativeModuleDirectoryPath(module),\n            testWindow,\n            $,\n            CommandManager,\n            PreferencesManager;\n\n        beforeAll(async function () {\n            testWindow = await SpecRunnerUtils.createTestWindowAndRun();\n            $ = testWindow.$;\n            CommandManager  = testWindow.brackets.test.CommandManager;\n            PreferencesManager = testWindow.brackets.test.PreferencesManager;\n        }, 30000);\n\n        afterAll(async function () {\n            testWindow = null;\n            await SpecRunnerUtils.closeTestWindow();\n        });\n\n        async function openRecentProjectDropDown() {\n            CommandManager.execute(\"recentProjects.toggle\");\n            await awaitsFor(function () {\n                return $(\"#project-dropdown\").is(\":visible\");\n            });\n        }\n\n        function setupRecentProjectsSpy(howManyProjects) {\n            spyOn(PreferencesManager, \"getViewState\").and.callFake(function (prefId) {\n                if (prefId === \"recentProjects\") {\n                    // return howManyProjects number of fake recent projects entries\n                    return _.map(_.range(1, howManyProjects + 1), function (num) { return extensionPath + \"/Test-Project-\" + num; });\n                }\n                return [];\n\n            });\n        }\n\n        describe(\"UI\", function () {\n            it(\"should open the recent projects list with only the getting started project\", async function () {\n                await openRecentProjectDropDown();\n\n                var $dropDown = $(\"#project-dropdown\");\n                expect($dropDown.children().length).toEqual(2); // new project and open project menu item\n            });\n\n            it(\"should open the recent project list and show 5 recent projects\", async function () {\n                setupRecentProjectsSpy(5);\n\n                await openRecentProjectDropDown();\n\n                var $dropDown = $(\"#project-dropdown\");\n                expect($dropDown.find(\".recent-folder-link\").length).toEqual(5);\n            });\n\n            it(\"should delete one project from recent project list when delete key is pressed on\", async function () {\n                setupRecentProjectsSpy(5);\n\n                await openRecentProjectDropDown();\n\n                var $dropDown = $(\"#project-dropdown\");\n                SpecRunnerUtils.simulateKeyEvent(KeyEvent.DOM_VK_DOWN, \"keydown\", $dropDown[0]);\n                SpecRunnerUtils.simulateKeyEvent(KeyEvent.DOM_VK_DELETE, \"keydown\", $dropDown[0]);\n\n                var $dropDown = $(\"#project-dropdown\");\n                expect($dropDown.find(\".recent-folder-link\").length).toEqual(4);\n            });\n        });\n    });\n});\n"],"file":"unittests.js"}