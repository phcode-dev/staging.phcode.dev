{"version":3,"sources":["extensions/default/RecentProjects/main.js"],"names":["define","require","exports","module","ProjectManager","brackets","getModule","SidebarView","PreferencesManager","Commands","CommandManager","KeyBindingManager","Menus","MainViewManager","ExtensionUtils","FileSystem","AppInit","KeyEvent","FileUtils","PopUpManager","Strings","Mustache","ProjectsMenuTemplate","ExtensionInterface","RECENT_PROJECTS_INTERFACE","registerExtensionInterface","KeyboardPrefs","JSON","parse","TOGGLE_DROPDOWN","MAX_PROJECTS","$dropdownItem","$dropdown","$links","getRecentProjects","recentProjects","getViewState","i","length","stripTrailingSlash","updateWelcomeProjectPath","add","root","getProjectRoot","fullPath","index","indexOf","splice","unshift","slice","setViewState","checkHovers","pageX","pageY","children","each","offset","$","this","width","outerWidth","height","outerHeight","left","top","triggerHandler","removeFromRecentProject","newProjects","push","renderDelete","mouseup","e","stopPropagation","parent","data","closest","remove","find","removeDeleteButton","addDeleteButton","$target","css","position","appendTo","selectNextItem","direction","$newItem","eq","removeClass","addClass","removeSelectedItem","$cacheItem","keydownHook","event","keyHandled","keyCode","DOM_VK_UP","DOM_VK_DOWN","DOM_VK_ENTER","DOM_VK_RETURN","trigger","DOM_VK_BACK_SPACE","DOM_VK_DELETE","stopImmediatePropagation","preventDefault","closeDropdown","removePopUp","cleanupDropdown","off","focusActivePane","window","openProjectWithPath","Promise","resolve","reject","openProject","then","fail","err","item","_handleListEvents","on","$link","id","attr","path","execute","FILE_OPEN_FOLDER","FILE_NEW_PROJECT","hasClass","get","parsePath","lastSlash","lastIndexOf","folder","rest","renderList","currentProject","templateVars","projectList","forEach","render","showDropdown","closeAll","addPopUp","handleKeyEvent","isVisible","show","focus","setTimeout","register","CMD_TOGGLE_RECENT_PROJECTS","addBinding","appReady","loadStyleSheet","htmlReady","wrap","after","cmenuAdapter","open","close","isOpen","ContextMenu","assignContextMenuToSelector"],"mappings":"AAqBAA,OAAO,SAAUC,QAASC,QAASC,QAI/B,IAAIC,eAA0BC,SAASC,UAAU,0BAC7CC,YAA0BF,SAASC,UAAU,uBAC7CE,mBAA0BH,SAASC,UAAU,kCAC7CG,SAA0BJ,SAASC,UAAU,oBAC7CI,eAA0BL,SAASC,UAAU,0BAC7CK,kBAA0BN,SAASC,UAAU,6BAC7CM,MAA0BP,SAASC,UAAU,iBAC7CO,gBAA0BR,SAASC,UAAU,wBAC7CQ,eAA0BT,SAASC,UAAU,wBAC7CS,WAA0BV,SAASC,UAAU,yBAC7CU,QAA0BX,SAASC,UAAU,iBAC7CW,SAA0BZ,SAASC,UAAU,kBAC7CY,UAA0Bb,SAASC,UAAU,kBAC7Ca,aAA0Bd,SAASC,UAAU,wBAC7Cc,QAA0Bf,SAASC,UAAU,WAC7Ce,SAA0BhB,SAASC,UAAU,gCAC7CgB,qBAA0BrB,QAAQ,uCAClCsB,mBAEJ,MAAMC,0BAA4B,8BAFTnB,SAASC,UAAU,4BAIzBmB,2BAA2BD,0BAA2BtB,SAEzE,IAAIwB,cAAgBC,KAAKC,MAAM3B,QAAQ,uBAGvC,IAAI4B,gBAAkB,wBAGtB,IAAIC,aAAe,GAGfC,cACAC,UACAC,OAMJ,SAASC,oBACL,IAAIC,eAAiB3B,mBAAmB4B,aAAa,mBAAqB,GACtEC,EAEJ,IAAKA,EAAI,EAAGA,EAAIF,eAAeG,OAAQD,IAEnCF,eAAeE,GAAKnB,UAAUqB,mBAAmBnC,eAAeoC,yBAAyBL,eAAeE,GAAK,MAEjH,OAAOF,eAMX,SAASM,MACL,IAAIC,KAAOxB,UAAUqB,mBAAmBnC,eAAeuC,iBAAiBC,UACpET,eAAiBD,oBACjBW,MAAQV,eAAeW,QAAQJ,OAEpB,IAAXG,OACAV,eAAeY,OAAOF,MAAO,GAEjCV,eAAea,QAAQN,MACnBP,eAAeG,OAASR,eACxBK,eAAiBA,eAAec,MAAM,EAAGnB,eAE7CtB,mBAAmB0C,aAAa,iBAAkBf,gBAQtD,SAASgB,YAAYC,MAAOC,OACxBrB,UAAUsB,WAAWC,KAAK,WACtB,IAAIC,OAASC,EAAEC,MAAMF,SACjBG,MAASF,EAAEC,MAAME,aACjBC,OAASJ,EAAEC,MAAMI,cAEjBV,OAASI,OAAOO,MAAQX,OAASI,OAAOO,KAAOJ,OAC3CN,OAASG,OAAOQ,KAAOX,OAASG,OAAOQ,IAAMH,QACjDJ,EAAE,sBAAuBC,MAAMO,eAAe,gBAK1D,SAASC,wBAAwBtB,UAC7B,IAAIT,eAAiBD,oBACjBW,MAAQV,eAAeW,QAAQF,UAC/BuB,YAAc,GACd9B,EACJ,IAAKA,EAAI,EAAGA,EAAIF,eAAeG,OAAQD,IAC/BA,IAAMQ,OACNsB,YAAYC,KAAKjC,eAAeE,IAGxC7B,mBAAmB0C,aAAa,iBAAkBiB,aAMtD,SAASE,eACL,OAAOZ,EAAE,mEACJa,QAAQ,SAAUC,GAEfA,EAAEC,kBAGFN,wBAAwBT,EAAEC,MAAMe,SAASC,KAAK,SAC9CjB,EAAEC,MAAMiB,QAAQ,MAAMC,SACtBzB,YAAYoB,EAAEnB,MAAOmB,EAAElB,OAEY,IAA/BnB,oBAAoBI,QACpBN,UAAU6C,KAAK,YAAYD,WAQ3C,SAASE,qBACLrB,EAAE,yBAAyBmB,SAM/B,SAASG,gBAAgBC,SACrBF,qBACAT,eACKY,IAAI,MAAOD,QAAQE,WAAWlB,IAAM,GACpCmB,SAASH,SAQlB,SAASI,eAAeC,WACpB,IAAIpD,OAAWD,UAAU6C,KAAK,KAC1BhC,MAAWd,cAAgBE,OAAOY,MAAMd,eAAkBsD,UAAY,GAAK,EAAI,EAC/EC,SAAWrD,OAAOsD,IAAI1C,MAAQwC,WAAapD,OAAOK,QAElDP,eACAA,cAAcyD,YAAY,YAE9BF,SAASG,SAAS,YAElB1D,cAAgBuD,SAChBR,qBASJ,SAASY,mBAAmBnB,GACxB,IAAIpC,eAAiBD,oBACjByD,WAAa5D,cACbc,MAAQV,eAAeW,QAAQ6C,WAAWjB,KAAK,SAGnD,OAAe,IAAX7B,QAKJV,eAAeY,OAAOF,MAAO,GAC7BrC,mBAAmB0C,aAAa,iBAAkBf,gBAClDgB,YAAYoB,EAAEnB,MAAOmB,EAAElB,OAEO,IAA1BlB,eAAeG,QACfN,UAAU6C,KAAK,YAAYD,SAE/BQ,eAAe,GACfO,WAAWhB,QAAQ,MAAMC,UAClB,GAQX,SAASgB,YAAYC,OACjB,IAAIC,YAAa,EAEjB,OAAQD,MAAME,SACd,KAAK9E,SAAS+E,UACVZ,gBAAgB,GAChBU,YAAa,EACb,MACJ,KAAK7E,SAASgF,YACVb,eAAe,GACfU,YAAa,EACb,MACJ,KAAK7E,SAASiF,aACd,KAAKjF,SAASkF,cACNpE,eACAA,cAAcqE,QAAQ,SAE1BN,YAAa,EACb,MACJ,KAAK7E,SAASoF,kBACd,KAAKpF,SAASqF,cACNvE,gBACA2D,mBAAmBG,OACnBC,YAAa,GASrB,OAJIA,aACAD,MAAMU,2BACNV,MAAMW,kBAEHV,WAOX,SAASW,gBAIDzE,WACAb,aAAauF,YAAY1E,WAQjC,SAAS2E,kBACLlD,EAAE,QAAQmD,IAAI,QAASH,eACvBhD,EAAE,4BAA4BmD,IAAI,SAAUH,eAC5ChD,EAAE,kBAAkBmD,IAAI,QAASH,eACjCzE,UAAY,KAEZnB,gBAAgBgG,kBAEhBpD,EAAEqD,QAAQF,IAAI,UAAWhB,aAG7B,SAASmB,oBAAoBnE,UACzB,OAAO,IAAIoE,QAAQ,CAACC,QAASC,UACzB9G,eAAe+G,YAAYvE,UACtBwE,KAAKH,SACLI,KAAK,WAEF,IAAIlF,eAAiBD,oBACjBW,MAAQV,eAAeW,QAAQF,WACpB,IAAXC,MAIJ9B,WAAWkG,QAAQrE,SAAU,SAAU0E,IAAKC,MACpCD,KACAnF,eAAeY,OAAOF,MAAO,GAEjCqE,WAPAA,aAgBpB,SAASM,oBACLxF,UACKyF,GAAG,QAAS,IAAK,WACd,IAAIC,MAAQjE,EAAEC,MACViE,GAAQD,MAAME,KAAK,MACnBC,KAAQH,MAAMhD,KAAK,QAEnBmD,MACAd,oBAAoBc,MACpBpB,iBAEc,qBAAPkB,GACPjH,eAAeoH,QAAQrH,SAASsH,kBAClB,qBAAPJ,IACPjH,eAAeoH,QAAQrH,SAASuH,oBAIvCP,GAAG,aAAc,IAAK,WACf1F,eACAA,cAAcyD,YAAY,aAE9BzD,cAAgB0B,EAAEC,MAAM+B,SAAS,aAEfwC,SAAS,uBAGvBlD,gBAAgBtB,EAAEC,SAGzB+D,GAAG,aAAc,IAAK,WACnB,IAAIC,MAAQjE,EAAEC,MAAM8B,YAAY,YAE5BkC,MAAMQ,IAAI,KAAOnG,cAAcmG,IAAI,KACnCnG,cAAgB,MAEhB2F,MAAMO,SAAS,uBACfnD,uBAUhB,SAASqD,UAAUN,MACf,IAAIO,UAAYP,KAAKQ,YAAY,KAAMC,OAAQC,KAY/C,OAXIH,YAAcP,KAAKvF,OAAS,IAC5B8F,UAAYP,KAAK5E,MAAM,EAAG4E,KAAKvF,OAAS,GAAG+F,YAAY,MAEvDD,WAAa,GACbG,KAAO,OAASH,UAAYP,KAAK5E,MAAM,EAAGmF,WAAa,KACvDE,OAAST,KAAK5E,MAAMmF,UAAY,KAEhCG,KAAO,IACPD,OAAST,MAGN,CAACA,KAAMA,KAAMS,OAAQA,OAAQC,KAAMA,MAO9C,SAASC,aACL,IAAIrG,eAAiBD,oBACjBuG,eAAiBvH,UAAUqB,mBAAmBnC,eAAeuC,iBAAiBC,UAC9E8F,aAAiB,CACbC,YAAa,GACbvH,QAASA,SASjB,OANAe,eAAeyG,QAAQ,SAAUlG,MACzBA,OAAS+F,gBACTC,aAAaC,YAAYvE,KAAK+D,UAAUzF,SAIzCrB,SAASwH,OAAOvH,qBAAsBoH,cAQjD,SAASI,aAAa5D,UAGdlD,YAIJpB,MAAMmI,WAEN/G,UAAYyB,EAAE+E,cACTvD,IAAI,CACDlB,KAAMmB,SAAS9B,MACfY,IAAKkB,SAAS7B,QAEjB8B,SAAS1B,EAAE,SAEhBtC,aAAa6H,SAAShH,UAAW2E,iBAAiB,GAIlDlD,EAAE,QAAQgE,GAAG,QAAShB,eAOtBhD,EAAE,4BAA4BgE,GAAG,SAAUhB,eAO3ChD,EAAE,kBAAkBgE,GAAG,QAAShB,eAEhCe,oBACA/D,EAAEqD,QAAQW,GAAG,UAAW7B,cAO5B,SAASqD,iBACAjH,YACIzB,YAAY2I,aACb3I,YAAY4I,OAGhB1F,EAAE,4BAA4B2C,QAAQ,SAEtCpE,UAAUoH,QACVnH,OAASD,UAAU6C,KAAK,MAGxB9C,cAAgBE,OAAOsD,GAAGtD,OAAOK,OAAS,EAAI,EAAI,IACpCmD,SAAS,YAGvBqB,OAAOuC,WAAW,WACdrH,UAAUoH,SACX,IAKX1I,eAAe4I,SAASlI,QAAQmI,2BAA4B1H,gBAAiBoH,gBAC7EtI,kBAAkB6I,WAAW3H,gBAAiBH,cAAcS,gBAG5DnB,QAAQyI,SAAS,WACb3I,eAAe4I,eAAevJ,OAAQ,sBAEtCC,eAAeqH,GAAG,cAAehF,KACjCrC,eAAeqH,GAAG,qBAAsBhF,OAG5CzB,QAAQ2I,UAAU,WACdlG,EAAE,kBACGmG,KAAK,kEACLC,MAAM,wCAEX,IAAIC,aAAe,CACfC,KAAMjB,aACNkB,MAAOvD,cACPwD,OAAQ,WACJ,QAASjI,YAGjBpB,MAAMsJ,YAAYC,4BAA4B,2BAA4BL,gBAG9E5J,QAAQgC,kBAAoBA,kBAC5BhC,QAAQ6G,oBAAsBA,oBAC9B7G,QAAQgE,wBAA0BA","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2012 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\ndefine(function (require, exports, module) {\n\n\n    // Brackets modules\n    var ProjectManager          = brackets.getModule(\"project/ProjectManager\"),\n        SidebarView             = brackets.getModule(\"project/SidebarView\"),\n        PreferencesManager      = brackets.getModule(\"preferences/PreferencesManager\"),\n        Commands                = brackets.getModule(\"command/Commands\"),\n        CommandManager          = brackets.getModule(\"command/CommandManager\"),\n        KeyBindingManager       = brackets.getModule(\"command/KeyBindingManager\"),\n        Menus                   = brackets.getModule(\"command/Menus\"),\n        MainViewManager         = brackets.getModule(\"view/MainViewManager\"),\n        ExtensionUtils          = brackets.getModule(\"utils/ExtensionUtils\"),\n        FileSystem              = brackets.getModule(\"filesystem/FileSystem\"),\n        AppInit                 = brackets.getModule(\"utils/AppInit\"),\n        KeyEvent                = brackets.getModule(\"utils/KeyEvent\"),\n        FileUtils               = brackets.getModule(\"file/FileUtils\"),\n        PopUpManager            = brackets.getModule(\"widgets/PopUpManager\"),\n        Strings                 = brackets.getModule(\"strings\"),\n        Mustache                = brackets.getModule(\"thirdparty/mustache/mustache\"),\n        ProjectsMenuTemplate    = require(\"text!htmlContent/projects-menu.html\"),\n        ExtensionInterface = brackets.getModule(\"utils/ExtensionInterface\");\n\n    const RECENT_PROJECTS_INTERFACE = \"Extn.Phoenix.recentProjects\";\n\n    ExtensionInterface.registerExtensionInterface(RECENT_PROJECTS_INTERFACE, exports);\n\n    var KeyboardPrefs = JSON.parse(require(\"text!keyboard.json\"));\n\n    /** @const {string} Recent Projects commands ID */\n    let TOGGLE_DROPDOWN = \"recentProjects.toggle\";\n\n    /** @const {number} Maximum number of displayed recent projects */\n    var MAX_PROJECTS = 20;\n\n    /** @type {$.Element} jQuery elements used for the dropdown menu */\n    var $dropdownItem,\n        $dropdown,\n        $links;\n\n    /**\n     * Get the stored list of recent projects, fixing up paths as appropriate.\n     * Warning: unlike most paths in Brackets, these lack a trailing \"/\"\n     */\n    function getRecentProjects() {\n        var recentProjects = PreferencesManager.getViewState(\"recentProjects\") || [],\n            i;\n\n        for (i = 0; i < recentProjects.length; i++) {\n            // We have to canonicalize & then de-canonicalize the path here, since our pref format uses no trailing \"/\"\n            recentProjects[i] = FileUtils.stripTrailingSlash(ProjectManager.updateWelcomeProjectPath(recentProjects[i] + \"/\"));\n        }\n        return recentProjects;\n    }\n\n    /**\n     * Add a project to the stored list of recent projects, up to MAX_PROJECTS.\n     */\n    function add() {\n        var root = FileUtils.stripTrailingSlash(ProjectManager.getProjectRoot().fullPath),\n            recentProjects = getRecentProjects(),\n            index = recentProjects.indexOf(root);\n\n        if (index !== -1) {\n            recentProjects.splice(index, 1);\n        }\n        recentProjects.unshift(root);\n        if (recentProjects.length > MAX_PROJECTS) {\n            recentProjects = recentProjects.slice(0, MAX_PROJECTS);\n        }\n        PreferencesManager.setViewState(\"recentProjects\", recentProjects);\n    }\n\n    /**\n     * Check the list of items to see if any of them are hovered, and if so trigger a mouseenter.\n     * Normally the mouseenter event handles this, but when a previous item is deleted and the next\n     * item moves up to be underneath the mouse, we don't get a mouseenter event for that item.\n     */\n    function checkHovers(pageX, pageY) {\n        $dropdown.children().each(function () {\n            var offset = $(this).offset(),\n                width  = $(this).outerWidth(),\n                height = $(this).outerHeight();\n\n            if (pageX >= offset.left && pageX <= offset.left + width &&\n                    pageY >= offset.top && pageY <= offset.top + height) {\n                $(\".recent-folder-link\", this).triggerHandler(\"mouseenter\");\n            }\n        });\n    }\n\n    function removeFromRecentProject(fullPath) {\n        let recentProjects = getRecentProjects(),\n            index = recentProjects.indexOf(fullPath),\n            newProjects = [],\n            i;\n        for (i = 0; i < recentProjects.length; i++) {\n            if (i !== index) {\n                newProjects.push(recentProjects[i]);\n            }\n        }\n        PreferencesManager.setViewState(\"recentProjects\", newProjects);\n    }\n\n    /**\n     * Create the \"delete\" button that shows up when you hover over a project.\n     */\n    function renderDelete() {\n        return $(\"<div id='recent-folder-delete' class='trash-icon'>&times;</div>\")\n            .mouseup(function (e) {\n                // Don't let the click bubble upward.\n                e.stopPropagation();\n\n                // Remove the project from the preferences.\n                removeFromRecentProject($(this).parent().data(\"path\"));\n                $(this).closest(\"li\").remove();\n                checkHovers(e.pageX, e.pageY);\n\n                if (getRecentProjects().length === 1) {\n                    $dropdown.find(\".divider\").remove();\n                }\n            });\n    }\n\n    /**\n     * Hide the delete button.\n     */\n    function removeDeleteButton() {\n        $(\"#recent-folder-delete\").remove();\n    }\n\n    /**\n     * Show the delete button over a given target.\n     */\n    function addDeleteButton($target) {\n        removeDeleteButton();\n        renderDelete()\n            .css(\"top\", $target.position().top + 6)\n            .appendTo($target);\n    }\n\n\n    /**\n     * Selects the next or previous item in the list\n     * @param {number} direction  +1 for next, -1 for prev\n     */\n    function selectNextItem(direction) {\n        var $links   = $dropdown.find(\"a\"),\n            index    = $dropdownItem ? $links.index($dropdownItem) : (direction > 0 ? -1 : 0),\n            $newItem = $links.eq((index + direction) % $links.length);\n\n        if ($dropdownItem) {\n            $dropdownItem.removeClass(\"selected\");\n        }\n        $newItem.addClass(\"selected\");\n\n        $dropdownItem = $newItem;\n        removeDeleteButton();\n    }\n\n    /**\n     * Deletes the selected item and\n     * move the focus to next item in list.\n     *\n     * @return {boolean} TRUE if project is removed\n     */\n    function removeSelectedItem(e) {\n        var recentProjects = getRecentProjects(),\n            $cacheItem = $dropdownItem,\n            index = recentProjects.indexOf($cacheItem.data(\"path\"));\n\n        // When focus is not on project item\n        if (index === -1) {\n            return false;\n        }\n\n        // remove project\n        recentProjects.splice(index, 1);\n        PreferencesManager.setViewState(\"recentProjects\", recentProjects);\n        checkHovers(e.pageX, e.pageY);\n\n        if (recentProjects.length === 1) {\n            $dropdown.find(\".divider\").remove();\n        }\n        selectNextItem(+1);\n        $cacheItem.closest(\"li\").remove();\n        return true;\n    }\n\n    /**\n     * Handles the Key Down events\n     * @param {KeyboardEvent} event\n     * @return {boolean} True if the key was handled\n     */\n    function keydownHook(event) {\n        var keyHandled = false;\n\n        switch (event.keyCode) {\n        case KeyEvent.DOM_VK_UP:\n            selectNextItem(-1);\n            keyHandled = true;\n            break;\n        case KeyEvent.DOM_VK_DOWN:\n            selectNextItem(+1);\n            keyHandled = true;\n            break;\n        case KeyEvent.DOM_VK_ENTER:\n        case KeyEvent.DOM_VK_RETURN:\n            if ($dropdownItem) {\n                $dropdownItem.trigger(\"click\");\n            }\n            keyHandled = true;\n            break;\n        case KeyEvent.DOM_VK_BACK_SPACE:\n        case KeyEvent.DOM_VK_DELETE:\n            if ($dropdownItem) {\n                removeSelectedItem(event);\n                keyHandled = true;\n            }\n            break;\n        }\n\n        if (keyHandled) {\n            event.stopImmediatePropagation();\n            event.preventDefault();\n        }\n        return keyHandled;\n    }\n\n\n    /**\n     * Close the dropdown.\n     */\n    function closeDropdown() {\n        // Since we passed \"true\" for autoRemove to addPopUp(), this will\n        // automatically remove the dropdown from the DOM. Also, PopUpManager\n        // will call cleanupDropdown().\n        if ($dropdown) {\n            PopUpManager.removePopUp($dropdown);\n        }\n    }\n\n    /**\n     * Remove the various event handlers that close the dropdown. This is called by the\n     * PopUpManager when the dropdown is closed.\n     */\n    function cleanupDropdown() {\n        $(\"html\").off(\"click\", closeDropdown);\n        $(\"#project-files-container\").off(\"scroll\", closeDropdown);\n        $(\"#titlebar .nav\").off(\"click\", closeDropdown);\n        $dropdown = null;\n\n        MainViewManager.focusActivePane();\n\n        $(window).off(\"keydown\", keydownHook);\n    }\n\n    function openProjectWithPath(fullPath) {\n        return new Promise((resolve, reject)=>{\n            ProjectManager.openProject(fullPath)\n                .then(resolve)\n                .fail(function () {\n                    // Remove the project from the list only if it does not exist on disk\n                    var recentProjects = getRecentProjects(),\n                        index = recentProjects.indexOf(fullPath);\n                    if (index === -1) {\n                        reject();\n                        return;\n                    }\n                    FileSystem.resolve(fullPath, function (err, item) {\n                        if (err) {\n                            recentProjects.splice(index, 1);\n                        }\n                        reject();\n                    });\n                });\n        });\n    }\n\n    /**\n     * Adds the click and mouse enter/leave events to the dropdown\n     */\n    function _handleListEvents() {\n        $dropdown\n            .on(\"click\", \"a\", function () {\n                var $link = $(this),\n                    id    = $link.attr(\"id\"),\n                    path  = $link.data(\"path\");\n\n                if (path) {\n                    openProjectWithPath(path);\n                    closeDropdown();\n\n                } else if (id === \"open-folder-link\") {\n                    CommandManager.execute(Commands.FILE_OPEN_FOLDER);\n                } else if (id === \"new-project-link\") {\n                    CommandManager.execute(Commands.FILE_NEW_PROJECT);\n                }\n\n            })\n            .on(\"mouseenter\", \"a\", function () {\n                if ($dropdownItem) {\n                    $dropdownItem.removeClass(\"selected\");\n                }\n                $dropdownItem = $(this).addClass(\"selected\");\n\n                if ($dropdownItem.hasClass(\"recent-folder-link\")) {\n                    // Note: we can't depend on the event here because this can be triggered\n                    // manually from checkHovers().\n                    addDeleteButton($(this));\n                }\n            })\n            .on(\"mouseleave\", \"a\", function () {\n                var $link = $(this).removeClass(\"selected\");\n\n                if ($link.get(0) === $dropdownItem.get(0)) {\n                    $dropdownItem = null;\n                }\n                if ($link.hasClass(\"recent-folder-link\")) {\n                    removeDeleteButton();\n                }\n            });\n    }\n\n    /**\n     * Parses the path and returns an object with the full path, the folder name and the path without the folder.\n     * @param {string} path The full path to the folder.\n     * @return {{path: string, folder: string, rest: string}}\n     */\n    function parsePath(path) {\n        var lastSlash = path.lastIndexOf(\"/\"), folder, rest;\n        if (lastSlash === path.length - 1) {\n            lastSlash = path.slice(0, path.length - 1).lastIndexOf(\"/\");\n        }\n        if (lastSlash >= 0) {\n            rest = \" - \" + (lastSlash ? path.slice(0, lastSlash) : \"/\");\n            folder = path.slice(lastSlash + 1);\n        } else {\n            rest = \"/\";\n            folder = path;\n        }\n\n        return {path: path, folder: folder, rest: rest};\n    }\n\n    /**\n     * Create the list of projects in the dropdown menu.\n     * @return {string} The html content\n     */\n    function renderList() {\n        var recentProjects = getRecentProjects(),\n            currentProject = FileUtils.stripTrailingSlash(ProjectManager.getProjectRoot().fullPath),\n            templateVars   = {\n                projectList: [],\n                Strings: Strings\n            };\n\n        recentProjects.forEach(function (root) {\n            if (root !== currentProject) {\n                templateVars.projectList.push(parsePath(root));\n            }\n        });\n\n        return Mustache.render(ProjectsMenuTemplate, templateVars);\n    }\n\n    /**\n     * Show or hide the recent projects dropdown.\n     *\n     * @param {{pageX:number, pageY:number}} position - the absolute position where to open the dropdown\n     */\n    function showDropdown(position) {\n        // If the dropdown is already visible, just return (so the root click handler on html\n        // will close it).\n        if ($dropdown) {\n            return;\n        }\n\n        Menus.closeAll();\n\n        $dropdown = $(renderList())\n            .css({\n                left: position.pageX,\n                top: position.pageY\n            })\n            .appendTo($(\"body\"));\n\n        PopUpManager.addPopUp($dropdown, cleanupDropdown, true);\n\n        // TODO: should use capture, otherwise clicking on the menus doesn't close it. More fallout\n        // from the fact that we can't use the Boostrap (1.4) dropdowns.\n        $(\"html\").on(\"click\", closeDropdown);\n\n        // Hide the menu if the user scrolls in the project tree. Otherwise the Lion scrollbar\n        // overlaps it.\n        // TODO: This duplicates logic that's already in ProjectManager (which calls Menus.close()).\n        // We should fix this when the popup handling is centralized in PopupManager, as well\n        // as making Esc close the dropdown. See issue #1381.\n        $(\"#project-files-container\").on(\"scroll\", closeDropdown);\n\n        // Note: PopUpManager will automatically hide the sidebar in other cases, such as when a\n        // command is run, Esc is pressed, or the menu is focused.\n\n        // Hacky: if we detect a click in the menubar, close ourselves.\n        // TODO: again, we should have centralized popup management.\n        $(\"#titlebar .nav\").on(\"click\", closeDropdown);\n\n        _handleListEvents();\n        $(window).on(\"keydown\", keydownHook);\n    }\n\n\n    /**\n     * Show or hide the recent projects dropdown from the toogle command.\n     */\n    function handleKeyEvent() {\n        if (!$dropdown) {\n            if (!SidebarView.isVisible()) {\n                SidebarView.show();\n            }\n\n            $(\"#project-dropdown-toggle\").trigger(\"click\");\n\n            $dropdown.focus();\n            $links = $dropdown.find(\"a\");\n            // By default, select the most recent project (which is at the top of the list underneath Open Folder),\n            // but if there are none, select Open Folder instead.\n            $dropdownItem = $links.eq($links.length > 1 ? 1 : 0);\n            $dropdownItem.addClass(\"selected\");\n\n            // If focusing the dropdown caused a modal bar to close, we need to refocus the dropdown\n            window.setTimeout(function () {\n                $dropdown.focus();\n            }, 0);\n        }\n    }\n\n    // Register command handlers\n    CommandManager.register(Strings.CMD_TOGGLE_RECENT_PROJECTS, TOGGLE_DROPDOWN, handleKeyEvent);\n    KeyBindingManager.addBinding(TOGGLE_DROPDOWN, KeyboardPrefs.recentProjects);\n\n    // Initialize extension\n    AppInit.appReady(function () {\n        ExtensionUtils.loadStyleSheet(module, \"styles/styles.less\");\n\n        ProjectManager.on(\"projectOpen\", add);\n        ProjectManager.on(\"beforeProjectClose\", add);\n    });\n\n    AppInit.htmlReady(function () {\n        $(\"#project-title\")\n            .wrap(\"<div id='project-dropdown-toggle' class='btn-alt-quiet'></div>\")\n            .after(\"<span class='dropdown-arrow'></span>\");\n\n        var cmenuAdapter = {\n            open: showDropdown,\n            close: closeDropdown,\n            isOpen: function () {\n                return !!$dropdown;\n            }\n        };\n        Menus.ContextMenu.assignContextMenuToSelector(\"#project-dropdown-toggle\", cmenuAdapter);\n    });\n\n    exports.getRecentProjects = getRecentProjects;\n    exports.openProjectWithPath = openProjectWithPath;\n    exports.removeFromRecentProject = removeFromRecentProject;\n});\n"],"file":"main.js"}