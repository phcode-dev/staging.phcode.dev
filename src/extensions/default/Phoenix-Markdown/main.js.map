{"version":3,"sources":["extensions/default/Phoenix-Markdown/main.js"],"names":["define","require","exports","module","CommandManager","brackets","getModule","EditorManager","ExtensionUtils","WorkspaceManager","KeyBindingManager","ModalBar","Mustache","PreferencesManager","AppInit","NativeApp","DocumentManager","FileUtils","MainViewManager","PopUpManager","_","Handler","KeyboardPrefs","JSON","parse","Strings","panelHTML","previewHTML","settingsHTML","_markdownBarTemplate","prefs","getExtensionPrefs","marked","toolBar","barShouldShow","cmdToolbar","$icon","$iframe","$panel","$settingsToggle","$settings","currentDoc","currentEditor","panel","toggleCmd","visible","realVisibility","_prefs","_handleLinkClick","e","node","target","url","tagName","getAttribute","match","openURLInDefaultBrowser","preventDefault","parentElement","_hideSettings","_calcScrollPos","scrollInfo","_codeMirror","getScrollInfo","scrollPercentage","top","height","clientHeight","scrollTop","contentDocument","body","scrollHeight","Math","round","_editorScroll","get","_loadDoc","doc","isReload","docText","getText","scrollPos","bodyText","yamlRegEx","yamlMatch","exec","substr","length","contents","replace","innerHTML","baseUrl","window","location","protocol","getDirectoryPath","file","fullPath","htmlSource","template","themeUrl","toUrl","attr","off","load","addEventListener","_documentChange","_updateSettings","useGFM","setOptions","breaks","gfm","_documentClicked","is","has","remove","$","document","_showSettings","css","right","position","outerHeight","appendTo","find","prop","change","set","selectedIndex","val","value","$syncScroll","checked","addPopUp","on","_setPanelVisibility","isVisible","getCurrentDocument","toggleClass","show","hide","_currentDocChangedHandler","ext","getFileExtension","toLowerCase","test","getCurrentFullEditor","display","setEnabled","_toggleVisibility","setChecked","registerCallbacks","root","getRoot","h1","h2","h3","h4","h5","h6","bold","italic","strikethrough","code","bullet","numbered","quote","codeblock","image","link","paragraph","reflow","showBar","templateVars","render","closeBar","close","toggleBar","activeEditorChangeHandler","event","activeEditor","previousEditor","mode","_getModeFromDocument","definePreference","description","DESCRIPTION_MAX_LINE_LENGTH","BAR_COMMAND_ID","H1_COMMAND_ID","H2_COMMAND_ID","H3_COMMAND_ID","H4_COMMAND_ID","BOLD_COMMAND_ID","ITALIC_COMMAND_ID","STRIKE_COMMAND_ID","CODE_COMMAND_ID","BULLET_COMMAND_ID","NUMBERED_COMMAND_ID","QUOTE_COMMAND_ID","CODEBLOCK_COMMAND_ID","PARAGRAPH_COMMAND_ID","REFLOW_COMMAND_ID","_createPanel","minSize","innerWidth","createPluginPanel","recomputeLayout","click","register","MENU_TOOLBAR","HINT_H1","HINT_H2","HINT_H3","HINT_H4","HINT_BOLD","HINT_ITALIC","HINT_STRIKE","HINT_CODE","HINT_BULLET","HINT_NUMBERED","HINT_QUOTE","HINT_CODEBLOCK","HINT_PARAGRAPH","HINT_REFLOW","addBinding","heading1","heading2","heading3","heading4","loadStyleSheet","getActiveEditor","debounce","id","href","appReady"],"mappings":"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","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/*jslint vars: true, plusplus: true, devel: true, nomen: true, regexp: true, indent: 4, maxerr: 50 */\n/*global define, brackets */\n//jshint-ignore:no-start\n\ndefine(function (require, exports, module) {\n\n\n    var CommandManager     = brackets.getModule(\"command/CommandManager\"),\n        EditorManager      = brackets.getModule(\"editor/EditorManager\"),\n        ExtensionUtils     = brackets.getModule(\"utils/ExtensionUtils\"),\n        WorkspaceManager   = brackets.getModule(\"view/WorkspaceManager\"),\n        KeyBindingManager  = brackets.getModule(\"command/KeyBindingManager\"),\n        ModalBar           = brackets.getModule(\"widgets/ModalBar\").ModalBar,\n        Mustache           = brackets.getModule(\"thirdparty/mustache/mustache\"),\n        PreferencesManager = brackets.getModule(\"preferences/PreferencesManager\"),\n        AppInit            = brackets.getModule(\"utils/AppInit\"),\n        NativeApp          = brackets.getModule(\"utils/NativeApp\"),\n        DocumentManager    = brackets.getModule(\"document/DocumentManager\"),\n        FileUtils          = brackets.getModule(\"file/FileUtils\"),\n        MainViewManager    = brackets.getModule(\"view/MainViewManager\"),\n        PopUpManager       = brackets.getModule(\"widgets/PopUpManager\"),\n        _                  = brackets.getModule(\"thirdparty/lodash\");\n\n    var Handler = require(\"handler\"),\n        KeyboardPrefs = JSON.parse(require(\"text!keyboard.json\")),\n        Strings = require(\"strings\");\n\n\n    // Templates\n    var panelHTML       = require(\"text!templates/panel.html\"),\n        previewHTML     = require(\"text!templates/preview.html\"),\n        settingsHTML    = require(\"text!templates/settings.html\"),\n        _markdownBarTemplate = require(\"text!templates/markdown-bar.html\");\n\n    var prefs = PreferencesManager.getExtensionPrefs(\"markdownbar\");\n\n    // Local modules\n    var marked          = require(\"lib/marked\");\n\n    var toolBar = null,\n        barShouldShow = false,\n        cmdToolbar = null;\n\n    // jQuery objects\n    var $icon,\n        $iframe,\n        $panel,\n        $settingsToggle,\n        $settings;\n\n    // Other vars\n    var currentDoc,\n        currentEditor,\n        panel,\n        toggleCmd,\n        visible = false,\n        realVisibility = false;\n\n    // Prefs\n    var _prefs = PreferencesManager.getExtensionPrefs(\"markdown-preview\");\n    _prefs.definePreference(\"useGFM\", \"boolean\", false);\n    _prefs.definePreference(\"theme\", \"string\", \"clean\");\n    _prefs.definePreference(\"syncScroll\", \"boolean\", true);\n\n    // (based on code in brackets.js)\n    function _handleLinkClick(e) {\n        // Check parents too, in case link has inline formatting tags\n        var node = e.target, url;\n        while (node) {\n            if (node.tagName === \"A\") {\n                url = node.getAttribute(\"href\");\n                if (url && !url.match(/^#/)) {\n                    NativeApp.openURLInDefaultBrowser(url);\n                }\n                e.preventDefault();\n                break;\n            }\n            node = node.parentElement;\n        }\n\n        // Close settings dropdown, if open\n        _hideSettings();\n    }\n\n    function _calcScrollPos() {\n        var scrollInfo = currentEditor._codeMirror.getScrollInfo();\n        var scrollPercentage = scrollInfo.top / (scrollInfo.height - scrollInfo.clientHeight);\n        var scrollTop = ($iframe[0].contentDocument.body.scrollHeight - $iframe[0].clientHeight) * scrollPercentage;\n\n        return Math.round(scrollTop);\n    }\n\n    function _editorScroll() {\n        if (_prefs.get(\"syncScroll\") && $iframe) {\n            var scrollTop = _calcScrollPos();\n\n            $iframe[0].contentDocument.body.scrollTop = scrollTop;\n        }\n    }\n\n    function _loadDoc(doc, isReload) {\n        if (doc && visible && $iframe) {\n            var docText     = doc.getText(),\n                scrollPos   = 0,\n                bodyText    = \"\",\n                yamlRegEx   = /^-{3}([\\w\\W]+?)(-{3})/,\n                yamlMatch   = yamlRegEx.exec(docText);\n\n            // If there's yaml front matter, remove it.\n            if (yamlMatch) {\n                docText = docText.substr(yamlMatch[0].length);\n            }\n\n            if (isReload) {\n                scrollPos = $iframe.contents()[0].body.scrollTop;\n            } else if (_prefs.get(\"syncScroll\")) {\n                scrollPos = _calcScrollPos();\n            }\n\n            // Parse markdown into HTML\n            bodyText = marked(docText);\n\n            // Show URL in link tooltip\n            bodyText = bodyText.replace(/(href=\\\"([^\\\"]*)\\\")/g, \"$1 title=\\\"$2\\\"\");\n\n            // Convert protocol-relative URLS\n            bodyText = bodyText.replace(/src=\"\\/\\//g, \"src=\\\"http://\");\n\n            if (isReload) {\n                $iframe[0].contentDocument.body.innerHTML = bodyText;\n            } else {\n                // Make <base> tag for relative URLS\n                var baseUrl = window.location.protocol + \"//\" + FileUtils.getDirectoryPath(doc.file.fullPath);\n\n                // Assemble the HTML source\n                var htmlSource = _.template(previewHTML)({\n                    baseUrl: baseUrl,\n                    themeUrl: require.toUrl(\"./themes/\" + _prefs.get(\"theme\") + \".css\"),\n                    scrollTop: scrollPos,\n                    bodyText: bodyText\n                });\n                $iframe.attr(\"srcdoc\", htmlSource);\n\n                // Remove any existing load handlers\n                $iframe.off(\"load\");\n                $iframe.load(function () {\n                    // Open external browser when links are clicked\n                    // (similar to what brackets.js does - but attached to the iframe's document)\n                    $iframe[0].contentDocument.body.addEventListener(\"click\", _handleLinkClick, true);\n\n                    // Sync scroll position (if needed)\n                    if (!isReload) {\n                        _editorScroll();\n                    }\n                });\n            }\n        }\n    }\n\n    function _documentChange(e) {\n        _loadDoc(e.target, true);\n    }\n\n    function _updateSettings() {\n        // Format\n        var useGFM = _prefs.get(\"useGFM\");\n        marked.setOptions({\n            breaks: useGFM,\n            gfm: useGFM\n        });\n\n        // Re-render\n        _loadDoc(currentDoc);\n    }\n\n    function _documentClicked(e) {\n        if (!$settings.is(e.target) &&\n            !$settingsToggle.is(e.target) &&\n            $settings.has(e.target).length === 0) {\n            _hideSettings();\n        }\n    }\n\n    function _hideSettings() {\n        if ($settings) {\n            $settings.remove();\n            $settings = null;\n            $(window.document).off(\"mousedown\", _documentClicked);\n        }\n    }\n\n    function _showSettings(e) {\n        _hideSettings();\n\n        $settings = $(settingsHTML)\n            .css({\n                right: 12,\n                top: $settingsToggle.position().top + $settingsToggle.outerHeight() + 12\n            })\n            .appendTo($panel);\n\n        $settings.find(\"#markdown-preview-format\")\n            .prop(\"selectedIndex\", _prefs.get(\"useGFM\") ? 1 : 0)\n            .change(function (e) {\n                _prefs.set(\"useGFM\", e.target.selectedIndex === 1);\n                _updateSettings();\n            });\n\n        $settings.find(\"#markdown-preview-theme\")\n            .val(_prefs.get(\"theme\"))\n            .change(function (e) {\n                _prefs.set(\"theme\", e.target.value);\n                _updateSettings();\n            });\n\n        var $syncScroll = $settings.find(\"#markdown-preview-sync-scroll\");\n\n        $syncScroll.change(function (e) {\n            _prefs.set(\"syncScroll\", e.target.checked);\n            _editorScroll();\n        });\n\n        if (_prefs.get(\"syncScroll\")) {\n            $syncScroll.attr(\"checked\", true);\n        }\n\n        PopUpManager.addPopUp($settings, _hideSettings, true);\n        $(window.document).on(\"mousedown\", _documentClicked);\n    }\n\n    function _setPanelVisibility(isVisible) {\n        if (isVisible === realVisibility) {\n            return;\n        }\n\n        realVisibility = isVisible;\n\n        if (isVisible) {\n            _loadDoc(DocumentManager.getCurrentDocument());\n            $icon.toggleClass(\"active\");\n\n            panel.show();\n\n        } else {\n            $icon.toggleClass(\"active\");\n            panel.hide();\n        }\n    }\n\n\n    function _currentDocChangedHandler() {\n        var doc = DocumentManager.getCurrentDocument(),\n            ext = doc ? FileUtils.getFileExtension(doc.file.fullPath).toLowerCase() : \"\";\n\n        if (currentDoc) {\n            currentDoc.off(\"change\", _documentChange);\n            currentDoc = null;\n        }\n\n        if (currentEditor) {\n            currentEditor.off(\"scroll\", _editorScroll);\n            currentEditor = null;\n        }\n\n        if (doc && /md|markdown|litcoffee|txt/.test(ext)) {\n            currentDoc = doc;\n            currentDoc.on(\"change\", _documentChange);\n            currentEditor = EditorManager.getCurrentFullEditor();\n            currentEditor.on(\"scroll\", _editorScroll);\n            $icon.css({display: \"block\"});\n            _setPanelVisibility(visible);\n\n            toggleCmd.setEnabled(true);\n            _loadDoc(doc);\n        } else {\n            $icon.css({display: \"none\"});\n            toggleCmd.setEnabled(false);\n\n            _setPanelVisibility(false);\n        }\n    }\n\n    function _toggleVisibility() {\n        visible = !visible;\n        _setPanelVisibility(visible);\n\n        toggleCmd.setChecked(visible);\n    }\n\n    function registerCallbacks(toolBar) {\n        var root = toolBar.getRoot();\n        root.on(\"click\", \"#markdown-heading1\", function () {\n            Handler.h1();\n        });\n        root.on(\"click\", \"#markdown-heading2\", function () {\n            Handler.h2();\n        });\n        root.on(\"click\", \"#markdown-heading3\", function () {\n            Handler.h3();\n        });\n        root.on(\"click\", \"#markdown-heading4\", function () {\n            Handler.h4();\n        });\n        root.on(\"click\", \"#markdown-heading5\", function () {\n            Handler.h5();\n        });\n        root.on(\"click\", \"#markdown-heading6\", function () {\n            Handler.h6();\n        });\n        root.on(\"click\", \"#markdown-bold\", function () {\n            Handler.bold();\n        });\n        root.on(\"click\", \"#markdown-italic\", function () {\n            Handler.italic();\n        });\n        root.on(\"click\", \"#markdown-strikethrough\", function () {\n            Handler.strikethrough();\n        });\n        root.on(\"click\", \"#markdown-code\", function () {\n            Handler.code();\n        });\n        root.on(\"click\", \"#markdown-bullet\", function () {\n            Handler.bullet();\n        });\n        root.on(\"click\", \"#markdown-numbered\", function () {\n            Handler.numbered();\n        });\n        root.on(\"click\", \"#markdown-quote\", function () {\n            Handler.quote();\n        });\n        root.on(\"click\", \"#markdown-codeblock\", function () {\n            Handler.codeblock();\n        });\n        root.on(\"click\", \"#markdown-image\", function () {\n            Handler.image();\n        });\n        root.on(\"click\", \"#markdown-link\", function () {\n            Handler.link();\n        });\n        root.on(\"click\", \"#markdown-paragraph\", function () {\n            Handler.paragraph();\n        });\n        root.on(\"click\", \"#markdown-reflow\", function () {\n            Handler.reflow();\n        });\n\n    }\n\n    function showBar() {\n        if (!toolBar) {\n            var templateVars = {\n                Strings: Strings\n            };\n            toolBar = new ModalBar(Mustache.render(_markdownBarTemplate, templateVars), false, false);\n\n            registerCallbacks(toolBar);\n            cmdToolbar.setChecked(true);\n\n        }\n    }\n\n    function closeBar() {\n        if (toolBar) {\n            toolBar.close();\n            toolBar = null;\n            cmdToolbar.setChecked(false);\n        }\n    }\n\n    function toggleBar() {\n        if (toolBar) {\n            barShouldShow = false;\n            closeBar();\n        } else {\n            barShouldShow = true;\n            showBar();\n        }\n    }\n\n    function activeEditorChangeHandler(event, activeEditor, previousEditor) {\n        var mode = null;\n\n        if (activeEditor && activeEditor.document) {\n            mode = activeEditor._getModeFromDocument();\n        }\n        if (mode === \"gfm\" || mode === \"markdown\") {\n            cmdToolbar.setEnabled(true);\n            if (barShouldShow) {\n                showBar();\n\n            }\n        } else {\n            cmdToolbar.setEnabled(false);\n            closeBar();\n        }\n    }\n\n    prefs.definePreference(\"maxLength\", \"number\", 80, {\n        description: Strings.DESCRIPTION_MAX_LINE_LENGTH\n    });\n\n    var BAR_COMMAND_ID = \"alanhohn.togglemarkdownbar\",\n        H1_COMMAND_ID = \"alanhohn.markdownheading1\",\n        H2_COMMAND_ID = \"alanhohn.markdownheading2\",\n        H3_COMMAND_ID = \"alanhohn.markdownheading3\",\n        H4_COMMAND_ID = \"alanhohn.markdownheading4\",\n        BOLD_COMMAND_ID = \"alanhohn.markdownbold\",\n        ITALIC_COMMAND_ID = \"alanhohn.markdownitalic\",\n        STRIKE_COMMAND_ID = \"alanhohn.markdownstrike\",\n        CODE_COMMAND_ID = \"alanhohn.markdowncode\",\n        BULLET_COMMAND_ID = \"alanhohn.markdownbullet\",\n        NUMBERED_COMMAND_ID = \"alanhohn.markdownnumbered\",\n        QUOTE_COMMAND_ID = \"alanhohn.markdownquote\",\n        CODEBLOCK_COMMAND_ID = \"alanhohn.markdowncodeblock\",\n        PARAGRAPH_COMMAND_ID = \"alanhohn.markdownparagraph\",\n        REFLOW_COMMAND_ID = \"alanhohn.markdownreflow\";\n\n    cmdToolbar = CommandManager.register(Strings.MENU_TOOLBAR, BAR_COMMAND_ID, toggleBar);\n\n    CommandManager.register(Strings.HINT_H1, H1_COMMAND_ID, Handler.h1);\n    CommandManager.register(Strings.HINT_H2, H2_COMMAND_ID, Handler.h2);\n    CommandManager.register(Strings.HINT_H3, H3_COMMAND_ID, Handler.h3);\n    CommandManager.register(Strings.HINT_H4, H4_COMMAND_ID, Handler.h4);\n    CommandManager.register(Strings.HINT_BOLD, BOLD_COMMAND_ID, Handler.bold);\n    CommandManager.register(Strings.HINT_ITALIC, ITALIC_COMMAND_ID, Handler.italic);\n    CommandManager.register(Strings.HINT_STRIKE, STRIKE_COMMAND_ID, Handler.strikethrough);\n    CommandManager.register(Strings.HINT_CODE, CODE_COMMAND_ID, Handler.code);\n    CommandManager.register(Strings.HINT_BULLET, BULLET_COMMAND_ID, Handler.bullet);\n    CommandManager.register(Strings.HINT_NUMBERED, NUMBERED_COMMAND_ID, Handler.numbered);\n    CommandManager.register(Strings.HINT_QUOTE, QUOTE_COMMAND_ID, Handler.quote);\n    CommandManager.register(Strings.HINT_CODEBLOCK, CODEBLOCK_COMMAND_ID, Handler.codeblock);\n    CommandManager.register(Strings.HINT_PARAGRAPH, PARAGRAPH_COMMAND_ID, Handler.paragraph);\n    CommandManager.register(Strings.HINT_REFLOW, REFLOW_COMMAND_ID, Handler.reflow);\n\n    KeyBindingManager.addBinding(H1_COMMAND_ID, KeyboardPrefs.heading1);\n    KeyBindingManager.addBinding(H2_COMMAND_ID, KeyboardPrefs.heading2);\n    KeyBindingManager.addBinding(H3_COMMAND_ID, KeyboardPrefs.heading3);\n    KeyBindingManager.addBinding(H4_COMMAND_ID, KeyboardPrefs.heading4);\n    KeyBindingManager.addBinding(BOLD_COMMAND_ID, KeyboardPrefs.bold);\n    KeyBindingManager.addBinding(ITALIC_COMMAND_ID, KeyboardPrefs.italic);\n    KeyBindingManager.addBinding(STRIKE_COMMAND_ID, KeyboardPrefs.strikethrough);\n    KeyBindingManager.addBinding(CODE_COMMAND_ID, KeyboardPrefs.code);\n    KeyBindingManager.addBinding(BULLET_COMMAND_ID, KeyboardPrefs.bullet);\n    KeyBindingManager.addBinding(NUMBERED_COMMAND_ID, KeyboardPrefs.numbered);\n    KeyBindingManager.addBinding(QUOTE_COMMAND_ID, KeyboardPrefs.quote);\n    KeyBindingManager.addBinding(CODEBLOCK_COMMAND_ID, KeyboardPrefs.codeblock);\n    KeyBindingManager.addBinding(PARAGRAPH_COMMAND_ID, KeyboardPrefs.paragraph);\n    KeyBindingManager.addBinding(REFLOW_COMMAND_ID, KeyboardPrefs.reflow);\n\n    ExtensionUtils.loadStyleSheet(module, \"styles/styles.css\");\n    ExtensionUtils.loadStyleSheet(module, \"styles/octicons.css\");\n    barShouldShow = true;\n\n    activeEditorChangeHandler(null, EditorManager.getActiveEditor(), null);\n    EditorManager.on(\"activeEditorChange\", activeEditorChangeHandler);\n\n\n    // Debounce event callback to avoid excess overhead\n    // Update preview 300 ms ofter document change\n    // Sync scroll 1ms after document scroll (just enough to ensure\n    // the document scroll isn't blocked).\n    _documentChange = _.debounce(_documentChange, 30);\n    _editorScroll = _.debounce(_editorScroll, 1);\n\n    // Insert CSS for this extension\n    ExtensionUtils.loadStyleSheet(module, \"styles/MarkdownPreview.css\");\n\n    // Add toolbar icon\n\n    $icon = $(\"<a>\")\n        .attr({\n            id: \"markdown-preview-icon\",\n            href: \"#\"\n        })\n        .css({\n            display: \"none\"\n        })\n        .click(_toggleVisibility)\n        .appendTo($(\"#main-toolbar .buttons\"));\n\n\n\n    // Add a document change handler\n    MainViewManager.on(\"currentFileChange\", _currentDocChangedHandler);\n\n    toggleCmd = CommandManager.register(\"Markdown Preview\", \"toggleMarkdownPreview\", _toggleVisibility);\n    toggleCmd.setChecked(realVisibility);\n    toggleCmd.setEnabled(realVisibility);\n\n    function _createPanel() {\n        $panel = $(panelHTML);\n        $iframe = $panel.find(\"#panel-markdown-preview-frame\");\n        let minSize = window.innerWidth/3;\n\n        panel = WorkspaceManager.createPluginPanel(\"markdown-preview-panel\", $panel, minSize, $icon);\n\n        WorkspaceManager.recomputeLayout(false);\n        $settingsToggle = $(\"#markdown-settings-toggle\")\n            .click(function (e) {\n                if ($settings) {\n                    _hideSettings();\n                } else {\n                    _showSettings(e);\n                }\n            });\n    }\n\n    // currentDocumentChange is *not* called for the initial document. Use\n    // appReady() to set initial state.\n    AppInit.appReady(function () {\n        _createPanel();\n        _currentDocChangedHandler();\n    });\n});\n\n\n"],"file":"main.js"}