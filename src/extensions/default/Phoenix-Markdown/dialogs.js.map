{"version":3,"sources":["extensions/default/Phoenix-Markdown/dialogs.js"],"names":["define","require","exports","module","Dialogs","brackets","getModule","FileSystem","Mustache","Strings","_pathDialogTemplate","getRelativeFilename","basePath","filename","endsWith","slice","length","basename","lastIndexOf","dirname","relapath","startsWith","getRelativeFile","cb","showOpenDialog","err","files","displayPathDialog","editor","templateVars","fn","selection","getSelection","textInit","document","getRange","start","end","pathInit","includes","dialog","showModalDialogUsingTemplate","render","textField","getElement","find","pathField","fileButton","on","getFile","parentPath","val","done","buttonId","DIALOG_BTN_OK","image","dialogTitle","IMAGE_DIALOG","textTitle","IMAGE_TEXT_TITLE","textPlaceholder","IMAGE_TEXT_PLACEHOLDER","pathTitle","IMAGE_PATH_TITLE","pathPlaceholder","IMAGE_PATH_PLACEHOLDER","imageString","replaceRange","link","LINK_DIALOG","LINK_TEXT_TITLE","LINK_TEXT_PLACEHOLDER","LINK_PATH_TITLE","LINK_PATH_PLACEHOLDER","linkString"],"mappings":"AAwCAA,OAAO,SAAUC,QAASC,QAASC,QAG/B,IAAIC,QAAaC,SAASC,UAAU,mBAChCC,WAAaF,SAASC,UAAU,yBAChCE,SAAaH,SAASC,UAAU,gCAEhCG,QAAuBR,QAAQ,WAC/BS,oBAAsBT,QAAQ,mCAElC,SAASU,oBAAoBC,SAAUC,UAC/BD,SAASE,SAAS,OAClBF,SAAWA,SAASG,MAAM,EAAGH,SAASI,OAAS,IAKnD,IAHA,IAAIC,SAAWJ,SAASE,MAAMF,SAASK,YAAY,KAAO,GACtDC,QAAUN,SAASE,MAAM,EAAGF,SAASK,YAAY,KAAO,GACxDE,SAAW,IACPD,QAAQE,WAAWT,WACvBQ,UAAsB,MACtBR,SAAWA,SAASG,MAAM,EAAGH,SAASM,YAAY,MAEtD,OAAOE,SAAWD,QAAQJ,MAAMH,SAASI,OAAS,GAAKC,SAG3D,SAASK,gBAAgBV,SAAUW,IAC/BhB,WAAWiB,gBAAe,GAAO,EAAO,cAAe,KAAM,KAAM,SAAUC,IAAKC,OAC1EA,OAASA,MAAM,GACfH,GAAGZ,oBAAoBC,SAAUc,MAAM,KAEvCH,GAAG,MAKf,SAASI,kBAAkBC,OAAQC,aAAcC,IAC7C,IAAIC,UAAYH,OAAOI,eACvBH,aAAaI,SAAWL,OAAOM,SAASC,SAASJ,UAAUK,MAAOL,UAAUM,KAC5ER,aAAaS,SAAYT,aAAaI,SAASM,SAAS,OAAUV,aAAaI,SAAW,GAC1F,IAAIO,OAASpC,QAAQqC,6BAA6BjC,SAASkC,OAAOhC,oBAAqBmB,eACnFc,UAAYH,OAAOI,aAAaC,KAAK,eACrCC,UAAYN,OAAOI,aAAaC,KAAK,eACrCE,WAAaP,OAAOI,aAAaC,KAAK,gBAC/BG,GAAG,QAAS,WACnB1B,gBAAgBM,OAAOqB,UAAUC,WAAY,SAAUrC,UACnDiC,UAAUK,IAAItC,cAGtB2B,OAAOY,KAAK,SAAUC,UACdA,WAAajD,QAAQkD,eACrBxB,GAAGa,UAAUQ,MAAOL,UAAUK,SAK1CjD,QAAQqD,MAAQ,SAAU3B,QACtB,IAAIC,aAAe,CACfpB,QAASA,QACT+C,YAAa/C,QAAQgD,aACrBC,UAAWjD,QAAQkD,iBACnBC,gBAAiBnD,QAAQoD,uBACzBC,UAAWrD,QAAQsD,iBACnBC,gBAAiBvD,QAAQwD,wBAEzBlC,UAAYH,OAAOI,eACvBL,kBAAkBC,OAAQC,aAAc,SAAUc,UAAWG,WACzD,IAAIoB,YAAc,KAAOvB,UAAY,KAAOG,UAAY,IACxDlB,OAAOM,SAASiC,aAAaD,YAAanC,UAAUK,MAAOL,UAAUM,IAAK,aAIlFnC,QAAQkE,KAAO,SAAUxC,QACrB,IAAIC,aAAe,CACfpB,QAASA,QACT+C,YAAa/C,QAAQ4D,YACrBX,UAAWjD,QAAQ6D,gBACnBV,gBAAiBnD,QAAQ8D,sBACzBT,UAAWrD,QAAQ+D,gBACnBR,gBAAiBvD,QAAQgE,uBAEzB1C,UAAYH,OAAOI,eACvBL,kBAAkBC,OAAQC,aAAc,SAAUc,UAAWG,WACzD,IAAI4B,WAAa,IAAM/B,UAAY,KAAOG,UAAY,IACtDlB,OAAOM,SAASiC,aAAaO,WAAY3C,UAAUK,MAAOL,UAAUM,IAAK","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2016 Alan Hohn\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/*jslint vars: true, plusplus: true, devel: true, nomen: true, indent: 4, maxerr: 50 */\n/*global define, brackets */\n\ndefine(function (require, exports, module) {\n\n\n    var Dialogs    = brackets.getModule(\"widgets/Dialogs\"),\n        FileSystem = brackets.getModule(\"filesystem/FileSystem\"),\n        Mustache   = brackets.getModule(\"thirdparty/mustache/mustache\");\n\n    var Strings              = require(\"strings\"),\n        _pathDialogTemplate = require(\"text!templates/path-dialog.html\");\n\n    function getRelativeFilename(basePath, filename) {\n        if (basePath.endsWith('/')) {\n            basePath = basePath.slice(0, basePath.length - 1);\n        }\n        var basename = filename.slice(filename.lastIndexOf('/') + 1);\n        var dirname = filename.slice(0, filename.lastIndexOf('/') + 1);\n        var relapath = \"\";\n        while (!dirname.startsWith(basePath)) {\n            relapath = relapath + \"../\";\n            basePath = basePath.slice(0, basePath.lastIndexOf('/'));\n        }\n        return relapath + dirname.slice(basePath.length + 1) + basename;\n    }\n\n    function getRelativeFile(basePath, cb) {\n        FileSystem.showOpenDialog(false, false, \"Select file\", null, null, function (err, files) {\n            if (files && files[0]) {\n                cb(getRelativeFilename(basePath, files[0]));\n            } else {\n                cb(\"\");\n            }\n        });\n    }\n\n    function displayPathDialog(editor, templateVars, fn) {\n        var selection = editor.getSelection();\n        templateVars.textInit = editor.document.getRange(selection.start, selection.end);\n        templateVars.pathInit = (templateVars.textInit.includes(\"://\")) ? templateVars.textInit : \"\";\n        var dialog = Dialogs.showModalDialogUsingTemplate(Mustache.render(_pathDialogTemplate, templateVars));\n        var textField = dialog.getElement().find(\".input-text\");\n        var pathField = dialog.getElement().find(\".input-path\");\n        var fileButton = dialog.getElement().find(\"#choose-file\");\n        fileButton.on(\"click\", function () {\n            getRelativeFile(editor.getFile().parentPath, function (filename) {\n                pathField.val(filename);\n            });\n        });\n        dialog.done(function (buttonId) {\n            if (buttonId === Dialogs.DIALOG_BTN_OK) {\n                fn(textField.val(), pathField.val());\n            }\n        });\n    }\n\n    exports.image = function (editor) {\n        var templateVars = {\n            Strings: Strings,\n            dialogTitle: Strings.IMAGE_DIALOG,\n            textTitle: Strings.IMAGE_TEXT_TITLE,\n            textPlaceholder: Strings.IMAGE_TEXT_PLACEHOLDER,\n            pathTitle: Strings.IMAGE_PATH_TITLE,\n            pathPlaceholder: Strings.IMAGE_PATH_PLACEHOLDER\n        };\n        var selection = editor.getSelection();\n        displayPathDialog(editor, templateVars, function (textField, pathField) {\n            var imageString = \"![\" + textField + \"](\" + pathField + \")\";\n            editor.document.replaceRange(imageString, selection.start, selection.end, \"+mdbar\");\n        });\n    };\n\n    exports.link = function (editor) {\n        var templateVars = {\n            Strings: Strings,\n            dialogTitle: Strings.LINK_DIALOG,\n            textTitle: Strings.LINK_TEXT_TITLE,\n            textPlaceholder: Strings.LINK_TEXT_PLACEHOLDER,\n            pathTitle: Strings.LINK_PATH_TITLE,\n            pathPlaceholder: Strings.LINK_PATH_PLACEHOLDER\n        };\n        var selection = editor.getSelection();\n        displayPathDialog(editor, templateVars, function (textField, pathField) {\n            var linkString = \"[\" + textField + \"](\" + pathField + \")\";\n            editor.document.replaceRange(linkString, selection.start, selection.end, \"+mdbar\");\n        });\n    };\n});\n"],"file":"dialogs.js"}