define(function(require,exports,module){var CommandManager=brackets.getModule("command/CommandManager"),EditorManager=brackets.getModule("editor/EditorManager"),Menus=brackets.getModule("command/Menus");function TestCommand1(){var command1=CommandManager.get("extensionTest.command1");if(command1){var command2=CommandManager.get("extensionTest.command2");if(command2){var checked=command1.getChecked();checked?(window.alert("Unchecking self. Disabling next."),command2.setEnabled(!1)):(window.alert("Checking self. Enabling next."),command2.setEnabled(!0)),command1.setChecked(!checked)}}}function TestCommand2(){window.alert("Executing command 2")}function TestCommand3(){window.alert("Executing command 3")}var command1=CommandManager.register("Toggle Checkmark","extensionTest.command1",TestCommand1),command2=CommandManager.register("Enabled when previous is Checked","extensionTest.command2",TestCommand2),command3=CommandManager.register("Enabled when text selected","extensionTest.command3",TestCommand3);command1.setChecked(!0),command2.setEnabled(!0),command3.setEnabled(!1);var updateEnabledState=function(){var editor=EditorManager.getFocusedEditor();command3.setEnabled(editor&&""!==editor.getSelectedText())},editor_cmenu=Menus.getContextMenu(Menus.ContextMenuIds.EDITOR_MENU);editor_cmenu.on("beforeContextMenuOpen",updateEnabledState),editor_cmenu&&(editor_cmenu.addMenuDivider(),editor_cmenu.addMenuItem("extensionTest.command1"),editor_cmenu.addMenuItem("extensionTest.command2"),editor_cmenu.addMenuItem("extensionTest.command3"))});
//# sourceMappingURL=main.js.map
