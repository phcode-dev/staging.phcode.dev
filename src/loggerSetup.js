!function(){const isLocalHost="localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname,urlParams=new URLSearchParams(window.location.search||""),isBugsnagEnabled=!window.testEnvironment&&!isLocalHost;class CustomBugSnagError extends Error{constructor(message,err){super(message+(err.message||"")),this.name=err.constructor&&err.constructor.name||this.constructor.name,this.stack=message+" : "+err.stack}}const logger={error:console.error,warn:console.warn,reportError:function(error,message){isBugsnagEnabled&&Bugsnag.notify(message?new CustomBugSnagError(message,error):error)},leaveTrail:function(message){console.log("[Trail] : ",message),isBugsnagEnabled&&Bugsnag.leaveBreadcrumb(message)},loggingOptions:{LOCAL_STORAGE_KEYS:{LOG_LIVE_PREVIEW:"logLivePreview"},healthDataDisabled:!1,logLivePreview:!1},livePreview:{log:function(...args){logger.loggingOptions.logLivePreview&&logger.log(...args)}}};function swallowLogs(){}window.logger=logger;const savedLoggingFn=console.log,savedInfoFn=console.info;function _shouldDiscardError(errors=[]){if(!window.fsServerUrl||!window.Phoenix||!window.Phoenix.VFS)return!1;let fileURL,extensionName,userFsURLFound=!1,userExtensionsURL=window.fsServerUrl.slice(0,-1)+window.Phoenix.VFS.getUserExtensionDir()+"/";for(let error of errors)if(error.stacktrace&&error.stacktrace[0])for(let stack of error.stacktrace){if((fileURL=stack.file||"").startsWith(userExtensionsURL))return extensionName=(extensionName=fileURL.replace(userExtensionsURL,"")).split("/")[0],window.Metrics.countEvent(window.Metrics.EVENT_TYPE.ERROR,`extn-${extensionName}`,error.type),window.Metrics.countEvent(window.Metrics.EVENT_TYPE.ERROR,`extn-${extensionName}`,error.errorClass),logger.leaveTrail(`Extension Error for ${extensionName} of type ${error.type} class ${error.errorClass}`),!0;fileURL.startsWith(window.fsServerUrl)&&(userFsURLFound=!0)}return!!userFsURLFound}function onError(event){try{let reportedStatus="Reported",shouldReport=!0;return logger.loggingOptions.healthDataDisabled?(reportedStatus="Not Reported as health data disabled.",shouldReport=!1):_shouldDiscardError(event.errors)&&(reportedStatus="Not Reported error from user extension or fs.",shouldReport=!1),console.error(`Caught Critical error, ${reportedStatus}: `,event),window.Metrics&&window.Metrics.countEvent(window.Metrics.EVENT_TYPE.ERROR,"uncaught","logger"),shouldReport}catch(e){console.error("exception occurred while reposting error: ",e),event.addMetadata("onError","exception",e.message)}}window.setupLogging=function(){const logToConsoleOverride=urlParams.get("logToConsole"),logToConsolePref=localStorage.getItem("logToConsole");return logToConsoleOverride&&"true"===logToConsoleOverride.toLowerCase()||logToConsolePref&&"true"===logToConsolePref.toLowerCase()&&!logToConsoleOverride?(console.log=savedLoggingFn,console.info=savedInfoFn,logger.log=console.log,logger.info=console.info,logger.logToConsolePref="true",window.debugMode=!0,!0):(console.info=console.log=swallowLogs,logger.info=logger.log=swallowLogs,logger.logToConsolePref="false",window.debugMode=!1,!1)},window.setupLogging(),window.isLoggingEnabled=function(key){let loggingEnabled;return"true"===(localStorage.getItem(key)||"false").toLowerCase()},window.toggleLoggingKey=function(key){window.isLoggingEnabled(key)?localStorage.setItem(key,"false"):localStorage.setItem(key,"true")},logger.loggingOptions.logLivePreview=window.isLoggingEnabled(logger.loggingOptions.LOCAL_STORAGE_KEYS.LOG_LIVE_PREVIEW),isBugsnagEnabled?(Bugsnag.start({apiKey:"a899c29d251bfdf30c3222016a2a7ea7",appType:window.__TAURI__?"tauri":"browser",collectUserIp:!1,appVersion:AppConfig.version,enabledReleaseStages:["development","production","staging","tauri-development","tauri-production","tauri-staging"],releaseStage:window.__TAURI__?"tauri-"+AppConfig.config.bugsnagEnv:AppConfig.config.bugsnagEnv,enabledBreadcrumbTypes:["manual"],maxEvents:10,maxBreadcrumbs:50,onError:onError}),window.cacheClearError&&logger.reportError(window.cacheClearError)):console.warn("Logging to Bugsnag is disabled as current environment is localhost.")}();
//# sourceMappingURL=loggerSetup.js.map
