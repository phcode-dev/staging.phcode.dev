{"version":3,"sources":["project/SidebarView.js"],"names":["define","require","exports","module","AppInit","ProjectManager","WorkingSetView","MainViewManager","CommandManager","Commands","Strings","Resizer","_","$sidebar","$splitViewMenu","$projectTitle","$projectFilesContainer","$workingSetViewsContainer","_cmdSplitNone","_cmdSplitVertical","_cmdSplitHorizontal","_updateProjectTitle","displayName","getProjectRoot","name","fullPath","html","escape","attr","trigger","toggle","show","hide","isVisible","_updateWorkingSetState","enabled","getPaneCount","getWorkingSetSize","ACTIVE_PANE","get","CMD_WORKINGSET_SORT_BY_ADDED","setEnabled","CMD_WORKINGSET_SORT_BY_NAME","CMD_WORKINGSET_SORT_BY_TYPE","CMD_WORKING_SORT_TOGGLE_AUTO","_updateUIStates","spriteIndex","layoutScheme","getLayoutScheme","columns","rows","setChecked","_handleSplitViewNone","setLayoutScheme","_handleSplitViewVertical","_handleSplitViewHorizontal","htmlReady","$","find","on","evt","width","css","_setFileTreeSelectionWidth","triggerHandler","syncSelectionIndicator","VIEW_HIDE_SIDEBAR","setName","CMD_SHOW_SIDEBAR","refresh","CMD_HIDE_SIDEBAR","is","paneId","createWorkingSetViewForPane","forEach","getPaneIdList","GEAR_MENU_TOOLTIP","register","CMD_SPLITVIEW_NONE","CMD_SPLITVIEW_VERTICAL","CMD_SPLITVIEW_HORIZONTAL","CMD_TOGGLE_SIDEBAR","SHOW_SIDEBAR","HIDE_SIDEBAR"],"mappings":"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","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2012 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/**\n * The view that controls the showing and hiding of the sidebar.\n *\n * Although the sidebar view doesn't dispatch any events directly, it is a\n * resizable element (../utils/Resizer.js), which means it can dispatch Resizer\n * events.  For example, if you want to listen for the sidebar showing\n * or hiding itself, set up listeners for the corresponding Resizer events,\n * panelCollapsed and panelExpanded:\n *\n *      $(\"#sidebar\").on(\"panelCollapsed\", ...);\n *      $(\"#sidebar\").on(\"panelExpanded\", ...);\n */\ndefine(function (require, exports, module) {\n\n\n    var AppInit         = require(\"utils/AppInit\"),\n        ProjectManager  = require(\"project/ProjectManager\"),\n        WorkingSetView  = require(\"project/WorkingSetView\"),\n        MainViewManager = require(\"view/MainViewManager\"),\n        CommandManager  = require(\"command/CommandManager\"),\n        Commands        = require(\"command/Commands\"),\n        Strings         = require(\"strings\"),\n        Resizer         = require(\"utils/Resizer\"),\n        _               = require(\"thirdparty/lodash\");\n\n    // These vars are initialized by the htmlReady handler\n    // below since they refer to DOM elements\n    var $sidebar,\n        $splitViewMenu,\n        $projectTitle,\n        $projectFilesContainer,\n        $workingSetViewsContainer;\n\n    var _cmdSplitNone,\n        _cmdSplitVertical,\n        _cmdSplitHorizontal;\n\n    /**\n     * @private\n     * Update project title when the project root changes\n     */\n    function _updateProjectTitle() {\n        var displayName = ProjectManager.getProjectRoot().name;\n        var fullPath = ProjectManager.getProjectRoot().fullPath;\n\n        if (displayName === \"\" && fullPath === \"/\") {\n            displayName = \"/\";\n        }\n\n        $projectTitle.html(_.escape(displayName));\n        $projectTitle.attr(\"title\", fullPath);\n\n        // Trigger a scroll on the project files container to\n        // reposition the scroller shadows and avoid issue #2255\n        $projectFilesContainer.trigger(\"scroll\");\n    }\n\n    /**\n     * Toggle sidebar visibility.\n     */\n    function toggle() {\n        Resizer.toggle($sidebar);\n    }\n\n    /**\n     * Show the sidebar.\n     */\n    function show() {\n        Resizer.show($sidebar);\n    }\n\n    /**\n     * Hide the sidebar.\n     */\n    function hide() {\n        Resizer.hide($sidebar);\n    }\n\n    /**\n     * Returns the visibility state of the sidebar.\n     * @return {boolean} true if element is visible, false if it is not visible\n     */\n    function isVisible() {\n        return Resizer.isVisible($sidebar);\n    }\n\n    /**\n     * Update state of working set\n     * @private\n     */\n    function _updateWorkingSetState() {\n        let enabled = false;\n\n        if (MainViewManager.getPaneCount() === 1 &&\n                MainViewManager.getWorkingSetSize(MainViewManager.ACTIVE_PANE) === 0) {\n            $workingSetViewsContainer.hide();\n        } else {\n            $workingSetViewsContainer.show();\n            enabled = true;\n        }\n        CommandManager.get(Commands.CMD_WORKINGSET_SORT_BY_ADDED).setEnabled(enabled);\n        CommandManager.get(Commands.CMD_WORKINGSET_SORT_BY_NAME).setEnabled(enabled);\n        CommandManager.get(Commands.CMD_WORKINGSET_SORT_BY_TYPE).setEnabled(enabled);\n        CommandManager.get(Commands.CMD_WORKING_SORT_TOGGLE_AUTO).setEnabled(enabled);\n    }\n\n    /**\n     * Update state of splitview and option elements\n     * @private\n     */\n    function _updateUIStates() {\n        var spriteIndex,\n            layoutScheme = MainViewManager.getLayoutScheme();\n\n        if (layoutScheme.columns > 1) {\n            spriteIndex = 1;\n        } else if (layoutScheme.rows > 1) {\n            spriteIndex = 2;\n        } else {\n            spriteIndex = 0;\n        }\n\n        // SplitView Menu\n        _cmdSplitNone.setChecked(spriteIndex === 0);\n        _cmdSplitVertical.setChecked(spriteIndex === 1);\n        _cmdSplitHorizontal.setChecked(spriteIndex === 2);\n\n        // Options icon\n        _updateWorkingSetState();\n    }\n\n    /**\n     * Handle No Split Command\n     * @private\n     */\n    function _handleSplitViewNone() {\n        MainViewManager.setLayoutScheme(1, 1);\n    }\n\n    /**\n     * Handle Vertical Split Command\n     * @private\n     */\n    function _handleSplitViewVertical() {\n        MainViewManager.setLayoutScheme(1, 2);\n    }\n\n    /**\n     * Handle Horizontal Split Command\n     * @private\n     */\n    function _handleSplitViewHorizontal() {\n        MainViewManager.setLayoutScheme(2, 1);\n    }\n\n    // Initialize items dependent on HTML DOM\n    AppInit.htmlReady(function () {\n        $sidebar                  = $(\"#sidebar\");\n        $splitViewMenu            = $sidebar.find(\".working-set-splitview-btn\");\n        $projectTitle             = $sidebar.find(\"#project-title\");\n        $projectFilesContainer    = $sidebar.find(\"#project-files-container\");\n        $workingSetViewsContainer = $sidebar.find(\"#working-set-list-container\");\n\n        // init\n        $sidebar.on(\"panelResizeStart\", function (evt, width) {\n            $sidebar.find(\".sidebar-selection-extension\").css(\"display\", \"none\");\n            $sidebar.find(\".scroller-shadow\").css(\"display\", \"none\");\n        });\n\n        $sidebar.on(\"panelResizeUpdate\", function (evt, width) {\n            ProjectManager._setFileTreeSelectionWidth(width);\n        });\n\n        $sidebar.on(\"panelResizeEnd\", function (evt, width) {\n            $sidebar.find(\".sidebar-selection-extension\").css(\"display\", \"block\").css(\"left\", width);\n            $sidebar.find(\".scroller-shadow\").css(\"display\", \"block\");\n            $projectFilesContainer.triggerHandler(\"scroll\");\n            WorkingSetView.syncSelectionIndicator();\n        });\n\n        $sidebar.on(\"panelCollapsed\", function (evt, width) {\n            CommandManager.get(Commands.VIEW_HIDE_SIDEBAR).setName(Strings.CMD_SHOW_SIDEBAR);\n        });\n\n        $sidebar.on(\"panelExpanded\", function (evt, width) {\n            WorkingSetView.refresh();\n            $sidebar.find(\".scroller-shadow\").css(\"display\", \"block\");\n            $sidebar.find(\".sidebar-selection-extension\").css(\"left\", width);\n            $projectFilesContainer.triggerHandler(\"scroll\");\n            WorkingSetView.syncSelectionIndicator();\n            CommandManager.get(Commands.VIEW_HIDE_SIDEBAR).setName(Strings.CMD_HIDE_SIDEBAR);\n        });\n\n        // AppInit.htmlReady in utils/Resizer executes before, so it's possible that the sidebar\n        // is collapsed before we add the event. Check here initially\n        if (!$sidebar.is(\":visible\")) {\n            $sidebar.trigger(\"panelCollapsed\");\n        }\n\n        // wire up an event handler to monitor when panes are created\n        MainViewManager.on(\"paneCreate\", function (evt, paneId) {\n            WorkingSetView.createWorkingSetViewForPane($workingSetViewsContainer, paneId);\n        });\n\n        MainViewManager.on(\"paneLayoutChange\", function () {\n            _updateUIStates();\n        });\n\n        MainViewManager.on(\"workingSetAdd workingSetAddList workingSetRemove workingSetRemoveList workingSetUpdate\", function () {\n            _updateWorkingSetState();\n        });\n\n        // create WorkingSetViews for each pane already created\n        _.forEach(MainViewManager.getPaneIdList(), function (paneId) {\n            WorkingSetView.createWorkingSetViewForPane($workingSetViewsContainer, paneId);\n        });\n\n        _updateUIStates();\n\n        // Tooltips\n        $splitViewMenu.attr(\"title\", Strings.GEAR_MENU_TOOLTIP);\n    });\n\n    ProjectManager.on(\"projectOpen\", _updateProjectTitle);\n\n    /**\n     * Register Command Handlers\n     */\n    _cmdSplitNone       = CommandManager.register(Strings.CMD_SPLITVIEW_NONE,       Commands.CMD_SPLITVIEW_NONE,       _handleSplitViewNone);\n    _cmdSplitVertical   = CommandManager.register(Strings.CMD_SPLITVIEW_VERTICAL,   Commands.CMD_SPLITVIEW_VERTICAL,   _handleSplitViewVertical);\n    _cmdSplitHorizontal = CommandManager.register(Strings.CMD_SPLITVIEW_HORIZONTAL, Commands.CMD_SPLITVIEW_HORIZONTAL, _handleSplitViewHorizontal);\n\n    CommandManager.register(Strings.CMD_TOGGLE_SIDEBAR, Commands.VIEW_HIDE_SIDEBAR, toggle);\n    CommandManager.register(Strings.CMD_SHOW_SIDEBAR, Commands.SHOW_SIDEBAR, show);\n    CommandManager.register(Strings.CMD_HIDE_SIDEBAR, Commands.HIDE_SIDEBAR, hide);\n\n    // Define public API\n    exports.toggle      = toggle;\n    exports.show        = show;\n    exports.hide        = hide;\n    exports.isVisible   = isVisible;\n});\n"],"file":"SidebarView.js"}