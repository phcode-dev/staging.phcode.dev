{"version":3,"sources":["thirdparty/immutable.js"],"names":["global","factory","exports","module","define","amd","Immutable","this","SLICE$0","Array","prototype","slice","createClass","ctor","superClass","Object","create","constructor","Iterable","value","isIterable","Seq","KeyedIterable","isKeyed","KeyedSeq","IndexedIterable","isIndexed","IndexedSeq","SetIterable","isAssociative","SetSeq","maybeIterable","IS_ITERABLE_SENTINEL","maybeKeyed","IS_KEYED_SENTINEL","maybeIndexed","IS_INDEXED_SENTINEL","maybeAssociative","isOrdered","maybeOrdered","IS_ORDERED_SENTINEL","Keyed","Indexed","Set","DELETE","SHIFT","SIZE","MASK","NOT_SET","CHANGE_LENGTH","DID_ALTER","MakeRef","ref","SetRef","OwnerID","arrCopy","arr","offset","len","Math","max","length","newArr","ii","ensureSize","iter","undefined","size","__iterate","returnTrue","wrapIndex","index","uint32Index","NaN","wholeSlice","begin","end","resolveBegin","resolveIndex","resolveEnd","defaultIndex","min","ITERATE_KEYS","ITERATE_VALUES","ITERATE_ENTRIES","REAL_ITERATOR_SYMBOL","Symbol","iterator","FAUX_ITERATOR_SYMBOL","ITERATOR_SYMBOL","Iterator","next","iteratorValue","type","k","v","iteratorResult","done","iteratorDone","hasIterator","getIteratorFn","isIterator","maybeIterator","getIterator","iterable","iteratorFn","call","isArrayLike","emptySequence","toSeq","seqFromValue","toKeyedSeq","fromEntrySeq","keyedSeqFromValue","entrySeq","toIndexedSeq","indexedSeqFromValue","toSetSeq","toString","KEYS","VALUES","ENTRIES","inspect","toSource","of","arguments","__toString","cacheResult","_cache","__iterateUncached","toArray","fn","reverse","seqIterate","__iterator","seqIterator","isSeq","IS_SEQ_SENTINEL","EMPTY_SEQ","EMPTY_REPEAT","EMPTY_RANGE","ArraySeq","array","_array","ObjectSeq","object","keys","_object","_keys","IterableSeq","_iterable","IteratorSeq","_iterator","_iteratorCache","maybeSeq","seq","isArray","TypeError","maybeIndexedSeqFromValue","useKeys","cache","maxIndex","entry","__iteratorUncached","fromJS","json","converter","fromJSWith","","fromJSDefault","key","parentJSON","map","isPlainObj","toList","toMap","is","valueA","valueB","valueOf","equals","deepEqual","a","b","__hash","notAssociative","entries","every","flipped","_","allEqual","bSize","has","get","Repeat","times","_value","Infinity","invariant","condition","error","Error","Range","start","step","abs","_start","_end","_step","ceil","Collection","KeyedCollection","IndexedCollection","SetCollection","notSetValue","hasOwnProperty","iterations","val","includes","searchValue","indexOf","lastIndexOf","this$0","other","possibleIndex","floor","offsetValue","imul","c","d","smi","i32","hash","o","h","STRING_HASH_CACHE_MIN_STRLEN","cachedHashString","hashString","hashCode","hashJSObj","string","stringHashCache","STRING_HASH_CACHE_SIZE","STRING_HASH_CACHE_MAX_SIZE","charCodeAt","obj","usingWeakMap","weakMap","UID_HASH_KEY","canDefineProperty","propertyIsEnumerable","getIENodeHash","objHashUID","set","isExtensible","defineProperty","enumerable","configurable","writable","apply","nodeType","e","node","uniqueID","documentElement","WeakMap","assertNotInfinite","Map","emptyMap","isMap","withMutations","forEach","maybeMap","IS_MAP_SENTINEL","keyValues","i","_root","updateMap","setIn","keyPath","updateIn","remove","deleteIn","update","updater","updatedValue","updateInDeepMap","forceIterator","clear","__ownerID","__altered","merge","mergeIntoMapWith","mergeWith","merger","iters","mergeIn","m","mergeDeep","deepMerger","mergeDeepWith","deepMergerWith","mergeDeepIn","sort","comparator","OrderedMap","sortFactory","sortBy","mapper","mutable","asMutable","wasAltered","__ensureOwner","asImmutable","MapIterator","iterate","ownerID","makeMap","MapPrototype","EMPTY_MAP","ArrayMapNode","BitmapIndexedNode","bitmap","nodes","HashArrayMapNode","count","HashCollisionNode","keyHash","ValueNode","_type","_reverse","_stack","mapIteratorFrame","mapIteratorValue","prev","__prev","root","newRoot","newSize","didChangeSize","didAlter","updateNode","shift","isLeafNode","mergeIntoNode","idx1","idx2","newNode","createNodes","packNodes","excluding","packedII","packedNodes","bit","expandNodes","including","expandedNodes","iterables","push","mergeIntoCollectionWith","existing","nextValue","collection","filter","x","mergeIntoMap","keyPathIter","isNotSet","existingValue","newValue","nextExisting","nextUpdated","popCount","idx","canEdit","newArray","spliceIn","newLen","after","spliceOut","pop","removeIn","removed","exists","MAX_ARRAY_MAP_SIZE","isEditable","newEntries","keyHashFrag","MAX_BITMAP_INDEXED_SIZE","newBitmap","newNodes","newCount","MIN_HASH_ARRAY_MAP_SIZE","keyMatch","stack","subNode","List","empty","emptyList","isList","makeList","VNode","list","setSize","maybeList","IS_LIST_SENTINEL","listNodeFor","_origin","updateList","splice","insert","_capacity","_level","_tail","values","oldSize","setListBounds","unshift","mergeIntoListWith","iterateList","DONE","ListPrototype","removeBefore","level","originIndex","removingFirst","newChild","oldChild","editable","editableVNode","removeAfter","sizeIndex","EMPTY_LIST","EMPTY_ORDERED_MAP","left","right","tailPos","getTailOffset","tail","iterateNodeOrLeaf","iterateLeaf","iterateNode","from","to","origin","capacity","newTail","updateVNode","nodeHas","lowerNode","newLowerNode","rawIndex","owner","oldOrigin","oldCapacity","newOrigin","newCapacity","newLevel","offsetShift","oldTailOffset","newTailOffset","oldTail","beginIndex","maxSize","emptyOrderedMap","isOrderedMap","maybeOrderedMap","makeOrderedMap","omap","_map","_list","updateOrderedMap","newMap","newList","flip","ToKeyedSequence","indexed","_iter","_useKeys","ToIndexedSequence","ToSetSequence","FromEntriesSequence","flipFactory","flipSequence","makeSequence","reversedSequence","cacheResultThrough","mapFactory","context","mappedSequence","reverseFactory","filterFactory","predicate","filterSequence","countByFactory","grouper","groups","groupByFactory","isKeyedIter","coerce","iterableClass","reify","sliceFactory","originalSize","resolvedBegin","resolvedEnd","resolvedSize","sliceSize","sliceSeq","skipped","isSkipping","takeWhileFactory","takeSequence","iterating","skipWhileFactory","skipSequence","skipping","concatFactory","isKeyedIterable","concat","singleton","concatSeq","flatten","reduce","sum","flattenFactory","depth","flatSequence","stopped","flatDeep","currentDepth","flatMapFactory","interposeFactory","separator","interposedSequence","defaultComparator","maxFactory","maxCompare","comp","zipWithFactory","keyIter","zipper","zipSequence","iterators","isDone","steps","some","s","validateEntry","resolveSize","Record","defaultValues","name","hasInitialized","RecordType","setProps","RecordTypePrototype","_name","_defaultValues","RecordPrototype","valueSeq","indexedIterable","recordName","defaultVal","_empty","makeRecord","likeRecord","record","getPrototypeOf","names","setProp","bind","emptySet","isSet","add","maybeSet","IS_SET_SENTINEL","fromKeys","keySeq","updateSet","union","intersect","originalSet","subtract","OrderedSet","__make","SetPrototype","EMPTY_SET","__empty","makeSet","emptyOrderedSet","isOrderedSet","maybeOrderedSet","OrderedSetPrototype","EMPTY_ORDERED_SET","makeOrderedSet","Stack","emptyStack","isStack","unshiftAll","maybeStack","IS_STACK_SENTINEL","head","_head","peek","makeStack","pushAll","StackPrototype","EMPTY_STACK","mixin","methods","keyCopier","getOwnPropertySymbols","toJS","__toJS","toJSON","toObject","toOrderedMap","toOrderedSet","toSet","toStack","__toStringMapper","join","returnValue","find","findEntry","sideEffect","joined","isFirst","reducer","initialReduction","reduction","useFirst","reduceRight","reversed","not","butLast","isEmpty","countBy","entriesSequence","entryMapper","filterNot","found","findKey","findLast","findLastEntry","findLastKey","first","flatMap","searchKey","getIn","searchKeyPath","nested","groupBy","hasIn","isSubset","isSuperset","keyOf","keyMapper","last","lastKeyOf","maxBy","neg","defaultNegComparator","minBy","rest","skip","amount","skipLast","skipWhile","skipUntil","take","takeLast","takeWhile","takeUntil","hashIterable","IterablePrototype","quoteString","chain","contains","mapEntries","mapKeys","KeyedIterablePrototype","JSON","stringify","String","defaultZipper","ordered","keyed","murmurHashOfSize","hashMerge","findIndex","removeNum","numArgs","spliced","findLastIndex","interpose","interleave","zipped","interleaved","zip","zipWith"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Immutable = factory());\n}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n      return isIterable(value) ? value : Seq(value);\n    }\n\n\n  createClass(KeyedIterable, Iterable);\n    function KeyedIterable(value) {\n      return isKeyed(value) ? value : KeyedSeq(value);\n    }\n\n\n  createClass(IndexedIterable, Iterable);\n    function IndexedIterable(value) {\n      return isIndexed(value) ? value : IndexedSeq(value);\n    }\n\n\n  createClass(SetIterable, Iterable);\n    function SetIterable(value) {\n      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n    }\n\n\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32−1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n      index = uint32Index;\n    }\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n      (end === undefined || (size !== undefined && end >= size));\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ?\n      defaultIndex :\n      index < 0 ?\n        Math.max(0, size + index) :\n        size === undefined ?\n          index :\n          Math.min(size, index);\n  }\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n\n  function Iterator(next) {\n      this.next = next;\n    }\n\n    Iterator.prototype.toString = function() {\n      return '[Iterator]';\n    };\n\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect =\n  Iterator.prototype.toSource = function () { return this.toString(); }\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n      value: value, done: false\n    });\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (\n      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]\n    );\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n    function Seq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        isIterable(value) ? value.toSeq() : seqFromValue(value);\n    }\n\n    Seq.of = function(/*...values*/) {\n      return Seq(arguments);\n    };\n\n    Seq.prototype.toSeq = function() {\n      return this;\n    };\n\n    Seq.prototype.toString = function() {\n      return this.__toString('Seq {', '}');\n    };\n\n    Seq.prototype.cacheResult = function() {\n      if (!this._cache && this.__iterateUncached) {\n        this._cache = this.entrySeq().toArray();\n        this.size = this._cache.length;\n      }\n      return this;\n    };\n\n    // abstract __iterateUncached(fn, reverse)\n\n    Seq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, true);\n    };\n\n    // abstract __iteratorUncached(type, reverse)\n\n    Seq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, true);\n    };\n\n\n\n  createClass(KeyedSeq, Seq);\n    function KeyedSeq(value) {\n      return value === null || value === undefined ?\n        emptySequence().toKeyedSeq() :\n        isIterable(value) ?\n          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n          keyedSeqFromValue(value);\n    }\n\n    KeyedSeq.prototype.toKeyedSeq = function() {\n      return this;\n    };\n\n\n\n  createClass(IndexedSeq, Seq);\n    function IndexedSeq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n    }\n\n    IndexedSeq.of = function(/*...values*/) {\n      return IndexedSeq(arguments);\n    };\n\n    IndexedSeq.prototype.toIndexedSeq = function() {\n      return this;\n    };\n\n    IndexedSeq.prototype.toString = function() {\n      return this.__toString('Seq [', ']');\n    };\n\n    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, false);\n    };\n\n    IndexedSeq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, false);\n    };\n\n\n\n  createClass(SetSeq, Seq);\n    function SetSeq(value) {\n      return (\n        value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value\n      ).toSetSeq();\n    }\n\n    SetSeq.of = function(/*...values*/) {\n      return SetSeq(arguments);\n    };\n\n    SetSeq.prototype.toSetSeq = function() {\n      return this;\n    };\n\n\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n\n\n  createClass(ArraySeq, IndexedSeq);\n    function ArraySeq(array) {\n      this._array = array;\n      this.size = array.length;\n    }\n\n    ArraySeq.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n    };\n\n    ArraySeq.prototype.__iterate = function(fn, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ArraySeq.prototype.__iterator = function(type, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n      );\n    };\n\n\n\n  createClass(ObjectSeq, KeyedSeq);\n    function ObjectSeq(object) {\n      var keys = Object.keys(object);\n      this._object = object;\n      this._keys = keys;\n      this.size = keys.length;\n    }\n\n    ObjectSeq.prototype.get = function(key, notSetValue) {\n      if (notSetValue !== undefined && !this.has(key)) {\n        return notSetValue;\n      }\n      return this._object[key];\n    };\n\n    ObjectSeq.prototype.has = function(key) {\n      return this._object.hasOwnProperty(key);\n    };\n\n    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        if (fn(object[key], key, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ObjectSeq.prototype.__iterator = function(type, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, key, object[key]);\n      });\n    };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(IterableSeq, IndexedSeq);\n    function IterableSeq(iterable) {\n      this._iterable = iterable;\n      this.size = iterable.length || iterable.size;\n    }\n\n    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      var iterations = 0;\n      if (isIterator(iterator)) {\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (fn(step.value, iterations++, this) === false) {\n            break;\n          }\n        }\n      }\n      return iterations;\n    };\n\n    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      if (!isIterator(iterator)) {\n        return new Iterator(iteratorDone);\n      }\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step : iteratorValue(type, iterations++, step.value);\n      });\n    };\n\n\n\n  createClass(IteratorSeq, IndexedSeq);\n    function IteratorSeq(iterator) {\n      this._iterator = iterator;\n      this._iteratorCache = [];\n    }\n\n    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      while (iterations < cache.length) {\n        if (fn(cache[iterations], iterations++, this) === false) {\n          return iterations;\n        }\n      }\n      var step;\n      while (!(step = iterator.next()).done) {\n        var val = step.value;\n        cache[iterations] = val;\n        if (fn(val, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n\n    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      return new Iterator(function()  {\n        if (iterations >= cache.length) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          cache[iterations] = step.value;\n        }\n        return iteratorValue(type, iterations, cache[iterations++]);\n      });\n    };\n\n\n\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq =\n      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n      typeof value === 'object' ? new ObjectSeq(value) :\n      undefined;\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of [k, v] entries, '+\n        'or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) ||\n      (typeof value === 'object' && new ObjectSeq(value));\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values, or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return (\n      isArrayLike(value) ? new ArraySeq(value) :\n      isIterator(value) ? new IteratorSeq(value) :\n      hasIterator(value) ? new IterableSeq(value) :\n      undefined\n    );\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ?\n      fromJSWith(converter, json, '', {'': json}) :\n      fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' &&\n        typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n        return true;\n      }\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n    if (typeof valueA.equals === 'function' &&\n        typeof valueB.equals === 'function' &&\n        valueA.equals(valueB)) {\n      return true;\n    }\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (\n      !isIterable(b) ||\n      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n      isKeyed(a) !== isKeyed(b) ||\n      isIndexed(a) !== isIndexed(b) ||\n      isOrdered(a) !== isOrdered(b)\n    ) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function(v, k)  {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function(v, k)  {\n      if (notAssociative ? !a.has(v) :\n          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n    function Repeat(value, times) {\n      if (!(this instanceof Repeat)) {\n        return new Repeat(value, times);\n      }\n      this._value = value;\n      this.size = times === undefined ? Infinity : Math.max(0, times);\n      if (this.size === 0) {\n        if (EMPTY_REPEAT) {\n          return EMPTY_REPEAT;\n        }\n        EMPTY_REPEAT = this;\n      }\n    }\n\n    Repeat.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Repeat []';\n      }\n      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n    };\n\n    Repeat.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._value : notSetValue;\n    };\n\n    Repeat.prototype.includes = function(searchValue) {\n      return is(this._value, searchValue);\n    };\n\n    Repeat.prototype.slice = function(begin, end) {\n      var size = this.size;\n      return wholeSlice(begin, end, size) ? this :\n        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n    };\n\n    Repeat.prototype.reverse = function() {\n      return this;\n    };\n\n    Repeat.prototype.indexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return 0;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.lastIndexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return this.size;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.__iterate = function(fn, reverse) {\n      for (var ii = 0; ii < this.size; ii++) {\n        if (fn(this._value, ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n      );\n    };\n\n    Repeat.prototype.equals = function(other) {\n      return other instanceof Repeat ?\n        is(this._value, other._value) :\n        deepEqual(other);\n    };\n\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        return new Range(start, end, step);\n      }\n      invariant(step !== 0, 'Cannot step a Range by 0');\n      start = start || 0;\n      if (end === undefined) {\n        end = Infinity;\n      }\n      step = step === undefined ? 1 : Math.abs(step);\n      if (end < start) {\n        step = -step;\n      }\n      this._start = start;\n      this._end = end;\n      this._step = step;\n      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n      if (this.size === 0) {\n        if (EMPTY_RANGE) {\n          return EMPTY_RANGE;\n        }\n        EMPTY_RANGE = this;\n      }\n    }\n\n    Range.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Range []';\n      }\n      return 'Range [ ' +\n        this._start + '...' + this._end +\n        (this._step !== 1 ? ' by ' + this._step : '') +\n      ' ]';\n    };\n\n    Range.prototype.get = function(index, notSetValue) {\n      return this.has(index) ?\n        this._start + wrapIndex(this, index) * this._step :\n        notSetValue;\n    };\n\n    Range.prototype.includes = function(searchValue) {\n      var possibleIndex = (searchValue - this._start) / this._step;\n      return possibleIndex >= 0 &&\n        possibleIndex < this.size &&\n        possibleIndex === Math.floor(possibleIndex);\n    };\n\n    Range.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      begin = resolveBegin(begin, this.size);\n      end = resolveEnd(end, this.size);\n      if (end <= begin) {\n        return new Range(0, 0);\n      }\n      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n    };\n\n    Range.prototype.indexOf = function(searchValue) {\n      var offsetValue = searchValue - this._start;\n      if (offsetValue % this._step === 0) {\n        var index = offsetValue / this._step;\n        if (index >= 0 && index < this.size) {\n          return index\n        }\n      }\n      return -1;\n    };\n\n    Range.prototype.lastIndexOf = function(searchValue) {\n      return this.indexOf(searchValue);\n    };\n\n    Range.prototype.__iterate = function(fn, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(value, ii, this) === false) {\n          return ii + 1;\n        }\n        value += reverse ? -step : step;\n      }\n      return ii;\n    };\n\n    Range.prototype.__iterator = function(type, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      var ii = 0;\n      return new Iterator(function()  {\n        var v = value;\n        value += reverse ? -step : step;\n        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n      });\n    };\n\n    Range.prototype.equals = function(other) {\n      return other instanceof Range ?\n        this._start === other._start &&\n        this._end === other._end &&\n        this._step === other._step :\n        deepEqual(this, other);\n    };\n\n\n  var EMPTY_RANGE;\n\n  createClass(Collection, Iterable);\n    function Collection() {\n      throw TypeError('Abstract');\n    }\n\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  var imul =\n    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n    Math.imul :\n    function imul(a, b) {\n      a = a | 0; // int\n      b = b | 0; // int\n      var c = a & 0xffff;\n      var d = b & 0xffff;\n      // Shift by 0 fixes the sign on the high part.\n      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n    };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      if (o !== o || o === Infinity) {\n        return 0;\n      }\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined &&\n               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function() {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // Get references to ES5 object methods.\n  var isExtensible = Object.isExtensible;\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = (function() {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }());\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1: // Element\n          return node.uniqueID;\n        case 9: // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(\n      size !== Infinity,\n      'Cannot perform this action with an infinite size.'\n    );\n  }\n\n  createClass(Map, KeyedCollection);\n\n    // @pragma Construction\n\n    function Map(value) {\n      return value === null || value === undefined ? emptyMap() :\n        isMap(value) && !isOrdered(value) ? value :\n        emptyMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);\n      return emptyMap().withMutations(function(map ) {\n        for (var i = 0; i < keyValues.length; i += 2) {\n          if (i + 1 >= keyValues.length) {\n            throw new Error('Missing value for key: ' + keyValues[i]);\n          }\n          map.set(keyValues[i], keyValues[i + 1]);\n        }\n      });\n    };\n\n    Map.prototype.toString = function() {\n      return this.__toString('Map {', '}');\n    };\n\n    // @pragma Access\n\n    Map.prototype.get = function(k, notSetValue) {\n      return this._root ?\n        this._root.get(0, undefined, k, notSetValue) :\n        notSetValue;\n    };\n\n    // @pragma Modification\n\n    Map.prototype.set = function(k, v) {\n      return updateMap(this, k, v);\n    };\n\n    Map.prototype.setIn = function(keyPath, v) {\n      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n    };\n\n    Map.prototype.remove = function(k) {\n      return updateMap(this, k, NOT_SET);\n    };\n\n    Map.prototype.deleteIn = function(keyPath) {\n      return this.updateIn(keyPath, function()  {return NOT_SET});\n    };\n\n    Map.prototype.update = function(k, notSetValue, updater) {\n      return arguments.length === 1 ?\n        k(this) :\n        this.updateIn([k], notSetValue, updater);\n    };\n\n    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n      if (!updater) {\n        updater = notSetValue;\n        notSetValue = undefined;\n      }\n      var updatedValue = updateInDeepMap(\n        this,\n        forceIterator(keyPath),\n        notSetValue,\n        updater\n      );\n      return updatedValue === NOT_SET ? undefined : updatedValue;\n    };\n\n    Map.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._root = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyMap();\n    };\n\n    // @pragma Composition\n\n    Map.prototype.merge = function(/*...iters*/) {\n      return mergeIntoMapWith(this, undefined, arguments);\n    };\n\n    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, merger, iters);\n    };\n\n    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.merge === 'function' ?\n          m.merge.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoMapWith(this, deepMerger, arguments);\n    };\n\n    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n    };\n\n    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.mergeDeep === 'function' ?\n          m.mergeDeep.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator));\n    };\n\n    Map.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator, mapper));\n    };\n\n    // @pragma Mutability\n\n    Map.prototype.withMutations = function(fn) {\n      var mutable = this.asMutable();\n      fn(mutable);\n      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n    };\n\n    Map.prototype.asMutable = function() {\n      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n    };\n\n    Map.prototype.asImmutable = function() {\n      return this.__ensureOwner();\n    };\n\n    Map.prototype.wasAltered = function() {\n      return this.__altered;\n    };\n\n    Map.prototype.__iterator = function(type, reverse) {\n      return new MapIterator(this, type, reverse);\n    };\n\n    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      this._root && this._root.iterate(function(entry ) {\n        iterations++;\n        return fn(entry[1], entry[0], this$0);\n      }, reverse);\n      return iterations;\n    };\n\n    Map.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeMap(this.size, this._root, ownerID, this.__hash);\n    };\n\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n\n  // #pragma Trie Nodes\n\n\n\n    function ArrayMapNode(ownerID, entries) {\n      this.ownerID = ownerID;\n      this.entries = entries;\n    }\n\n    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && entries.length === 1) {\n        return; // undefined\n      }\n\n      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n        return createNodes(ownerID, entries, key, value);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new ArrayMapNode(ownerID, newEntries);\n    };\n\n\n\n\n    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n      this.ownerID = ownerID;\n      this.bitmap = bitmap;\n      this.nodes = nodes;\n    }\n\n    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n      var bitmap = this.bitmap;\n      return (bitmap & bit) === 0 ? notSetValue :\n        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n    };\n\n    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var bit = 1 << keyHashFrag;\n      var bitmap = this.bitmap;\n      var exists = (bitmap & bit) !== 0;\n\n      if (!exists && value === NOT_SET) {\n        return this;\n      }\n\n      var idx = popCount(bitmap & (bit - 1));\n      var nodes = this.nodes;\n      var node = exists ? nodes[idx] : undefined;\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n      if (newNode === node) {\n        return this;\n      }\n\n      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n      }\n\n      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n        return nodes[idx ^ 1];\n      }\n\n      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n        return newNode;\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n      var newNodes = exists ? newNode ?\n        setIn(nodes, idx, newNode, isEditable) :\n        spliceOut(nodes, idx, isEditable) :\n        spliceIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.bitmap = newBitmap;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n    };\n\n\n\n\n    function HashArrayMapNode(ownerID, count, nodes) {\n      this.ownerID = ownerID;\n      this.count = count;\n      this.nodes = nodes;\n    }\n\n    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var node = this.nodes[idx];\n      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n    };\n\n    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var removed = value === NOT_SET;\n      var nodes = this.nodes;\n      var node = nodes[idx];\n\n      if (removed && !node) {\n        return this;\n      }\n\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n      if (newNode === node) {\n        return this;\n      }\n\n      var newCount = this.count;\n      if (!node) {\n        newCount++;\n      } else if (!newNode) {\n        newCount--;\n        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n          return packNodes(ownerID, nodes, newCount, idx);\n        }\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.count = newCount;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new HashArrayMapNode(ownerID, newCount, newNodes);\n    };\n\n\n\n\n    function HashCollisionNode(ownerID, keyHash, entries) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entries = entries;\n    }\n\n    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n\n      var removed = value === NOT_SET;\n\n      if (keyHash !== this.keyHash) {\n        if (removed) {\n          return this;\n        }\n        SetRef(didAlter);\n        SetRef(didChangeSize);\n        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n      }\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && len === 2) {\n        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n    };\n\n\n\n\n    function ValueNode(ownerID, keyHash, entry) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entry = entry;\n    }\n\n    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n    };\n\n    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n      var keyMatch = is(key, this.entry[0]);\n      if (keyMatch ? value === this.entry[1] : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n\n      if (removed) {\n        SetRef(didChangeSize);\n        return; // undefined\n      }\n\n      if (keyMatch) {\n        if (ownerID && ownerID === this.ownerID) {\n          this.entry[1] = value;\n          return this;\n        }\n        return new ValueNode(ownerID, this.keyHash, [key, value]);\n      }\n\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n    };\n\n\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate =\n  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  }\n\n  BitmapIndexedNode.prototype.iterate =\n  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  }\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  }\n\n  createClass(MapIterator, Iterator);\n\n    function MapIterator(map, type, reverse) {\n      this._type = type;\n      this._reverse = reverse;\n      this._stack = map._root && mapIteratorFrame(map._root);\n    }\n\n    MapIterator.prototype.next = function() {\n      var type = this._type;\n      var stack = this._stack;\n      while (stack) {\n        var node = stack.node;\n        var index = stack.index++;\n        var maxIndex;\n        if (node.entry) {\n          if (index === 0) {\n            return mapIteratorValue(type, node.entry);\n          }\n        } else if (node.entries) {\n          maxIndex = node.entries.length - 1;\n          if (index <= maxIndex) {\n            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n          }\n        } else {\n          maxIndex = node.nodes.length - 1;\n          if (index <= maxIndex) {\n            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n            if (subNode) {\n              if (subNode.entry) {\n                return mapIteratorValue(type, subNode.entry);\n              }\n              stack = this._stack = mapIteratorFrame(subNode, stack);\n            }\n            continue;\n          }\n        }\n        stack = this._stack = this._stack.__prev;\n      }\n      return iteratorDone();\n    };\n\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ?\n      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ?\n      existing.mergeDeep(value) :\n      is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function(existing, value, key)  {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function(x ) {return x.size !== 0});\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function(collection ) {\n      var mergeIntoMap = merger ?\n        function(value, key)  {\n          collection.update(key, NOT_SET, function(existing )\n            {return existing === NOT_SET ? value : merger(existing, value, key)}\n          );\n        } :\n        function(value, key)  {\n          collection.set(key, value);\n        }\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(\n      isNotSet || (existing && existing.set),\n      'invalid keyPath'\n    );\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(\n      nextExisting,\n      keyPathIter,\n      notSetValue,\n      updater\n    );\n    return nextUpdated === nextExisting ? existing :\n      nextUpdated === NOT_SET ? existing.remove(key) :\n      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - ((x >> 1) & 0x55555555);\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n    x = (x + (x >> 4)) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n    // @pragma Construction\n\n    function List(value) {\n      var empty = emptyList();\n      if (value === null || value === undefined) {\n        return empty;\n      }\n      if (isList(value)) {\n        return value;\n      }\n      var iter = IndexedIterable(value);\n      var size = iter.size;\n      if (size === 0) {\n        return empty;\n      }\n      assertNotInfinite(size);\n      if (size > 0 && size < SIZE) {\n        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n      }\n      return empty.withMutations(function(list ) {\n        list.setSize(size);\n        iter.forEach(function(v, i)  {return list.set(i, v)});\n      });\n    }\n\n    List.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    List.prototype.toString = function() {\n      return this.__toString('List [', ']');\n    };\n\n    // @pragma Access\n\n    List.prototype.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      if (index >= 0 && index < this.size) {\n        index += this._origin;\n        var node = listNodeFor(this, index);\n        return node && node.array[index & MASK];\n      }\n      return notSetValue;\n    };\n\n    // @pragma Modification\n\n    List.prototype.set = function(index, value) {\n      return updateList(this, index, value);\n    };\n\n    List.prototype.remove = function(index) {\n      return !this.has(index) ? this :\n        index === 0 ? this.shift() :\n        index === this.size - 1 ? this.pop() :\n        this.splice(index, 1);\n    };\n\n    List.prototype.insert = function(index, value) {\n      return this.splice(index, 0, value);\n    };\n\n    List.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = this._origin = this._capacity = 0;\n        this._level = SHIFT;\n        this._root = this._tail = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyList();\n    };\n\n    List.prototype.push = function(/*...values*/) {\n      var values = arguments;\n      var oldSize = this.size;\n      return this.withMutations(function(list ) {\n        setListBounds(list, 0, oldSize + values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(oldSize + ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.pop = function() {\n      return setListBounds(this, 0, -1);\n    };\n\n    List.prototype.unshift = function(/*...values*/) {\n      var values = arguments;\n      return this.withMutations(function(list ) {\n        setListBounds(list, -values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.shift = function() {\n      return setListBounds(this, 1);\n    };\n\n    // @pragma Composition\n\n    List.prototype.merge = function(/*...iters*/) {\n      return mergeIntoListWith(this, undefined, arguments);\n    };\n\n    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, merger, iters);\n    };\n\n    List.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoListWith(this, deepMerger, arguments);\n    };\n\n    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, deepMergerWith(merger), iters);\n    };\n\n    List.prototype.setSize = function(size) {\n      return setListBounds(this, 0, size);\n    };\n\n    // @pragma Iteration\n\n    List.prototype.slice = function(begin, end) {\n      var size = this.size;\n      if (wholeSlice(begin, end, size)) {\n        return this;\n      }\n      return setListBounds(\n        this,\n        resolveBegin(begin, size),\n        resolveEnd(end, size)\n      );\n    };\n\n    List.prototype.__iterator = function(type, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      return new Iterator(function()  {\n        var value = values();\n        return value === DONE ?\n          iteratorDone() :\n          iteratorValue(type, index++, value);\n      });\n    };\n\n    List.prototype.__iterate = function(fn, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      var value;\n      while ((value = values()) !== DONE) {\n        if (fn(value, index++, this) === false) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    List.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        return this;\n      }\n      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n    };\n\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn =\n  ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n\n    function VNode(array, ownerID) {\n      this.array = array;\n      this.ownerID = ownerID;\n    }\n\n    // TODO: seems like these methods are very similar\n\n    VNode.prototype.removeBefore = function(ownerID, level, index) {\n      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n        return this;\n      }\n      var originIndex = (index >>> level) & MASK;\n      if (originIndex >= this.array.length) {\n        return new VNode([], ownerID);\n      }\n      var removingFirst = originIndex === 0;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[originIndex];\n        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingFirst) {\n          return this;\n        }\n      }\n      if (removingFirst && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingFirst) {\n        for (var ii = 0; ii < originIndex; ii++) {\n          editable.array[ii] = undefined;\n        }\n      }\n      if (newChild) {\n        editable.array[originIndex] = newChild;\n      }\n      return editable;\n    };\n\n    VNode.prototype.removeAfter = function(ownerID, level, index) {\n      if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n        return this;\n      }\n      var sizeIndex = ((index - 1) >>> level) & MASK;\n      if (sizeIndex >= this.array.length) {\n        return this;\n      }\n\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[sizeIndex];\n        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n          return this;\n        }\n      }\n\n      var editable = editableVNode(this, ownerID);\n      editable.array.splice(sizeIndex + 1);\n      if (newChild) {\n        editable.array[sizeIndex] = newChild;\n      }\n      return editable;\n    };\n\n\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ?\n        iterateLeaf(node, offset) :\n        iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : (left - offset) >> level;\n      var to = ((right - offset) >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(\n            array && array[idx], level - SHIFT, offset + (idx << level)\n          );\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function(list ) {\n        index < 0 ?\n          setListBounds(list, index).set(0, value) :\n          setListBounds(list, 0, index + 1).set(index, value)\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = (index >>> level) & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << (list._level + SHIFT)) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[(rawIndex >>> level) & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might need creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might need creating a higher root.\n    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ?\n      listNodeFor(list, newCapacity - 1) :\n      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = (oldTailOffset >>> level) & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = (newOrigin >>> newLevel) & MASK;\n        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n  }\n\n  createClass(OrderedMap, Map);\n\n    // @pragma Construction\n\n    function OrderedMap(value) {\n      return value === null || value === undefined ? emptyOrderedMap() :\n        isOrderedMap(value) ? value :\n        emptyOrderedMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    OrderedMap.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedMap.prototype.toString = function() {\n      return this.__toString('OrderedMap {', '}');\n    };\n\n    // @pragma Access\n\n    OrderedMap.prototype.get = function(k, notSetValue) {\n      var index = this._map.get(k);\n      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n    };\n\n    // @pragma Modification\n\n    OrderedMap.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._map.clear();\n        this._list.clear();\n        return this;\n      }\n      return emptyOrderedMap();\n    };\n\n    OrderedMap.prototype.set = function(k, v) {\n      return updateOrderedMap(this, k, v);\n    };\n\n    OrderedMap.prototype.remove = function(k) {\n      return updateOrderedMap(this, k, NOT_SET);\n    };\n\n    OrderedMap.prototype.wasAltered = function() {\n      return this._map.wasAltered() || this._list.wasAltered();\n    };\n\n    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._list.__iterate(\n        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n        reverse\n      );\n    };\n\n    OrderedMap.prototype.__iterator = function(type, reverse) {\n      return this._list.fromEntrySeq().__iterator(type, reverse);\n    };\n\n    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      var newList = this._list.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        this._list = newList;\n        return this;\n      }\n      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n    };\n\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) { // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n    function ToKeyedSequence(indexed, useKeys) {\n      this._iter = indexed;\n      this._useKeys = useKeys;\n      this.size = indexed.size;\n    }\n\n    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n      return this._iter.get(key, notSetValue);\n    };\n\n    ToKeyedSequence.prototype.has = function(key) {\n      return this._iter.has(key);\n    };\n\n    ToKeyedSequence.prototype.valueSeq = function() {\n      return this._iter.valueSeq();\n    };\n\n    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n      var reversedSequence = reverseFactory(this, true);\n      if (!this._useKeys) {\n        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n      }\n      return reversedSequence;\n    };\n\n    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n      var mappedSequence = mapFactory(this, mapper, context);\n      if (!this._useKeys) {\n        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n      }\n      return mappedSequence;\n    };\n\n    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var ii;\n      return this._iter.__iterate(\n        this._useKeys ?\n          function(v, k)  {return fn(v, k, this$0)} :\n          ((ii = reverse ? resolveSize(this) : 0),\n            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n        reverse\n      );\n    };\n\n    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n      if (this._useKeys) {\n        return this._iter.__iterator(type, reverse);\n      }\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var ii = reverse ? resolveSize(this) : 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n      });\n    };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(ToIndexedSequence, IndexedSeq);\n    function ToIndexedSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToIndexedSequence.prototype.includes = function(value) {\n      return this._iter.includes(value);\n    };\n\n    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n    };\n\n    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, iterations++, step.value, step)\n      });\n    };\n\n\n\n  createClass(ToSetSequence, SetSeq);\n    function ToSetSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToSetSequence.prototype.has = function(key) {\n      return this._iter.includes(key);\n    };\n\n    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n    };\n\n    ToSetSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, step.value, step.value, step);\n      });\n    };\n\n\n\n  createClass(FromEntriesSequence, KeyedSeq);\n    function FromEntriesSequence(entries) {\n      this._iter = entries;\n      this.size = entries.size;\n    }\n\n    FromEntriesSequence.prototype.entrySeq = function() {\n      return this._iter.toSeq();\n    };\n\n    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(entry ) {\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return fn(\n            indexedIterable ? entry.get(1) : entry[1],\n            indexedIterable ? entry.get(0) : entry[0],\n            this$0\n          );\n        }\n      }, reverse);\n    };\n\n    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          // Check if entry exists first so array access doesn't throw for holes\n          // in the parent iteration.\n          if (entry) {\n            validateEntry(entry);\n            var indexedIterable = isIterable(entry);\n            return iteratorValue(\n              type,\n              indexedIterable ? entry.get(0) : entry[0],\n              indexedIterable ? entry.get(1) : entry[1],\n              step\n            );\n          }\n        }\n      });\n    };\n\n\n  ToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function()  {return iterable};\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function()  {return iterable.reverse()};\n      return reversedSequence;\n    };\n    flipSequence.has = function(key ) {return iterable.includes(key)};\n    flipSequence.includes = function(key ) {return iterable.has(key)};\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n    }\n    flipSequence.__iteratorUncached = function(type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function()  {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(\n        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n        reverse\n      );\n    }\n    return flipSequence;\n  }\n\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function(key ) {return iterable.has(key)};\n    mappedSequence.get = function(key, notSetValue)  {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ?\n        notSetValue :\n        mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(\n        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n        reverse\n      );\n    }\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(\n          type,\n          key,\n          mapper.call(context, entry[1], key, iterable),\n          step\n        );\n      });\n    }\n    return mappedSequence;\n  }\n\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function()  {return iterable};\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function()  {return iterable.flip()};\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function(key, notSetValue) \n      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n    reversedSequence.has = function(key )\n      {return iterable.has(useKeys ? key : -1 - key)};\n    reversedSequence.includes = function(value ) {return iterable.includes(value)};\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n    };\n    reversedSequence.__iterator =\n      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n    return reversedSequence;\n  }\n\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function(key ) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function(key, notSetValue)  {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n          v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    }\n    return filterSequence;\n  }\n\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        0,\n        function(a ) {return a + 1}\n      );\n    });\n    return groups.asImmutable();\n  }\n\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n      );\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n  }\n\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      if (end === Infinity) {\n        end = originalSize;\n      } else {\n        end = end | 0;\n      }\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ?\n          iterable.get(index + resolvedBegin, notSetValue) :\n          notSetValue;\n      }\n    }\n\n    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k)  {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n                 iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function(type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    }\n\n    return sliceSeq;\n  }\n\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c) \n        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n      );\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function()  {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function(v ) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ?\n          keyedSeqFromValue(v) :\n          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function(v ) {return v.size !== 0});\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable ||\n          isKeyedIterable && isKeyed(singleton) ||\n          isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(\n      function(sum, seq)  {\n        if (sum !== undefined) {\n          var size = seq.size;\n          if (size !== undefined) {\n            return sum + size;\n          }\n        }\n      },\n      0\n    );\n    return concatSeq;\n  }\n\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function(fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {var this$0 = this;\n        iter.__iterate(function(v, k)  {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    }\n    flatSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    }\n    return flatSequence;\n  }\n\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(\n      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n    ).flatten(true);\n  }\n\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k) \n        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n        fn(v, iterations++, this$0) !== false},\n        reverse\n      );\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function()  {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ?\n          iteratorValue(type, iterations++, separator) :\n          iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(\n      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n    ).toArray();\n    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n      isKeyedIterable ?\n      function(v, i)  { entries[i].length = 2; } :\n      function(v, i)  { entries[i] = v[1]; }\n    );\n    return isKeyedIterable ? KeyedSeq(entries) :\n      isIndexed(iterable) ? IndexedSeq(entries) :\n      SetSeq(entries);\n  }\n\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq()\n        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n  }\n\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function(fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function(type, reverse) {\n      var iterators = iters.map(function(i )\n        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n      );\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function()  {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function(i ) {return i.next()});\n          isDone = steps.some(function(s ) {return s.done});\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(\n          type,\n          iterations++,\n          zipper.apply(null, steps.map(function(s ) {return s.value}))\n        );\n      });\n    };\n    return zipSequence\n  }\n\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable :\n      isIndexed(iterable) ? IndexedIterable :\n      SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create(\n      (\n        isKeyed(iterable) ? KeyedSeq :\n        isIndexed(iterable) ? IndexedSeq :\n        SetSeq\n      ).prototype\n    );\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n    function Record(defaultValues, name) {\n      var hasInitialized;\n\n      var RecordType = function Record(values) {\n        if (values instanceof RecordType) {\n          return values;\n        }\n        if (!(this instanceof RecordType)) {\n          return new RecordType(values);\n        }\n        if (!hasInitialized) {\n          hasInitialized = true;\n          var keys = Object.keys(defaultValues);\n          setProps(RecordTypePrototype, keys);\n          RecordTypePrototype.size = keys.length;\n          RecordTypePrototype._name = name;\n          RecordTypePrototype._keys = keys;\n          RecordTypePrototype._defaultValues = defaultValues;\n        }\n        this._map = Map(values);\n      };\n\n      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n      RecordTypePrototype.constructor = RecordType;\n\n      return RecordType;\n    }\n\n    Record.prototype.toString = function() {\n      return this.__toString(recordName(this) + ' {', '}');\n    };\n\n    // @pragma Access\n\n    Record.prototype.has = function(k) {\n      return this._defaultValues.hasOwnProperty(k);\n    };\n\n    Record.prototype.get = function(k, notSetValue) {\n      if (!this.has(k)) {\n        return notSetValue;\n      }\n      var defaultVal = this._defaultValues[k];\n      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n    };\n\n    // @pragma Modification\n\n    Record.prototype.clear = function() {\n      if (this.__ownerID) {\n        this._map && this._map.clear();\n        return this;\n      }\n      var RecordType = this.constructor;\n      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n    };\n\n    Record.prototype.set = function(k, v) {\n      if (!this.has(k)) {\n        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n      }\n      if (this._map && !this._map.has(k)) {\n        var defaultVal = this._defaultValues[k];\n        if (v === defaultVal) {\n          return this;\n        }\n      }\n      var newMap = this._map && this._map.set(k, v);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.remove = function(k) {\n      if (!this.has(k)) {\n        return this;\n      }\n      var newMap = this._map && this._map.remove(k);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n    };\n\n    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n    };\n\n    Record.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map && this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return makeRecord(this, newMap, ownerID);\n    };\n\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn =\n  RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {\n      // Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function() {\n        return this.get(name);\n      },\n      set: function(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection);\n\n    // @pragma Construction\n\n    function Set(value) {\n      return value === null || value === undefined ? emptySet() :\n        isSet(value) && !isOrdered(value) ? value :\n        emptySet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    Set.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Set.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    Set.prototype.toString = function() {\n      return this.__toString('Set {', '}');\n    };\n\n    // @pragma Access\n\n    Set.prototype.has = function(value) {\n      return this._map.has(value);\n    };\n\n    // @pragma Modification\n\n    Set.prototype.add = function(value) {\n      return updateSet(this, this._map.set(value, true));\n    };\n\n    Set.prototype.remove = function(value) {\n      return updateSet(this, this._map.remove(value));\n    };\n\n    Set.prototype.clear = function() {\n      return updateSet(this, this._map.clear());\n    };\n\n    // @pragma Composition\n\n    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n      iters = iters.filter(function(x ) {return x.size !== 0});\n      if (iters.length === 0) {\n        return this;\n      }\n      if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n        return this.constructor(iters[0]);\n      }\n      return this.withMutations(function(set ) {\n        for (var ii = 0; ii < iters.length; ii++) {\n          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n        }\n      });\n    };\n\n    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (!iters.every(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (iters.some(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.merge = function() {\n      return this.union.apply(this, arguments);\n    };\n\n    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return this.union.apply(this, iters);\n    };\n\n    Set.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator));\n    };\n\n    Set.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator, mapper));\n    };\n\n    Set.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n    };\n\n    Set.prototype.__iterator = function(type, reverse) {\n      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n    };\n\n    Set.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return this.__make(newMap, ownerID);\n    };\n\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set :\n      newMap.size === 0 ? set.__empty() :\n      set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set);\n\n    // @pragma Construction\n\n    function OrderedSet(value) {\n      return value === null || value === undefined ? emptyOrderedSet() :\n        isOrderedSet(value) ? value :\n        emptyOrderedSet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    OrderedSet.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedSet.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    OrderedSet.prototype.toString = function() {\n      return this.__toString('OrderedSet {', '}');\n    };\n\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection);\n\n    // @pragma Construction\n\n    function Stack(value) {\n      return value === null || value === undefined ? emptyStack() :\n        isStack(value) ? value :\n        emptyStack().unshiftAll(value);\n    }\n\n    Stack.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Stack.prototype.toString = function() {\n      return this.__toString('Stack [', ']');\n    };\n\n    // @pragma Access\n\n    Stack.prototype.get = function(index, notSetValue) {\n      var head = this._head;\n      index = wrapIndex(this, index);\n      while (head && index--) {\n        head = head.next;\n      }\n      return head ? head.value : notSetValue;\n    };\n\n    Stack.prototype.peek = function() {\n      return this._head && this._head.value;\n    };\n\n    // @pragma Modification\n\n    Stack.prototype.push = function(/*...values*/) {\n      if (arguments.length === 0) {\n        return this;\n      }\n      var newSize = this.size + arguments.length;\n      var head = this._head;\n      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n        head = {\n          value: arguments[ii],\n          next: head\n        };\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pushAll = function(iter) {\n      iter = IndexedIterable(iter);\n      if (iter.size === 0) {\n        return this;\n      }\n      assertNotInfinite(iter.size);\n      var newSize = this.size;\n      var head = this._head;\n      iter.reverse().forEach(function(value ) {\n        newSize++;\n        head = {\n          value: value,\n          next: head\n        };\n      });\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pop = function() {\n      return this.slice(1);\n    };\n\n    Stack.prototype.unshift = function(/*...values*/) {\n      return this.push.apply(this, arguments);\n    };\n\n    Stack.prototype.unshiftAll = function(iter) {\n      return this.pushAll(iter);\n    };\n\n    Stack.prototype.shift = function() {\n      return this.pop.apply(this, arguments);\n    };\n\n    Stack.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._head = undefined;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyStack();\n    };\n\n    Stack.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      var resolvedBegin = resolveBegin(begin, this.size);\n      var resolvedEnd = resolveEnd(end, this.size);\n      if (resolvedEnd !== this.size) {\n        // super.slice(begin, end);\n        return IndexedCollection.prototype.slice.call(this, begin, end);\n      }\n      var newSize = this.size - resolvedBegin;\n      var head = this._head;\n      while (resolvedBegin--) {\n        head = head.next;\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    // @pragma Mutability\n\n    Stack.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeStack(this.size, this._head, ownerID, this.__hash);\n    };\n\n    // @pragma Iteration\n\n    Stack.prototype.__iterate = function(fn, reverse) {\n      if (reverse) {\n        return this.reverse().__iterate(fn);\n      }\n      var iterations = 0;\n      var node = this._head;\n      while (node) {\n        if (fn(node.value, iterations++, this) === false) {\n          break;\n        }\n        node = node.next;\n      }\n      return iterations;\n    };\n\n    Stack.prototype.__iterator = function(type, reverse) {\n      if (reverse) {\n        return this.reverse().__iterator(type);\n      }\n      var iterations = 0;\n      var node = this._head;\n      return new Iterator(function()  {\n        if (node) {\n          var value = node.value;\n          node = node.next;\n          return iteratorValue(type, iterations++, value);\n        }\n        return iteratorDone();\n      });\n    };\n\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols &&\n      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n      return array;\n    },\n\n    toIndexedSeq: function() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n      ).__toJS();\n    },\n\n    toJSON: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n      ).__toJS();\n    },\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n\n    toObject: function() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function(v, k)  { object[k] = v; });\n      return object;\n    },\n\n    toOrderedMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function() {\n      return isIndexed(this) ? this.toIndexedSeq() :\n        isKeyed(this) ? this.toKeyedSeq() :\n        this.toSetSeq();\n    },\n\n    toStack: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n\n    // ### Common JavaScript methods and properties\n\n    toString: function() {\n      return '[Iterable]';\n    },\n\n    __toString: function(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function() {var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    includes: function(searchValue) {\n      return this.some(function(value ) {return is(value, searchValue)});\n    },\n\n    entries: function() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function(v, k, c)  {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    forEach: function(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function(v ) {\n        isFirst ? (isFirst = false) : (joined += separator);\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n\n    keys: function() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function(v, k, c)  {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n\n    // ### More sequential methods\n\n    butLast: function() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n    },\n\n    count: function(predicate, context) {\n      return ensureSize(\n        predicate ? this.toSeq().filter(predicate, context) : this\n      );\n    },\n\n    countBy: function(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n      return entriesSequence;\n    },\n\n    filterNot: function(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findEntry: function(predicate, context, notSetValue) {\n      var found = notSetValue;\n      this.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findKey: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLast: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    findLastEntry: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n    },\n\n    findLastKey: function(predicate, context) {\n      return this.toKeyedSeq().reverse().findKey(predicate, context);\n    },\n\n    first: function() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function(searchKey, notSetValue) {\n      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n    },\n\n    getIn: function(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function(value ) {return iter.includes(value)});\n    },\n\n    isSuperset: function(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n\n    keyOf: function(searchValue) {\n      return this.findKey(function(value ) {return is(value, searchValue)});\n    },\n\n    keySeq: function() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function() {\n      return this.toSeq().reverse().first();\n    },\n\n    lastKeyOf: function(searchValue) {\n      return this.toKeyedSeq().reverse().keyOf(searchValue);\n    },\n\n    max: function(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function() {\n      return this.slice(1);\n    },\n\n    skip: function(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function() {\n      return this.toIndexedSeq();\n    },\n\n\n    // ### Hashable Object\n\n    hashCode: function() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    }\n\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect =\n  IterablePrototype.toSource = function() { return this.toString(); };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function() {\n      return reify(this, flipFactory(this));\n    },\n\n    mapEntries: function(mapper, context) {var this$0 = this;\n      var iterations = 0;\n      return reify(this,\n        this.toSeq().map(\n          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n        ).fromEntrySeq()\n      );\n    },\n\n    mapKeys: function(mapper, context) {var this$0 = this;\n      return reify(this,\n        this.toSeq().flip().map(\n          function(k, v)  {return mapper.call(context, k, v, this$0)}\n        ).flip()\n      );\n    }\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};\n\n\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, false);\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function(searchValue) {\n      var key = this.keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function(searchValue) {\n      var key = this.lastKeyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n        return this;\n      }\n      // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(\n        this,\n        numArgs === 1 ?\n          spliced :\n          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n      );\n    },\n\n\n    // ### More collection methods\n\n    findLastIndex: function(predicate, context) {\n      var entry = this.findLastEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    first: function() {\n      return this.get(0);\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return (index < 0 || (this.size === Infinity ||\n          (this.size !== undefined && index > this.size))) ?\n        notSetValue :\n        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n    },\n\n    has: function(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ?\n        this.size === Infinity || index < this.size :\n        this.indexOf(index) !== -1\n      );\n    },\n\n    interpose: function(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function(/*...iterables*/) {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    keySeq: function() {\n      return Range(0, this.size);\n    },\n\n    last: function() {\n      return this.get(-1);\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function(/*, ...iterables */) {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function(zipper/*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    includes: function(value) {\n      return this.has(value);\n    },\n\n\n    // ### More sequential methods\n\n    keySeq: function() {\n      return this.valueSeq();\n    }\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.includes;\n  SetIterable.prototype.contains = SetIterable.prototype.includes;\n\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    }\n  }\n\n  function neg(predicate) {\n    return function() {\n      return -predicate.apply(this, arguments);\n    }\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(\n      keyed ?\n        ordered ?\n          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n        ordered ?\n          function(v ) { h = 31 * h + hash(v) | 0; } :\n          function(v ) { h = h + hash(v) | 0; }\n    );\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS\n\n  };\n\n  return Immutable;\n\n}));"],"file":"immutable.js"}