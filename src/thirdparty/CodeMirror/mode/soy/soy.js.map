{"version":3,"sources":["thirdparty/CodeMirror/mode/soy/soy.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","paramData","noEndTag","soyState","tags","alias","delpackage","namespace","@attribute","@attribute?","@param","@param?","@inject","@inject?","@state","template","variableScope","extern","export","literal","msg","fallbackmsg","reduceIndent","select","plural","let","if","javaimpl","jsimpl","elseif","else","switch","case","default","foreach","ifempty","for","call","param","print","deltemplate","delcall","log","element","velog","const","indentingTags","Object","keys","filter","tag","defineMode","config","textMode","getMode","modes","html","name","multilineTagIndentFactor","multilineTagIndentPastTag","allowMissingTagName","attributes","text","uri","trusted_resource_uri","css","js","statementIndent","indentUnit","last","array","length","tokenUntil","stream","state","untilRegExp","sol","indent","eat","oldString","string","match","exec","substr","pos","index","result","hideFirstChars","localState","localStates","mode","token","contains","list","next","prepend","popcontext","context","scope","variables","previousContext","ref","loose","Context","this","kind","expression","push","lookupVariables","quoteKind","test","startState","scopes","copyState","concat","map","pop","skipToEnd","paramRe","current","peekChar","peek","indexOf","endTag","tagName","undefined","substring","selfClosed","prevTag","indentingTag","tagError","isBalancedForExtern","textAfter","line","top","Pass","innerMode","electricInput","lineComment","blockCommentStart","blockCommentEnd","blockCommentContinue","useInnerComments","fold","registerHelper","defineMIME"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var paramData = { noEndTag: true, soyState: \"param-def\" };\n  var tags = {\n    \"alias\": { noEndTag: true },\n    \"delpackage\": { noEndTag: true },\n    \"namespace\": { noEndTag: true, soyState: \"namespace-def\" },\n    \"@attribute\": paramData,\n    \"@attribute?\": paramData,\n    \"@param\": paramData,\n    \"@param?\": paramData,\n    \"@inject\": paramData,\n    \"@inject?\": paramData,\n    \"@state\": paramData,\n    \"template\": { soyState: \"templ-def\", variableScope: true},\n    \"extern\": {soyState: \"param-def\"},\n    \"export\": {soyState: \"export\"},\n    \"literal\": { },\n    \"msg\": {},\n    \"fallbackmsg\": { noEndTag: true, reduceIndent: true},\n    \"select\": {},\n    \"plural\": {},\n    \"let\": { soyState: \"var-def\" },\n    \"if\": {},\n    \"javaimpl\": {},\n    \"jsimpl\": {},\n    \"elseif\": { noEndTag: true, reduceIndent: true},\n    \"else\": { noEndTag: true, reduceIndent: true},\n    \"switch\": {},\n    \"case\": { noEndTag: true, reduceIndent: true},\n    \"default\": { noEndTag: true, reduceIndent: true},\n    \"foreach\": { variableScope: true, soyState: \"for-loop\" },\n    \"ifempty\": { noEndTag: true, reduceIndent: true},\n    \"for\": { variableScope: true, soyState: \"for-loop\" },\n    \"call\": { soyState: \"templ-ref\" },\n    \"param\": { soyState: \"param-ref\"},\n    \"print\": { noEndTag: true },\n    \"deltemplate\": { soyState: \"templ-def\", variableScope: true},\n    \"delcall\": { soyState: \"templ-ref\" },\n    \"log\": {},\n    \"element\": { variableScope: true },\n    \"velog\": {},\n    \"const\": { soyState: \"const-def\"},\n  };\n\n  var indentingTags = Object.keys(tags).filter(function(tag) {\n    return !tags[tag].noEndTag || tags[tag].reduceIndent;\n  });\n\n  CodeMirror.defineMode(\"soy\", function(config) {\n    var textMode = CodeMirror.getMode(config, \"text/plain\");\n    var modes = {\n      html: CodeMirror.getMode(config, {name: \"text/html\", multilineTagIndentFactor: 2, multilineTagIndentPastTag: false, allowMissingTagName: true}),\n      attributes: textMode,\n      text: textMode,\n      uri: textMode,\n      trusted_resource_uri: textMode,\n      css: CodeMirror.getMode(config, \"text/css\"),\n      js: CodeMirror.getMode(config, {name: \"text/javascript\", statementIndent: 2 * config.indentUnit})\n    };\n\n    function last(array) {\n      return array[array.length - 1];\n    }\n\n    function tokenUntil(stream, state, untilRegExp) {\n      if (stream.sol()) {\n        for (var indent = 0; indent < state.indent; indent++) {\n          if (!stream.eat(/\\s/)) break;\n        }\n        if (indent) return null;\n      }\n      var oldString = stream.string;\n      var match = untilRegExp.exec(oldString.substr(stream.pos));\n      if (match) {\n        // We don't use backUp because it backs up just the position, not the state.\n        // This uses an undocumented API.\n        stream.string = oldString.substr(0, stream.pos + match.index);\n      }\n      var result = stream.hideFirstChars(state.indent, function() {\n        var localState = last(state.localStates);\n        return localState.mode.token(stream, localState.state);\n      });\n      stream.string = oldString;\n      return result;\n    }\n\n    function contains(list, element) {\n      while (list) {\n        if (list.element === element) return true;\n        list = list.next;\n      }\n      return false;\n    }\n\n    function prepend(list, element) {\n      return {\n        element: element,\n        next: list\n      };\n    }\n\n    function popcontext(state) {\n      if (!state.context) return;\n      if (state.context.scope) {\n        state.variables = state.context.scope;\n      }\n      state.context = state.context.previousContext;\n    }\n\n    // Reference a variable `name` in `list`.\n    // Let `loose` be truthy to ignore missing identifiers.\n    function ref(list, name, loose) {\n      return contains(list, name) ? \"variable-2\" : (loose ? \"variable\" : \"variable-2 error\");\n    }\n\n    // Data for an open soy tag.\n    function Context(previousContext, tag, scope) {\n      this.previousContext = previousContext;\n      this.tag = tag;\n      this.kind = null;\n      this.scope = scope;\n    }\n\n    function expression(stream, state) {\n      var match;\n      if (stream.match(/[[]/)) {\n        state.soyState.push(\"list-literal\");\n        state.context = new Context(state.context, \"list-literal\", state.variables);\n        state.lookupVariables = false;\n        return null;\n      } else if (stream.match(/\\bmap(?=\\()/)) {\n        state.soyState.push(\"map-literal\");\n        return \"keyword\";\n      } else if (stream.match(/\\brecord(?=\\()/)) {\n        state.soyState.push(\"record-literal\");\n        return \"keyword\";\n      } else if (stream.match(/([\\w]+)(?=\\()/)) {\n        return \"variable callee\";\n      } else if (match = stream.match(/^[\"']/)) {\n        state.soyState.push(\"string\");\n        state.quoteKind = match[0];\n        return \"string\";\n      } else if (stream.match(/^[(]/)) {\n        state.soyState.push(\"open-parentheses\");\n        return null;\n      } else if (stream.match(/(null|true|false)(?!\\w)/) ||\n          stream.match(/0x([0-9a-fA-F]{2,})/) ||\n          stream.match(/-?([0-9]*[.])?[0-9]+(e[0-9]*)?/)) {\n        return \"atom\";\n      } else if (stream.match(/(\\||[+\\-*\\/%]|[=!]=|\\?:|[<>]=?)/)) {\n        // Tokenize filter, binary, null propagator, and equality operators.\n        return \"operator\";\n      } else if (match = stream.match(/^\\$([\\w]+)/)) {\n        return ref(state.variables, match[1], !state.lookupVariables);\n      } else if (match = stream.match(/^\\w+/)) {\n        return /^(?:as|and|or|not|in|if)$/.test(match[0]) ? \"keyword\" : null;\n      }\n\n      stream.next();\n      return null;\n    }\n\n    return {\n      startState: function() {\n        return {\n          soyState: [],\n          variables: prepend(null, 'ij'),\n          scopes: null,\n          indent: 0,\n          quoteKind: null,\n          context: null,\n          lookupVariables: true, // Is unknown variables considered an error\n          localStates: [{\n            mode: modes.html,\n            state: CodeMirror.startState(modes.html)\n          }]\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          tag: state.tag, // Last seen Soy tag.\n          soyState: state.soyState.concat([]),\n          variables: state.variables,\n          context: state.context,\n          indent: state.indent, // Indentation of the following line.\n          quoteKind: state.quoteKind,\n          lookupVariables: state.lookupVariables,\n          localStates: state.localStates.map(function(localState) {\n            return {\n              mode: localState.mode,\n              state: CodeMirror.copyState(localState.mode, localState.state)\n            };\n          })\n        };\n      },\n\n      token: function(stream, state) {\n        var match;\n\n        switch (last(state.soyState)) {\n          case \"comment\":\n            if (stream.match(/^.*?\\*\\//)) {\n              state.soyState.pop();\n            } else {\n              stream.skipToEnd();\n            }\n            if (!state.context || !state.context.scope) {\n              var paramRe = /@param\\??\\s+(\\S+)/g;\n              var current = stream.current();\n              for (var match; (match = paramRe.exec(current)); ) {\n                state.variables = prepend(state.variables, match[1]);\n              }\n            }\n            return \"comment\";\n\n          case \"string\":\n            var match = stream.match(/^.*?([\"']|\\\\[\\s\\S])/);\n            if (!match) {\n              stream.skipToEnd();\n            } else if (match[1] == state.quoteKind) {\n              state.quoteKind = null;\n              state.soyState.pop();\n            }\n            return \"string\";\n        }\n\n        if (!state.soyState.length || last(state.soyState) != \"literal\") {\n          if (stream.match(/^\\/\\*/)) {\n            state.soyState.push(\"comment\");\n            return \"comment\";\n          } else if (stream.match(stream.sol() ? /^\\s*\\/\\/.*/ : /^\\s+\\/\\/.*/)) {\n            return \"comment\";\n          }\n        }\n\n        switch (last(state.soyState)) {\n          case \"templ-def\":\n            if (match = stream.match(/^\\.?([\\w]+(?!\\.[\\w]+)*)/)) {\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"templ-ref\":\n            if (match = stream.match(/(\\.?[a-zA-Z_][a-zA-Z_0-9]+)+/)) {\n              state.soyState.pop();\n              // If the first character is '.', it can only be a local template.\n              if (match[0][0] == '.') {\n                return \"variable-2\"\n              }\n              // Otherwise\n              return \"variable\";\n            }\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.soyState.pop();\n              return ref(state.variables, match[1], !state.lookupVariables);\n            }\n\n            stream.next();\n            return null;\n\n          case \"namespace-def\":\n            if (match = stream.match(/^\\.?([\\w\\.]+)/)) {\n              state.soyState.pop();\n              return \"variable\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-def\":\n            if (match = stream.match(/^\\*/)) {\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"type\";\n            }\n            if (match = stream.match(/^\\w+/)) {\n              state.variables = prepend(state.variables, match[0]);\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-ref\":\n            if (match = stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"property\";\n            }\n            stream.next();\n            return null;\n\n          case \"open-parentheses\":\n            if (stream.match(/[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            return expression(stream, state);\n\n          case \"param-type\":\n            var peekChar = stream.peek();\n            if (\"}]=>,\".indexOf(peekChar) != -1) {\n              state.soyState.pop();\n              return null;\n            } else if (peekChar == \"[\") {\n              state.soyState.push('param-type-record');\n              return null;\n            } else if (peekChar == \"(\") {\n              state.soyState.push('param-type-template');\n              return null;\n            } else if (peekChar == \"<\") {\n              state.soyState.push('param-type-parameter');\n              return null;\n            } else if (match = stream.match(/^([\\w]+|[?])/)) {\n              return \"type\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-record\":\n            var peekChar = stream.peek();\n            if (peekChar == \"]\") {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/^\\w+/)) {\n              state.soyState.push('param-type');\n              return \"property\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-parameter\":\n            if (stream.match(/^[>]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/^[<,]/)) {\n              state.soyState.push('param-type');\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-template\":\n            if (stream.match(/[>]/)) {\n              state.soyState.pop();\n              state.soyState.push('param-type');\n              return null;\n            }\n            if (stream.match(/^\\w+/)) {\n              state.soyState.push('param-type');\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"var-def\":\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.variables = prepend(state.variables, match[1]);\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"for-loop\":\n            if (stream.match(/\\bin\\b/)) {\n              state.soyState.pop();\n              return \"keyword\";\n            }\n            if (stream.peek() == \"$\") {\n              state.soyState.push('var-def');\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"record-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\")\n              state.soyState.push(\"record-key\")\n              return null;\n            }\n            stream.next()\n            return null;\n\n          case \"map-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\")\n              state.soyState.push(\"map-value\")\n              return null;\n            }\n            stream.next()\n            return null;\n\n          case \"list-literal\":\n            if (stream.match(']')) {\n              state.soyState.pop();\n              state.lookupVariables = true;\n              popcontext(state);\n              return null;\n            }\n            if (stream.match(/\\bfor\\b/)) {\n              state.lookupVariables = true;\n              state.soyState.push('for-loop');\n              return \"keyword\";\n            }\n            return expression(stream, state);\n\n          case \"record-key\":\n            if (stream.match(/[\\w]+/)) {\n              return \"property\";\n            }\n            if (stream.match(/^[:]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"map-value\":\n            if (stream.peek() == \")\" || stream.peek() == \",\" || stream.match(/^[:)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            return expression(stream, state);\n\n          case \"import\":\n            if (stream.eat(\";\")) {\n              state.soyState.pop();\n              state.indent -= 2 * config.indentUnit;\n              return null;\n            }\n            if (stream.match(/\\w+(?=\\s+as\\b)/)) {\n              return \"variable\";\n            }\n            if (match = stream.match(/\\w+/)) {\n              return /\\b(from|as)\\b/.test(match[0]) ? \"keyword\" : \"def\";\n            }\n            if (match = stream.match(/^[\"']/)) {\n              state.soyState.push(\"string\");\n              state.quoteKind = match[0];\n              return \"string\";\n            }\n            stream.next();\n            return null;\n\n          case \"tag\":\n            var endTag;\n            var tagName;\n            if (state.tag === undefined) {\n              endTag = true;\n              tagName = '';\n            } else {\n              endTag = state.tag[0] == \"/\";\n              tagName = endTag ? state.tag.substring(1) : state.tag;\n            }\n            var tag = tags[tagName];\n            if (stream.match(/^\\/?}/)) {\n              var selfClosed = stream.current() == \"/}\";\n              if (selfClosed && !endTag) {\n                popcontext(state);\n              }\n              if (state.tag == \"/template\" || state.tag == \"/deltemplate\") {\n                state.variables = prepend(null, 'ij');\n                state.indent = 0;\n              } else {\n                state.indent -= config.indentUnit *\n                    (selfClosed || indentingTags.indexOf(state.tag) == -1 ? 2 : 1);\n              }\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.match(/^([\\w?]+)(?==)/)) {\n              if (state.context && state.context.tag == tagName && stream.current() == \"kind\" && (match = stream.match(/^=\"([^\"]+)/, false))) {\n                var kind = match[1];\n                state.context.kind = kind;\n                var mode = modes[kind] || modes.html;\n                var localState = last(state.localStates);\n                if (localState.mode.indent) {\n                  state.indent += localState.mode.indent(localState.state, \"\", \"\");\n                }\n                state.localStates.push({\n                  mode: mode,\n                  state: CodeMirror.startState(mode)\n                });\n              }\n              return \"attribute\";\n            }\n            return expression(stream, state);\n\n          case \"template-call-expression\":\n            if (stream.match(/^([\\w-?]+)(?==)/)) {\n              return \"attribute\";\n            } else if (stream.eat('>')) {\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.eat('/>')) {\n              state.soyState.pop();\n              return \"keyword\";\n            }\n            return expression(stream, state);\n          case \"literal\":\n            if (stream.match('{/literal}', false)) {\n              state.soyState.pop();\n              return this.token(stream, state);\n            }\n            return tokenUntil(stream, state, /\\{\\/literal}/);\n          case \"export\":\n            if (match = stream.match(/\\w+/)) {\n              state.soyState.pop();\n              if (match == \"const\") {\n                state.soyState.push(\"const-def\")\n                return \"keyword\";\n              } else if (match == \"extern\") {\n                state.soyState.push(\"param-def\")\n                return \"keyword\";\n              }\n            } else {\n              stream.next();\n            }\n            return null;\n          case \"const-def\":\n            if (stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n        }\n\n        if (stream.match('{literal}')) {\n          state.indent += config.indentUnit;\n          state.soyState.push(\"literal\");\n          state.context = new Context(state.context, \"literal\", state.variables);\n          return \"keyword\";\n\n        // A tag-keyword must be followed by whitespace, comment or a closing tag.\n        } else if (match = stream.match(/^\\{([/@\\\\]?\\w+\\??)(?=$|[\\s}]|\\/[/*])/)) {\n          var prevTag = state.tag;\n          state.tag = match[1];\n          var endTag = state.tag[0] == \"/\";\n          var indentingTag = !!tags[state.tag];\n          var tagName = endTag ? state.tag.substring(1) : state.tag;\n          var tag = tags[tagName];\n          if (state.tag != \"/switch\")\n            state.indent += ((endTag || tag && tag.reduceIndent) && prevTag != \"switch\" ? 1 : 2) * config.indentUnit;\n\n          state.soyState.push(\"tag\");\n          var tagError = false;\n          if (tag) {\n            if (!endTag) {\n              if (tag.soyState) state.soyState.push(tag.soyState);\n            }\n            // If a new tag, open a new context.\n            if (!tag.noEndTag && (indentingTag || !endTag)) {\n              state.context = new Context(state.context, state.tag, tag.variableScope ? state.variables : null);\n            // Otherwise close the current context.\n            } else if (endTag) {\n              var isBalancedForExtern = tagName == 'extern' && (state.context && state.context.tag == 'export');\n              if (!state.context || ((state.context.tag != tagName) && !isBalancedForExtern)) {\n                tagError = true;\n              } else if (state.context) {\n                if (state.context.kind) {\n                  state.localStates.pop();\n                  var localState = last(state.localStates);\n                  if (localState.mode.indent) {\n                    state.indent -= localState.mode.indent(localState.state, \"\", \"\");\n                  }\n                }\n                popcontext(state);\n              }\n            }\n          } else if (endTag) {\n            // Assume all tags with a closing tag are defined in the config.\n            tagError = true;\n          }\n          return (tagError ? \"error \" : \"\") + \"keyword\";\n\n        // Not a tag-keyword; it's an implicit print tag.\n        } else if (stream.eat('{')) {\n          state.tag = \"print\";\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        } else if (!state.context && stream.sol() && stream.match(/import\\b/)) {\n          state.soyState.push(\"import\");\n          state.indent += 2 * config.indentUnit;\n          return \"keyword\";\n        } else if (match = stream.match('<{')) {\n          state.soyState.push(\"template-call-expression\");\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        } else if (match = stream.match('</>')) {\n          state.indent -= 1 * config.indentUnit;\n          return \"keyword\";\n        }\n\n        return tokenUntil(stream, state, /\\{|\\s+\\/\\/|\\/\\*/);\n      },\n\n      indent: function(state, textAfter, line) {\n        var indent = state.indent, top = last(state.soyState);\n        if (top == \"comment\") return CodeMirror.Pass;\n\n        if (top == \"literal\") {\n          if (/^\\{\\/literal}/.test(textAfter)) indent -= config.indentUnit;\n        } else {\n          if (/^\\s*\\{\\/(template|deltemplate)\\b/.test(textAfter)) return 0;\n          if (/^\\{(\\/|(fallbackmsg|elseif|else|ifempty)\\b)/.test(textAfter)) indent -= config.indentUnit;\n          if (state.tag != \"switch\" && /^\\{(case|default)\\b/.test(textAfter)) indent -= config.indentUnit;\n          if (/^\\{\\/switch\\b/.test(textAfter)) indent -= config.indentUnit;\n        }\n        var localState = last(state.localStates);\n        if (indent && localState.mode.indent) {\n          indent += localState.mode.indent(localState.state, textAfter, line);\n        }\n        return indent;\n      },\n\n      innerMode: function(state) {\n        if (state.soyState.length && last(state.soyState) != \"literal\") return null;\n        else return last(state.localStates);\n      },\n\n      electricInput: /^\\s*\\{(\\/|\\/template|\\/deltemplate|\\/switch|fallbackmsg|elseif|else|case|default|ifempty|\\/literal\\})$/,\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      blockCommentContinue: \" * \",\n      useInnerComments: false,\n      fold: \"indent\"\n    };\n  }, \"htmlmixed\");\n\n  CodeMirror.registerHelper(\"wordChars\", \"soy\", /[\\w$]/);\n\n  CodeMirror.registerHelper(\"hintWords\", \"soy\", Object.keys(tags).concat(\n      [\"css\", \"debugger\"]));\n\n  CodeMirror.defineMIME(\"text/x-soy\", \"soy\");\n});\n"],"file":"soy.js"}