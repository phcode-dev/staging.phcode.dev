{"version":3,"sources":["thirdparty/CodeMirror/mode/rst/rst.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","options","rx_strong","rx_emphasis","rx_literal","rx_number","rx_positive","rx_negative","rx_uri_protocol","rx_uri_domain","rx_uri_path","rx_uri","RegExp","overlay","token","stream","match","next","mode","getMode","backdrop","overlayMode","format","string","args","Array","prototype","slice","call","arguments","replace","n","mode_python","mode_stex","SEPA","TAIL","rx_TAIL","NAME","rx_NAME","NAME_WWS","REF_NAME","TEXT1","TEXT2","rx_TEXT2","rx_section","rx_explicit","rx_link","rx_directive","rx_substitution","rx_footnote","rx_citation","rx_substitution_ref","rx_footnote_ref","rx_citation_ref","rx_link_ref1","rx_link_ref2","rx_role_pre","rx_role_suf","rx_role","rx_directive_name","rx_directive_tail","rx_substitution_text","rx_substitution_sepa","rx_substitution_name","rx_substitution_tail","rx_link_head","rx_link_name","rx_link_tail","rx_verbatim","rx_examples","to_normal","state","sol","change","to_mode","local","startState","to_explicit","phase","stage","context","current","tmp_stex","undefined","tmp","peek","to_verbatim","tmp_py","eatSpace","eol","skipToEnd","to_comment","as_block","ctx","tok","copyState","innerMode","defineMIME"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../python/python\"), require(\"../stex/stex\"), require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../python/python\", \"../stex/stex\", \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('rst', function (config, options) {\n\n  var rx_strong = /^\\*\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*\\*/;\n  var rx_emphasis = /^\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*/;\n  var rx_literal = /^``[^`\\s](?:[^`]*[^`\\s])``/;\n\n  var rx_number = /^(?:[\\d]+(?:[\\.,]\\d+)*)/;\n  var rx_positive = /^(?:\\s\\+[\\d]+(?:[\\.,]\\d+)*)/;\n  var rx_negative = /^(?:\\s\\-[\\d]+(?:[\\.,]\\d+)*)/;\n\n  var rx_uri_protocol = \"[Hh][Tt][Tt][Pp][Ss]?://\";\n  var rx_uri_domain = \"(?:[\\\\d\\\\w.-]+)\\\\.(?:\\\\w{2,6})\";\n  var rx_uri_path = \"(?:/[\\\\d\\\\w\\\\#\\\\%\\\\&\\\\-\\\\.\\\\,\\\\/\\\\:\\\\=\\\\?\\\\~]+)*\";\n  var rx_uri = new RegExp(\"^\" + rx_uri_protocol + rx_uri_domain + rx_uri_path);\n\n  var overlay = {\n    token: function (stream) {\n\n      if (stream.match(rx_strong) && stream.match (/\\W+|$/, false))\n        return 'strong';\n      if (stream.match(rx_emphasis) && stream.match (/\\W+|$/, false))\n        return 'em';\n      if (stream.match(rx_literal) && stream.match (/\\W+|$/, false))\n        return 'string-2';\n      if (stream.match(rx_number))\n        return 'number';\n      if (stream.match(rx_positive))\n        return 'positive';\n      if (stream.match(rx_negative))\n        return 'negative';\n      if (stream.match(rx_uri))\n        return 'link';\n\n      while (stream.next() != null) {\n        if (stream.match(rx_strong, false)) break;\n        if (stream.match(rx_emphasis, false)) break;\n        if (stream.match(rx_literal, false)) break;\n        if (stream.match(rx_number, false)) break;\n        if (stream.match(rx_positive, false)) break;\n        if (stream.match(rx_negative, false)) break;\n        if (stream.match(rx_uri, false)) break;\n      }\n\n      return null;\n    }\n  };\n\n  var mode = CodeMirror.getMode(\n    config, options.backdrop || 'rst-base'\n  );\n\n  return CodeMirror.overlayMode(mode, overlay, true); // combine\n}, 'python', 'stex');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nCodeMirror.defineMode('rst-base', function (config) {\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function format(string) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return string.replace(/{(\\d+)}/g, function (match, n) {\n      return typeof args[n] != 'undefined' ? args[n] : match;\n    });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  var mode_python = CodeMirror.getMode(config, 'python');\n  var mode_stex = CodeMirror.getMode(config, 'stex');\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  var SEPA = \"\\\\s+\";\n  var TAIL = \"(?:\\\\s*|\\\\W|$)\",\n  rx_TAIL = new RegExp(format('^{0}', TAIL));\n\n  var NAME =\n    \"(?:[^\\\\W\\\\d_](?:[\\\\w!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\",\n  rx_NAME = new RegExp(format('^{0}', NAME));\n  var NAME_WWS =\n    \"(?:[^\\\\W\\\\d_](?:[\\\\w\\\\s!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\";\n  var REF_NAME = format('(?:{0}|`{1}`)', NAME, NAME_WWS);\n\n  var TEXT1 = \"(?:[^\\\\s\\\\|](?:[^\\\\|]*[^\\\\s\\\\|])?)\";\n  var TEXT2 = \"(?:[^\\\\`]+)\",\n  rx_TEXT2 = new RegExp(format('^{0}', TEXT2));\n\n  var rx_section = new RegExp(\n    \"^([!'#$%&\\\"()*+,-./:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~])\\\\1{3,}\\\\s*$\");\n  var rx_explicit = new RegExp(\n    format('^\\\\.\\\\.{0}', SEPA));\n  var rx_link = new RegExp(\n    format('^_{0}:{1}|^__:{1}', REF_NAME, TAIL));\n  var rx_directive = new RegExp(\n    format('^{0}::{1}', REF_NAME, TAIL));\n  var rx_substitution = new RegExp(\n    format('^\\\\|{0}\\\\|{1}{2}::{3}', TEXT1, SEPA, REF_NAME, TAIL));\n  var rx_footnote = new RegExp(\n    format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]{1}', REF_NAME, TAIL));\n  var rx_citation = new RegExp(\n    format('^\\\\[{0}\\\\]{1}', REF_NAME, TAIL));\n\n  var rx_substitution_ref = new RegExp(\n    format('^\\\\|{0}\\\\|', TEXT1));\n  var rx_footnote_ref = new RegExp(\n    format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]_', REF_NAME));\n  var rx_citation_ref = new RegExp(\n    format('^\\\\[{0}\\\\]_', REF_NAME));\n  var rx_link_ref1 = new RegExp(\n    format('^{0}__?', REF_NAME));\n  var rx_link_ref2 = new RegExp(\n    format('^`{0}`_', TEXT2));\n\n  var rx_role_pre = new RegExp(\n    format('^:{0}:`{1}`{2}', NAME, TEXT2, TAIL));\n  var rx_role_suf = new RegExp(\n    format('^`{1}`:{0}:{2}', NAME, TEXT2, TAIL));\n  var rx_role = new RegExp(\n    format('^:{0}:{1}', NAME, TAIL));\n\n  var rx_directive_name = new RegExp(format('^{0}', REF_NAME));\n  var rx_directive_tail = new RegExp(format('^::{0}', TAIL));\n  var rx_substitution_text = new RegExp(format('^\\\\|{0}\\\\|', TEXT1));\n  var rx_substitution_sepa = new RegExp(format('^{0}', SEPA));\n  var rx_substitution_name = new RegExp(format('^{0}', REF_NAME));\n  var rx_substitution_tail = new RegExp(format('^::{0}', TAIL));\n  var rx_link_head = new RegExp(\"^_\");\n  var rx_link_name = new RegExp(format('^{0}|_', REF_NAME));\n  var rx_link_tail = new RegExp(format('^:{0}', TAIL));\n\n  var rx_verbatim = new RegExp('^::\\\\s*$');\n  var rx_examples = new RegExp('^\\\\s+(?:>>>|In \\\\[\\\\d+\\\\]:)\\\\s');\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_normal(stream, state) {\n    var token = null;\n\n    if (stream.sol() && stream.match(rx_examples, false)) {\n      change(state, to_mode, {\n        mode: mode_python, local: CodeMirror.startState(mode_python)\n      });\n    } else if (stream.sol() && stream.match(rx_explicit)) {\n      change(state, to_explicit);\n      token = 'meta';\n    } else if (stream.sol() && stream.match(rx_section)) {\n      change(state, to_normal);\n      token = 'header';\n    } else if (phase(state) == rx_role_pre ||\n               stream.match(rx_role_pre, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role_pre, 1));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role_pre, 2));\n        stream.match(rx_NAME);\n        token = 'keyword';\n\n        if (stream.current().match(/^(?:math|latex)/)) {\n          state.tmp_stex = true;\n        }\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role_pre, 3));\n        stream.match(/^:`/);\n        token = 'meta';\n        break;\n      case 3:\n        if (state.tmp_stex) {\n          state.tmp_stex = undefined; state.tmp = {\n            mode: mode_stex, local: CodeMirror.startState(mode_stex)\n          };\n        }\n\n        if (state.tmp) {\n          if (stream.peek() == '`') {\n            change(state, to_normal, context(rx_role_pre, 4));\n            state.tmp = undefined;\n            break;\n          }\n\n          token = state.tmp.mode.token(stream, state.tmp.local);\n          break;\n        }\n\n        change(state, to_normal, context(rx_role_pre, 4));\n        stream.match(rx_TEXT2);\n        token = 'string';\n        break;\n      case 4:\n        change(state, to_normal, context(rx_role_pre, 5));\n        stream.match(/^`/);\n        token = 'meta';\n        break;\n      case 5:\n        change(state, to_normal, context(rx_role_pre, 6));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_role_suf ||\n               stream.match(rx_role_suf, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role_suf, 1));\n        stream.match(/^`/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role_suf, 2));\n        stream.match(rx_TEXT2);\n        token = 'string';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role_suf, 3));\n        stream.match(/^`:/);\n        token = 'meta';\n        break;\n      case 3:\n        change(state, to_normal, context(rx_role_suf, 4));\n        stream.match(rx_NAME);\n        token = 'keyword';\n        break;\n      case 4:\n        change(state, to_normal, context(rx_role_suf, 5));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 5:\n        change(state, to_normal, context(rx_role_suf, 6));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_role || stream.match(rx_role, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role, 1));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role, 2));\n        stream.match(rx_NAME);\n        token = 'keyword';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role, 3));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 3:\n        change(state, to_normal, context(rx_role, 4));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_substitution_ref ||\n               stream.match(rx_substitution_ref, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_substitution_ref, 1));\n        stream.match(rx_substitution_text);\n        token = 'variable-2';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_substitution_ref, 2));\n        if (stream.match(/^_?_?/)) token = 'link';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_footnote_ref)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_citation_ref)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_link_ref1)) {\n      change(state, to_normal);\n      if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n        token = 'link';\n      }\n    } else if (phase(state) == rx_link_ref2 ||\n               stream.match(rx_link_ref2, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n          change(state, to_normal, context(rx_link_ref2, 1));\n        } else {\n          stream.match(rx_link_ref2);\n        }\n        break;\n      case 1:\n        change(state, to_normal, context(rx_link_ref2, 2));\n        stream.match(/^`/);\n        token = 'link';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_link_ref2, 3));\n        stream.match(rx_TEXT2);\n        break;\n      case 3:\n        change(state, to_normal, context(rx_link_ref2, 4));\n        stream.match(/^`_/);\n        token = 'link';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_verbatim)) {\n      change(state, to_verbatim);\n    }\n\n    else {\n      if (stream.next()) change(state, to_normal);\n    }\n\n    return token;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_explicit(stream, state) {\n    var token = null;\n\n    if (phase(state) == rx_substitution ||\n        stream.match(rx_substitution, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_substitution, 1));\n        stream.match(rx_substitution_text);\n        token = 'variable-2';\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_substitution, 2));\n        stream.match(rx_substitution_sepa);\n        break;\n      case 2:\n        change(state, to_explicit, context(rx_substitution, 3));\n        stream.match(rx_substitution_name);\n        token = 'keyword';\n        break;\n      case 3:\n        change(state, to_explicit, context(rx_substitution, 4));\n        stream.match(rx_substitution_tail);\n        token = 'meta';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_directive ||\n               stream.match(rx_directive, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_directive, 1));\n        stream.match(rx_directive_name);\n        token = 'keyword';\n\n        if (stream.current().match(/^(?:math|latex)/))\n          state.tmp_stex = true;\n        else if (stream.current().match(/^python/))\n          state.tmp_py = true;\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_directive, 2));\n        stream.match(rx_directive_tail);\n        token = 'meta';\n\n        if (stream.match(/^latex\\s*$/) || state.tmp_stex) {\n          state.tmp_stex = undefined; change(state, to_mode, {\n            mode: mode_stex, local: CodeMirror.startState(mode_stex)\n          });\n        }\n        break;\n      case 2:\n        change(state, to_explicit, context(rx_directive, 3));\n        if (stream.match(/^python\\s*$/) || state.tmp_py) {\n          state.tmp_py = undefined; change(state, to_mode, {\n            mode: mode_python, local: CodeMirror.startState(mode_python)\n          });\n        }\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_link || stream.match(rx_link, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_link, 1));\n        stream.match(rx_link_head);\n        stream.match(rx_link_name);\n        token = 'link';\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_link, 2));\n        stream.match(rx_link_tail);\n        token = 'meta';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_footnote)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_citation)) {\n      change(state, to_normal);\n      token = 'quote';\n    }\n\n    else {\n      stream.eatSpace();\n      if (stream.eol()) {\n        change(state, to_normal);\n      } else {\n        stream.skipToEnd();\n        change(state, to_comment);\n        token = 'comment';\n      }\n    }\n\n    return token;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_comment(stream, state) {\n    return as_block(stream, state, 'comment');\n  }\n\n  function to_verbatim(stream, state) {\n    return as_block(stream, state, 'meta');\n  }\n\n  function as_block(stream, state, token) {\n    if (stream.eol() || stream.eatSpace()) {\n      stream.skipToEnd();\n      return token;\n    } else {\n      change(state, to_normal);\n      return null;\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_mode(stream, state) {\n\n    if (state.ctx.mode && state.ctx.local) {\n\n      if (stream.sol()) {\n        if (!stream.eatSpace()) change(state, to_normal);\n        return null;\n      }\n\n      return state.ctx.mode.token(stream, state.ctx.local);\n    }\n\n    change(state, to_normal);\n    return null;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function context(phase, stage, mode, local) {\n    return {phase: phase, stage: stage, mode: mode, local: local};\n  }\n\n  function change(state, tok, ctx) {\n    state.tok = tok;\n    state.ctx = ctx || {};\n  }\n\n  function stage(state) {\n    return state.ctx.stage || 0;\n  }\n\n  function phase(state) {\n    return state.ctx.phase;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  return {\n    startState: function () {\n      return {tok: to_normal, ctx: context(undefined, 0)};\n    },\n\n    copyState: function (state) {\n      var ctx = state.ctx, tmp = state.tmp;\n      if (ctx.local)\n        ctx = {mode: ctx.mode, local: CodeMirror.copyState(ctx.mode, ctx.local)};\n      if (tmp)\n        tmp = {mode: tmp.mode, local: CodeMirror.copyState(tmp.mode, tmp.local)};\n      return {tok: state.tok, ctx: ctx, tmp: tmp};\n    },\n\n    innerMode: function (state) {\n      return state.tmp      ? {state: state.tmp.local, mode: state.tmp.mode}\n      : state.ctx.mode ? {state: state.ctx.local, mode: state.ctx.mode}\n      : null;\n    },\n\n    token: function (stream, state) {\n      return state.tok(stream, state);\n    }\n  };\n}, 'python', 'stex');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nCodeMirror.defineMIME('text/x-rst', 'rst');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n});\n"],"file":"rst.js"}