{"version":3,"sources":["thirdparty/CodeMirror/addon/merge/merge.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","Pos","svgNS","DiffView","mv","type","this","classes","chunk","start","end","insert","del","connect","ensureDiff","dv","diffOutOfDate","diff","getDiff","orig","getValue","edit","options","ignoreWhitespace","chunks","getChunks","signal","prototype","constructor","init","pane","state","diffViews","push","copyObj","value","readOnly","allowEditingOriginals","trackAlignable","TrackAlignable","lockButton","title","phrase","setAttribute","classLocation","chunkClassLocation","Object","toString","call","asString","dealigned","needsScrollSync","showDifferences","registerEvents","otherDv","forceUpdate","registerUpdate","setScrollLock","registerScroll","setShowDifferences","val","updating","from","to","marked","debounceChange","updatingFast","update","mode","svg","clear","copyButtons","clearMarks","updateMarks","DIFF_INSERT","DIFF_DELETE","alignChunks","makeConnections","syncScroll","setDealign","fast","set","clearTimeout","setTimeout","change","_cm","text","length","line","swapDoc","on","toOrig","lockScroll","editor","other","now","Date","scrollSetBy","scrollSetAt","sInfo","getScrollInfo","targetPos","top","halfScreen","clientHeight","midY","mid","lineAtHeight","around","chunkBoundariesAround","off","getOffsets","offOther","ratio","bot","botDist","mix","height","otherInfo","botDistOther","scrollTo","left","after","lastLine","heightAtLine","before","action","addClass","rmClass","removeClass","locs","i","removeLineClass","arr","mark","TextMarker","parent","vp","getViewport","operation","markChanges","lineNr","main","getLineHandle","addLineClass","marks","pos","clipPos","cls","markChunk","bfrom","Math","max","bto","min","chunkStart","pending","part","tp","str","DIFF_EQUAL","cleanFrom","startOfLineClean","moveOver","cleanTo","endOfLineClean","a","posMax","b","posMin","posEq","markText","className","w","gap","offsetWidth","attrs","offsetHeight","vpEdit","vpOrig","outerTop","wrap","getBoundingClientRect","sTopEdit","getScrollerElement","sTopOrig","ch","editFrom","editTo","origFrom","origTo","drawConnectorsForChunk","getMatchingOrigLine","editLine","editStart","origStart","alignableFor","cm","isOrig","tracker","firstLine","trackI","result","alignable","n","mergeAlignable","origAlignable","setIndex","rI","origI","chunkI","outer","nextR","nextO","rLine","oLine","record","splice","findAlignedLines","j","force","curOp","right","linesToAlign","aligners","scroll","offset","alignLines","ln","cmOffset","lines","maxOffset","padAbove","size","above","elt","document","createElement","style","minWidth","addLineWidget","mergeSpacer","handleMouseEvents","flip","topLpx","topRpx","tmp","botLpx","botRpx","curveTop","curveBot","appendChild","createElementNS","copy","editOriginals","topReverse","copyReverse","copyChunk","origEnd","editEnd","handler","revertChunk","replaceRange","getRange","MergeView","node","origLeft","origRight","hasLeft","hasRight","panes","self","leftPane","buildGap","editPane","rightPane","wrapElt","collapseIdentical","collapseIdenticalStretches","onResize","window","resizeInterval","setInterval","p","parentNode","body","clearInterval","dmp","lock","lockWrap","e","key","gapElts","revertButtons","target","srcElement","unshift","createSVGRect","obj","diff_match_patch","diff_main","test","startEdit","startOrig","startOff","cleanFromEdit","cleanFromOrig","endOff","cleanToEdit","cleanToOrig","next","charCodeAt","last","nInEdit","beforeE","afterE","beforeO","afterO","fromLocal","toLocal","collapseSingle","widget","inclusiveLeft","inclusiveRight","replacedWith","clearOnEnter","explicitlyCleared","collapseStretch","editors","unclearNearChunks","margin","l","onCollapse","tag","content","cssText","createTextNode","count","childNodes","removeChild","firstChild","arguments","prop","hasOwnProperty","out","at","nl","indexOf","rightOriginal","leftOriginal","rightChunks","leftChunks","F_WIDGET","F_WIDGET_BELOW","F_MARKER","doc","_","marker","collapsed","found","find","_min","check","hasMarker","bind","lineNo","hasWidgetBelow","hasWidget","nBefore","nAfter","map","findPrevDiff","findNextDiff","goNearbyDiff","dir","views","getCursor","Pass","setCursor","flags","flag","pred","handle","markedSpans","widgets","widgetFrom","widgetTo","commands","goNextDiff","goPrevDiff"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// declare global: diff_match_patch, DIFF_INSERT, DIFF_DELETE, DIFF_EQUAL\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\")); // Note non-packaged dependency diff_match_patch\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"diff_match_patch\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n  var Pos = CodeMirror.Pos;\n  var svgNS = \"http://www.w3.org/2000/svg\";\n\n  function DiffView(mv, type) {\n    this.mv = mv;\n    this.type = type;\n    this.classes = type == \"left\"\n      ? {chunk: \"CodeMirror-merge-l-chunk\",\n         start: \"CodeMirror-merge-l-chunk-start\",\n         end: \"CodeMirror-merge-l-chunk-end\",\n         insert: \"CodeMirror-merge-l-inserted\",\n         del: \"CodeMirror-merge-l-deleted\",\n         connect: \"CodeMirror-merge-l-connect\"}\n      : {chunk: \"CodeMirror-merge-r-chunk\",\n         start: \"CodeMirror-merge-r-chunk-start\",\n         end: \"CodeMirror-merge-r-chunk-end\",\n         insert: \"CodeMirror-merge-r-inserted\",\n         del: \"CodeMirror-merge-r-deleted\",\n         connect: \"CodeMirror-merge-r-connect\"};\n  }\n\n  DiffView.prototype = {\n    constructor: DiffView,\n    init: function(pane, orig, options) {\n      this.edit = this.mv.edit;\n      ;(this.edit.state.diffViews || (this.edit.state.diffViews = [])).push(this);\n      this.orig = CodeMirror(pane, copyObj({value: orig, readOnly: !this.mv.options.allowEditingOriginals}, copyObj(options)));\n      if (this.mv.options.connect == \"align\") {\n        if (!this.edit.state.trackAlignable) this.edit.state.trackAlignable = new TrackAlignable(this.edit)\n        this.orig.state.trackAlignable = new TrackAlignable(this.orig)\n      }\n      this.lockButton.title = this.edit.phrase(\"Toggle locked scrolling\");\n      this.lockButton.setAttribute(\"aria-label\", this.lockButton.title);\n\n      this.orig.state.diffViews = [this];\n      var classLocation = options.chunkClassLocation || \"background\";\n      if (Object.prototype.toString.call(classLocation) != \"[object Array]\") classLocation = [classLocation]\n      this.classes.classLocation = classLocation\n\n      this.diff = getDiff(asString(orig), asString(options.value), this.mv.options.ignoreWhitespace);\n      this.chunks = getChunks(this.diff);\n      this.diffOutOfDate = this.dealigned = false;\n      this.needsScrollSync = null\n\n      this.showDifferences = options.showDifferences !== false;\n    },\n    registerEvents: function(otherDv) {\n      this.forceUpdate = registerUpdate(this);\n      setScrollLock(this, true, false);\n      registerScroll(this, otherDv);\n    },\n    setShowDifferences: function(val) {\n      val = val !== false;\n      if (val != this.showDifferences) {\n        this.showDifferences = val;\n        this.forceUpdate(\"full\");\n      }\n    }\n  };\n\n  function ensureDiff(dv) {\n    if (dv.diffOutOfDate) {\n      dv.diff = getDiff(dv.orig.getValue(), dv.edit.getValue(), dv.mv.options.ignoreWhitespace);\n      dv.chunks = getChunks(dv.diff);\n      dv.diffOutOfDate = false;\n      CodeMirror.signal(dv.edit, \"updateDiff\", dv.diff);\n    }\n  }\n\n  var updating = false;\n  function registerUpdate(dv) {\n    var edit = {from: 0, to: 0, marked: []};\n    var orig = {from: 0, to: 0, marked: []};\n    var debounceChange, updatingFast = false;\n    function update(mode) {\n      updating = true;\n      updatingFast = false;\n      if (mode == \"full\") {\n        if (dv.svg) clear(dv.svg);\n        if (dv.copyButtons) clear(dv.copyButtons);\n        clearMarks(dv.edit, edit.marked, dv.classes);\n        clearMarks(dv.orig, orig.marked, dv.classes);\n        edit.from = edit.to = orig.from = orig.to = 0;\n      }\n      ensureDiff(dv);\n      if (dv.showDifferences) {\n        updateMarks(dv.edit, dv.diff, edit, DIFF_INSERT, dv.classes);\n        updateMarks(dv.orig, dv.diff, orig, DIFF_DELETE, dv.classes);\n      }\n\n      if (dv.mv.options.connect == \"align\")\n        alignChunks(dv);\n      makeConnections(dv);\n      if (dv.needsScrollSync != null) syncScroll(dv, dv.needsScrollSync)\n\n      updating = false;\n    }\n    function setDealign(fast) {\n      if (updating) return;\n      dv.dealigned = true;\n      set(fast);\n    }\n    function set(fast) {\n      if (updating || updatingFast) return;\n      clearTimeout(debounceChange);\n      if (fast === true) updatingFast = true;\n      debounceChange = setTimeout(update, fast === true ? 20 : 250);\n    }\n    function change(_cm, change) {\n      if (!dv.diffOutOfDate) {\n        dv.diffOutOfDate = true;\n        edit.from = edit.to = orig.from = orig.to = 0;\n      }\n      // Update faster when a line was added/removed\n      setDealign(change.text.length - 1 != change.to.line - change.from.line);\n    }\n    function swapDoc() {\n      dv.diffOutOfDate = true;\n      dv.dealigned = true;\n      update(\"full\");\n    }\n    dv.edit.on(\"change\", change);\n    dv.orig.on(\"change\", change);\n    dv.edit.on(\"swapDoc\", swapDoc);\n    dv.orig.on(\"swapDoc\", swapDoc);\n    if (dv.mv.options.connect == \"align\") {\n      CodeMirror.on(dv.edit.state.trackAlignable, \"realign\", setDealign)\n      CodeMirror.on(dv.orig.state.trackAlignable, \"realign\", setDealign)\n    }\n    dv.edit.on(\"viewportChange\", function() { set(false); });\n    dv.orig.on(\"viewportChange\", function() { set(false); });\n    update();\n    return update;\n  }\n\n  function registerScroll(dv, otherDv) {\n    dv.edit.on(\"scroll\", function() {\n      syncScroll(dv, true) && makeConnections(dv);\n    });\n    dv.orig.on(\"scroll\", function() {\n      syncScroll(dv, false) && makeConnections(dv);\n      if (otherDv) syncScroll(otherDv, true) && makeConnections(otherDv);\n    });\n  }\n\n  function syncScroll(dv, toOrig) {\n    // Change handler will do a refresh after a timeout when diff is out of date\n    if (dv.diffOutOfDate) {\n      if (dv.lockScroll && dv.needsScrollSync == null) dv.needsScrollSync = toOrig\n      return false\n    }\n    dv.needsScrollSync = null\n    if (!dv.lockScroll) return true;\n    var editor, other, now = +new Date;\n    if (toOrig) { editor = dv.edit; other = dv.orig; }\n    else { editor = dv.orig; other = dv.edit; }\n    // Don't take action if the position of this editor was recently set\n    // (to prevent feedback loops)\n    if (editor.state.scrollSetBy == dv && (editor.state.scrollSetAt || 0) + 250 > now) return false;\n\n    var sInfo = editor.getScrollInfo();\n    if (dv.mv.options.connect == \"align\") {\n      targetPos = sInfo.top;\n    } else {\n      var halfScreen = .5 * sInfo.clientHeight, midY = sInfo.top + halfScreen;\n      var mid = editor.lineAtHeight(midY, \"local\");\n      var around = chunkBoundariesAround(dv.chunks, mid, toOrig);\n      var off = getOffsets(editor, toOrig ? around.edit : around.orig);\n      var offOther = getOffsets(other, toOrig ? around.orig : around.edit);\n      var ratio = (midY - off.top) / (off.bot - off.top);\n      var targetPos = (offOther.top - halfScreen) + ratio * (offOther.bot - offOther.top);\n\n      var botDist, mix;\n      // Some careful tweaking to make sure no space is left out of view\n      // when scrolling to top or bottom.\n      if (targetPos > sInfo.top && (mix = sInfo.top / halfScreen) < 1) {\n        targetPos = targetPos * mix + sInfo.top * (1 - mix);\n      } else if ((botDist = sInfo.height - sInfo.clientHeight - sInfo.top) < halfScreen) {\n        var otherInfo = other.getScrollInfo();\n        var botDistOther = otherInfo.height - otherInfo.clientHeight - targetPos;\n        if (botDistOther > botDist && (mix = botDist / halfScreen) < 1)\n          targetPos = targetPos * mix + (otherInfo.height - otherInfo.clientHeight - botDist) * (1 - mix);\n      }\n    }\n\n    other.scrollTo(sInfo.left, targetPos);\n    other.state.scrollSetAt = now;\n    other.state.scrollSetBy = dv;\n    return true;\n  }\n\n  function getOffsets(editor, around) {\n    var bot = around.after;\n    if (bot == null) bot = editor.lastLine() + 1;\n    return {top: editor.heightAtLine(around.before || 0, \"local\"),\n            bot: editor.heightAtLine(bot, \"local\")};\n  }\n\n  function setScrollLock(dv, val, action) {\n    dv.lockScroll = val;\n    if (val && action != false) syncScroll(dv, DIFF_INSERT) && makeConnections(dv);\n    (val ? CodeMirror.addClass : CodeMirror.rmClass)(dv.lockButton, \"CodeMirror-merge-scrolllock-enabled\");\n  }\n\n  // Updating the marks for editor content\n\n  function removeClass(editor, line, classes) {\n    var locs = classes.classLocation\n    for (var i = 0; i < locs.length; i++) {\n      editor.removeLineClass(line, locs[i], classes.chunk);\n      editor.removeLineClass(line, locs[i], classes.start);\n      editor.removeLineClass(line, locs[i], classes.end);\n    }\n  }\n\n  function clearMarks(editor, arr, classes) {\n    for (var i = 0; i < arr.length; ++i) {\n      var mark = arr[i];\n      if (mark instanceof CodeMirror.TextMarker)\n        mark.clear();\n      else if (mark.parent)\n        removeClass(editor, mark, classes);\n    }\n    arr.length = 0;\n  }\n\n  // FIXME maybe add a margin around viewport to prevent too many updates\n  function updateMarks(editor, diff, state, type, classes) {\n    var vp = editor.getViewport();\n    editor.operation(function() {\n      if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n        clearMarks(editor, state.marked, classes);\n        markChanges(editor, diff, type, state.marked, vp.from, vp.to, classes);\n        state.from = vp.from; state.to = vp.to;\n      } else {\n        if (vp.from < state.from) {\n          markChanges(editor, diff, type, state.marked, vp.from, state.from, classes);\n          state.from = vp.from;\n        }\n        if (vp.to > state.to) {\n          markChanges(editor, diff, type, state.marked, state.to, vp.to, classes);\n          state.to = vp.to;\n        }\n      }\n    });\n  }\n\n  function addClass(editor, lineNr, classes, main, start, end) {\n    var locs = classes.classLocation, line = editor.getLineHandle(lineNr);\n    for (var i = 0; i < locs.length; i++) {\n      if (main) editor.addLineClass(line, locs[i], classes.chunk);\n      if (start) editor.addLineClass(line, locs[i], classes.start);\n      if (end) editor.addLineClass(line, locs[i], classes.end);\n    }\n    return line;\n  }\n\n  function markChanges(editor, diff, type, marks, from, to, classes) {\n    var pos = Pos(0, 0);\n    var top = Pos(from, 0), bot = editor.clipPos(Pos(to - 1));\n    var cls = type == DIFF_DELETE ? classes.del : classes.insert;\n    function markChunk(start, end) {\n      var bfrom = Math.max(from, start), bto = Math.min(to, end);\n      for (var i = bfrom; i < bto; ++i)\n        marks.push(addClass(editor, i, classes, true, i == start, i == end - 1));\n      // When the chunk is empty, make sure a horizontal line shows up\n      if (start == end && bfrom == end && bto == end) {\n        if (bfrom)\n          marks.push(addClass(editor, bfrom - 1, classes, false, false, true));\n        else\n          marks.push(addClass(editor, bfrom, classes, false, true, false));\n      }\n    }\n\n    var chunkStart = 0, pending = false;\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i], tp = part[0], str = part[1];\n      if (tp == DIFF_EQUAL) {\n        var cleanFrom = pos.line + (startOfLineClean(diff, i) ? 0 : 1);\n        moveOver(pos, str);\n        var cleanTo = pos.line + (endOfLineClean(diff, i) ? 1 : 0);\n        if (cleanTo > cleanFrom) {\n          if (pending) { markChunk(chunkStart, cleanFrom); pending = false }\n          chunkStart = cleanTo;\n        }\n      } else {\n        pending = true\n        if (tp == type) {\n          var end = moveOver(pos, str, true);\n          var a = posMax(top, pos), b = posMin(bot, end);\n          if (!posEq(a, b))\n            marks.push(editor.markText(a, b, {className: cls}));\n          pos = end;\n        }\n      }\n    }\n    if (pending) markChunk(chunkStart, pos.line + 1);\n  }\n\n  // Updating the gap between editor and original\n\n  function makeConnections(dv) {\n    if (!dv.showDifferences) return;\n\n    if (dv.svg) {\n      clear(dv.svg);\n      var w = dv.gap.offsetWidth;\n      attrs(dv.svg, \"width\", w, \"height\", dv.gap.offsetHeight);\n    }\n    if (dv.copyButtons) clear(dv.copyButtons);\n\n    var vpEdit = dv.edit.getViewport(), vpOrig = dv.orig.getViewport();\n    var outerTop = dv.mv.wrap.getBoundingClientRect().top\n    var sTopEdit = outerTop - dv.edit.getScrollerElement().getBoundingClientRect().top + dv.edit.getScrollInfo().top\n    var sTopOrig = outerTop - dv.orig.getScrollerElement().getBoundingClientRect().top + dv.orig.getScrollInfo().top;\n    for (var i = 0; i < dv.chunks.length; i++) {\n      var ch = dv.chunks[i];\n      if (ch.editFrom <= vpEdit.to && ch.editTo >= vpEdit.from &&\n          ch.origFrom <= vpOrig.to && ch.origTo >= vpOrig.from)\n        drawConnectorsForChunk(dv, ch, sTopOrig, sTopEdit, w);\n    }\n  }\n\n  function getMatchingOrigLine(editLine, chunks) {\n    var editStart = 0, origStart = 0;\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      if (chunk.editTo > editLine && chunk.editFrom <= editLine) return null;\n      if (chunk.editFrom > editLine) break;\n      editStart = chunk.editTo;\n      origStart = chunk.origTo;\n    }\n    return origStart + (editLine - editStart);\n  }\n\n  // Combines information about chunks and widgets/markers to return\n  // an array of lines, in a single editor, that probably need to be\n  // aligned with their counterparts in the editor next to it.\n  function alignableFor(cm, chunks, isOrig) {\n    var tracker = cm.state.trackAlignable\n    var start = cm.firstLine(), trackI = 0\n    var result = []\n    for (var i = 0;; i++) {\n      var chunk = chunks[i]\n      var chunkStart = !chunk ? 1e9 : isOrig ? chunk.origFrom : chunk.editFrom\n      for (; trackI < tracker.alignable.length; trackI += 2) {\n        var n = tracker.alignable[trackI] + 1\n        if (n <= start) continue\n        if (n <= chunkStart) result.push(n)\n        else break\n      }\n      if (!chunk) break\n      result.push(start = isOrig ? chunk.origTo : chunk.editTo)\n    }\n    return result\n  }\n\n  // Given information about alignable lines in two editors, fill in\n  // the result (an array of three-element arrays) to reflect the\n  // lines that need to be aligned with each other.\n  function mergeAlignable(result, origAlignable, chunks, setIndex) {\n    var rI = 0, origI = 0, chunkI = 0, diff = 0\n    outer: for (;; rI++) {\n      var nextR = result[rI], nextO = origAlignable[origI]\n      if (!nextR && nextO == null) break\n\n      var rLine = nextR ? nextR[0] : 1e9, oLine = nextO == null ? 1e9 : nextO\n      while (chunkI < chunks.length) {\n        var chunk = chunks[chunkI]\n        if (chunk.origFrom <= oLine && chunk.origTo > oLine) {\n          origI++\n          rI--\n          continue outer;\n        }\n        if (chunk.editTo > rLine) {\n          if (chunk.editFrom <= rLine) continue outer;\n          break\n        }\n        diff += (chunk.origTo - chunk.origFrom) - (chunk.editTo - chunk.editFrom)\n        chunkI++\n      }\n      if (rLine == oLine - diff) {\n        nextR[setIndex] = oLine\n        origI++\n      } else if (rLine < oLine - diff) {\n        nextR[setIndex] = rLine + diff\n      } else {\n        var record = [oLine - diff, null, null]\n        record[setIndex] = oLine\n        result.splice(rI, 0, record)\n        origI++\n      }\n    }\n  }\n\n  function findAlignedLines(dv, other) {\n    var alignable = alignableFor(dv.edit, dv.chunks, false), result = []\n    if (other) for (var i = 0, j = 0; i < other.chunks.length; i++) {\n      var n = other.chunks[i].editTo\n      while (j < alignable.length && alignable[j] < n) j++\n      if (j == alignable.length || alignable[j] != n) alignable.splice(j++, 0, n)\n    }\n    for (var i = 0; i < alignable.length; i++)\n      result.push([alignable[i], null, null])\n\n    mergeAlignable(result, alignableFor(dv.orig, dv.chunks, true), dv.chunks, 1)\n    if (other)\n      mergeAlignable(result, alignableFor(other.orig, other.chunks, true), other.chunks, 2)\n\n    return result\n  }\n\n  function alignChunks(dv, force) {\n    if (!dv.dealigned && !force) return;\n    if (!dv.orig.curOp) return dv.orig.operation(function() {\n      alignChunks(dv, force);\n    });\n\n    dv.dealigned = false;\n    var other = dv.mv.left == dv ? dv.mv.right : dv.mv.left;\n    if (other) {\n      ensureDiff(other);\n      other.dealigned = false;\n    }\n    var linesToAlign = findAlignedLines(dv, other);\n\n    // Clear old aligners\n    var aligners = dv.mv.aligners;\n    for (var i = 0; i < aligners.length; i++)\n      aligners[i].clear();\n    aligners.length = 0;\n\n    var cm = [dv.edit, dv.orig], scroll = [], offset = []\n    if (other) cm.push(other.orig);\n    for (var i = 0; i < cm.length; i++) {\n      scroll.push(cm[i].getScrollInfo().top);\n      offset.push(-cm[i].getScrollerElement().getBoundingClientRect().top)\n    }\n\n    if (offset[0] != offset[1] || cm.length == 3 && offset[1] != offset[2])\n      alignLines(cm, offset, [0, 0, 0], aligners)\n    for (var ln = 0; ln < linesToAlign.length; ln++)\n      alignLines(cm, offset, linesToAlign[ln], aligners);\n\n    for (var i = 0; i < cm.length; i++)\n      cm[i].scrollTo(null, scroll[i]);\n  }\n\n  function alignLines(cm, cmOffset, lines, aligners) {\n    var maxOffset = -1e8, offset = [];\n    for (var i = 0; i < cm.length; i++) if (lines[i] != null) {\n      var off = cm[i].heightAtLine(lines[i], \"local\") - cmOffset[i];\n      offset[i] = off;\n      maxOffset = Math.max(maxOffset, off);\n    }\n    for (var i = 0; i < cm.length; i++) if (lines[i] != null) {\n      var diff = maxOffset - offset[i];\n      if (diff > 1)\n        aligners.push(padAbove(cm[i], lines[i], diff));\n    }\n  }\n\n  function padAbove(cm, line, size) {\n    var above = true;\n    if (line > cm.lastLine()) {\n      line--;\n      above = false;\n    }\n    var elt = document.createElement(\"div\");\n    elt.className = \"CodeMirror-merge-spacer\";\n    elt.style.height = size + \"px\"; elt.style.minWidth = \"1px\";\n    return cm.addLineWidget(line, elt, {height: size, above: above, mergeSpacer: true, handleMouseEvents: true});\n  }\n\n  function drawConnectorsForChunk(dv, chunk, sTopOrig, sTopEdit, w) {\n    var flip = dv.type == \"left\";\n    var top = dv.orig.heightAtLine(chunk.origFrom, \"local\", true) - sTopOrig;\n    if (dv.svg) {\n      var topLpx = top;\n      var topRpx = dv.edit.heightAtLine(chunk.editFrom, \"local\", true) - sTopEdit;\n      if (flip) { var tmp = topLpx; topLpx = topRpx; topRpx = tmp; }\n      var botLpx = dv.orig.heightAtLine(chunk.origTo, \"local\", true) - sTopOrig;\n      var botRpx = dv.edit.heightAtLine(chunk.editTo, \"local\", true) - sTopEdit;\n      if (flip) { var tmp = botLpx; botLpx = botRpx; botRpx = tmp; }\n      var curveTop = \" C \" + w/2 + \" \" + topRpx + \" \" + w/2 + \" \" + topLpx + \" \" + (w + 2) + \" \" + topLpx;\n      var curveBot = \" C \" + w/2 + \" \" + botLpx + \" \" + w/2 + \" \" + botRpx + \" -1 \" + botRpx;\n      attrs(dv.svg.appendChild(document.createElementNS(svgNS, \"path\")),\n            \"d\", \"M -1 \" + topRpx + curveTop + \" L \" + (w + 2) + \" \" + botLpx + curveBot + \" z\",\n            \"class\", dv.classes.connect);\n    }\n    if (dv.copyButtons) {\n      var copy = dv.copyButtons.appendChild(elt(\"div\", dv.type == \"left\" ? \"\\u21dd\" : \"\\u21dc\",\n                                                \"CodeMirror-merge-copy\"));\n      var editOriginals = dv.mv.options.allowEditingOriginals;\n      copy.title = dv.edit.phrase(editOriginals ? \"Push to left\" : \"Revert chunk\");\n      copy.chunk = chunk;\n      copy.style.top = (chunk.origTo > chunk.origFrom ? top : dv.edit.heightAtLine(chunk.editFrom, \"local\") - sTopEdit) + \"px\";\n      copy.setAttribute(\"role\", \"button\");\n      copy.setAttribute(\"tabindex\", \"0\");\n      copy.setAttribute(\"aria-label\", copy.title);\n\n      if (editOriginals) {\n        var topReverse = dv.edit.heightAtLine(chunk.editFrom, \"local\") - sTopEdit;\n        var copyReverse = dv.copyButtons.appendChild(elt(\"div\", dv.type == \"right\" ? \"\\u21dd\" : \"\\u21dc\",\n                                                         \"CodeMirror-merge-copy-reverse\"));\n        copyReverse.title = \"Push to right\";\n        copyReverse.chunk = {editFrom: chunk.origFrom, editTo: chunk.origTo,\n                             origFrom: chunk.editFrom, origTo: chunk.editTo};\n        copyReverse.style.top = topReverse + \"px\";\n        dv.type == \"right\" ? copyReverse.style.left = \"2px\" : copyReverse.style.right = \"2px\";\n        copyReverse.setAttribute(\"role\", \"button\");\n        copyReverse.setAttribute(\"tabindex\", \"0\");\n        copyReverse.setAttribute(\"aria-label\", copyReverse.title);\n      }\n    }\n  }\n\n  function copyChunk(dv, to, from, chunk) {\n    if (dv.diffOutOfDate) return;\n    var origStart = chunk.origTo > from.lastLine() ? Pos(chunk.origFrom - 1) : Pos(chunk.origFrom, 0)\n    var origEnd = Pos(chunk.origTo, 0)\n    var editStart = chunk.editTo > to.lastLine() ? Pos(chunk.editFrom - 1) : Pos(chunk.editFrom, 0)\n    var editEnd = Pos(chunk.editTo, 0)\n    var handler = dv.mv.options.revertChunk\n    if (handler)\n      handler(dv.mv, from, origStart, origEnd, to, editStart, editEnd)\n    else\n      to.replaceRange(from.getRange(origStart, origEnd), editStart, editEnd)\n  }\n\n  // Merge view, containing 0, 1, or 2 diff views.\n\n  var MergeView = CodeMirror.MergeView = function(node, options) {\n    if (!(this instanceof MergeView)) return new MergeView(node, options);\n\n    this.options = options;\n    var origLeft = options.origLeft, origRight = options.origRight == null ? options.orig : options.origRight;\n\n    var hasLeft = origLeft != null, hasRight = origRight != null;\n    var panes = 1 + (hasLeft ? 1 : 0) + (hasRight ? 1 : 0);\n    var wrap = [], left = this.left = null, right = this.right = null;\n    var self = this;\n\n    if (hasLeft) {\n      left = this.left = new DiffView(this, \"left\");\n      var leftPane = elt(\"div\", null, \"CodeMirror-merge-pane CodeMirror-merge-left\");\n      wrap.push(leftPane);\n      wrap.push(buildGap(left));\n    }\n\n    var editPane = elt(\"div\", null, \"CodeMirror-merge-pane CodeMirror-merge-editor\");\n    wrap.push(editPane);\n\n    if (hasRight) {\n      right = this.right = new DiffView(this, \"right\");\n      wrap.push(buildGap(right));\n      var rightPane = elt(\"div\", null, \"CodeMirror-merge-pane CodeMirror-merge-right\");\n      wrap.push(rightPane);\n    }\n\n    (hasRight ? rightPane : editPane).className += \" CodeMirror-merge-pane-rightmost\";\n\n    wrap.push(elt(\"div\", null, null, \"height: 0; clear: both;\"));\n\n    var wrapElt = this.wrap = node.appendChild(elt(\"div\", wrap, \"CodeMirror-merge CodeMirror-merge-\" + panes + \"pane\"));\n    this.edit = CodeMirror(editPane, copyObj(options));\n\n    if (left) left.init(leftPane, origLeft, options);\n    if (right) right.init(rightPane, origRight, options);\n    if (options.collapseIdentical)\n      this.editor().operation(function() {\n        collapseIdenticalStretches(self, options.collapseIdentical);\n      });\n    if (options.connect == \"align\") {\n      this.aligners = [];\n      alignChunks(this.left || this.right, true);\n    }\n    if (left) left.registerEvents(right)\n    if (right) right.registerEvents(left)\n\n\n    var onResize = function() {\n      if (left) makeConnections(left);\n      if (right) makeConnections(right);\n    };\n    CodeMirror.on(window, \"resize\", onResize);\n    var resizeInterval = setInterval(function() {\n      for (var p = wrapElt.parentNode; p && p != document.body; p = p.parentNode) {}\n      if (!p) { clearInterval(resizeInterval); CodeMirror.off(window, \"resize\", onResize); }\n    }, 5000);\n  };\n\n  function buildGap(dv) {\n    var lock = dv.lockButton = elt(\"div\", null, \"CodeMirror-merge-scrolllock\");\n    lock.setAttribute(\"role\", \"button\");\n    lock.setAttribute(\"tabindex\", \"0\");\n    var lockWrap = elt(\"div\", [lock], \"CodeMirror-merge-scrolllock-wrap\");\n    CodeMirror.on(lock, \"click\", function() { setScrollLock(dv, !dv.lockScroll); });\n    CodeMirror.on(lock, \"keyup\", function(e) { e.key === \"Enter\" && setScrollLock(dv, !dv.lockScroll); });\n    var gapElts = [lockWrap];\n    if (dv.mv.options.revertButtons !== false) {\n      dv.copyButtons = elt(\"div\", null, \"CodeMirror-merge-copybuttons-\" + dv.type);\n      function copyButtons(e) {\n        var node = e.target || e.srcElement;\n        if (!node.chunk) return;\n        if (node.className == \"CodeMirror-merge-copy-reverse\") {\n          copyChunk(dv, dv.orig, dv.edit, node.chunk);\n          return;\n        }\n        copyChunk(dv, dv.edit, dv.orig, node.chunk);\n      }\n      CodeMirror.on(dv.copyButtons, \"click\", copyButtons);\n      CodeMirror.on(dv.copyButtons, \"keyup\", function(e) { e.key === \"Enter\" && copyButtons(e); });\n      gapElts.unshift(dv.copyButtons);\n    }\n    if (dv.mv.options.connect != \"align\") {\n      var svg = document.createElementNS && document.createElementNS(svgNS, \"svg\");\n      if (svg && !svg.createSVGRect) svg = null;\n      dv.svg = svg;\n      if (svg) gapElts.push(svg);\n    }\n\n    return dv.gap = elt(\"div\", gapElts, \"CodeMirror-merge-gap\");\n  }\n\n  MergeView.prototype = {\n    constructor: MergeView,\n    editor: function() { return this.edit; },\n    rightOriginal: function() { return this.right && this.right.orig; },\n    leftOriginal: function() { return this.left && this.left.orig; },\n    setShowDifferences: function(val) {\n      if (this.right) this.right.setShowDifferences(val);\n      if (this.left) this.left.setShowDifferences(val);\n    },\n    rightChunks: function() {\n      if (this.right) { ensureDiff(this.right); return this.right.chunks; }\n    },\n    leftChunks: function() {\n      if (this.left) { ensureDiff(this.left); return this.left.chunks; }\n    }\n  };\n\n  function asString(obj) {\n    if (typeof obj == \"string\") return obj;\n    else return obj.getValue();\n  }\n\n  // Operations on diffs\n  var dmp;\n  function getDiff(a, b, ignoreWhitespace) {\n    if (!dmp) dmp = new diff_match_patch();\n\n    var diff = dmp.diff_main(a, b);\n    // The library sometimes leaves in empty parts, which confuse the algorithm\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i];\n      if (ignoreWhitespace ? !/[^ \\t]/.test(part[1]) : !part[1]) {\n        diff.splice(i--, 1);\n      } else if (i && diff[i - 1][0] == part[0]) {\n        diff.splice(i--, 1);\n        diff[i][1] += part[1];\n      }\n    }\n    return diff;\n  }\n\n  function getChunks(diff) {\n    var chunks = [];\n    if (!diff.length) return chunks;\n    var startEdit = 0, startOrig = 0;\n    var edit = Pos(0, 0), orig = Pos(0, 0);\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i], tp = part[0];\n      if (tp == DIFF_EQUAL) {\n        var startOff = !startOfLineClean(diff, i) || edit.line < startEdit || orig.line < startOrig ? 1 : 0;\n        var cleanFromEdit = edit.line + startOff, cleanFromOrig = orig.line + startOff;\n        moveOver(edit, part[1], null, orig);\n        var endOff = endOfLineClean(diff, i) ? 1 : 0;\n        var cleanToEdit = edit.line + endOff, cleanToOrig = orig.line + endOff;\n        if (cleanToEdit > cleanFromEdit) {\n          if (i) chunks.push({origFrom: startOrig, origTo: cleanFromOrig,\n                              editFrom: startEdit, editTo: cleanFromEdit});\n          startEdit = cleanToEdit; startOrig = cleanToOrig;\n        }\n      } else {\n        moveOver(tp == DIFF_INSERT ? edit : orig, part[1]);\n      }\n    }\n    if (startEdit <= edit.line || startOrig <= orig.line)\n      chunks.push({origFrom: startOrig, origTo: orig.line + 1,\n                   editFrom: startEdit, editTo: edit.line + 1});\n    return chunks;\n  }\n\n  function endOfLineClean(diff, i) {\n    if (i == diff.length - 1) return true;\n    var next = diff[i + 1][1];\n    if ((next.length == 1 && i < diff.length - 2) || next.charCodeAt(0) != 10) return false;\n    if (i == diff.length - 2) return true;\n    next = diff[i + 2][1];\n    return (next.length > 1 || i == diff.length - 3) && next.charCodeAt(0) == 10;\n  }\n\n  function startOfLineClean(diff, i) {\n    if (i == 0) return true;\n    var last = diff[i - 1][1];\n    if (last.charCodeAt(last.length - 1) != 10) return false;\n    if (i == 1) return true;\n    last = diff[i - 2][1];\n    return last.charCodeAt(last.length - 1) == 10;\n  }\n\n  function chunkBoundariesAround(chunks, n, nInEdit) {\n    var beforeE, afterE, beforeO, afterO;\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      var fromLocal = nInEdit ? chunk.editFrom : chunk.origFrom;\n      var toLocal = nInEdit ? chunk.editTo : chunk.origTo;\n      if (afterE == null) {\n        if (fromLocal > n) { afterE = chunk.editFrom; afterO = chunk.origFrom; }\n        else if (toLocal > n) { afterE = chunk.editTo; afterO = chunk.origTo; }\n      }\n      if (toLocal <= n) { beforeE = chunk.editTo; beforeO = chunk.origTo; }\n      else if (fromLocal <= n) { beforeE = chunk.editFrom; beforeO = chunk.origFrom; }\n    }\n    return {edit: {before: beforeE, after: afterE}, orig: {before: beforeO, after: afterO}};\n  }\n\n  function collapseSingle(cm, from, to) {\n    cm.addLineClass(from, \"wrap\", \"CodeMirror-merge-collapsed-line\");\n    var widget = document.createElement(\"span\");\n    widget.className = \"CodeMirror-merge-collapsed-widget\";\n    widget.title = cm.phrase(\"Identical text collapsed. Click to expand.\");\n    var mark = cm.markText(Pos(from, 0), Pos(to - 1), {\n      inclusiveLeft: true,\n      inclusiveRight: true,\n      replacedWith: widget,\n      clearOnEnter: true\n    });\n    function clear() {\n      mark.clear();\n      cm.removeLineClass(from, \"wrap\", \"CodeMirror-merge-collapsed-line\");\n    }\n    if (mark.explicitlyCleared) clear();\n    CodeMirror.on(widget, \"click\", clear);\n    mark.on(\"clear\", clear);\n    CodeMirror.on(widget, \"click\", clear);\n    return {mark: mark, clear: clear};\n  }\n\n  function collapseStretch(size, editors) {\n    var marks = [];\n    function clear() {\n      for (var i = 0; i < marks.length; i++) marks[i].clear();\n    }\n    for (var i = 0; i < editors.length; i++) {\n      var editor = editors[i];\n      var mark = collapseSingle(editor.cm, editor.line, editor.line + size);\n      marks.push(mark);\n      mark.mark.on(\"clear\", clear);\n    }\n    return marks[0].mark;\n  }\n\n  function unclearNearChunks(dv, margin, off, clear) {\n    for (var i = 0; i < dv.chunks.length; i++) {\n      var chunk = dv.chunks[i];\n      for (var l = chunk.editFrom - margin; l < chunk.editTo + margin; l++) {\n        var pos = l + off;\n        if (pos >= 0 && pos < clear.length) clear[pos] = false;\n      }\n    }\n  }\n\n  function collapseIdenticalStretches(mv, margin) {\n    if (typeof margin != \"number\") margin = 2;\n    var clear = [], edit = mv.editor(), off = edit.firstLine();\n    for (var l = off, e = edit.lastLine(); l <= e; l++) clear.push(true);\n    if (mv.left) unclearNearChunks(mv.left, margin, off, clear);\n    if (mv.right) unclearNearChunks(mv.right, margin, off, clear);\n\n    for (var i = 0; i < clear.length; i++) {\n      if (clear[i]) {\n        var line = i + off;\n        for (var size = 1; i < clear.length - 1 && clear[i + 1]; i++, size++) {}\n        if (size > margin) {\n          var editors = [{line: line, cm: edit}];\n          if (mv.left) editors.push({line: getMatchingOrigLine(line, mv.left.chunks), cm: mv.left.orig});\n          if (mv.right) editors.push({line: getMatchingOrigLine(line, mv.right.chunks), cm: mv.right.orig});\n          var mark = collapseStretch(size, editors);\n          if (mv.options.onCollapse) mv.options.onCollapse(mv, line, size, mark);\n        }\n      }\n    }\n  }\n\n  // General utilities\n\n  function elt(tag, content, className, style) {\n    var e = document.createElement(tag);\n    if (className) e.className = className;\n    if (style) e.style.cssText = style;\n    if (typeof content == \"string\") e.appendChild(document.createTextNode(content));\n    else if (content) for (var i = 0; i < content.length; ++i) e.appendChild(content[i]);\n    return e;\n  }\n\n  function clear(node) {\n    for (var count = node.childNodes.length; count > 0; --count)\n      node.removeChild(node.firstChild);\n  }\n\n  function attrs(elt) {\n    for (var i = 1; i < arguments.length; i += 2)\n      elt.setAttribute(arguments[i], arguments[i+1]);\n  }\n\n  function copyObj(obj, target) {\n    if (!target) target = {};\n    for (var prop in obj) if (obj.hasOwnProperty(prop)) target[prop] = obj[prop];\n    return target;\n  }\n\n  function moveOver(pos, str, copy, other) {\n    var out = copy ? Pos(pos.line, pos.ch) : pos, at = 0;\n    for (;;) {\n      var nl = str.indexOf(\"\\n\", at);\n      if (nl == -1) break;\n      ++out.line;\n      if (other) ++other.line;\n      at = nl + 1;\n    }\n    out.ch = (at ? 0 : out.ch) + (str.length - at);\n    if (other) other.ch = (at ? 0 : other.ch) + (str.length - at);\n    return out;\n  }\n\n  // Tracks collapsed markers and line widgets, in order to be able to\n  // accurately align the content of two editors.\n\n  var F_WIDGET = 1, F_WIDGET_BELOW = 2, F_MARKER = 4\n\n  function TrackAlignable(cm) {\n    this.cm = cm\n    this.alignable = []\n    this.height = cm.doc.height\n    var self = this\n    cm.on(\"markerAdded\", function(_, marker) {\n      if (!marker.collapsed) return\n      var found = marker.find(1)\n      if (found != null) self.set(found.line, F_MARKER)\n    })\n    cm.on(\"markerCleared\", function(_, marker, _min, max) {\n      if (max != null && marker.collapsed)\n        self.check(max, F_MARKER, self.hasMarker)\n    })\n    cm.on(\"markerChanged\", this.signal.bind(this))\n    cm.on(\"lineWidgetAdded\", function(_, widget, lineNo) {\n      if (widget.mergeSpacer) return\n      if (widget.above) self.set(lineNo - 1, F_WIDGET_BELOW)\n      else self.set(lineNo, F_WIDGET)\n    })\n    cm.on(\"lineWidgetCleared\", function(_, widget, lineNo) {\n      if (widget.mergeSpacer) return\n      if (widget.above) self.check(lineNo - 1, F_WIDGET_BELOW, self.hasWidgetBelow)\n      else self.check(lineNo, F_WIDGET, self.hasWidget)\n    })\n    cm.on(\"lineWidgetChanged\", this.signal.bind(this))\n    cm.on(\"change\", function(_, change) {\n      var start = change.from.line, nBefore = change.to.line - change.from.line\n      var nAfter = change.text.length - 1, end = start + nAfter\n      if (nBefore || nAfter) self.map(start, nBefore, nAfter)\n      self.check(end, F_MARKER, self.hasMarker)\n      if (nBefore || nAfter) self.check(change.from.line, F_MARKER, self.hasMarker)\n    })\n    cm.on(\"viewportChange\", function() {\n      if (self.cm.doc.height != self.height) self.signal()\n    })\n  }\n\n  TrackAlignable.prototype = {\n    signal: function() {\n      CodeMirror.signal(this, \"realign\")\n      this.height = this.cm.doc.height\n    },\n\n    set: function(n, flags) {\n      var pos = -1\n      for (; pos < this.alignable.length; pos += 2) {\n        var diff = this.alignable[pos] - n\n        if (diff == 0) {\n          if ((this.alignable[pos + 1] & flags) == flags) return\n          this.alignable[pos + 1] |= flags\n          this.signal()\n          return\n        }\n        if (diff > 0) break\n      }\n      this.signal()\n      this.alignable.splice(pos, 0, n, flags)\n    },\n\n    find: function(n) {\n      for (var i = 0; i < this.alignable.length; i += 2)\n        if (this.alignable[i] == n) return i\n      return -1\n    },\n\n    check: function(n, flag, pred) {\n      var found = this.find(n)\n      if (found == -1 || !(this.alignable[found + 1] & flag)) return\n      if (!pred.call(this, n)) {\n        this.signal()\n        var flags = this.alignable[found + 1] & ~flag\n        if (flags) this.alignable[found + 1] = flags\n        else this.alignable.splice(found, 2)\n      }\n    },\n\n    hasMarker: function(n) {\n      var handle = this.cm.getLineHandle(n)\n      if (handle.markedSpans) for (var i = 0; i < handle.markedSpans.length; i++)\n        if (handle.markedSpans[i].marker.collapsed && handle.markedSpans[i].to != null)\n          return true\n      return false\n    },\n\n    hasWidget: function(n) {\n      var handle = this.cm.getLineHandle(n)\n      if (handle.widgets) for (var i = 0; i < handle.widgets.length; i++)\n        if (!handle.widgets[i].above && !handle.widgets[i].mergeSpacer) return true\n      return false\n    },\n\n    hasWidgetBelow: function(n) {\n      if (n == this.cm.lastLine()) return false\n      var handle = this.cm.getLineHandle(n + 1)\n      if (handle.widgets) for (var i = 0; i < handle.widgets.length; i++)\n        if (handle.widgets[i].above && !handle.widgets[i].mergeSpacer) return true\n      return false\n    },\n\n    map: function(from, nBefore, nAfter) {\n      var diff = nAfter - nBefore, to = from + nBefore, widgetFrom = -1, widgetTo = -1\n      for (var i = 0; i < this.alignable.length; i += 2) {\n        var n = this.alignable[i]\n        if (n == from && (this.alignable[i + 1] & F_WIDGET_BELOW)) widgetFrom = i\n        if (n == to && (this.alignable[i + 1] & F_WIDGET_BELOW)) widgetTo = i\n        if (n <= from) continue\n        else if (n < to) this.alignable.splice(i--, 2)\n        else this.alignable[i] += diff\n      }\n      if (widgetFrom > -1) {\n        var flags = this.alignable[widgetFrom + 1]\n        if (flags == F_WIDGET_BELOW) this.alignable.splice(widgetFrom, 2)\n        else this.alignable[widgetFrom + 1] = flags & ~F_WIDGET_BELOW\n      }\n      if (widgetTo > -1 && nAfter)\n        this.set(from + nAfter, F_WIDGET_BELOW)\n    }\n  }\n\n  function posMin(a, b) { return (a.line - b.line || a.ch - b.ch) < 0 ? a : b; }\n  function posMax(a, b) { return (a.line - b.line || a.ch - b.ch) > 0 ? a : b; }\n  function posEq(a, b) { return a.line == b.line && a.ch == b.ch; }\n\n  function findPrevDiff(chunks, start, isOrig) {\n    for (var i = chunks.length - 1; i >= 0; i--) {\n      var chunk = chunks[i];\n      var to = (isOrig ? chunk.origTo : chunk.editTo) - 1;\n      if (to < start) return to;\n    }\n  }\n\n  function findNextDiff(chunks, start, isOrig) {\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      var from = (isOrig ? chunk.origFrom : chunk.editFrom);\n      if (from > start) return from;\n    }\n  }\n\n  function goNearbyDiff(cm, dir) {\n    var found = null, views = cm.state.diffViews, line = cm.getCursor().line;\n    if (views) for (var i = 0; i < views.length; i++) {\n      var dv = views[i], isOrig = cm == dv.orig;\n      ensureDiff(dv);\n      var pos = dir < 0 ? findPrevDiff(dv.chunks, line, isOrig) : findNextDiff(dv.chunks, line, isOrig);\n      if (pos != null && (found == null || (dir < 0 ? pos > found : pos < found)))\n        found = pos;\n    }\n    if (found != null)\n      cm.setCursor(found, 0);\n    else\n      return CodeMirror.Pass;\n  }\n\n  CodeMirror.commands.goNextDiff = function(cm) {\n    return goNearbyDiff(cm, 1);\n  };\n  CodeMirror.commands.goPrevDiff = function(cm) {\n    return goNearbyDiff(cm, -1);\n  };\n});\n"],"file":"merge.js"}