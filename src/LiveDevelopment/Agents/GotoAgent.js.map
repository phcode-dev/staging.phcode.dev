{"version":3,"sources":["LiveDevelopment/Agents/GotoAgent.js"],"names":["define","GotoAgent","require","exports","module","Inspector","DOMAgent","ScriptAgent","RemoteAgent","EditorManager","CommandManager","Commands","_urlWithoutQueryString","url","index","search","substr","_fileFromURL","comp","split","length","_makeHTMLTarget","targets","node","location","canHaveChildren","name","file","push","type","_makeCSSTarget","rule","sourceURL","style","range","start","selectorList","text","_makeJSTarget","callFrame","script","scriptWithId","scriptId","lineNumber","columnNumber","functionName","_onRemoteShowGoto","event","res","nodeWithId","nodeId","CSS","getMatchedStylesForNode","onMatchedStyles","i","trace","events","callFrames","matchedCSSRules","reverse","call","openLocation","noFlash","editor","getCurrentFullEditor","codeMirror","_codeMirror","posFromIndex","setCursor","focus","addLineClass","line","window","setTimeout","removeLineClass","open","console","assert","result","$","Deferred","path","slice","brackets","platform","decodeURI","promise","execute","FILE_OPEN","fullPath","done","onDone","doc","resolve","fail","onErr","err","error","reject","_onRemoteGoto","value","matches","exec","parseInt","ch","load","on","unload","off"],"mappings":"AA2BAA,OAAO,SAASC,UAAUC,QAASC,QAASC,QAGxCF,QAAQ,gBAER,IAAIG,UAAYH,QAAQ,uCACpBI,SAAWJ,QAAQ,mCACnBK,YAAcL,QAAQ,sCACtBM,YAAcN,QAAQ,sCACtBO,cAAgBP,QAAQ,wBACxBQ,eAAiBR,QAAQ,0BACzBS,SAAWT,QAAQ,oBAMvB,SAASU,uBAAuBC,KAC5B,IAAIC,MAAQD,IAAIE,OAAO,SAIvB,OAHID,OAAS,IACTD,IAAMA,IAAIG,OAAO,EAAGF,QAEjBD,IAMX,SAASI,aAAaJ,KAClB,IAAIK,KAAOL,IAAIM,MAAM,KACrB,OAAOD,KAAKA,KAAKE,OAAS,GAO9B,SAASC,gBAAgBC,QAASC,MAC9B,GAAIA,KAAKC,SAAU,CACf,IAAIX,IAAMP,SAASO,IACfW,SAAWD,KAAKC,SAChBD,KAAKE,oBACLD,UAAYD,KAAKH,QAErBP,KAAO,IAAMW,SACb,IAAIE,KAAO,OAASH,KAAKG,KAAO,OAC5BC,KAAOV,aAAaJ,KACxBS,QAAQM,KAAK,CAACC,KAAQ,OAAQhB,IAAOA,IAAKa,KAAQA,KAAMC,KAAQA,QAQxE,SAASG,eAAeR,QAASS,MAC7B,GAAIA,KAAKC,UAAW,CAChB,IAAInB,IAAMkB,KAAKC,UACfnB,KAAO,IAAMkB,KAAKE,MAAMC,MAAMC,MAC9B,IAAIT,KAAOK,KAAKK,aAAaC,KACzBV,KAAOV,aAAaJ,KACxBS,QAAQM,KAAK,CAACC,KAAQ,MAAOhB,IAAOA,IAAKa,KAAQA,KAAMC,KAAQA,QAQvE,SAASW,cAAchB,QAASiB,WAC5B,IAAIC,OAASjC,YAAYkC,aAAaF,UAAUf,SAASkB,UACzD,GAAIF,QAAUA,OAAO3B,IAAK,CACtB,IAAIA,IAAM2B,OAAO3B,IACjBA,KAAO,IAAM0B,UAAUf,SAASmB,WAAa,IAAMJ,UAAUf,SAASoB,aACtE,IAAIlB,KAAOa,UAAUM,aACR,KAATnB,OACAA,KAAO,sBAEX,IAAIC,KAAOV,aAAaJ,KACxBS,QAAQM,KAAK,CAACC,KAAQ,KAAMhB,IAAOA,IAAKa,KAAQA,KAAMC,KAAQA,QAKtE,SAASmB,kBAAkBC,MAAOC,KAE9B,IAAIzB,KAAOjB,SAAS2C,WAAWD,IAAIE,QAGnC7C,UAAU8C,IAAIC,wBAAwB7B,KAAK2B,OAAQ,SAASG,gBAAgBL,KACxE,IAAIM,EAAGhC,QAAU,GAEjB,IAAKgC,KADLjC,gBAAgBC,QAASC,MACfA,KAAKgC,MACXjB,cAAchB,QAASC,KAAKgC,MAAMD,IAEtC,IAAKA,KAAK/B,KAAKiC,OAAQ,CACnB,IAAID,MACJjB,cAAchB,QADFC,KAAKiC,OAAOF,GACKG,WAAW,IAE5C,IAAKH,KAAKN,IAAIU,gBAAgBC,UAC1B7B,eAAeR,QAAS0B,IAAIU,gBAAgBJ,GAAGvB,MAEnDvB,YAAYoD,KAAK,WAAYtC,WAOrC,SAASuC,aAAarC,SAAUsC,SAC5B,IAAIC,OAAStD,cAAcuD,uBACvBC,WAAaF,OAAOG,YACA,iBAAb1C,WACPA,SAAWyC,WAAWE,aAAa3C,WAEvCyC,WAAWG,UAAU5C,UACrBuC,OAAOM,QAEFP,UACDG,WAAWK,aAAa9C,SAAS+C,KAAM,OAAQ,SAC/CC,OAAOC,WAAW,WACdR,WAAWS,gBAAgBlD,SAAS+C,KAAM,OAAQ,UACnD,MAQX,SAASI,KAAK9D,IAAKW,SAAUsC,SACzBc,QAAQC,OAA4B,YAArBhE,IAAIG,OAAO,EAAG,GAAkB,6BAE/C,IAAI8D,OAAS,IAAIC,EAAEC,SAIfC,MAFJpE,IAAMD,uBAAuBC,MAEdqE,MAA4B,QAAtBC,SAASC,SAAqB,EAAI,GAEvDH,KAAOI,UAAUJ,MACjB,IAAIK,QAAU5E,eAAe6E,QAAQ5E,SAAS6E,UAAW,CAACC,SAAUR,OAYpE,OAXAK,QAAQI,KAAK,SAASC,OAAOC,KACrBpE,UACAqC,aAAarC,SAAUsC,SAE3BgB,OAAOe,YAEXP,QAAQQ,KAAK,SAASC,MAAMC,KACxBpB,QAAQqB,MAAMD,KACdlB,OAAOoB,OAAOF,OAGXlB,OAAOQ,UAIlB,SAASa,cAAcpD,MAAOC,KAE1B,IAAIxB,SAAUX,IAAMmC,IAAIoD,MACpBC,QAAU,iBAAiBC,KAAKzF,KAChCwF,UACAxF,IAAMwF,QAAQ,GAGV7E,SADoB,KADxBA,SAAW6E,QAAQ,GAAGlF,MAAM,MACfC,OACEmF,SAAS/E,SAAS,GAAI,IAEtB,CAAE+C,KAAMgC,SAAS/E,SAAS,GAAI,IAAKgF,GAAID,SAAS/E,SAAS,GAAI,MAGhFmD,KAAK9D,IAAKW,UAId,SAASiF,OACLjG,YACKkG,GAAG,qBAAsB5D,mBACzB4D,GAAG,iBAAkBP,eAI9B,SAASQ,SACLnG,YAAYoG,IAAI,cAIpBzG,QAAQ0D,aAAeA,aACvB1D,QAAQwE,KAAOA,KACfxE,QAAQsG,KAAOA,KACftG,QAAQwG,OAASA","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2012 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n\n/*jslint forin: true, regexp: true */\n\n/**\n * GotoAgent constructs and responds to the in-browser goto dialog.\n */\ndefine(function GotoAgent(require, exports, module) {\n\n\n    require(\"utils/Global\");\n\n    var Inspector = require(\"LiveDevelopment/Inspector/Inspector\"),\n        DOMAgent = require(\"LiveDevelopment/Agents/DOMAgent\"),\n        ScriptAgent = require(\"LiveDevelopment/Agents/ScriptAgent\"),\n        RemoteAgent = require(\"LiveDevelopment/Agents/RemoteAgent\"),\n        EditorManager = require(\"editor/EditorManager\"),\n        CommandManager = require(\"command/CommandManager\"),\n        Commands = require(\"command/Commands\");\n\n\n    /** Return the URL without the query string\n     * @param {string} URL\n     */\n    function _urlWithoutQueryString(url) {\n        var index = url.search(/[#\\?]/);\n        if (index >= 0) {\n            url = url.substr(0, index);\n        }\n        return url;\n    }\n\n    /** Get the file component of the given url\n     * @param {string} URL\n     */\n    function _fileFromURL(url) {\n        var comp = url.split(\"/\");\n        return comp[comp.length - 1];\n    }\n\n    /** Make the given node a target for goto\n     * @param [] targets array\n     * @param {DOMNode} node\n     */\n    function _makeHTMLTarget(targets, node) {\n        if (node.location) {\n            var url = DOMAgent.url;\n            var location = node.location;\n            if (node.canHaveChildren()) {\n                location += node.length;\n            }\n            url += \":\" + location;\n            var name = \"&lt;\" + node.name + \"&gt;\";\n            var file = _fileFromURL(url);\n            targets.push({\"type\": \"html\", \"url\": url, \"name\": name, \"file\": file});\n        }\n    }\n\n    /** Make the given css rule a target for goto\n     * @param [] targets array\n     * @param {CSS.Rule} node\n     */\n    function _makeCSSTarget(targets, rule) {\n        if (rule.sourceURL) {\n            var url = rule.sourceURL;\n            url += \":\" + rule.style.range.start;\n            var name = rule.selectorList.text;\n            var file = _fileFromURL(url);\n            targets.push({\"type\": \"css\", \"url\": url, \"name\": name, \"file\": file});\n        }\n    }\n\n    /** Make the given javascript callFrame the target for goto\n     * @param [] targets array\n     * @param {Debugger.CallFrame} node\n     */\n    function _makeJSTarget(targets, callFrame) {\n        var script = ScriptAgent.scriptWithId(callFrame.location.scriptId);\n        if (script && script.url) {\n            var url = script.url;\n            url += \":\" + callFrame.location.lineNumber + \",\" + callFrame.location.columnNumber;\n            var name = callFrame.functionName;\n            if (name === \"\") {\n                name = \"anonymous function\";\n            }\n            var file = _fileFromURL(url);\n            targets.push({\"type\": \"js\", \"url\": url, \"name\": name, \"file\": file});\n        }\n    }\n\n    /** Gather options where to go to from the given source node */\n    function _onRemoteShowGoto(event, res) {\n        // res = {nodeId, name, value}\n        var node = DOMAgent.nodeWithId(res.nodeId);\n\n        // get all css rules that apply to the given node\n        Inspector.CSS.getMatchedStylesForNode(node.nodeId, function onMatchedStyles(res) {\n            var i, targets = [];\n            _makeHTMLTarget(targets, node);\n            for (i in node.trace) {\n                _makeJSTarget(targets, node.trace[i]);\n            }\n            for (i in node.events) {\n                var trace = node.events[i];\n                _makeJSTarget(targets, trace.callFrames[0]);\n            }\n            for (i in res.matchedCSSRules.reverse()) {\n                _makeCSSTarget(targets, res.matchedCSSRules[i].rule);\n            }\n            RemoteAgent.call(\"showGoto\", targets);\n        });\n    }\n\n    /** Point the master editor to the given location\n     * @param {integer} location in file\n     */\n    function openLocation(location, noFlash) {\n        var editor = EditorManager.getCurrentFullEditor();\n        var codeMirror = editor._codeMirror;\n        if (typeof location === \"number\") {\n            location = codeMirror.posFromIndex(location);\n        }\n        codeMirror.setCursor(location);\n        editor.focus();\n\n        if (!noFlash) {\n            codeMirror.addLineClass(location.line, \"wrap\", \"flash\");\n            window.setTimeout(function () {\n                codeMirror.removeLineClass(location.line, \"wrap\", \"flash\");\n            }, 1000);\n        }\n    }\n\n    /** Open the editor at the given url and editor location\n     * @param {string} url\n     * @param {integer} optional location in file\n     */\n    function open(url, location, noFlash) {\n        console.assert(url.substr(0, 7) === \"file://\", \"Cannot open non-file URLs\");\n\n        var result = new $.Deferred();\n\n        url = _urlWithoutQueryString(url);\n        // Extract the path, also strip the third slash when on Windows\n        var path = url.slice(brackets.platform === \"win\" ? 8 : 7);\n        // URL-decode the path ('%20' => ' ')\n        path = decodeURI(path);\n        var promise = CommandManager.execute(Commands.FILE_OPEN, {fullPath: path});\n        promise.done(function onDone(doc) {\n            if (location) {\n                openLocation(location, noFlash);\n            }\n            result.resolve();\n        });\n        promise.fail(function onErr(err) {\n            console.error(err);\n            result.reject(err);\n        });\n\n        return result.promise();\n    }\n\n    /** Go to the given source node */\n    function _onRemoteGoto(event, res) {\n        // res = {nodeId, name, value}\n        var location, url = res.value;\n        var matches = /^(.*):([^:]+)$/.exec(url);\n        if (matches) {\n            url = matches[1];\n            location = matches[2].split(\",\");\n            if (location.length === 1) {\n                location = parseInt(location[0], 10);\n            } else {\n                location = { line: parseInt(location[0], 10), ch: parseInt(location[1], 10) };\n            }\n        }\n        open(url, location);\n    }\n\n    /** Initialize the agent */\n    function load() {\n        RemoteAgent\n            .on(\"showgoto.GotoAgent\", _onRemoteShowGoto)\n            .on(\"goto.GotoAgent\", _onRemoteGoto);\n    }\n\n    /** Initialize the agent */\n    function unload() {\n        RemoteAgent.off(\".GotoAgent\");\n    }\n\n    // Export public functions\n    exports.openLocation = openLocation;\n    exports.open = open;\n    exports.load = load;\n    exports.unload = unload;\n});\n"],"file":"GotoAgent.js"}