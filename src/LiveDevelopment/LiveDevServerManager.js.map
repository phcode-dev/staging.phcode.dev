{"version":3,"sources":["LiveDevelopment/LiveDevServerManager.js"],"names":["define","require","exports","module","_serverProviders","_providerSort","a","b","priority","getServer","localPath","provider","server","i","length","create","canServe","registerServer","providerObj","push","sort","console","error","removeServer","splice","getProvider","registerProvider"],"mappings":"AAuCAA,OAAO,SAAUC,QAASC,QAASC,QAG/B,IAAIC,iBAAqB,GAQzB,SAASC,cAAcC,EAAGC,GACtB,OAAOA,EAAEC,SAAWF,EAAEE,SAS1B,SAASC,UAAUC,WACf,IAAIC,SAAUC,OAAQC,EAEtB,IAAKA,EAAI,EAAGA,EAAIT,iBAAiBU,OAAQD,IAIrC,IAFAD,QADAD,SAAWP,iBAAiBS,IACVE,UAEPC,SAASN,WAChB,OAAOE,OAIf,OAAO,KAgBX,SAASK,eAAeN,SAAUH,UAC9B,GAAKG,SAASI,OAAd,CAKA,IAAIG,YAAc,GAQlB,OANAA,YAAYH,OAASJ,SAASI,OAC9BG,YAAYV,SAAWA,UAAY,EAEnCJ,iBAAiBe,KAAKD,aACtBd,iBAAiBgB,KAAKf,eAEfa,YAZHG,QAAQC,MAAM,iDAoBtB,SAASC,aAAaZ,UAClB,IAAIE,EACJ,IAAKA,EAAI,EAAGA,EAAIT,iBAAiBU,OAAQD,IACjCF,WAAaP,iBAAiBS,IAC9BT,iBAAiBoB,OAAOX,EAAG,GAMvCX,QAAQuB,YAAsBhB,UAC9BP,QAAQwB,iBAAsBT,eAG9Bf,QAAQO,UAAsBA,UAC9BP,QAAQe,eAAsBA,eAC9Bf,QAAQqB,aAAsBA","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2013 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/**\n * LiveDevServerManager Overview:\n *\n * The LiveDevServerManager allows extensions to register to be Live Development\n * servers. Servers are queried for their ability to serve a page in\n * order of descending priority by way their canServe methods.\n *\n * NOTE: This API is currently experimental and intented to be internal-only.\n * It is very likely that it will be changed in the near future and/or\n * removed entirely.\n *\n *   `LiveDevServerManager.getServer(localPath)`\n *\n * Returns highest priority server (BaseServer) that can serve the local file.\n *\n * A Live Development server must implement the BaseServer API. See\n * LiveDevelopment/Servers/BaseServer base class.\n */\ndefine(function (require, exports, module) {\n\n\n    var _serverProviders   = [];\n\n    /**\n     * @private\n     * Comparator to sort providers based on their priority\n     * @param {number} a\n     * @param {number} b\n     */\n    function _providerSort(a, b) {\n        return b.priority - a.priority;\n    }\n\n    /**\n     * Determines which provider can serve a file with a local path.\n     *\n     * @param {string} localPath A local path to file being served.\n     * @return {?BaseServer} A server no null if no servers can serve the file\n     */\n    function getServer(localPath) {\n        var provider, server, i;\n\n        for (i = 0; i < _serverProviders.length; i++) {\n            provider = _serverProviders[i];\n            server = provider.create();\n\n            if (server.canServe(localPath)) {\n                return server;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * The method by which a server registers itself. It returns an\n     * object handler that can be used to remove that server from the list.\n     *\n     * @param {BaseServer|{create: function():BaseServer}} provider\n     *  The provider to be registered, described below.\n     * @param {number} priority\n     *  A non-negative number used to break ties among providers for a\n     *  particular url. Providers that register with a higher priority will\n     *  have the opportunity to provide a given url before those with a\n     *  lower priority. The higher the number, the higher the priority.\n     * @return {{object}}\n     */\n    function registerServer(provider, priority) {\n        if (!provider.create) {\n            console.error(\"Incompatible live development server provider\");\n            return;\n        }\n\n        var providerObj = {};\n\n        providerObj.create = provider.create;\n        providerObj.priority = priority || 0;\n\n        _serverProviders.push(providerObj);\n        _serverProviders.sort(_providerSort);\n\n        return providerObj;\n    }\n\n    /**\n     * Remove a server from the list of the registered providers.\n     *\n     * @param {{object}} provider The provider to be removed.\n     */\n    function removeServer(provider) {\n        var i;\n        for (i = 0; i < _serverProviders.length; i++) {\n            if (provider === _serverProviders[i]) {\n                _serverProviders.splice(i, 1);\n            }\n        }\n    }\n\n    // Backwards compatibility\n    exports.getProvider         = getServer;\n    exports.registerProvider    = registerServer;\n\n    // Define public API\n    exports.getServer           = getServer;\n    exports.registerServer      = registerServer;\n    exports.removeServer        = removeServer;\n});\n"],"file":"LiveDevServerManager.js"}