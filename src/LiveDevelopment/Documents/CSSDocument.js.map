{"version":3,"sources":["LiveDevelopment/Documents/CSSDocument.js"],"names":["define","CSSDocumentModule","require","exports","module","_","EventDispatcher","CSSAgent","CSSUtils","EditorManager","HighlightAgent","Inspector","CSSDocument","doc","editor","this","_highlight","onHighlight","bind","onCursorActivity","addRef","onChange","onDeleted","on","onActiveEditorChange","attachToEditor","makeEventDispatcher","prototype","_getStyleSheetHeader","styleForURL","url","getSourceFromBrowser","getOnlyValue","obj","key","has","deferred","$","Deferred","styleSheetHeader","styleSheet","CSS","getStyleSheetText","styleSheetId","then","res","resolve","text","reject","promise","close","off","releaseRef","detachFromEditor","_updateBrowser","reloadPromise","reloadCSSForDocument","config","highlight","done","redraw","updateHighlight","hide","selectors","each","getSelections","sel","selector","findSelectorAtDocumentPos","reversed","end","start","push","length","rule","join","setInstrumentationEnabled","enabled","isLiveEditingEnabled","getResponseData","body","getText","event","change","clearCSSForDocument","trigger","newActive","oldActive","document","node","i","clear","location","getMatchedStylesForNode","nodeId","onGetMatchesStyles","codeMirror","_codeMirror","styleSheetIds","from","to","matchedCSSRules","ruleId","posFromIndex","selectorRange","style","range","markText","className"],"mappings":"AA4CAA,OAAO,SAASC,kBAAkBC,QAASC,QAASC,QAGhD,IAAIC,EAAkBH,QAAQ,qBAC1BI,gBAAkBJ,QAAQ,yBAC1BK,SAAkBL,QAAQ,mCAC1BM,SAAkBN,QAAQ,qBAC1BO,cAAkBP,QAAQ,wBAC1BQ,eAAkBR,QAAQ,yCAC1BS,UAAkBT,QAAQ,uCAO1BU,YAAc,SAASA,YAAYC,IAAKC,QACxCC,KAAKF,IAAMA,IAEXE,KAAKC,WAAa,GAClBD,KAAKE,YAAcF,KAAKE,YAAYC,KAAKH,MACzCA,KAAKI,iBAAmBJ,KAAKI,iBAAiBD,KAAKH,MAGnDA,KAAKF,IAAIO,SACTL,KAAKM,SAAWN,KAAKM,SAASH,KAAKH,MACnCA,KAAKO,UAAYP,KAAKO,UAAUJ,KAAKH,MAErCA,KAAKF,IAAIU,GAAG,qBAAsBR,KAAKM,UACvCN,KAAKF,IAAIU,GAAG,sBAAuBR,KAAKO,WAExCP,KAAKS,qBAAuBT,KAAKS,qBAAqBN,KAAKH,MAC3DN,cAAcc,GAAG,qBAAsBR,KAAKS,sBAExCV,QAEAC,KAAKU,eAAeX,SAG5BR,gBAAgBoB,oBAAoBd,YAAYe,WAMhDf,YAAYe,UAAUC,qBAAuB,WACzC,OAAOrB,SAASsB,YAAYd,KAAKF,IAAIiB,MAOzClB,YAAYe,UAAUI,qBAAuB,SAASA,uBAClD,SAASC,aAAaC,KAClB,IAAIC,IACJ,IAAKA,OAAOD,IACR,GAAI5B,EAAE8B,IAAIF,IAAKC,KACX,OAAOD,IAAIC,KAGnB,OAAO,KAGX,IAAIE,SAAW,IAAIC,EAAEC,SACjBC,iBACAC,WAAaR,aADMjB,KAAKa,wBAW5B,OARIY,WACA7B,UAAU8B,IAAIC,kBAAkBF,WAAWG,cAAcC,KAAK,SAAUC,KACpET,SAASU,QAAQD,IAAIE,OACtBX,SAASY,QAEZZ,SAASY,SAGNZ,SAASa,WAIpBrC,YAAYe,UAAUuB,MAAQ,SAASA,QACnCnC,KAAKF,IAAIsC,IAAI,gBACb1C,cAAc0C,IAAI,qBAAsBpC,KAAKS,sBAC7CT,KAAKF,IAAIuC,aACTrC,KAAKsC,oBAOTzC,YAAYe,UAAU2B,eAAiB,WACnC,IAAIC,cAAgBhD,SAASiD,qBAAqBzC,KAAKF,KAEnDF,UAAU8C,OAAOC,WACjBH,cAAcI,KAAKjD,eAAekD,SAI1ChD,YAAYe,UAAUF,eAAiB,SAAUX,QAC7CC,KAAKD,OAASA,OAEVC,KAAKD,SACLJ,eAAea,GAAG,YAAaR,KAAKE,aACpCF,KAAKD,OAAOS,GAAG,6BAA8BR,KAAKI,kBAClDJ,KAAK8C,oBAIbjD,YAAYe,UAAU0B,iBAAmB,WACjCtC,KAAKD,SACLJ,eAAeoD,OACfpD,eAAeyC,IAAI,YAAapC,KAAKE,aACrCF,KAAKD,OAAOqC,IAAI,gBAChBpC,KAAKE,cACLF,KAAKD,OAAS,OAItBF,YAAYe,UAAUkC,gBAAkB,WACpC,GAAIlD,UAAU8C,OAAOC,WAAa3C,KAAKD,OAAQ,CAC3C,IAAIA,OAASC,KAAKD,OACdiD,UAAY,GAChB1D,EAAE2D,KAAKjD,KAAKD,OAAOmD,gBAAiB,SAAUC,KAC1C,IAAIC,SAAW3D,SAAS4D,0BAA0BtD,OAASoD,IAAIG,SAAWH,IAAII,IAAMJ,IAAIK,OACpFJ,UACAJ,UAAUS,KAAKL,YAGnBJ,UAAUU,OACV/D,eAAegE,KAAKX,UAAUY,KAAK,MAEnCjE,eAAeoD,SAS3BlD,YAAYe,UAAUiD,0BAA4B,SAASA,0BAA0BC,WASrFjE,YAAYe,UAAUmD,qBAAuB,WACzC,OAAO,GAOXlE,YAAYe,UAAUoD,gBAAkB,SAASA,gBAAgBF,SAE7D,MAAO,CACHG,KAAMjE,KAAKF,IAAIoE,YAOvBrE,YAAYe,UAAUR,iBAAmB,SAASA,iBAAiB+D,MAAOpE,QACtEC,KAAK8C,mBAITjD,YAAYe,UAAUN,SAAW,SAASA,SAAS6D,MAAOpE,OAAQqE,QAC9DpE,KAAKuC,kBAIT1C,YAAYe,UAAUL,UAAY,SAASA,UAAU4D,MAAOpE,OAAQqE,QAEhE5E,SAAS6E,oBAAoBrE,KAAKF,KAGlCE,KAAKmC,QACLnC,KAAKsE,QAAQ,UAAWtE,OAI5BH,YAAYe,UAAUH,qBAAuB,SAAU0D,MAAOI,UAAWC,WACrExE,KAAKsC,mBAEDiC,WAAaA,UAAUE,WAAazE,KAAKF,KACzCE,KAAKU,eAAe6D,YAK5B1E,YAAYe,UAAUV,YAAc,SAASA,YAAYiE,MAAOO,MAE5D,IAAIC,EACJ,IAAKA,KAAK3E,KAAKC,WACXD,KAAKC,WAAW0E,GAAGC,QAEvB5E,KAAKC,WAAa,GACbyE,MAASA,KAAKG,UAKnBjF,UAAU8B,IAAIoD,wBAAwBJ,KAAKK,OAAQ,SAASC,mBAAmBlD,KAE3E,IAAImD,WAAajF,KAAKD,OAAOmF,YACzBC,cAAgBnF,KAAKa,uBAErB8D,EAAGhB,KAAMyB,KAAMC,GACnB,IAAKV,KAAK7C,IAAIwD,iBACV3B,KAAO7B,IAAIwD,gBAAgBX,IAClBY,QAAUJ,cAAcxB,KAAK4B,OAAO3D,gBACzCwD,KAAOH,WAAWO,aAAa7B,KAAK8B,cAAcjC,OAClD6B,GAAKJ,WAAWO,aAAa7B,KAAK+B,MAAMC,MAAMpC,KAC9CvD,KAAKC,WAAWwD,KAAKwB,WAAWW,SAASR,KAAMC,GAAI,CAAEQ,UAAW,iBAG1E1F,KAAKH,QAIXX,OAAOD,QAAUS","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2012 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/*jslint forin: true */\n\n/**\n * CSSDocument manages a single CSS source document\n *\n * __EDITING__\n *\n * Editing the document will cause the style sheet to be reloaded via the\n * CSSAgent, which immediately updates the appearance of the rendered document.\n *\n * __HIGHLIGHTING__\n *\n * CSSDocument supports highlighting nodes from the HighlightAgent and\n * highlighting all DOMNode corresponding to the rule at the cursor position\n * in the editor.\n *\n * __EVENTS__\n *\n * CSSDocument dispatches these events:\n *\n * - deleted -- When the file for the underlying Document has been deleted.\n *   The 2nd argument to the listener will be this CSSDocument.\n */\ndefine(function CSSDocumentModule(require, exports, module) {\n\n\n    var _               = require(\"thirdparty/lodash\"),\n        EventDispatcher = require(\"utils/EventDispatcher\"),\n        CSSAgent        = require(\"LiveDevelopment/Agents/CSSAgent\"),\n        CSSUtils        = require(\"language/CSSUtils\"),\n        EditorManager   = require(\"editor/EditorManager\"),\n        HighlightAgent  = require(\"LiveDevelopment/Agents/HighlightAgent\"),\n        Inspector       = require(\"LiveDevelopment/Inspector/Inspector\");\n\n    /**\n     * @constructor\n     * @param {!Document} doc The source document from Brackets\n     * @param {!Editor} editor The editor for this document\n     */\n    var CSSDocument = function CSSDocument(doc, editor) {\n        this.doc = doc;\n\n        this._highlight = [];\n        this.onHighlight = this.onHighlight.bind(this);\n        this.onCursorActivity = this.onCursorActivity.bind(this);\n\n        // Add a ref to the doc since we're listening for change events\n        this.doc.addRef();\n        this.onChange = this.onChange.bind(this);\n        this.onDeleted = this.onDeleted.bind(this);\n\n        this.doc.on(\"change.CSSDocument\", this.onChange);\n        this.doc.on(\"deleted.CSSDocument\", this.onDeleted);\n\n        this.onActiveEditorChange = this.onActiveEditorChange.bind(this);\n        EditorManager.on(\"activeEditorChange\", this.onActiveEditorChange);\n\n        if (editor) {\n            // Attach now\n            this.attachToEditor(editor);\n        }\n    };\n    EventDispatcher.makeEventDispatcher(CSSDocument.prototype);\n\n    /**\n     * @private\n     * Get the CSSStyleSheetHeader for this document\n     */\n    CSSDocument.prototype._getStyleSheetHeader = function () {\n        return CSSAgent.styleForURL(this.doc.url);\n    };\n\n    /**\n     * Get the browser version of the source\n     * @return {jQuery.promise} Promise resolved with the text content of this CSS document\n     */\n    CSSDocument.prototype.getSourceFromBrowser = function getSourceFromBrowser() {\n        function getOnlyValue(obj) {\n            var key;\n            for (key in obj) {\n                if (_.has(obj, key)) {\n                    return obj[key];\n                }\n            }\n            return null;\n        }\n\n        var deferred = new $.Deferred(),\n            styleSheetHeader = this._getStyleSheetHeader(),\n            styleSheet = getOnlyValue(styleSheetHeader);\n\n        if (styleSheet) {\n            Inspector.CSS.getStyleSheetText(styleSheet.styleSheetId).then(function (res) {\n                deferred.resolve(res.text);\n            }, deferred.reject);\n        } else {\n            deferred.reject();\n        }\n\n        return deferred.promise();\n    };\n\n    /** Close the document */\n    CSSDocument.prototype.close = function close() {\n        this.doc.off(\".CSSDocument\");\n        EditorManager.off(\"activeEditorChange\", this.onActiveEditorChange);\n        this.doc.releaseRef();\n        this.detachFromEditor();\n    };\n\n    /**\n     * @private\n     * Update the style sheet text content and redraw highlights\n     */\n    CSSDocument.prototype._updateBrowser = function () {\n        var reloadPromise = CSSAgent.reloadCSSForDocument(this.doc);\n\n        if (Inspector.config.highlight) {\n            reloadPromise.done(HighlightAgent.redraw);\n        }\n    };\n\n    CSSDocument.prototype.attachToEditor = function (editor) {\n        this.editor = editor;\n\n        if (this.editor) {\n            HighlightAgent.on(\"highlight\", this.onHighlight);\n            this.editor.on(\"cursorActivity.CSSDocument\", this.onCursorActivity);\n            this.updateHighlight();\n        }\n    };\n\n    CSSDocument.prototype.detachFromEditor = function () {\n        if (this.editor) {\n            HighlightAgent.hide();\n            HighlightAgent.off(\"highlight\", this.onHighlight);\n            this.editor.off(\".CSSDocument\");\n            this.onHighlight();\n            this.editor = null;\n        }\n    };\n\n    CSSDocument.prototype.updateHighlight = function () {\n        if (Inspector.config.highlight && this.editor) {\n            var editor = this.editor,\n                selectors = [];\n            _.each(this.editor.getSelections(), function (sel) {\n                var selector = CSSUtils.findSelectorAtDocumentPos(editor, (sel.reversed ? sel.end : sel.start));\n                if (selector) {\n                    selectors.push(selector);\n                }\n            });\n            if (selectors.length) {\n                HighlightAgent.rule(selectors.join(\",\"));\n            } else {\n                HighlightAgent.hide();\n            }\n        }\n    };\n\n    /**\n     * Enable instrumented CSS\n     * @param enabled {boolean}\n     */\n    CSSDocument.prototype.setInstrumentationEnabled = function setInstrumentationEnabled(enabled) {\n        // no-op\n        // \"Instrumentation\" is always enabled for CSS, we make no modifications\n    };\n\n    /**\n     * Returns true if document edits appear live in the connected browser\n     * @return {boolean}\n     */\n    CSSDocument.prototype.isLiveEditingEnabled = function () {\n        return true;\n    };\n\n    /**\n     * Returns a JSON object with HTTP response overrides\n     * @return {{body: string}}\n     */\n    CSSDocument.prototype.getResponseData = function getResponseData(enabled) {\n        // Serve up the in-memory text, including any unsaved changes\n        return {\n            body: this.doc.getText()\n        };\n    };\n\n    /** Event Handlers *******************************************************/\n\n    /** Triggered on cursor activity of the editor */\n    CSSDocument.prototype.onCursorActivity = function onCursorActivity(event, editor) {\n        this.updateHighlight();\n    };\n\n    /** Triggered whenever the Document is edited */\n    CSSDocument.prototype.onChange = function onChange(event, editor, change) {\n        this._updateBrowser();\n    };\n\n    /** Triggered if the Document's file is deleted */\n    CSSDocument.prototype.onDeleted = function onDeleted(event, editor, change) {\n        // clear the CSS\n        CSSAgent.clearCSSForDocument(this.doc);\n\n        // shut down, since our Document is now dead\n        this.close();\n        this.trigger(\"deleted\", this);\n    };\n\n    /** Triggered when the active editor changes */\n    CSSDocument.prototype.onActiveEditorChange = function (event, newActive, oldActive) {\n        this.detachFromEditor();\n\n        if (newActive && newActive.document === this.doc) {\n            this.attachToEditor(newActive);\n        }\n    };\n\n    /** Triggered by the HighlightAgent to highlight a node in the editor */\n    CSSDocument.prototype.onHighlight = function onHighlight(event, node) {\n        // clear an existing highlight\n        var i;\n        for (i in this._highlight) {\n            this._highlight[i].clear();\n        }\n        this._highlight = [];\n        if (!node || !node.location) {\n            return;\n        }\n\n        // WebInspector Command: CSS.getMatchedStylesForNode\n        Inspector.CSS.getMatchedStylesForNode(node.nodeId, function onGetMatchesStyles(res) {\n            // res = {matchedCSSRules, pseudoElements, inherited}\n            var codeMirror = this.editor._codeMirror,\n                styleSheetIds = this._getStyleSheetHeader();\n\n            var i, rule, from, to;\n            for (i in res.matchedCSSRules) {\n                rule = res.matchedCSSRules[i];\n                if (rule.ruleId && styleSheetIds[rule.ruleId.styleSheetId]) {\n                    from = codeMirror.posFromIndex(rule.selectorRange.start);\n                    to = codeMirror.posFromIndex(rule.style.range.end);\n                    this._highlight.push(codeMirror.markText(from, to, { className: \"highlight\" }));\n                }\n            }\n        }.bind(this));\n    };\n\n    // Export the class\n    module.exports = CSSDocument;\n});\n"],"file":"CSSDocument.js"}