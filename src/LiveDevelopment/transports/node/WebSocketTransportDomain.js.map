{"version":3,"sources":["LiveDevelopment/transports/node/WebSocketTransportDomain.js"],"names":["WebSocketServer","require","Server","_wsServer","_domainManager","_createServer","socketPort","port","on","ws","msg","msgObj","console","log","JSON","parse","e","error","type","emitEvent","message","_cmdStart","_cmdClose","close","init","domainManager","hasDomain","registerDomain","major","minor","registerEvent","name","description","registerCommand","exports"],"mappings":"AAgCA,IAAIA,gBAAkBC,QAAQ,MAAMC,OAOhCC,UAOAC,eAMJ,SAASC,cAAcC,YACdH,YAEDA,UAAY,IAAIH,gBAAgB,CAACO,KAAMD,cAC7BE,GAAG,aAAc,SAAUC,IACjCA,GAAGD,GAAG,UAAW,SAAUE,KAEvB,IAAIC,OADJC,QAAQC,IAAI,gCAAkCH,KAE9C,IACIC,OAASG,KAAKC,MAAML,KACtB,MAAOM,GAEL,YADAJ,QAAQK,MAAM,8CAAgDP,KAI9C,YAAhBC,OAAOO,KACPd,eAAee,UAAU,qBAAsB,UAAWR,OAAOS,SAEjER,QAAQK,MAAM,oDAAsDP,OAEzEF,GAAG,QAAS,SAAUQ,GACrBJ,QAAQK,MAAM,yCAA2CD,KAC1DR,GAAG,QAAS,WACXI,QAAQC,IAAI,iCAEjBL,GAAG,QAAS,SAAUQ,GACrBJ,QAAQK,MAAM,8DAAgED,KAS1F,SAASK,UAAUd,MACfF,cAAcE,MAMlB,SAASe,YACDnB,YACAA,UAAUoB,QACVpB,UAAY,MAQpB,SAASqB,KAAKC,eACVrB,eAAiBqB,cACZA,cAAcC,UAAU,uBACzBD,cAAcE,eAAe,qBAAsB,CAACC,MAAO,EAAGC,MAAO,IAGzEJ,cAAcK,cACV,qBACA,UACA,CACI,CACIC,KAAM,MACNb,KAAM,SACNc,YAAa,mCAKzBP,cAAcQ,gBACV,qBACA,QACAZ,WACA,EACA,wBACA,CACI,CACIU,KAAM,OACNb,KAAM,SACNc,YAAa,yCAGrB,IAGJP,cAAcQ,gBACV,qBACA,QACAX,WACA,EACA,6BACA,IAIRY,QAAQV,KAAOA","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2017 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/**\n * WebSocketTransportDomain creates a websocket server for Live Preview\n * It receives the message containing tagID from the Remote Client(onClick)\n * and emits an event which is listened by WebSocketTransport which\n * brings the cursor to the tag corresponding to that particular tagID\n */\n\n/*eslint-env node */\n/*jslint node: true */\n\n\nvar WebSocketServer = require(\"ws\").Server;\n\n/**\n * @private\n * The WebSocket server we listen for incoming connections on.\n * @type {?WebSocketServer}\n */\nvar _wsServer;\n\n/**\n * @private\n * The Brackets domain manager for registering node extensions.\n * @type {?DomainManager}\n */\nvar _domainManager;\n\n/**\n * @private\n * Creates the WebSocketServer and handles incoming connections.\n */\nfunction _createServer(socketPort) {\n    if (!_wsServer) {\n        // TODO: make port configurable, or use random port\n        _wsServer = new WebSocketServer({port: socketPort});\n        _wsServer.on(\"connection\", function (ws) {\n            ws.on(\"message\", function (msg) {\n                console.log(\"WebSocketServer - received - \" + msg);\n                var msgObj;\n                try {\n                    msgObj = JSON.parse(msg);\n                } catch (e) {\n                    console.error(\"webSocketTransport: Error parsing message: \" + msg);\n                    return;\n                }\n\n                if (msgObj.type === \"message\") {\n                    _domainManager.emitEvent(\"webSocketTransport\", \"message\", msgObj.message);\n                } else {\n                    console.error(\"webSocketTransport: Got bad socket message type: \" + msg);\n                }\n            }).on(\"error\", function (e) {\n                console.error(\"webSocketTransport: Error on socket : \" + e);\n            }).on(\"close\", function () {\n                console.log(\"webSocketTransport closed\");\n            });\n        }).on(\"error\", function (e) {\n            console.error(\"webSocketTransport: Error on live preview server creation: \" + e);\n        });\n    }\n}\n\n/**\n * Initializes the socket server.\n * @param {number} port\n */\nfunction _cmdStart(port) {\n    _createServer(port);\n}\n\n/**\n * Kill the WebSocketServer\n */\nfunction _cmdClose() {\n    if (_wsServer) {\n        _wsServer.close();\n        _wsServer = null;\n    }\n}\n\n/**\n * Initializes the domain and registers commands.\n * @param {DomainManager} domainManager The DomainManager for the server\n */\nfunction init(domainManager) {\n    _domainManager = domainManager;\n    if (!domainManager.hasDomain(\"webSocketTransport\")) {\n        domainManager.registerDomain(\"webSocketTransport\", {major: 0, minor: 1});\n    }\n\n    domainManager.registerEvent(\n        \"webSocketTransport\",\n        \"message\",\n        [\n            {\n                name: \"msg\",\n                type: \"string\",\n                description: \"JSON message from client page\"\n            }\n        ]\n    );\n\n    domainManager.registerCommand(\n        \"webSocketTransport\",       // domain name\n        \"start\",                    // command name\n        _cmdStart,                  // command handler function\n        false,                      // this command is synchronous in Node\n        \"Creates the WS server\",\n        [\n            {\n                name: \"port\",\n                type: \"number\",\n                description: \"Port on which server needs to listen\"\n            }\n        ],\n        []\n    );\n\n    domainManager.registerCommand(\n        \"webSocketTransport\",       // domain name\n        \"close\",                    // command name\n        _cmdClose,                  // command handler function\n        false,                      // this command is synchronous in Node\n        \"Kills the websocket server\",\n        []\n    );\n}\n\nexports.init = init;\n"],"file":"WebSocketTransportDomain.js"}