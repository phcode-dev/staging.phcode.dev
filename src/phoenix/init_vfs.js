const EXTENSION_DIR="/fs/app/extensions/";function _setupVFS(fsLib,pathLib){return Phoenix.VFS={getRootDir:()=>"/fs/",getMountDir:()=>"/mnt/",getAppSupportDir:()=>"/fs/app/",getExtensionDir:()=>EXTENSION_DIR,getUserExtensionDir:()=>`${EXTENSION_DIR}user`,getDevExtensionDir:()=>`${EXTENSION_DIR}dev`,getLocalDir:()=>"/fs/local/",getTempDir:()=>"/temp/",getTrashDir:()=>"/fs/trash/",getDefaultProjectDir:()=>"/fs/local/default project/",getUserDocumentsDirectory:()=>"/fs/local/Documents/",ensureExistsDir:function(path,cb){Phoenix.VFS.exists(path,exists=>{exists?cb():fs.mkdirs(path,777,!0,function(err){err&&"EEXIST"!==err.code&&cb(err),cb()})})},getPathForVirtualServingURL:function(fullPath){return window.fsServerUrl&&fullPath.startsWith(window.fsServerUrl)?fullPath.replace(window.fsServerUrl,"/"):null},ensureExistsDirAsync:async function(path){return new Promise((resolve,reject)=>{Phoenix.VFS.ensureExistsDir(path,err=>{err?reject(err):resolve()})})},exists:function(path,cb){fs.stat(path,function(err,stats){cb(!(!stats||err))})},existsAsync:async function(path){return new Promise(resolve=>{Phoenix.VFS.exists(path,exists=>{resolve(exists)})})},fs:fsLib,path:pathLib,getFsEncoding:_getFsEncoding},Phoenix.fs=fsLib,Phoenix.path=pathLib,Phoenix.VFS}const _getFsEncoding=function(encoding){const encodingStr=encoding.toLowerCase();switch(encodingStr){case"utf8":case"utf-8":return"utf8";case"ascii":return"ascii";case"hex":return"hex";case"ucs2":case"ucs-2":return"ucs2";case"utf16le":case"utf-16le":return"utf16le";case"binary":return"binary";case"latin1":return"latin1";case"ISO8859-1":return"ISO8859-1"}return encoding},_SAMPLE_HTML="<!DOCTYPE html>\n<html>\n    <head>\n        <title>Phoenix Editor for the web</title>\n    </head>\n \n    <body>\n        <h1>Welcome to Phoenix</h1>\n        <p> Modern, Open-source, IDE For The Web.</p>\n    </body>\n</html>";function _tryCreateDefaultProject(){return new Promise(resolve=>{let projectDir=Phoenix.VFS.getDefaultProjectDir();Phoenix.VFS.exists(projectDir,exists=>{exists?resolve():Phoenix.VFS.ensureExistsDir(projectDir,err=>{err&&logger.reportError(err,"Error creating default project");let indexFile=Phoenix.VFS.path.normalize(`${projectDir}/index.html`);Phoenix.VFS.fs.writeFile(indexFile,_SAMPLE_HTML,"utf8"),resolve()})})})}const _createAppDirs=function(){return Promise.all([Phoenix.VFS.ensureExistsDirAsync(Phoenix.VFS.getRootDir()),Phoenix.VFS.ensureExistsDirAsync(Phoenix.VFS.getAppSupportDir()),Phoenix.VFS.ensureExistsDirAsync(Phoenix.VFS.getLocalDir()),Phoenix.VFS.ensureExistsDirAsync(Phoenix.VFS.getTrashDir()),Phoenix.VFS.ensureExistsDirAsync(Phoenix.VFS.getTempDir()),Phoenix.VFS.ensureExistsDirAsync(Phoenix.VFS.getExtensionDir()),Phoenix.VFS.ensureExistsDirAsync(Phoenix.VFS.getExtensionDir()+"user"),Phoenix.VFS.ensureExistsDirAsync(Phoenix.VFS.getExtensionDir()+"dev"),_tryCreateDefaultProject()])},_FS_ERROR_MESSAGE="Oops. Phoenix could not be started due to missing file system library.";export default function initVFS(){if(!window.fs||!window.path||!window.Phoenix)throw window.alert(_FS_ERROR_MESSAGE),new Error(_FS_ERROR_MESSAGE);_setupVFS(window.fs,window.path),window._phoenixfsAppDirsCreatePromise=_createAppDirs()}
//# sourceMappingURL=init_vfs.js.map
