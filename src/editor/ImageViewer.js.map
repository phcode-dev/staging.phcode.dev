{"version":3,"sources":["editor/ImageViewer.js"],"names":["define","require","exports","module","DocumentManager","ImageViewTemplate","ProjectManager","LanguageManager","MainViewFactory","Strings","StringUtils","FileSystem","FileUtils","_","Mustache","_viewers","_imageToDataURI","file","cb","read","encoding","window","fs","BYTE_ARRAY_ENCODING","err","content","stat","base64","btoa","Uint8Array","reduce","data","byte","String","fromCharCode","dataURL","ImageView","$container","this","$el","$","render","fullPath","now","append","_naturalWidth","_naturalHeight","_scale","_scaleDivInfo","relPath","makeProjectRelativeIfPossible","$imagePath","find","$imagePreview","$imageData","$image","$imageTip","$imageGuides","$imageScale","$x_value","$y_value","$horzGuide","$vertGuide","text","attr","on","bind","_onImageLoaded","that","src","_createImageView","pane","view","getViewForPath","showView","$content","addView","Deferred","resolve","promise","_handleFileSystemChange","event","entry","added","removed","isDirectory","viewer","refresh","prototype","_onFilenameChange","e","oldPath","newPath","currentTarget","naturalWidth","naturalHeight","extension","getFileExtension","dimensionString","UNIT_PIXELS","IMAGE_VIEWER_LARGEST_ICON","self","html","sizeString","size","prettyPrintBytes","dimensionAndSize","replace","hide","_showImageTip","_hideImageTip","_updateScale","currentWidth","width","Math","floor","css","position","left","show","x","round","offsetX","y","offsetY","imagePos","top","height","windowWidth","fourDigitImageWidth","toString","length","infoWidth1","infoWidth2","tipOffsetX","tipOffsetY","tipMinusOffsetX1","tipMinusOffsetX2","_handleMouseEnterOrExitScaleSticker","pageX","$target","targetPos","target","right","bottom","_hideGuidesAndTip","scaleDivPos","imgWidth","imgHeight","scaleDivLeft","scaleDivTop","scaleDivRight","scaleDivBottom","getFile","updateLayout","parent","pos","iWidth","innerWidth","iHeight","innerHeight","oWidth","outerWidth","oHeight","outerHeight","destroy","off","remove","noCacheUrl","Date","valueOf","index","indexOf","slice","registerViewFactory","canOpenFile","lang","getLanguageForPath","getId","openFile"],"mappings":"AAuBAA,OAAO,SAAUC,QAASC,QAASC,QAG/B,IAAIC,gBAAsBH,QAAQ,4BAC9BI,kBAAsBJ,QAAQ,oCAC9BK,eAAsBL,QAAQ,0BAC9BM,gBAAsBN,QAAQ,4BAC9BO,gBAAsBP,QAAQ,wBAC9BQ,QAAsBR,QAAQ,WAC9BS,YAAsBT,QAAQ,qBAC9BU,WAAsBV,QAAQ,yBAC9BW,UAAsBX,QAAQ,kBAC9BY,EAAsBZ,QAAQ,qBAC9Ba,SAAsBb,QAAQ,gCAE9Bc,SAAW,GAEf,SAASC,gBAAgBC,KAAMC,IAC3BD,KAAKE,KAAK,CAACC,SAAUC,OAAOC,GAAGC,qBAAsB,SAAUC,IAAKC,QAASL,SAAUM,MACnF,IAAIC,OAASN,OAAOO,KAChB,IAAIC,WAAWJ,SACVK,OAAO,CAACC,KAAMC,OAASD,KAAOE,OAAOC,aAAaF,MAAO,KAE9DG,QACJjB,GAAG,KADS,qBAAuBS,UAa3C,SAASS,UAAUnB,KAAMoB,YACrBC,KAAKrB,KAAOA,KACZqB,KAAKC,IAAMC,EAAE1B,SAAS2B,OAAOpC,kBAAmB,CAACqC,SAAU,GAAKC,IAAK,MACrEN,WAAWO,OAAON,KAAKC,KAEvBD,KAAKO,cAAgB,EACrBP,KAAKQ,eAAiB,EACtBR,KAAKS,OAAS,IACdT,KAAKU,cAAgB,KAErBV,KAAKW,QAAU3C,eAAe4C,8BAA8BZ,KAAKrB,KAAKyB,UAEtEJ,KAAKa,WAAab,KAAKC,IAAIa,KAAK,eAChCd,KAAKe,cAAgBf,KAAKC,IAAIa,KAAK,kBACnCd,KAAKgB,WAAahB,KAAKC,IAAIa,KAAK,eAEhCd,KAAKiB,OAASjB,KAAKC,IAAIa,KAAK,UAC5Bd,KAAKkB,UAAYlB,KAAKC,IAAIa,KAAK,cAC/Bd,KAAKmB,aAAenB,KAAKC,IAAIa,KAAK,gBAClCd,KAAKoB,YAAcpB,KAAKC,IAAIa,KAAK,gBACjCd,KAAKqB,SAAWrB,KAAKC,IAAIa,KAAK,YAC9Bd,KAAKsB,SAAWtB,KAAKC,IAAIa,KAAK,YAC9Bd,KAAKuB,WAAavB,KAAKC,IAAIa,KAAK,eAChCd,KAAKwB,WAAaxB,KAAKC,IAAIa,KAAK,eAEhCd,KAAKa,WAAWY,KAAKzB,KAAKW,SAASe,KAAK,QAAS1B,KAAKW,SACtDX,KAAKe,cAAcY,GAAG,OAAQpD,EAAEqD,KAAK5B,KAAK6B,eAAgB7B,OAE1DvB,SAASE,KAAKyB,UAAYJ,KAE1B,IAAI8B,KAAO9B,KACXtB,gBAAgBC,KAAM,CAACO,IAAKW,WACxBiC,KAAKf,cAAc,GAAGgB,IAAMlC,UAmVpC,SAASmC,iBAAiBrD,KAAMsD,MAC5B,IAAIC,KAAOD,KAAKE,eAAexD,KAAKyB,UAQpC,OANI8B,KACAD,KAAKG,SAASF,OAEdA,KAAO,IAAIpC,UAAUnB,KAAMsD,KAAKI,UAChCJ,KAAKK,QAAQJ,MAAM,KAEhB,IAAIhC,EAAEqC,UAAWC,UAAUC,UAWtC,SAASC,wBAAwBC,MAAOC,MAAOC,MAAOC,SAGlD,GAAKF,QAASA,MAAMG,YAApB,CAKA,IAAIC,OAASvE,SAASmE,MAAMxC,UAGxB4C,QACAA,OAAOC,WAtWfnD,UAAUoD,UAAUC,kBAAoB,SAAUC,EAAGC,QAASC,SAKtDtD,KAAKrB,KAAKyB,WAAakD,UACvBtD,KAAKW,QAAU3C,eAAe4C,8BAA8B0C,SAC5DtD,KAAKa,WAAWY,KAAKzB,KAAKW,SAASe,KAAK,QAAS1B,KAAKW,WAW9Db,UAAUoD,UAAUrB,eAAiB,SAAUuB,GAE3CpD,KAAKO,cAAgB6C,EAAEG,cAAcC,aACrCxD,KAAKQ,eAAiB4C,EAAEG,cAAcE,cAEtC,IAAIC,UAAYpF,UAAUqF,iBAAiB3D,KAAKrB,KAAKyB,UACjDwD,gBAAkB5D,KAAKO,cAAgB,YAAcP,KAAKQ,eAAiB,IAAMrC,QAAQ0F,YAE3E,QAAdH,YACAE,iBAAmB,KAAOzF,QAAQ2F,0BAA4B,KAIlE,IAAIC,KAAO/D,KAEXA,KAAKrB,KAAKS,KAAK,SAAUF,IAAKE,MAC1B,GAAIF,IACA6E,KAAK/C,WAAWgD,KAAKJ,qBAClB,CACH,IAAIK,WAAa,GACb7E,KAAK8E,OACLD,WAAa,YAAc7F,YAAY+F,iBAAiB/E,KAAK8E,KAAM,IAEvE,IAAIE,iBAAmBR,gBAAkBK,WACzCF,KAAK/C,WAAWgD,KAAKI,kBACZ1C,KAAK,QAAS0C,iBACFC,QAAQ,UAAW,KACnBA,QAAQ,UAAW,SAKhDvG,gBAAgB6D,GAAG,2BAA4BpD,EAAEqD,KAAK5B,KAAKmD,kBAAmBnD,OAE9EA,KAAKkB,UAAUoD,OACftE,KAAKmB,aAAamD,OAElBtE,KAAKiB,OAAOU,GAAG,sBAAuB,iBAAkBpD,EAAEqD,KAAK5B,KAAKuE,cAAevE,OACvE2B,GAAG,uBAAwB,iBAAkBpD,EAAEqD,KAAK5B,KAAKwE,cAAexE,OAEpFA,KAAKyE,gBAOT3E,UAAUoD,UAAUuB,aAAe,WAC/B,IAAIC,aAAe1E,KAAKe,cAAc4D,QAElCD,cAAgBA,aAAe1E,KAAKO,eACpCP,KAAKS,OAASiE,aAAe1E,KAAKO,cAAgB,IAClDP,KAAKoB,YAAYK,KAAKmD,KAAKC,MAAM7E,KAAKS,QAAU,KAE3CqE,IAAI,OAAQ9E,KAAKe,cAAcgE,WAAWC,KAAO,GACjDC,SAGLjF,KAAKS,OAAS,IACdT,KAAKU,cAAgB,KACrBV,KAAKoB,YAAYK,KAAK,IAAI6C,SAUlCxE,UAAUoD,UAAUqB,cAAgB,SAAUnB,GAG1C,GAAgC,IAA5BwB,KAAKC,MAAM7E,KAAKS,QAApB,CAIA,IAAIyE,EAAsBN,KAAKO,MAAkB,IAAZ/B,EAAEgC,QAAgBpF,KAAKS,QACxD4E,EAAsBT,KAAKO,MAAkB,IAAZ/B,EAAEkC,QAAgBtF,KAAKS,QACxD8E,SAAsBvF,KAAKe,cAAcgE,WACzCC,KAAsB5B,EAAEgC,QAAUG,SAASP,KAC3CQ,IAAsBpC,EAAEkC,QAAUC,SAASC,IAC3Cb,MAAsB3E,KAAKe,cAAc4D,QACzCc,OAAsBzF,KAAKe,cAAc0E,SACzCC,YAAsBxF,EAAEnB,QAAQ4F,QAChCgB,oBAA+D,IAAzC3F,KAAKO,cAAcqF,WAAWC,OAKpDC,WAAsB,IACtBC,WAAsB,IACtBC,WAAsB,GACtBC,YAAuB,GACvBC,kBAAuB,GACvBC,kBAAuB,GAM3B,GAAIjB,EAAI,GAAKA,GAAKlF,KAAKO,eAAiB8E,EAAI,GAAKA,GAAKrF,KAAKQ,eAGvD,OAFAR,KAAKwE,cAAcpB,QACnBpD,KAAKe,cAAc+D,IAAI,SAAU,QAIrC9E,KAAKe,cAAc+D,IAAI,SAAU,QAEjC9E,KAAKoG,oCAAoCpB,KAAMQ,MAG1CpC,EAAEiD,MAtBmB,IAsBGX,aACpBC,qBAAwBvC,EAAEiD,MAtBT,IAsB+BX,eACrDM,WAAaL,qBAnBS,IADA,IAuB1B3F,KAAKqB,SAASI,KAAKyD,EAAI,MACvBlF,KAAKsB,SAASG,KAAK4D,EAAI,MAEvBrF,KAAKkB,UAAU4D,IAAI,CACfE,KAAMA,KAAOgB,WACbR,IAAKA,KA7BiB,KA8BvBP,OAEHjF,KAAKuB,WAAWuD,IAAI,CAChBE,KAAMO,SAASP,KACfQ,IAAKA,IACLb,MAAOA,MAAQ,IAChBM,OAEHjF,KAAKwB,WAAWsD,IAAI,CAChBE,KAAMA,KACNQ,IAAKD,SAASC,IACdC,OAAQA,OAAS,IAClBR,SAQPnF,UAAUoD,UAAUsB,cAAgB,SAAUpB,GAC1C,IAAIkD,QACAC,UADYrG,EAAEkD,EAAEoD,QACIzB,WACpBQ,SAAYvF,KAAKe,cAAcgE,WAC/B0B,MAAYlB,SAASP,KAAOhF,KAAKe,cAAc4D,QAC/C+B,OAAYnB,SAASC,IAAMxF,KAAKe,cAAc0E,SAC9CP,EAAYqB,UAAUvB,KAAO5B,EAAEgC,QAC/BC,EAAYkB,UAAUf,IAAMpC,EAAEkC,SAG9BJ,EAAIK,SAASP,MAAQE,GAAKuB,OACtBpB,EAAIE,SAASC,KAAOH,GAAKqB,UAC7B1G,KAAK2G,oBACD3G,KAAKU,gBACLV,KAAKU,cAAgB,KACrBV,KAAKoB,YAAY6D,UAS7BnF,UAAUoD,UAAUyD,kBAAoB,WACpC3G,KAAKkB,UAAUoD,OACftE,KAAKmB,aAAamD,QAWtBxE,UAAUoD,UAAUkD,oCAAsC,SAAUhB,QAASE,SACzE,IAAIC,SAAiBvF,KAAKe,cAAcgE,WACpC6B,YAAiB5G,KAAKoB,YAAY2D,WAClC8B,SAAiB7G,KAAKe,cAAc4D,QACpCmC,UAAiB9G,KAAKe,cAAc0E,SACpCsB,aACAC,YACAC,cACAC,eAEAlH,KAAKU,eACLqG,aAAiB/G,KAAKU,cAAcsE,KACpCgC,YAAiBhH,KAAKU,cAAc8E,IACpCyB,cAAiBjH,KAAKU,cAAc+F,MACpCS,eAAiBlH,KAAKU,cAAcgG,OAE/BG,SAAWtB,SAASP,KAAQiC,gBAC7BA,cAAgBJ,SAAWtB,SAASP,MAGnC8B,UAAYvB,SAASC,IAAO0B,iBAC7BA,eAAiBJ,UAAYvB,SAASC,OAI1CuB,aAAiBH,YAAY5B,KAC7BgC,YAAiBJ,YAAYpB,IAC7ByB,cAAiBjH,KAAKoB,YAAYuD,QAAUoC,aAC5CG,eAAiBlH,KAAKoB,YAAYqE,SAAWuB,aAG7ChH,KAAKU,eAGA0E,QAAU2B,cAAgB3B,QAAU6B,eAChC3B,QAAU0B,aAAe1B,QAAU4B,kBACxClH,KAAKU,cAAgB,KACrBV,KAAKoB,YAAY6D,QAEbG,SAAW2B,cAAgB3B,SAAW6B,eACzC3B,SAAW0B,aAAe1B,SAAW4B,gBAGtC9B,QAAWG,SAASP,KAAO6B,UACvBvB,QAAWC,SAASC,IAAMsB,YAE9B9G,KAAKU,cAAgB,CAACsE,KAAM4B,YAAY5B,KACpCQ,IAAKoB,YAAYpB,IACjBiB,MAAOQ,cACPP,OAAQQ,gBACZlH,KAAKoB,YAAYkD,SAa7BxE,UAAUoD,UAAUiE,QAAU,WAC1B,OAAOnH,KAAKrB,MAMhBmB,UAAUoD,UAAUkE,aAAe,WAC/BpH,KAAK2G,oBAEL,IAAI5G,WAAaC,KAAKC,IAAIoH,SAEtBC,IAAMvH,WAAWgF,WACjBwC,OAASxH,WAAWyH,aACpBC,QAAU1H,WAAW2H,cACrBC,OAAS5H,WAAW6H,aACpBC,QAAU9H,WAAW+H,cAIzB9H,KAAKC,IAAI6E,IAAI,CAACU,IAAK8B,IAAI9B,KAAQqC,QAAUJ,SAAW,EAChDzC,KAAMsC,IAAItC,MAAS2C,OAASJ,QAAU,EACtC5C,MAAO4C,OACP9B,OAAQgC,UACZzH,KAAKyE,gBAMT3E,UAAUoD,UAAU6E,QAAU,kBACnBtJ,SAASuB,KAAKrB,KAAKyB,UAC1BtC,gBAAgBkK,IAAI,cACpBhI,KAAKiB,OAAO+G,IAAI,cAChBhI,KAAKC,IAAIgI,UAMbnI,UAAUoD,UAAUD,QAAU,WAC1B,IAAIiF,WAAalI,KAAKe,cAAcW,KAAK,OACrCrB,KAAM,IAAI8H,MAAOC,UACjBC,MAAQH,WAAWI,QAAQ,KAG3BD,MAAQ,IACRH,WAAaA,WAAWK,MAAM,EAAGF,QAKrCH,WAAaA,WAAa,QAAU7H,IAIpCL,KAAKe,cAAcW,KAAK,MAAOwG,aAiDnC7J,WAAWsD,GAAG,SAAUe,yBAKxBxE,gBAAgBsK,oBAAoB,CAChCC,YAAa,SAAUrI,UACnB,IAAIsI,KACJ,MAAyB,UADdzK,gBAAgB0K,mBAAmBvI,UACjCwI,SAEjBC,SAAU,SAAUlK,KAAMsD,MACtB,OAAOD,iBAAiBrD,KAAMsD,SAQtCrE,QAAQkC,UAAYA","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2013 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n// jshint ignore: start\n\ndefine(function (require, exports, module) {\n\n\n    var DocumentManager     = require(\"document/DocumentManager\"),\n        ImageViewTemplate   = require(\"text!htmlContent/image-view.html\"),\n        ProjectManager      = require(\"project/ProjectManager\"),\n        LanguageManager     = require(\"language/LanguageManager\"),\n        MainViewFactory     = require(\"view/MainViewFactory\"),\n        Strings             = require(\"strings\"),\n        StringUtils         = require(\"utils/StringUtils\"),\n        FileSystem          = require(\"filesystem/FileSystem\"),\n        FileUtils           = require(\"file/FileUtils\"),\n        _                   = require(\"thirdparty/lodash\"),\n        Mustache            = require(\"thirdparty/mustache/mustache\");\n\n    var _viewers = {};\n\n    function _imageToDataURI(file, cb) {\n        file.read({encoding: window.fs.BYTE_ARRAY_ENCODING}, function (err, content, encoding, stat) {\n            var base64 = window.btoa(\n                new Uint8Array(content)\n                    .reduce((data, byte) => data + String.fromCharCode(byte), '')\n            );\n            var dataURL=\"data:image;base64,\" + base64;\n            cb(null, dataURL);\n        });\n    }\n\n    /**\n     * ImageView objects are constructed when an image is opened\n     * @see {@link Pane} for more information about where ImageViews are rendered\n     *\n     * @constructor\n     * @param {!File} file - The image file object to render\n     * @param {!jQuery} container - The container to render the image view in\n     */\n    function ImageView(file, $container) {\n        this.file = file;\n        this.$el = $(Mustache.render(ImageViewTemplate, {fullPath: '' , now: ''}));\n        $container.append(this.$el);\n\n        this._naturalWidth = 0;\n        this._naturalHeight = 0;\n        this._scale = 100;           // 100%\n        this._scaleDivInfo = null;   // coordinates of hidden scale sticker\n\n        this.relPath = ProjectManager.makeProjectRelativeIfPossible(this.file.fullPath);\n\n        this.$imagePath = this.$el.find(\".image-path\");\n        this.$imagePreview = this.$el.find(\".image-preview\");\n        this.$imageData = this.$el.find(\".image-data\");\n\n        this.$image = this.$el.find(\".image\");\n        this.$imageTip = this.$el.find(\".image-tip\");\n        this.$imageGuides = this.$el.find(\".image-guide\");\n        this.$imageScale = this.$el.find(\".image-scale\");\n        this.$x_value = this.$el.find(\".x-value\");\n        this.$y_value = this.$el.find(\".y-value\");\n        this.$horzGuide = this.$el.find(\".horz-guide\");\n        this.$vertGuide = this.$el.find(\".vert-guide\");\n\n        this.$imagePath.text(this.relPath).attr(\"title\", this.relPath);\n        this.$imagePreview.on(\"load\", _.bind(this._onImageLoaded, this));\n\n        _viewers[file.fullPath] = this;\n\n        let that = this;\n        _imageToDataURI(file, (err, dataURL) => {\n            that.$imagePreview[0].src = dataURL;\n        });\n    }\n\n    /**\n     * DocumentManger.fileNameChange handler - when an image is renamed, we must\n     * update the view\n     *\n     * @param {jQuery.Event} e - event\n     * @param {!string} oldPath - the name of the file that's changing changing\n     * @param {!string} newPath - the name of the file that's changing changing\n     * @private\n     */\n    ImageView.prototype._onFilenameChange = function (e, oldPath, newPath) {\n        /*\n         * File objects are already updated when the event is triggered\n         * so we just need to see if the file has the same path as our image\n         */\n        if (this.file.fullPath === newPath) {\n            this.relPath = ProjectManager.makeProjectRelativeIfPossible(newPath);\n            this.$imagePath.text(this.relPath).attr(\"title\", this.relPath);\n        }\n    };\n\n    /**\n     * <img>.on(\"load\") handler - updates content of the image view\n     *                            initializes computed values\n     *                            installs event handlers\n     * @param {Event} e - event\n     * @private\n     */\n    ImageView.prototype._onImageLoaded = function (e) {\n        // add dimensions and size\n        this._naturalWidth = e.currentTarget.naturalWidth;\n        this._naturalHeight = e.currentTarget.naturalHeight;\n\n        var extension = FileUtils.getFileExtension(this.file.fullPath);\n        var dimensionString = this._naturalWidth + \" &times; \" + this._naturalHeight + \" \" + Strings.UNIT_PIXELS;\n\n        if (extension === \"ico\") {\n            dimensionString += \" (\" + Strings.IMAGE_VIEWER_LARGEST_ICON + \")\";\n        }\n\n        // get image size\n        var self = this;\n\n        this.file.stat(function (err, stat) {\n            if (err) {\n                self.$imageData.html(dimensionString);\n            } else {\n                var sizeString = \"\";\n                if (stat.size) {\n                    sizeString = \" &mdash; \" + StringUtils.prettyPrintBytes(stat.size, 2);\n                }\n                var dimensionAndSize = dimensionString + sizeString;\n                self.$imageData.html(dimensionAndSize)\n                        .attr(\"title\", dimensionAndSize\n                                    .replace(\"&times;\", \"x\")\n                                    .replace(\"&mdash;\", \"-\"));\n            }\n        });\n\n        // make sure we always show the right file name\n        DocumentManager.on(\"fileNameChange.ImageView\", _.bind(this._onFilenameChange, this));\n\n        this.$imageTip.hide();\n        this.$imageGuides.hide();\n\n        this.$image.on(\"mousemove.ImageView\", \".image-preview\", _.bind(this._showImageTip, this))\n                   .on(\"mouseleave.ImageView\", \".image-preview\", _.bind(this._hideImageTip, this));\n\n        this._updateScale();\n    };\n\n    /**\n     * Update the scale element\n     * @private\n     */\n    ImageView.prototype._updateScale = function () {\n        var currentWidth = this.$imagePreview.width();\n\n        if (currentWidth && currentWidth < this._naturalWidth) {\n            this._scale = currentWidth / this._naturalWidth * 100;\n            this.$imageScale.text(Math.floor(this._scale) + \"%\")\n                // Keep the position of the image scale div relative to the image.\n                .css(\"left\", this.$imagePreview.position().left + 5)\n                .show();\n        } else {\n            // Reset everything related to the image scale sticker before hiding it.\n            this._scale = 100;\n            this._scaleDivInfo = null;\n            this.$imageScale.text(\"\").hide();\n        }\n    };\n\n\n    /**\n     * Show image coordinates under the mouse cursor\n     * @param {Event} e - event\n     * @private\n     */\n    ImageView.prototype._showImageTip = function (e) {\n        // Don't show image tip if this._scale is close to zero.\n        // since we won't have enough room to show tip anyway.\n        if (Math.floor(this._scale) === 0) {\n            return;\n        }\n\n        var x                   = Math.round(e.offsetX * 100 / this._scale),\n            y                   = Math.round(e.offsetY * 100 / this._scale),\n            imagePos            = this.$imagePreview.position(),\n            left                = e.offsetX + imagePos.left,\n            top                 = e.offsetY + imagePos.top,\n            width               = this.$imagePreview.width(),\n            height              = this.$imagePreview.height(),\n            windowWidth         = $(window).width(),\n            fourDigitImageWidth = this._naturalWidth.toString().length === 4,\n\n            // @todo -- seems a bit strange that we're computing sizes\n            //          using magic numbers\n\n            infoWidth1          = 112,    // info div width 96px + vertical toolbar width 16px\n            infoWidth2          = 120,    // info div width 104px (for 4-digit image width) + vertical toolbar width 16px\n            tipOffsetX          = 10,     // adjustment for info div left from x coordinate of cursor\n            tipOffsetY          = -54,    // adjustment for info div top from y coordinate of cursor\n            tipMinusOffsetX1    = -82,    // for less than 4-digit image width\n            tipMinusOffsetX2    = -90;    // for 4-digit image width\n\n        // Check whether we're getting mousemove events beyond the image boundaries due to a browser bug\n        // or the rounding calculation above for a scaled image. For example, if an image is 120 px wide,\n        // we should get mousemove events in the range of 0 <= x < 120, but not 120 or more. If we get\n        // a value beyond the range, then simply handle the event as if it were a mouseleave.\n        if (x < 0 || x >= this._naturalWidth || y < 0 || y >= this._naturalHeight) {\n            this._hideImageTip(e);\n            this.$imagePreview.css(\"cursor\", \"auto\");\n            return;\n        }\n\n        this.$imagePreview.css(\"cursor\", \"none\");\n\n        this._handleMouseEnterOrExitScaleSticker(left, top);\n\n        // Check whether to show the image tip on the left.\n        if ((e.pageX + infoWidth1) > windowWidth ||\n                (fourDigitImageWidth && (e.pageX + infoWidth2) > windowWidth)) {\n            tipOffsetX = fourDigitImageWidth ? tipMinusOffsetX2 : tipMinusOffsetX1;\n        }\n\n        this.$x_value.text(x + \"px\");\n        this.$y_value.text(y + \"px\");\n\n        this.$imageTip.css({\n            left: left + tipOffsetX,\n            top: top + tipOffsetY\n        }).show();\n\n        this.$horzGuide.css({\n            left: imagePos.left,\n            top: top,\n            width: width - 1\n        }).show();\n\n        this.$vertGuide.css({\n            left: left,\n            top: imagePos.top,\n            height: height - 1\n        }).show();\n    };\n\n    /**\n     * Hide image coordinates info tip\n     * @param {Event} e - event\n     * @private\n     */\n    ImageView.prototype._hideImageTip = function (e) {\n        var $target   = $(e.target),\n            targetPos = $target.position(),\n            imagePos  = this.$imagePreview.position(),\n            right     = imagePos.left + this.$imagePreview.width(),\n            bottom    = imagePos.top + this.$imagePreview.height(),\n            x         = targetPos.left + e.offsetX,\n            y         = targetPos.top + e.offsetY;\n\n        // Hide image tip and guides only if the cursor is outside of the image.\n        if (x < imagePos.left || x >= right ||\n                y < imagePos.top || y >= bottom) {\n            this._hideGuidesAndTip();\n            if (this._scaleDivInfo) {\n                this._scaleDivInfo = null;\n                this.$imageScale.show();\n            }\n        }\n    };\n\n    /**\n     * Hides both guides and the tip\n     * @private\n     */\n    ImageView.prototype._hideGuidesAndTip = function () {\n        this.$imageTip.hide();\n        this.$imageGuides.hide();\n    };\n\n    /**\n     * Check mouse entering/exiting the scale sticker.\n     * Hide it when entering and show it again when exiting.\n     *\n     * @param {number} offsetX mouse offset from the left of the previewing image\n     * @param {number} offsetY mouseoffset from the top of the previewing image\n     * @private\n     */\n    ImageView.prototype._handleMouseEnterOrExitScaleSticker = function (offsetX, offsetY) {\n        var imagePos       = this.$imagePreview.position(),\n            scaleDivPos    = this.$imageScale.position(),\n            imgWidth       = this.$imagePreview.width(),\n            imgHeight      = this.$imagePreview.height(),\n            scaleDivLeft,\n            scaleDivTop,\n            scaleDivRight,\n            scaleDivBottom;\n\n        if (this._scaleDivInfo) {\n            scaleDivLeft   = this._scaleDivInfo.left;\n            scaleDivTop    = this._scaleDivInfo.top;\n            scaleDivRight  = this._scaleDivInfo.right;\n            scaleDivBottom = this._scaleDivInfo.bottom;\n\n            if ((imgWidth + imagePos.left) < scaleDivRight) {\n                scaleDivRight = imgWidth + imagePos.left;\n            }\n\n            if ((imgHeight + imagePos.top) < scaleDivBottom) {\n                scaleDivBottom = imgHeight + imagePos.top;\n            }\n\n        } else {\n            scaleDivLeft   = scaleDivPos.left;\n            scaleDivTop    = scaleDivPos.top;\n            scaleDivRight  = this.$imageScale.width() + scaleDivLeft;\n            scaleDivBottom = this.$imageScale.height() + scaleDivTop;\n        }\n\n        if (this._scaleDivInfo) {\n            // See whether the cursor is no longer inside the hidden scale div.\n            // If so, show it again.\n            if ((offsetX < scaleDivLeft || offsetX > scaleDivRight) ||\n                    (offsetY < scaleDivTop || offsetY > scaleDivBottom)) {\n                this._scaleDivInfo = null;\n                this.$imageScale.show();\n            }\n        } else if ((offsetX >= scaleDivLeft && offsetX <= scaleDivRight) &&\n                (offsetY >= scaleDivTop && offsetY <= scaleDivBottom)) {\n            // Handle mouse inside image scale div.\n            // But hide it only if the pixel under mouse is also in the image.\n            if (offsetX < (imagePos.left + imgWidth) &&\n                    offsetY < (imagePos.top + imgHeight)) {\n                // Remember image scale div coordinates before hiding it.\n                this._scaleDivInfo = {left: scaleDivPos.left,\n                    top: scaleDivPos.top,\n                    right: scaleDivRight,\n                    bottom: scaleDivBottom};\n                this.$imageScale.hide();\n            }\n        }\n    };\n\n    /**\n     * View Interface functions\n     */\n\n    /*\n     * Retrieves the file object for this view\n     * return {!File} the file object for this view\n     */\n    ImageView.prototype.getFile = function () {\n        return this.file;\n    };\n\n    /*\n     * Updates the layout of the view\n     */\n    ImageView.prototype.updateLayout = function () {\n        this._hideGuidesAndTip();\n\n        var $container = this.$el.parent();\n\n        var pos = $container.position(),\n            iWidth = $container.innerWidth(),\n            iHeight = $container.innerHeight(),\n            oWidth = $container.outerWidth(),\n            oHeight = $container.outerHeight();\n\n        // $view is \"position:absolute\" so\n        //  we have to update the height, width and position\n        this.$el.css({top: pos.top + ((oHeight - iHeight) / 2),\n            left: pos.left + ((oWidth - iWidth) / 2),\n            width: iWidth,\n            height: iHeight});\n        this._updateScale();\n    };\n\n    /*\n     * Destroys the view\n     */\n    ImageView.prototype.destroy = function () {\n        delete _viewers[this.file.fullPath];\n        DocumentManager.off(\".ImageView\");\n        this.$image.off(\".ImageView\");\n        this.$el.remove();\n    };\n\n    /*\n     * Refreshes the image preview with what's on disk\n     */\n    ImageView.prototype.refresh = function () {\n        var noCacheUrl = this.$imagePreview.attr(\"src\"),\n            now = new Date().valueOf(),\n            index = noCacheUrl.indexOf(\"?\");\n\n        // strip the old param off\n        if (index > 0) {\n            noCacheUrl = noCacheUrl.slice(0, index);\n        }\n\n        // add a new param which will force chrome to\n        //  re-read the image from disk\n        noCacheUrl = noCacheUrl + \"?ver=\" + now;\n\n\n        // Update the DOM node with the src URL\n        this.$imagePreview.attr(\"src\", noCacheUrl);\n    };\n\n    /*\n     * Creates an image view object and adds it to the specified pane\n     * @param {!File} file - the file to create an image of\n     * @param {!Pane} pane - the pane in which to host the view\n     * @return {jQuery.Promise}\n     */\n    function _createImageView(file, pane) {\n        var view = pane.getViewForPath(file.fullPath);\n\n        if (view) {\n            pane.showView(view);\n        } else {\n            view = new ImageView(file, pane.$content);\n            pane.addView(view, true);\n        }\n        return new $.Deferred().resolve().promise();\n    }\n\n    /**\n     * Handles file system change events so we can refresh\n     *  image viewers for the files that changed on disk due to external editors\n     * @param {jQuery.event} event - event object\n     * @param {?File} file - file object that changed\n     * @param {Array.<FileSystemEntry>=} added If entry is a Directory, contains zero or more added children\n     * @param {Array.<FileSystemEntry>=} removed If entry is a Directory, contains zero or more removed children\n     */\n    function _handleFileSystemChange(event, entry, added, removed) {\n        // this may have been called because files were added\n        //  or removed to the file system.  We don't care about those\n        if (!entry || entry.isDirectory) {\n            return;\n        }\n\n        // Look for a viewer for the changed file\n        var viewer = _viewers[entry.fullPath];\n\n        // viewer found, call its refresh method\n        if (viewer) {\n            viewer.refresh();\n        }\n    }\n\n    /*\n     * Install an event listener to receive all file system change events\n     * so we can refresh the view when changes are made to the image in an external editor\n     */\n    FileSystem.on(\"change\", _handleFileSystemChange);\n\n    /*\n     * Initialization, register our view factory\n     */\n    MainViewFactory.registerViewFactory({\n        canOpenFile: function (fullPath) {\n            var lang = LanguageManager.getLanguageForPath(fullPath);\n            return (lang.getId() === \"image\");\n        },\n        openFile: function (file, pane) {\n            return _createImageView(file, pane);\n        }\n    });\n\n    /*\n     * This is for extensions that want to create a\n     * view factory based on ImageViewer\n     */\n    exports.ImageView = ImageView;\n});\n"],"file":"ImageViewer.js"}