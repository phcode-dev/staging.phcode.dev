{"version":3,"sources":["editor/EditorHelper/EditorPreferences.js"],"names":["define","require","exports","module","PreferencesManager","Strings","ValidationUtils","_","CLOSE_BRACKETS","CLOSE_TAGS","DRAG_DROP","HIGHLIGHT_MATCHES","LINEWISE_COPY_CUT","SCROLL_PAST_END","SHOW_CURSOR_SELECT","SHOW_LINE_NUMBERS","SMART_INDENT","SOFT_TABS","SPACE_UNITS","STYLE_ACTIVE_LINE","TAB_SIZE","UPPERCASE_COLORS","USE_TAB_CHAR","WORD_WRAP","AUTO_HIDE_SEARCH","INDENT_LINE_COMMENT","INPUT_STYLE","MIN_SPACE_UNITS","MIN_TAB_SIZE","DEFAULT_SPACE_UNITS","DEFAULT_TAB_SIZE","MAX_SPACE_UNITS","MAX_TAB_SIZE","LINE_NUMBER_GUTTER","DEBUG_INFO_GUTTER","LINE_NUMBER_GUTTER_PRIORITY","DEBUG_INFO_GUTTER_PRIORITY","CODE_FOLDING_GUTTER_PRIORITY","init","cmOptions","definePreference","description","DESCRIPTION_CLOSE_BRACKETS","whenOpening","whenClosing","indentTags","DESCRIPTION_CLOSE_TAGS","keys","dontCloseTags","type","DESCRIPTION_CLOSE_TAGS_DONT_CLOSE_TAGS","DESCRIPTION_CLOSE_TAGS_WHEN_OPENING","initial","DESCRIPTION_CLOSE_TAGS_WHEN_CLOSING","DESCRIPTION_CLOSE_TAGS_INDENT_TAGS","DESCRIPTION_DRAG_DROP_TEXT","DESCRIPTION_HIGHLIGHT_MATCHES","showToken","DESCRIPTION_HIGHLIGHT_MATCHES_SHOW_TOKEN","wordsOnly","DESCRIPTION_HIGHLIGHT_MATCHES_WORDS_ONLY","DESCRIPTION_LINEWISE_COPY_CUT","DESCRIPTION_SCROLL_PAST_END","DESCRIPTION_SHOW_CURSOR_WHEN_SELECTING","DESCRIPTION_SHOW_LINE_NUMBERS","DESCRIPTION_SMART_INDENT","DESCRIPTION_SOFT_TABS","validator","partialRight","isIntegerInRange","DESCRIPTION_SPACE_UNITS","DESCRIPTION_STYLE_ACTIVE_LINE","DESCRIPTION_TAB_SIZE","DESCRIPTION_UPPERCASE_COLORS","DESCRIPTION_USE_TAB_CHAR","DESCRIPTION_WORD_WRAP","DESCRIPTION_SEARCH_AUTOHIDE","DESCRIPTION_INDENT_LINE_COMMENT","DESCRIPTION_INPUT_STYLE"],"mappings":"AAyBAA,OAAO,SAAUC,QAASC,QAASC,QAE/B,MAAMC,mBAAqBH,QAAQ,kCAC/BI,QAAuBJ,QAAQ,WAC/BK,gBAAqBL,QAAQ,yBAC7BM,EAAqBN,QAAQ,qBAE3BO,eAAsB,gBACxBC,WAAsB,YACtBC,UAAsB,eACtBC,kBAAsB,mBACtBC,kBAAsB,kBACtBC,gBAAsB,gBACtBC,mBAAsB,0BACtBC,kBAAsB,kBACtBC,aAAsB,cACtBC,UAAsB,WACtBC,YAAsB,aACtBC,kBAAsB,kBACtBC,SAAsB,UACtBC,iBAAsB,kBACtBC,aAAsB,aACtBC,UAAsB,WACtBC,iBAAsB,iBACtBC,oBAAwB,oBACxBC,YAAsB,aAMpBC,gBAA2B,EAC7BC,aAA2B,EAC3BC,oBAA2B,EAC3BC,iBAA2B,EAC3BC,gBAA0B,GAC1BC,aAA0B,GAExBC,mBAAqB,yBACvBC,kBAAoB,4BACpBC,4BAAkC,IAClCC,2BAAkC,IAClCC,6BAAkC,IAmGtC,SAASC,KAAKC,WAEVA,UAAU/B,gBAAsB,oBAChC+B,UAAU9B,YAAsB,gBAChC8B,UAAU7B,WAAsB,WAChC6B,UAAU5B,mBAAsB,4BAChC4B,UAAU3B,mBAAsB,kBAChC2B,UAAU1B,iBAAsB,gBAChC0B,UAAUzB,oBAAsB,0BAChCyB,UAAUxB,mBAAsB,cAChCwB,UAAUvB,cAAsB,cAChCuB,UAAUrB,aAAsB,aAChCqB,UAAUpB,mBAAsB,kBAChCoB,UAAUnB,UAAsB,UAChCmB,UAAUjB,cAAsB,iBAChCiB,UAAUhB,WAAsB,eAChCgB,UAAUb,aAAsB,aAjHpCtB,mBAAmBoC,iBAAiBhC,eAAoB,WAAW,EAAM,CACrEiC,YAAapC,QAAQqC,6BAKzBtC,mBAAmBoC,iBAAiB/B,WAAoB,SAAU,CAAEkC,aAAa,EAAMC,aAAa,EAAMC,WAAY,IAAM,CACxHJ,YAAapC,QAAQyC,uBACrBC,KAAM,CACFC,cAAe,CACXC,KAAM,QACNR,YAAapC,QAAQ6C,wCAEzBP,YAAa,CACTM,KAAM,UACNR,YAAapC,QAAQ8C,oCACrBC,SAAS,GAEbR,YAAa,CACTK,KAAM,UACNR,YAAapC,QAAQgD,oCACrBD,SAAS,GAEbP,WAAY,CACRI,KAAM,QACNR,YAAapC,QAAQiD,uCAIjClD,mBAAmBoC,iBAAiB9B,UAAoB,WAAW,EAAM,CACrE+B,YAAapC,QAAQkD,6BAEzBnD,mBAAmBoC,iBAAiB7B,kBAAoB,WAAW,EAAO,CACtE8B,YAAapC,QAAQmD,8BACrBT,KAAM,CACFU,UAAW,CACPR,KAAM,UACNR,YAAapC,QAAQqD,yCACrBN,SAAS,GAEbO,UAAW,CACPV,KAAM,UACNR,YAAapC,QAAQuD,yCACrBR,SAAS,MAIrBhD,mBAAmBoC,iBAAiB5B,kBAAoB,WAAW,EAAM,CACrE6B,YAAapC,QAAQwD,gCAEzBzD,mBAAmBoC,iBAAiB3B,gBAAoB,WAAW,EAAO,CACtE4B,YAAapC,QAAQyD,8BAEzB1D,mBAAmBoC,iBAAiB1B,mBAAoB,WAAW,EAAO,CACtE2B,YAAapC,QAAQ0D,yCAEzB3D,mBAAmBoC,iBAAiBzB,kBAAoB,WAAW,EAAM,CACrE0B,YAAapC,QAAQ2D,gCAEzB5D,mBAAmBoC,iBAAiBxB,aAAoB,WAAW,EAAM,CACrEyB,YAAapC,QAAQ4D,2BAEzB7D,mBAAmBoC,iBAAiBvB,UAAoB,WAAW,EAAM,CACrEwB,YAAapC,QAAQ6D,wBAEzB9D,mBAAmBoC,iBAAiBtB,YAAoB,SA5EzB,EA4EwD,CACnFiD,UAAW5D,EAAE6D,aAAa9D,gBAAgB+D,iBA/Eb,EAIH,IA4E1B5B,YAAapC,QAAQiE,0BAEzBlE,mBAAmBoC,iBAAiBrB,kBAAoB,WAAW,EAAM,CACrEsB,YAAapC,QAAQkE,gCAEzBnE,mBAAmBoC,iBAAiBpB,SAAoB,SAlFzB,EAkFqD,CAChF+C,UAAW5D,EAAE6D,aAAa9D,gBAAgB+D,iBArFf,EAID,IAkF1B5B,YAAapC,QAAQmE,uBAEzBpE,mBAAmBoC,iBAAiBnB,iBAAoB,WAAW,EAAO,CACtEoB,YAAapC,QAAQoE,+BAEzBrE,mBAAmBoC,iBAAiBlB,aAAoB,WAAW,EAAO,CACtEmB,YAAapC,QAAQqE,2BAEzBtE,mBAAmBoC,iBAAiBjB,UAAoB,WAAW,EAAM,CACrEkB,YAAapC,QAAQsE,wBAGzBvE,mBAAmBoC,iBA3GO,iBA2G8B,WAAW,EAAM,CACrEC,YAAapC,QAAQuE,8BAGzBxE,mBAAmBoC,iBA9GS,oBA8G8B,WAAW,EAAO,CACxEC,YAAapC,QAAQwE,kCAEzBzE,mBAAmBoC,iBAAiBd,YAAc,SAAU,WAAY,CACpEe,YAAapC,QAAQyE,0BAsBzB5E,QAAQM,eAAsBA,eAC9BN,QAAQO,WAAsBA,WAC9BP,QAAQQ,UAAsBA,UAC9BR,QAAQS,kBAAsBA,kBAC9BT,QAAQU,kBAAsBA,kBAC9BV,QAAQW,gBAAsBA,gBAC9BX,QAAQY,mBAAsBA,mBAC9BZ,QAAQa,kBAAsBA,kBAC9Bb,QAAQc,aAAsBA,aAC9Bd,QAAQe,UAAsBA,UAC9Bf,QAAQgB,YAAsBA,YAC9BhB,QAAQiB,kBAAsBA,kBAC9BjB,QAAQkB,SAAsBA,SAC9BlB,QAAQmB,iBAAsBA,iBAC9BnB,QAAQoB,aAAsBA,aAC9BpB,QAAQqB,UAAsBA,UAC9BrB,QAAQsB,iBAzJkB,iBA0J1BtB,QAAQuB,oBAzJoB,oBA0J5BvB,QAAQwB,YAAsBA,YAE9BxB,QAAQyB,gBArJyB,EAsJjCzB,QAAQ0B,aArJuB,EAsJ/B1B,QAAQ2B,oBArJuB,EAsJ/B3B,QAAQ4B,iBArJuB,EAsJ/B5B,QAAQ6B,gBArJsB,GAsJ9B7B,QAAQ8B,aArJsB,GAuJ9B9B,QAAQ+B,mBAAqBA,mBAC7B/B,QAAQgC,kBAAqBA,kBAC7BhC,QAAQkC,2BApJ8B,IAqJtClC,QAAQiC,4BAtJ8B,IAuJtCjC,QAAQmC,6BArJ8B,IAuJtCnC,QAAQoC,KAAMA","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2012 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/**\n * Editor instance helpers for editor preferences. Only to be used from Editor.js.\n */\n\ndefine(function (require, exports, module) {\n\n    const PreferencesManager = require(\"preferences/PreferencesManager\"),\n        Strings              = require(\"strings\"),\n        ValidationUtils    = require(\"utils/ValidationUtils\"),\n        _                  = require(\"thirdparty/lodash\");\n\n    const CLOSE_BRACKETS      = \"closeBrackets\",\n        CLOSE_TAGS          = \"closeTags\",\n        DRAG_DROP           = \"dragDropText\",\n        HIGHLIGHT_MATCHES   = \"highlightMatches\",\n        LINEWISE_COPY_CUT   = \"lineWiseCopyCut\",\n        SCROLL_PAST_END     = \"scrollPastEnd\",\n        SHOW_CURSOR_SELECT  = \"showCursorWhenSelecting\",\n        SHOW_LINE_NUMBERS   = \"showLineNumbers\",\n        SMART_INDENT        = \"smartIndent\",\n        SOFT_TABS           = \"softTabs\",\n        SPACE_UNITS         = \"spaceUnits\",\n        STYLE_ACTIVE_LINE   = \"styleActiveLine\",\n        TAB_SIZE            = \"tabSize\",\n        UPPERCASE_COLORS    = \"uppercaseColors\",\n        USE_TAB_CHAR        = \"useTabChar\",\n        WORD_WRAP           = \"wordWrap\",\n        AUTO_HIDE_SEARCH    = \"autoHideSearch\",\n        INDENT_LINE_COMMENT   = \"indentLineComment\",\n        INPUT_STYLE         = \"inputStyle\";\n\n    /**\n     * Constants\n     * @type {number}\n     */\n    const MIN_SPACE_UNITS         =  1,\n        MIN_TAB_SIZE            =  1,\n        DEFAULT_SPACE_UNITS     =  4,\n        DEFAULT_TAB_SIZE        =  4,\n        MAX_SPACE_UNITS         = 10,\n        MAX_TAB_SIZE            = 10;\n\n    const LINE_NUMBER_GUTTER = \"CodeMirror-linenumbers\",\n        DEBUG_INFO_GUTTER = \"phoenix-debug-info-gutter\",\n        LINE_NUMBER_GUTTER_PRIORITY     = 100,\n        DEBUG_INFO_GUTTER_PRIORITY      = 500,\n        CODE_FOLDING_GUTTER_PRIORITY    = 1000;\n\n    PreferencesManager.definePreference(CLOSE_BRACKETS,     \"boolean\", true, {\n        description: Strings.DESCRIPTION_CLOSE_BRACKETS\n    });\n\n    // CodeMirror, html mode, set some tags do not close automatically.\n    // We do not initialize \"dontCloseTags\" because otherwise we would overwrite the default behavior of CodeMirror.\n    PreferencesManager.definePreference(CLOSE_TAGS,         \"object\", { whenOpening: true, whenClosing: true, indentTags: [] }, {\n        description: Strings.DESCRIPTION_CLOSE_TAGS,\n        keys: {\n            dontCloseTags: {\n                type: \"array\",\n                description: Strings.DESCRIPTION_CLOSE_TAGS_DONT_CLOSE_TAGS\n            },\n            whenOpening: {\n                type: \"boolean\",\n                description: Strings.DESCRIPTION_CLOSE_TAGS_WHEN_OPENING,\n                initial: true\n            },\n            whenClosing: {\n                type: \"boolean\",\n                description: Strings.DESCRIPTION_CLOSE_TAGS_WHEN_CLOSING,\n                initial: true\n            },\n            indentTags: {\n                type: \"array\",\n                description: Strings.DESCRIPTION_CLOSE_TAGS_INDENT_TAGS\n            }\n        }\n    });\n    PreferencesManager.definePreference(DRAG_DROP,          \"boolean\", true, {\n        description: Strings.DESCRIPTION_DRAG_DROP_TEXT\n    });\n    PreferencesManager.definePreference(HIGHLIGHT_MATCHES,  \"boolean\", false, {\n        description: Strings.DESCRIPTION_HIGHLIGHT_MATCHES,\n        keys: {\n            showToken: {\n                type: \"boolean\",\n                description: Strings.DESCRIPTION_HIGHLIGHT_MATCHES_SHOW_TOKEN,\n                initial: false\n            },\n            wordsOnly: {\n                type: \"boolean\",\n                description: Strings.DESCRIPTION_HIGHLIGHT_MATCHES_WORDS_ONLY,\n                initial: false\n            }\n        }\n    });\n    PreferencesManager.definePreference(LINEWISE_COPY_CUT,  \"boolean\", true, {\n        description: Strings.DESCRIPTION_LINEWISE_COPY_CUT\n    });\n    PreferencesManager.definePreference(SCROLL_PAST_END,    \"boolean\", false, {\n        description: Strings.DESCRIPTION_SCROLL_PAST_END\n    });\n    PreferencesManager.definePreference(SHOW_CURSOR_SELECT, \"boolean\", false, {\n        description: Strings.DESCRIPTION_SHOW_CURSOR_WHEN_SELECTING\n    });\n    PreferencesManager.definePreference(SHOW_LINE_NUMBERS,  \"boolean\", true, {\n        description: Strings.DESCRIPTION_SHOW_LINE_NUMBERS\n    });\n    PreferencesManager.definePreference(SMART_INDENT,       \"boolean\", true, {\n        description: Strings.DESCRIPTION_SMART_INDENT\n    });\n    PreferencesManager.definePreference(SOFT_TABS,          \"boolean\", true, {\n        description: Strings.DESCRIPTION_SOFT_TABS\n    });\n    PreferencesManager.definePreference(SPACE_UNITS,        \"number\", DEFAULT_SPACE_UNITS, {\n        validator: _.partialRight(ValidationUtils.isIntegerInRange, MIN_SPACE_UNITS, MAX_SPACE_UNITS),\n        description: Strings.DESCRIPTION_SPACE_UNITS\n    });\n    PreferencesManager.definePreference(STYLE_ACTIVE_LINE,  \"boolean\", true, {\n        description: Strings.DESCRIPTION_STYLE_ACTIVE_LINE\n    });\n    PreferencesManager.definePreference(TAB_SIZE,           \"number\", DEFAULT_TAB_SIZE, {\n        validator: _.partialRight(ValidationUtils.isIntegerInRange, MIN_TAB_SIZE, MAX_TAB_SIZE),\n        description: Strings.DESCRIPTION_TAB_SIZE\n    });\n    PreferencesManager.definePreference(UPPERCASE_COLORS,   \"boolean\", false, {\n        description: Strings.DESCRIPTION_UPPERCASE_COLORS\n    });\n    PreferencesManager.definePreference(USE_TAB_CHAR,       \"boolean\", false, {\n        description: Strings.DESCRIPTION_USE_TAB_CHAR\n    });\n    PreferencesManager.definePreference(WORD_WRAP,          \"boolean\", true, {\n        description: Strings.DESCRIPTION_WORD_WRAP\n    });\n\n    PreferencesManager.definePreference(AUTO_HIDE_SEARCH,   \"boolean\", true, {\n        description: Strings.DESCRIPTION_SEARCH_AUTOHIDE\n    });\n\n    PreferencesManager.definePreference(INDENT_LINE_COMMENT,  \"boolean\", false, {\n        description: Strings.DESCRIPTION_INDENT_LINE_COMMENT\n    });\n    PreferencesManager.definePreference(INPUT_STYLE,  \"string\", \"textarea\", {\n        description: Strings.DESCRIPTION_INPUT_STYLE\n    });\n\n    function init(cmOptions) {\n        // Mappings from Brackets preferences to CodeMirror options\n        cmOptions[CLOSE_BRACKETS]     = \"autoCloseBrackets\";\n        cmOptions[CLOSE_TAGS]         = \"autoCloseTags\";\n        cmOptions[DRAG_DROP]          = \"dragDrop\";\n        cmOptions[HIGHLIGHT_MATCHES]  = \"highlightSelectionMatches\";\n        cmOptions[LINEWISE_COPY_CUT]  = \"lineWiseCopyCut\";\n        cmOptions[SCROLL_PAST_END]    = \"scrollPastEnd\";\n        cmOptions[SHOW_CURSOR_SELECT] = \"showCursorWhenSelecting\";\n        cmOptions[SHOW_LINE_NUMBERS]  = \"lineNumbers\";\n        cmOptions[SMART_INDENT]       = \"smartIndent\";\n        cmOptions[SPACE_UNITS]        = \"indentUnit\";\n        cmOptions[STYLE_ACTIVE_LINE]  = \"styleActiveLine\";\n        cmOptions[TAB_SIZE]           = \"tabSize\";\n        cmOptions[USE_TAB_CHAR]       = \"indentWithTabs\";\n        cmOptions[WORD_WRAP]          = \"lineWrapping\";\n        cmOptions[INPUT_STYLE]        = \"inputStyle\";\n    }\n\n    exports.CLOSE_BRACKETS      = CLOSE_BRACKETS;\n    exports.CLOSE_TAGS          = CLOSE_TAGS;\n    exports.DRAG_DROP           = DRAG_DROP;\n    exports.HIGHLIGHT_MATCHES   = HIGHLIGHT_MATCHES;\n    exports.LINEWISE_COPY_CUT   = LINEWISE_COPY_CUT;\n    exports.SCROLL_PAST_END     = SCROLL_PAST_END;\n    exports.SHOW_CURSOR_SELECT  = SHOW_CURSOR_SELECT;\n    exports.SHOW_LINE_NUMBERS   = SHOW_LINE_NUMBERS;\n    exports.SMART_INDENT        = SMART_INDENT;\n    exports.SOFT_TABS           = SOFT_TABS;\n    exports.SPACE_UNITS         = SPACE_UNITS;\n    exports.STYLE_ACTIVE_LINE   = STYLE_ACTIVE_LINE;\n    exports.TAB_SIZE            = TAB_SIZE;\n    exports.UPPERCASE_COLORS    = UPPERCASE_COLORS;\n    exports.USE_TAB_CHAR        = USE_TAB_CHAR;\n    exports.WORD_WRAP           = WORD_WRAP;\n    exports.AUTO_HIDE_SEARCH    = AUTO_HIDE_SEARCH;\n    exports.INDENT_LINE_COMMENT = INDENT_LINE_COMMENT;\n    exports.INPUT_STYLE         = INPUT_STYLE;\n\n    exports.MIN_SPACE_UNITS         =  MIN_SPACE_UNITS;\n    exports.MIN_TAB_SIZE            =  MIN_TAB_SIZE;\n    exports.DEFAULT_SPACE_UNITS     =  DEFAULT_SPACE_UNITS;\n    exports.DEFAULT_TAB_SIZE        =  DEFAULT_TAB_SIZE;\n    exports.MAX_SPACE_UNITS         = MAX_SPACE_UNITS;\n    exports.MAX_TAB_SIZE            = MAX_TAB_SIZE;\n\n    exports.LINE_NUMBER_GUTTER = LINE_NUMBER_GUTTER;\n    exports.DEBUG_INFO_GUTTER  = DEBUG_INFO_GUTTER;\n    exports.DEBUG_INFO_GUTTER_PRIORITY      = DEBUG_INFO_GUTTER_PRIORITY;\n    exports.LINE_NUMBER_GUTTER_PRIORITY     = LINE_NUMBER_GUTTER_PRIORITY;\n    exports.CODE_FOLDING_GUTTER_PRIORITY    = CODE_FOLDING_GUTTER_PRIORITY;\n\n    exports.init =init;\n});\n"],"file":"EditorPreferences.js"}