{"version":3,"sources":["worker/extensions-worker-thread.js"],"names":["urlParams","URLSearchParams","location","search","debugMode","get","baseURL","origin","pathname","substring","lastIndexOf","self","Phoenix","EventDispatcher","WorkerComm","console","log","info"],"mappings":"AAuBA,MAAMA,UAAY,IAAIC,gBAAgBC,SAASC,QACzCC,UAAwC,SAA3BJ,UAAUK,IAAI,SAEjC,IAAIC,QAAUJ,SAASK,OAAOL,SAASM,SAEvCF,SADAA,QAAUA,QAAQG,UAAU,EAAGH,QAAQI,YAAY,OACjCD,UAAU,EAAGH,QAAQI,YAAY,KAAO,GAE1DC,KAAKC,QAAU,CAEXN,QAASA,mBAGDO,oBAAqB,wCACrBC,eAAgB,kBAE5BC,QAAQC,IAAI,2CAA4CZ,WAEpDA,YACAW,QAAQC,IAAMD,QAAQE,KAAO","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2015 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/*global virtualfs*/\n\nconst urlParams = new URLSearchParams(location.search);\nconst debugMode = (urlParams.get('debug') === 'true');\n// http://localhost:8000/src/worker/extensions-worker-thread.js\nlet baseURL = location.origin+location.pathname;\nbaseURL = baseURL.substring(0, baseURL.lastIndexOf('/')); // http://localhost:8000/src/worker\nbaseURL = baseURL.substring(0, baseURL.lastIndexOf('/') + 1); // http://localhost:8000/src/\n// eslint-disable-next-line no-unused-vars\nself.Phoenix = {\n    // exported to be used by extensions that extend the indexing worker\n    baseURL: baseURL\n};\n\nimport * as EventDispatcher from '../utils/EventDispatcher.js';\nimport * as WorkerComm from './WorkerComm.js';\n\nconsole.log(\"Extensions worker loaded in debug mode: \", debugMode);\n\nif(!debugMode){\n    console.log = console.info = function () {\n        // swallow logs\n    };\n}\n\n// global variables now available are: virtualfs, fs, WorkerComm\n"],"file":"extensions-worker-thread.js"}