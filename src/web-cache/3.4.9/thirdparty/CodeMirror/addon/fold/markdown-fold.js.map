{"version":3,"sources":["thirdparty/CodeMirror/addon/fold/markdown-fold.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","registerHelper","cm","start","maxDepth","isHeader","lineNo","tokentype","getTokenTypeAt","Pos","test","headerLevel","line","nextLine","match","length","firstLine","getLine","level","lastLineNo","lastLine","end","nextNextLine","from","to"],"mappings":"CAGA,SAAUA,KACc,iBAAXC,SAAwC,iBAAVC,OACvCF,IAAIG,QAAQ,yBACY,mBAAVC,QAAwBA,OAAOC,IAC7CD,OAAO,CAAC,wBAAyBJ,KAEjCA,IAAIM,YANR,CAOG,SAASA,YACZ,aAEAA,WAAWC,eAAe,OAAQ,WAAY,SAASC,GAAIC,OACzD,IAAIC,SAAW,IAEf,SAASC,SAASC,QAChB,IAAIC,UAAYL,GAAGM,eAAeR,WAAWS,IAAIH,OAAQ,IACzD,OAAOC,WAAa,aAAaG,KAAKH,WAGxC,SAASI,YAAYL,OAAQM,KAAMC,UACjC,IAAIC,MAAQF,MAAQA,KAAKE,MAAM,OAC/B,OAAIA,OAAST,SAASC,QAAgBQ,MAAM,GAAGC,QAC/CD,MAAQD,UAAYA,SAASC,MAAM,iBACtBT,SAASC,OAAS,GAA0B,KAAfO,SAAS,GAAY,EAAI,EAC5DT,SAGT,IAAIY,UAAYd,GAAGe,QAAQd,MAAMS,MAAOC,SAAWX,GAAGe,QAAQd,MAAMS,KAAO,GACvEM,MAAQP,YAAYR,MAAMS,KAAMI,UAAWH,UAC/C,GAAIK,QAAUd,SAAd,CAIA,IAFA,IAAIe,WAAajB,GAAGkB,WAChBC,IAAMlB,MAAMS,KAAMU,aAAepB,GAAGe,QAAQI,IAAM,GAC/CA,IAAMF,cACPR,YAAYU,IAAM,EAAGR,SAAUS,eAAiBJ,UAClDG,IACFR,SAAWS,aACXA,aAAepB,GAAGe,QAAQI,IAAM,GAGlC,MAAO,CACLE,KAAMvB,WAAWS,IAAIN,MAAMS,KAAMI,UAAUD,QAC3CS,GAAIxB,WAAWS,IAAIY,IAAKnB,GAAGe,QAAQI,KAAKN","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.registerHelper(\"fold\", \"markdown\", function(cm, start) {\n  var maxDepth = 100;\n\n  function isHeader(lineNo) {\n    var tokentype = cm.getTokenTypeAt(CodeMirror.Pos(lineNo, 0));\n    return tokentype && /\\bheader\\b/.test(tokentype);\n  }\n\n  function headerLevel(lineNo, line, nextLine) {\n    var match = line && line.match(/^#+/);\n    if (match && isHeader(lineNo)) return match[0].length;\n    match = nextLine && nextLine.match(/^[=\\-]+\\s*$/);\n    if (match && isHeader(lineNo + 1)) return nextLine[0] == \"=\" ? 1 : 2;\n    return maxDepth;\n  }\n\n  var firstLine = cm.getLine(start.line), nextLine = cm.getLine(start.line + 1);\n  var level = headerLevel(start.line, firstLine, nextLine);\n  if (level === maxDepth) return undefined;\n\n  var lastLineNo = cm.lastLine();\n  var end = start.line, nextNextLine = cm.getLine(end + 2);\n  while (end < lastLineNo) {\n    if (headerLevel(end + 1, nextLine, nextNextLine) <= level) break;\n    ++end;\n    nextLine = nextNextLine;\n    nextNextLine = cm.getLine(end + 2);\n  }\n\n  return {\n    from: CodeMirror.Pos(start.line, firstLine.length),\n    to: CodeMirror.Pos(end, cm.getLine(end).length)\n  };\n});\n\n});\n"],"file":"markdown-fold.js"}