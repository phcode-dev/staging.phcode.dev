{"version":3,"sources":["thirdparty/CodeMirror/mode/mscgen/mscgen.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","languages","mscgen","keywords","options","constants","attributes","brackets","arcsWords","arcsOthers","singlecomment","operators","xu","msgenny","wordRegexpBoundary","pWords","RegExp","join","wordRegexp","startStateFn","inComment","inString","inAttributeList","inScript","copyStateFn","pState","produceTokenFunction","pConfig","pStream","match","skipToEnd","next","defineMode","_","modeConfig","language","startState","copyState","token","lineComment","blockCommentStart","blockCommentEnd","defineMIME","name"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// mode(s) for the sequence chart dsl's mscgen, x√π and msgenny\n// For more information on mscgen, see the site of the original author:\n// http://www.mcternan.me.uk/mscgen\n//\n// This mode for mscgen and the two derivative languages were\n// originally made for use in the mscgen_js interpreter\n// (https://sverweij.github.io/mscgen_js)\n\n(function(mod) {\n  if ( typeof exports == \"object\" && typeof module == \"object\")// CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if ( typeof define == \"function\" && define.amd)// AMD\n    define([\"../../lib/codemirror\"], mod);\n  else// Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var languages = {\n    mscgen: {\n      \"keywords\" : [\"msc\"],\n      \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\"],\n      \"constants\" : [\"true\", \"false\", \"on\", \"off\"],\n      \"attributes\" : [\"label\", \"idurl\", \"id\", \"url\", \"linecolor\", \"linecolour\", \"textcolor\", \"textcolour\", \"textbgcolor\", \"textbgcolour\", \"arclinecolor\", \"arclinecolour\", \"arctextcolor\", \"arctextcolour\", \"arctextbgcolor\", \"arctextbgcolour\", \"arcskip\"],\n      \"brackets\" : [\"\\\\{\", \"\\\\}\"], // [ and  ] are brackets too, but these get handled in with lists\n      \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\"],\n      \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n      \"singlecomment\" : [\"//\", \"#\"],\n      \"operators\" : [\"=\"]\n    },\n    xu: {\n      \"keywords\" : [\"msc\", \"xu\"],\n      \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\", \"wordwrapentities\", \"watermark\"],\n      \"constants\" : [\"true\", \"false\", \"on\", \"off\", \"auto\"],\n      \"attributes\" : [\"label\", \"idurl\", \"id\", \"url\", \"linecolor\", \"linecolour\", \"textcolor\", \"textcolour\", \"textbgcolor\", \"textbgcolour\", \"arclinecolor\", \"arclinecolour\", \"arctextcolor\", \"arctextcolour\", \"arctextbgcolor\", \"arctextbgcolour\", \"arcskip\", \"title\", \"deactivate\", \"activate\", \"activation\"],\n      \"brackets\" : [\"\\\\{\", \"\\\\}\"],  // [ and  ] are brackets too, but these get handled in with lists\n      \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\", \"alt\", \"else\", \"opt\", \"break\", \"par\", \"seq\", \"strict\", \"neg\", \"critical\", \"ignore\", \"consider\", \"assert\", \"loop\", \"ref\", \"exc\"],\n      \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n      \"singlecomment\" : [\"//\", \"#\"],\n      \"operators\" : [\"=\"]\n    },\n    msgenny: {\n      \"keywords\" : null,\n      \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\", \"wordwrapentities\", \"watermark\"],\n      \"constants\" : [\"true\", \"false\", \"on\", \"off\", \"auto\"],\n      \"attributes\" : null,\n      \"brackets\" : [\"\\\\{\", \"\\\\}\"],\n      \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\", \"alt\", \"else\", \"opt\", \"break\", \"par\", \"seq\", \"strict\", \"neg\", \"critical\", \"ignore\", \"consider\", \"assert\", \"loop\", \"ref\", \"exc\"],\n      \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n      \"singlecomment\" : [\"//\", \"#\"],\n      \"operators\" : [\"=\"]\n    }\n  }\n\n  CodeMirror.defineMode(\"mscgen\", function(_, modeConfig) {\n    var language = languages[modeConfig && modeConfig.language || \"mscgen\"]\n    return {\n      startState: startStateFn,\n      copyState: copyStateFn,\n      token: produceTokenFunction(language),\n      lineComment : \"#\",\n      blockCommentStart : \"/*\",\n      blockCommentEnd : \"*/\"\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-mscgen\", \"mscgen\");\n  CodeMirror.defineMIME(\"text/x-xu\", {name: \"mscgen\", language: \"xu\"});\n  CodeMirror.defineMIME(\"text/x-msgenny\", {name: \"mscgen\", language: \"msgenny\"});\n\n  function wordRegexpBoundary(pWords) {\n    return new RegExp(\"^\\\\b(?:\" + pWords.join(\"|\") + \")\\\\b\", \"i\");\n  }\n\n  function wordRegexp(pWords) {\n    return new RegExp(\"^(?:\" + pWords.join(\"|\") + \")\", \"i\");\n  }\n\n  function startStateFn() {\n    return {\n      inComment : false,\n      inString : false,\n      inAttributeList : false,\n      inScript : false\n    };\n  }\n\n  function copyStateFn(pState) {\n    return {\n      inComment : pState.inComment,\n      inString : pState.inString,\n      inAttributeList : pState.inAttributeList,\n      inScript : pState.inScript\n    };\n  }\n\n  function produceTokenFunction(pConfig) {\n\n    return function(pStream, pState) {\n      if (pStream.match(wordRegexp(pConfig.brackets), true, true)) {\n        return \"bracket\";\n      }\n      /* comments */\n      if (!pState.inComment) {\n        if (pStream.match(/\\/\\*[^\\*\\/]*/, true, true)) {\n          pState.inComment = true;\n          return \"comment\";\n        }\n        if (pStream.match(wordRegexp(pConfig.singlecomment), true, true)) {\n          pStream.skipToEnd();\n          return \"comment\";\n        }\n      }\n      if (pState.inComment) {\n        if (pStream.match(/[^\\*\\/]*\\*\\//, true, true))\n          pState.inComment = false;\n        else\n          pStream.skipToEnd();\n        return \"comment\";\n      }\n      /* strings */\n      if (!pState.inString && pStream.match(/\\\"(\\\\\\\"|[^\\\"])*/, true, true)) {\n        pState.inString = true;\n        return \"string\";\n      }\n      if (pState.inString) {\n        if (pStream.match(/[^\\\"]*\\\"/, true, true))\n          pState.inString = false;\n        else\n          pStream.skipToEnd();\n        return \"string\";\n      }\n      /* keywords & operators */\n      if (!!pConfig.keywords && pStream.match(wordRegexpBoundary(pConfig.keywords), true, true))\n        return \"keyword\";\n\n      if (pStream.match(wordRegexpBoundary(pConfig.options), true, true))\n        return \"keyword\";\n\n      if (pStream.match(wordRegexpBoundary(pConfig.arcsWords), true, true))\n        return \"keyword\";\n\n      if (pStream.match(wordRegexp(pConfig.arcsOthers), true, true))\n        return \"keyword\";\n\n      if (!!pConfig.operators && pStream.match(wordRegexp(pConfig.operators), true, true))\n        return \"operator\";\n\n      if (!!pConfig.constants && pStream.match(wordRegexp(pConfig.constants), true, true))\n        return \"variable\";\n\n      /* attribute lists */\n      if (!pConfig.inAttributeList && !!pConfig.attributes && pStream.match('[', true, true)) {\n        pConfig.inAttributeList = true;\n        return \"bracket\";\n      }\n      if (pConfig.inAttributeList) {\n        if (pConfig.attributes !== null && pStream.match(wordRegexpBoundary(pConfig.attributes), true, true)) {\n          return \"attribute\";\n        }\n        if (pStream.match(']', true, true)) {\n          pConfig.inAttributeList = false;\n          return \"bracket\";\n        }\n      }\n\n      pStream.next();\n      return \"base\";\n    };\n  }\n\n});\n"],"file":"mscgen.js"}