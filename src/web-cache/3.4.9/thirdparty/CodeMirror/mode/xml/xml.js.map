{"version":3,"sources":["thirdparty/CodeMirror/mode/xml/xml.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","htmlConfig","autoSelfClosers","area","base","br","col","command","embed","frame","hr","img","input","keygen","link","meta","param","source","track","wbr","menuitem","implicitlyClosed","dd","li","optgroup","option","p","rp","rt","tbody","td","tfoot","th","tr","contextGrabbers","dt","address","article","aside","blockquote","dir","div","dl","fieldset","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","menu","nav","ol","pre","section","table","ul","thead","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","indentUnit","config","defaults","htmlMode","type","setStyle","prop","inText","stream","state","chain","parser","tokenize","ch","next","ok","eat","match","inBlock","eatWhile","doctype","inTag","baseState","tagName","tagStart","test","inAttribute","stringStartCol","column","quote","closure","eol","isInAttribute","style","terminator","depth","lower","toLowerCase","Context","startOfLine","this","prev","context","indent","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","startState","baseIndent","token","sol","indentation","eatSpace","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","name","close","xmlCurrentContext","cx","push","reverse","defineMIME","mimeModes"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function lower(tagName) {\n    return tagName && tagName.toLowerCase();\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(lower(parentTagName)) ||\n          !config.contextGrabbers[lower(parentTagName)].hasOwnProperty(lower(nextTagName))) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(lower(state.context.tagName)))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(lower(tagName))) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(lower(context.tagName))) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[lower(context.tagName)];\n          if (grabbers && grabbers.hasOwnProperty(lower(tagAfter[2])))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n"],"file":"xml.js"}