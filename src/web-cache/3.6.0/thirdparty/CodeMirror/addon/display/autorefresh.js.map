{"version":3,"sources":["thirdparty/CodeMirror/addon/display/autorefresh.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","startListening","cm","state","check","display","wrapper","offsetHeight","stopListening","lastWrapHeight","clientHeight","refresh","timeout","setTimeout","delay","hurry","clearTimeout","on","window","_cm","off","defineOption","val","autoRefresh"],"mappings":"CAGA,SAAUA,KACc,iBAAXC,SAAwC,iBAAVC,OACvCF,IAAIG,QAAQ,yBACY,mBAAVC,QAAwBA,OAAOC,IAC7CD,OAAO,CAAC,wBAAyBJ,KAEjCA,IAAIM,YANR,CAOG,SAASA,YACV,aAWA,SAASC,eAAeC,GAAIC,OAC1B,SAASC,QACHF,GAAGG,QAAQC,QAAQC,cACrBC,cAAcN,GAAIC,OACdD,GAAGG,QAAQI,gBAAkBP,GAAGG,QAAQC,QAAQI,cAClDR,GAAGS,WAELR,MAAMS,QAAUC,WAAWT,MAAOD,MAAMW,OAG5CX,MAAMS,QAAUC,WAAWT,MAAOD,MAAMW,OACxCX,MAAMY,MAAQ,WACZC,aAAab,MAAMS,SACnBT,MAAMS,QAAUC,WAAWT,MAAO,KAEpCJ,WAAWiB,GAAGC,OAAQ,UAAWf,MAAMY,OACvCf,WAAWiB,GAAGC,OAAQ,QAASf,MAAMY,OAGvC,SAASP,cAAcW,IAAKhB,OAC1Ba,aAAab,MAAMS,SACnBZ,WAAWoB,IAAIF,OAAQ,UAAWf,MAAMY,OACxCf,WAAWoB,IAAIF,OAAQ,QAASf,MAAMY,OA/BxCf,WAAWqB,aAAa,eAAe,EAAO,SAASnB,GAAIoB,KACrDpB,GAAGC,MAAMoB,cACXf,cAAcN,GAAIA,GAAGC,MAAMoB,aAC3BrB,GAAGC,MAAMoB,YAAc,MAErBD,KAA0C,GAAnCpB,GAAGG,QAAQC,QAAQC,cAC5BN,eAAeC,GAAIA,GAAGC,MAAMoB,YAAc,CAACT,MAAOQ,IAAIR,OAAS","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n\n  CodeMirror.defineOption(\"autoRefresh\", false, function(cm, val) {\n    if (cm.state.autoRefresh) {\n      stopListening(cm, cm.state.autoRefresh)\n      cm.state.autoRefresh = null\n    }\n    if (val && cm.display.wrapper.offsetHeight == 0)\n      startListening(cm, cm.state.autoRefresh = {delay: val.delay || 250})\n  })\n\n  function startListening(cm, state) {\n    function check() {\n      if (cm.display.wrapper.offsetHeight) {\n        stopListening(cm, state)\n        if (cm.display.lastWrapHeight != cm.display.wrapper.clientHeight)\n          cm.refresh()\n      } else {\n        state.timeout = setTimeout(check, state.delay)\n      }\n    }\n    state.timeout = setTimeout(check, state.delay)\n    state.hurry = function() {\n      clearTimeout(state.timeout)\n      state.timeout = setTimeout(check, 50)\n    }\n    CodeMirror.on(window, \"mouseup\", state.hurry)\n    CodeMirror.on(window, \"keyup\", state.hurry)\n  }\n\n  function stopListening(_cm, state) {\n    clearTimeout(state.timeout)\n    CodeMirror.off(window, \"mouseup\", state.hurry)\n    CodeMirror.off(window, \"keyup\", state.hurry)\n  }\n});\n"],"file":"autorefresh.js"}