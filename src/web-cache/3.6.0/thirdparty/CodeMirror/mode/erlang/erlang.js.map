{"version":3,"sources":["thirdparty/CodeMirror/mode/erlang/erlang.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMIME","defineMode","cmCfg","typeWords","keywordWords","separatorRE","separatorWords","operatorAtomWords","operatorSymbolRE","operatorSymbolWords","openParenRE","openParenWords","closeParenRE","closeParenWords","guardWords","bifWords","anumRE","escapesRE","tokenizer","stream","state","in_string","doubleQuote","rval","in_atom","singleQuote","eatSpace","peekToken","match","is_member","current","ch","next","skipToEnd","eatWhile","test","w","token","lookahead","digitRE","radixRE","eat","backUp","nongreedy","greedy","re","words","length","peek","quote","quoteChar","escapeChar","eol","m","element","list","indexOf","type","pushToken","realToken","aToken","tok","col","ind","typ","column","indent","indentation","fakeToken","depth","len","tokenStack","dep","maybe_drop_pre","maybe_drop_post","s","last","pop","push","slice","d","g","i","e","r","E","stack","tt","tokens","ss","concat","indenter","textAfter","t","unit","indentUnit","wordAfter","wordafter","currT","prevT","Pass","getToken","postcommaToken","truthy","defaultToken","str","index","objs","getTokenIndex","stop","oper","propname","propvals","x","startState","lineComment"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n/*jshint unused:true, eqnull:true, curly:true, bitwise:true */\n/*jshint undef:true, latedef:true, trailing:true */\n/*global CodeMirror:true */\n\n// erlang mode.\n// tokenizer -> token types -> CodeMirror styles\n// tokenizer maintains a parse stack\n// indenter uses the parse stack\n\n// TODO indenter:\n//   bit syntax\n//   old guard/bif/conversion clashes (e.g. \"float/1\")\n//   type/spec/opaque\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMIME(\"text/x-erlang\", \"erlang\");\n\nCodeMirror.defineMode(\"erlang\", function(cmCfg) {\n  \"use strict\";\n\n/////////////////////////////////////////////////////////////////////////////\n// constants\n\n  var typeWords = [\n    \"-type\", \"-spec\", \"-export_type\", \"-opaque\"];\n\n  var keywordWords = [\n    \"after\",\"begin\",\"catch\",\"case\",\"cond\",\"end\",\"fun\",\"if\",\n    \"let\",\"of\",\"query\",\"receive\",\"try\",\"when\"];\n\n  var separatorRE    = /[\\->,;]/;\n  var separatorWords = [\n    \"->\",\";\",\",\"];\n\n  var operatorAtomWords = [\n    \"and\",\"andalso\",\"band\",\"bnot\",\"bor\",\"bsl\",\"bsr\",\"bxor\",\n    \"div\",\"not\",\"or\",\"orelse\",\"rem\",\"xor\"];\n\n  var operatorSymbolRE    = /[\\+\\-\\*\\/<>=\\|:!]/;\n  var operatorSymbolWords = [\n    \"=\",\"+\",\"-\",\"*\",\"/\",\">\",\">=\",\"<\",\"=<\",\"=:=\",\"==\",\"=/=\",\"/=\",\"||\",\"<-\",\"!\"];\n\n  var openParenRE    = /[<\\(\\[\\{]/;\n  var openParenWords = [\n    \"<<\",\"(\",\"[\",\"{\"];\n\n  var closeParenRE    = /[>\\)\\]\\}]/;\n  var closeParenWords = [\n    \"}\",\"]\",\")\",\">>\"];\n\n  var guardWords = [\n    \"is_atom\",\"is_binary\",\"is_bitstring\",\"is_boolean\",\"is_float\",\n    \"is_function\",\"is_integer\",\"is_list\",\"is_number\",\"is_pid\",\n    \"is_port\",\"is_record\",\"is_reference\",\"is_tuple\",\n    \"atom\",\"binary\",\"bitstring\",\"boolean\",\"function\",\"integer\",\"list\",\n    \"number\",\"pid\",\"port\",\"record\",\"reference\",\"tuple\"];\n\n  var bifWords = [\n    \"abs\",\"adler32\",\"adler32_combine\",\"alive\",\"apply\",\"atom_to_binary\",\n    \"atom_to_list\",\"binary_to_atom\",\"binary_to_existing_atom\",\n    \"binary_to_list\",\"binary_to_term\",\"bit_size\",\"bitstring_to_list\",\n    \"byte_size\",\"check_process_code\",\"contact_binary\",\"crc32\",\n    \"crc32_combine\",\"date\",\"decode_packet\",\"delete_module\",\n    \"disconnect_node\",\"element\",\"erase\",\"exit\",\"float\",\"float_to_list\",\n    \"garbage_collect\",\"get\",\"get_keys\",\"group_leader\",\"halt\",\"hd\",\n    \"integer_to_list\",\"internal_bif\",\"iolist_size\",\"iolist_to_binary\",\n    \"is_alive\",\"is_atom\",\"is_binary\",\"is_bitstring\",\"is_boolean\",\n    \"is_float\",\"is_function\",\"is_integer\",\"is_list\",\"is_number\",\"is_pid\",\n    \"is_port\",\"is_process_alive\",\"is_record\",\"is_reference\",\"is_tuple\",\n    \"length\",\"link\",\"list_to_atom\",\"list_to_binary\",\"list_to_bitstring\",\n    \"list_to_existing_atom\",\"list_to_float\",\"list_to_integer\",\n    \"list_to_pid\",\"list_to_tuple\",\"load_module\",\"make_ref\",\"module_loaded\",\n    \"monitor_node\",\"node\",\"node_link\",\"node_unlink\",\"nodes\",\"notalive\",\n    \"now\",\"open_port\",\"pid_to_list\",\"port_close\",\"port_command\",\n    \"port_connect\",\"port_control\",\"pre_loaded\",\"process_flag\",\n    \"process_info\",\"processes\",\"purge_module\",\"put\",\"register\",\n    \"registered\",\"round\",\"self\",\"setelement\",\"size\",\"spawn\",\"spawn_link\",\n    \"spawn_monitor\",\"spawn_opt\",\"split_binary\",\"statistics\",\n    \"term_to_binary\",\"time\",\"throw\",\"tl\",\"trunc\",\"tuple_size\",\n    \"tuple_to_list\",\"unlink\",\"unregister\",\"whereis\"];\n\n// upper case: [A-Z] [Ø-Þ] [À-Ö]\n// lower case: [a-z] [ß-ö] [ø-ÿ]\n  var anumRE       = /[\\w@Ø-ÞÀ-Öß-öø-ÿ]/;\n  var escapesRE    =\n    /[0-7]{1,3}|[bdefnrstv\\\\\"']|\\^[a-zA-Z]|x[0-9a-zA-Z]{2}|x{[0-9a-zA-Z]+}/;\n\n/////////////////////////////////////////////////////////////////////////////\n// tokenizer\n\n  function tokenizer(stream,state) {\n    // in multi-line string\n    if (state.in_string) {\n      state.in_string = (!doubleQuote(stream));\n      return rval(state,stream,\"string\");\n    }\n\n    // in multi-line atom\n    if (state.in_atom) {\n      state.in_atom = (!singleQuote(stream));\n      return rval(state,stream,\"atom\");\n    }\n\n    // whitespace\n    if (stream.eatSpace()) {\n      return rval(state,stream,\"whitespace\");\n    }\n\n    // attributes and type specs\n    if (!peekToken(state) &&\n        stream.match(/-\\s*[a-zß-öø-ÿ][\\wØ-ÞÀ-Öß-öø-ÿ]*/)) {\n      if (is_member(stream.current(),typeWords)) {\n        return rval(state,stream,\"type\");\n      }else{\n        return rval(state,stream,\"attribute\");\n      }\n    }\n\n    var ch = stream.next();\n\n    // comment\n    if (ch == '%') {\n      stream.skipToEnd();\n      return rval(state,stream,\"comment\");\n    }\n\n    // colon\n    if (ch == \":\") {\n      return rval(state,stream,\"colon\");\n    }\n\n    // macro\n    if (ch == '?') {\n      stream.eatSpace();\n      stream.eatWhile(anumRE);\n      return rval(state,stream,\"macro\");\n    }\n\n    // record\n    if (ch == \"#\") {\n      stream.eatSpace();\n      stream.eatWhile(anumRE);\n      return rval(state,stream,\"record\");\n    }\n\n    // dollar escape\n    if (ch == \"$\") {\n      if (stream.next() == \"\\\\\" && !stream.match(escapesRE)) {\n        return rval(state,stream,\"error\");\n      }\n      return rval(state,stream,\"number\");\n    }\n\n    // dot\n    if (ch == \".\") {\n      return rval(state,stream,\"dot\");\n    }\n\n    // quoted atom\n    if (ch == '\\'') {\n      if (!(state.in_atom = (!singleQuote(stream)))) {\n        if (stream.match(/\\s*\\/\\s*[0-9]/,false)) {\n          stream.match(/\\s*\\/\\s*[0-9]/,true);\n          return rval(state,stream,\"fun\");      // 'f'/0 style fun\n        }\n        if (stream.match(/\\s*\\(/,false) || stream.match(/\\s*:/,false)) {\n          return rval(state,stream,\"function\");\n        }\n      }\n      return rval(state,stream,\"atom\");\n    }\n\n    // string\n    if (ch == '\"') {\n      state.in_string = (!doubleQuote(stream));\n      return rval(state,stream,\"string\");\n    }\n\n    // variable\n    if (/[A-Z_Ø-ÞÀ-Ö]/.test(ch)) {\n      stream.eatWhile(anumRE);\n      return rval(state,stream,\"variable\");\n    }\n\n    // atom/keyword/BIF/function\n    if (/[a-z_ß-öø-ÿ]/.test(ch)) {\n      stream.eatWhile(anumRE);\n\n      if (stream.match(/\\s*\\/\\s*[0-9]/,false)) {\n        stream.match(/\\s*\\/\\s*[0-9]/,true);\n        return rval(state,stream,\"fun\");      // f/0 style fun\n      }\n\n      var w = stream.current();\n\n      if (is_member(w,keywordWords)) {\n        return rval(state,stream,\"keyword\");\n      }else if (is_member(w,operatorAtomWords)) {\n        return rval(state,stream,\"operator\");\n      }else if (stream.match(/\\s*\\(/,false)) {\n        // 'put' and 'erlang:put' are bifs, 'foo:put' is not\n        if (is_member(w,bifWords) &&\n            ((peekToken(state).token != \":\") ||\n             (peekToken(state,2).token == \"erlang\"))) {\n          return rval(state,stream,\"builtin\");\n        }else if (is_member(w,guardWords)) {\n          return rval(state,stream,\"guard\");\n        }else{\n          return rval(state,stream,\"function\");\n        }\n      }else if (lookahead(stream) == \":\") {\n        if (w == \"erlang\") {\n          return rval(state,stream,\"builtin\");\n        } else {\n          return rval(state,stream,\"function\");\n        }\n      }else if (is_member(w,[\"true\",\"false\"])) {\n        return rval(state,stream,\"boolean\");\n      }else{\n        return rval(state,stream,\"atom\");\n      }\n    }\n\n    // number\n    var digitRE      = /[0-9]/;\n    var radixRE      = /[0-9a-zA-Z]/;         // 36#zZ style int\n    if (digitRE.test(ch)) {\n      stream.eatWhile(digitRE);\n      if (stream.eat('#')) {                // 36#aZ  style integer\n        if (!stream.eatWhile(radixRE)) {\n          stream.backUp(1);                 //\"36#\" - syntax error\n        }\n      } else if (stream.eat('.')) {       // float\n        if (!stream.eatWhile(digitRE)) {\n          stream.backUp(1);        // \"3.\" - probably end of function\n        } else {\n          if (stream.eat(/[eE]/)) {        // float with exponent\n            if (stream.eat(/[-+]/)) {\n              if (!stream.eatWhile(digitRE)) {\n                stream.backUp(2);            // \"2e-\" - syntax error\n              }\n            } else {\n              if (!stream.eatWhile(digitRE)) {\n                stream.backUp(1);            // \"2e\" - syntax error\n              }\n            }\n          }\n        }\n      }\n      return rval(state,stream,\"number\");   // normal integer\n    }\n\n    // open parens\n    if (nongreedy(stream,openParenRE,openParenWords)) {\n      return rval(state,stream,\"open_paren\");\n    }\n\n    // close parens\n    if (nongreedy(stream,closeParenRE,closeParenWords)) {\n      return rval(state,stream,\"close_paren\");\n    }\n\n    // separators\n    if (greedy(stream,separatorRE,separatorWords)) {\n      return rval(state,stream,\"separator\");\n    }\n\n    // operators\n    if (greedy(stream,operatorSymbolRE,operatorSymbolWords)) {\n      return rval(state,stream,\"operator\");\n    }\n\n    return rval(state,stream,null);\n  }\n\n/////////////////////////////////////////////////////////////////////////////\n// utilities\n  function nongreedy(stream,re,words) {\n    if (stream.current().length == 1 && re.test(stream.current())) {\n      stream.backUp(1);\n      while (re.test(stream.peek())) {\n        stream.next();\n        if (is_member(stream.current(),words)) {\n          return true;\n        }\n      }\n      stream.backUp(stream.current().length-1);\n    }\n    return false;\n  }\n\n  function greedy(stream,re,words) {\n    if (stream.current().length == 1 && re.test(stream.current())) {\n      while (re.test(stream.peek())) {\n        stream.next();\n      }\n      while (0 < stream.current().length) {\n        if (is_member(stream.current(),words)) {\n          return true;\n        }else{\n          stream.backUp(1);\n        }\n      }\n      stream.next();\n    }\n    return false;\n  }\n\n  function doubleQuote(stream) {\n    return quote(stream, '\"', '\\\\');\n  }\n\n  function singleQuote(stream) {\n    return quote(stream,'\\'','\\\\');\n  }\n\n  function quote(stream,quoteChar,escapeChar) {\n    while (!stream.eol()) {\n      var ch = stream.next();\n      if (ch == quoteChar) {\n        return true;\n      }else if (ch == escapeChar) {\n        stream.next();\n      }\n    }\n    return false;\n  }\n\n  function lookahead(stream) {\n    var m = stream.match(/^\\s*([^\\s%])/, false)\n    return m ? m[1] : \"\";\n  }\n\n  function is_member(element,list) {\n    return (-1 < list.indexOf(element));\n  }\n\n  function rval(state,stream,type) {\n\n    // parse stack\n    pushToken(state,realToken(type,stream));\n\n    // map erlang token type to CodeMirror style class\n    //     erlang             -> CodeMirror tag\n    switch (type) {\n      case \"atom\":        return \"atom\";\n      case \"attribute\":   return \"attribute\";\n      case \"boolean\":     return \"atom\";\n      case \"builtin\":     return \"builtin\";\n      case \"close_paren\": return null;\n      case \"colon\":       return null;\n      case \"comment\":     return \"comment\";\n      case \"dot\":         return null;\n      case \"error\":       return \"error\";\n      case \"fun\":         return \"meta\";\n      case \"function\":    return \"tag\";\n      case \"guard\":       return \"property\";\n      case \"keyword\":     return \"keyword\";\n      case \"macro\":       return \"variable-2\";\n      case \"number\":      return \"number\";\n      case \"open_paren\":  return null;\n      case \"operator\":    return \"operator\";\n      case \"record\":      return \"bracket\";\n      case \"separator\":   return null;\n      case \"string\":      return \"string\";\n      case \"type\":        return \"def\";\n      case \"variable\":    return \"variable\";\n      default:            return null;\n    }\n  }\n\n  function aToken(tok,col,ind,typ) {\n    return {token:  tok,\n            column: col,\n            indent: ind,\n            type:   typ};\n  }\n\n  function realToken(type,stream) {\n    return aToken(stream.current(),\n                 stream.column(),\n                 stream.indentation(),\n                 type);\n  }\n\n  function fakeToken(type) {\n    return aToken(type,0,0,type);\n  }\n\n  function peekToken(state,depth) {\n    var len = state.tokenStack.length;\n    var dep = (depth ? depth : 1);\n\n    if (len < dep) {\n      return false;\n    }else{\n      return state.tokenStack[len-dep];\n    }\n  }\n\n  function pushToken(state,token) {\n\n    if (!(token.type == \"comment\" || token.type == \"whitespace\")) {\n      state.tokenStack = maybe_drop_pre(state.tokenStack,token);\n      state.tokenStack = maybe_drop_post(state.tokenStack);\n    }\n  }\n\n  function maybe_drop_pre(s,token) {\n    var last = s.length-1;\n\n    if (0 < last && s[last].type === \"record\" && token.type === \"dot\") {\n      s.pop();\n    }else if (0 < last && s[last].type === \"group\") {\n      s.pop();\n      s.push(token);\n    }else{\n      s.push(token);\n    }\n    return s;\n  }\n\n  function maybe_drop_post(s) {\n    if (!s.length) return s\n    var last = s.length-1;\n\n    if (s[last].type === \"dot\") {\n      return [];\n    }\n    if (last > 1 && s[last].type === \"fun\" && s[last-1].token === \"fun\") {\n      return s.slice(0,last-1);\n    }\n    switch (s[last].token) {\n      case \"}\":    return d(s,{g:[\"{\"]});\n      case \"]\":    return d(s,{i:[\"[\"]});\n      case \")\":    return d(s,{i:[\"(\"]});\n      case \">>\":   return d(s,{i:[\"<<\"]});\n      case \"end\":  return d(s,{i:[\"begin\",\"case\",\"fun\",\"if\",\"receive\",\"try\"]});\n      case \",\":    return d(s,{e:[\"begin\",\"try\",\"when\",\"->\",\n                                  \",\",\"(\",\"[\",\"{\",\"<<\"]});\n      case \"->\":   return d(s,{r:[\"when\"],\n                               m:[\"try\",\"if\",\"case\",\"receive\"]});\n      case \";\":    return d(s,{E:[\"case\",\"fun\",\"if\",\"receive\",\"try\",\"when\"]});\n      case \"catch\":return d(s,{e:[\"try\"]});\n      case \"of\":   return d(s,{e:[\"case\"]});\n      case \"after\":return d(s,{e:[\"receive\",\"try\"]});\n      default:     return s;\n    }\n  }\n\n  function d(stack,tt) {\n    // stack is a stack of Token objects.\n    // tt is an object; {type:tokens}\n    // type is a char, tokens is a list of token strings.\n    // The function returns (possibly truncated) stack.\n    // It will descend the stack, looking for a Token such that Token.token\n    //  is a member of tokens. If it does not find that, it will normally (but\n    //  see \"E\" below) return stack. If it does find a match, it will remove\n    //  all the Tokens between the top and the matched Token.\n    // If type is \"m\", that is all it does.\n    // If type is \"i\", it will also remove the matched Token and the top Token.\n    // If type is \"g\", like \"i\", but add a fake \"group\" token at the top.\n    // If type is \"r\", it will remove the matched Token, but not the top Token.\n    // If type is \"e\", it will keep the matched Token but not the top Token.\n    // If type is \"E\", it behaves as for type \"e\", except if there is no match,\n    //  in which case it will return an empty stack.\n\n    for (var type in tt) {\n      var len = stack.length-1;\n      var tokens = tt[type];\n      for (var i = len-1; -1 < i ; i--) {\n        if (is_member(stack[i].token,tokens)) {\n          var ss = stack.slice(0,i);\n          switch (type) {\n              case \"m\": return ss.concat(stack[i]).concat(stack[len]);\n              case \"r\": return ss.concat(stack[len]);\n              case \"i\": return ss;\n              case \"g\": return ss.concat(fakeToken(\"group\"));\n              case \"E\": return ss.concat(stack[i]);\n              case \"e\": return ss.concat(stack[i]);\n          }\n        }\n      }\n    }\n    return (type == \"E\" ? [] : stack);\n  }\n\n/////////////////////////////////////////////////////////////////////////////\n// indenter\n\n  function indenter(state,textAfter) {\n    var t;\n    var unit = cmCfg.indentUnit;\n    var wordAfter = wordafter(textAfter);\n    var currT = peekToken(state,1);\n    var prevT = peekToken(state,2);\n\n    if (state.in_string || state.in_atom) {\n      return CodeMirror.Pass;\n    }else if (!prevT) {\n      return 0;\n    }else if (currT.token == \"when\") {\n      return currT.column+unit;\n    }else if (wordAfter === \"when\" && prevT.type === \"function\") {\n      return prevT.indent+unit;\n    }else if (wordAfter === \"(\" && currT.token === \"fun\") {\n      return  currT.column+3;\n    }else if (wordAfter === \"catch\" && (t = getToken(state,[\"try\"]))) {\n      return t.column;\n    }else if (is_member(wordAfter,[\"end\",\"after\",\"of\"])) {\n      t = getToken(state,[\"begin\",\"case\",\"fun\",\"if\",\"receive\",\"try\"]);\n      return t ? t.column : CodeMirror.Pass;\n    }else if (is_member(wordAfter,closeParenWords)) {\n      t = getToken(state,openParenWords);\n      return t ? t.column : CodeMirror.Pass;\n    }else if (is_member(currT.token,[\",\",\"|\",\"||\"]) ||\n              is_member(wordAfter,[\",\",\"|\",\"||\"])) {\n      t = postcommaToken(state);\n      return t ? t.column+t.token.length : unit;\n    }else if (currT.token == \"->\") {\n      if (is_member(prevT.token, [\"receive\",\"case\",\"if\",\"try\"])) {\n        return prevT.column+unit+unit;\n      }else{\n        return prevT.column+unit;\n      }\n    }else if (is_member(currT.token,openParenWords)) {\n      return currT.column+currT.token.length;\n    }else{\n      t = defaultToken(state);\n      return truthy(t) ? t.column+unit : 0;\n    }\n  }\n\n  function wordafter(str) {\n    var m = str.match(/,|[a-z]+|\\}|\\]|\\)|>>|\\|+|\\(/);\n\n    return truthy(m) && (m.index === 0) ? m[0] : \"\";\n  }\n\n  function postcommaToken(state) {\n    var objs = state.tokenStack.slice(0,-1);\n    var i = getTokenIndex(objs,\"type\",[\"open_paren\"]);\n\n    return truthy(objs[i]) ? objs[i] : false;\n  }\n\n  function defaultToken(state) {\n    var objs = state.tokenStack;\n    var stop = getTokenIndex(objs,\"type\",[\"open_paren\",\"separator\",\"keyword\"]);\n    var oper = getTokenIndex(objs,\"type\",[\"operator\"]);\n\n    if (truthy(stop) && truthy(oper) && stop < oper) {\n      return objs[stop+1];\n    } else if (truthy(stop)) {\n      return objs[stop];\n    } else {\n      return false;\n    }\n  }\n\n  function getToken(state,tokens) {\n    var objs = state.tokenStack;\n    var i = getTokenIndex(objs,\"token\",tokens);\n\n    return truthy(objs[i]) ? objs[i] : false;\n  }\n\n  function getTokenIndex(objs,propname,propvals) {\n\n    for (var i = objs.length-1; -1 < i ; i--) {\n      if (is_member(objs[i][propname],propvals)) {\n        return i;\n      }\n    }\n    return false;\n  }\n\n  function truthy(x) {\n    return (x !== false) && (x != null);\n  }\n\n/////////////////////////////////////////////////////////////////////////////\n// this object defines the mode\n\n  return {\n    startState:\n      function() {\n        return {tokenStack: [],\n                in_string:  false,\n                in_atom:    false};\n      },\n\n    token:\n      function(stream, state) {\n        return tokenizer(stream, state);\n      },\n\n    indent:\n      function(state, textAfter) {\n        return indenter(state,textAfter);\n      },\n\n    lineComment: \"%\"\n  };\n});\n\n});\n"],"file":"erlang.js"}