{"version":3,"sources":["extensions/samples/InlineImageViewer/InlineImageViewer.js"],"names":["define","require","exports","module","InlineWidget","brackets","getModule","inlineEditorTemplate","InlineImageViewer","fileName","fullPath","this","call","prototype","Object","create","constructor","parentClass","$wrapperDiv","$image","load","hostEditor","apply","arguments","$","find","text","attr","$htmlContent","append","click","close","bind","onAdded","window","setTimeout","_sizeEditorToContent","setInlineWidgetHeight","height","css"],"mappings":"AAqBAA,OAAO,SAAUC,QAASC,QAASC,QAI/B,IAAIC,aAAsBC,SAASC,UAAU,uBAAuBF,aAGhEG,qBAAuBN,QAAQ,+BAEnC,SAASO,kBAAkBC,SAAUC,UACjCC,KAAKF,SAAWA,SAChBE,KAAKD,SAAWA,SAChBN,aAAaQ,KAAKD,MAEtBH,kBAAkBK,UAAYC,OAAOC,OAAOX,aAAaS,WACzDL,kBAAkBK,UAAUG,YAAcR,kBAC1CA,kBAAkBK,UAAUI,YAAcb,aAAaS,UAEvDL,kBAAkBK,UAAUJ,SAAW,KACvCD,kBAAkBK,UAAUH,SAAW,KACvCF,kBAAkBK,UAAUK,YAAc,KAC1CV,kBAAkBK,UAAUM,OAAS,KAErCX,kBAAkBK,UAAUO,KAAO,SAAUC,YACzCb,kBAAkBK,UAAUI,YAAYG,KAAKE,MAAMX,KAAMY,WAEzDZ,KAAKO,YAAcM,EAAEjB,sBAKrBiB,EAAEb,KAAKO,YAAYO,KAAK,SAASC,KAAKf,KAAKF,UAG3CE,KAAKQ,OAASK,EAAEb,KAAKO,YAAYO,KAAK,QAAQE,KAAK,MAAOhB,KAAKD,UAE/DC,KAAKiB,aAAaC,OAAOlB,KAAKO,aAC9BP,KAAKiB,aAAaE,MAAMnB,KAAKoB,MAAMC,KAAKrB,QAG5CH,kBAAkBK,UAAUoB,QAAU,WAClCzB,kBAAkBK,UAAUI,YAAYgB,QAAQX,MAAMX,KAAMY,WAC5DW,OAAOC,WAAWxB,KAAKyB,qBAAqBJ,KAAKrB,QAGrDH,kBAAkBK,UAAUuB,qBAAuB,WAE/CzB,KAAKU,WAAWgB,sBAAsB1B,KAAMA,KAAKO,YAAYoB,SAAW,IAAI,GAC5E3B,KAAKQ,OAAOoB,IAAI,UAAW,IAG/BpC,OAAOD,QAAUM","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2012 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\ndefine(function (require, exports, module) {\n\n\n    // Load Brackets modules\n    var InlineWidget        = brackets.getModule(\"editor/InlineWidget\").InlineWidget;\n\n    // Load tempalte\n    var inlineEditorTemplate = require(\"text!InlineImageViewer.html\");\n\n    function InlineImageViewer(fileName, fullPath) {\n        this.fileName = fileName;\n        this.fullPath = fullPath;\n        InlineWidget.call(this);\n    }\n    InlineImageViewer.prototype = Object.create(InlineWidget.prototype);\n    InlineImageViewer.prototype.constructor = InlineImageViewer;\n    InlineImageViewer.prototype.parentClass = InlineWidget.prototype;\n\n    InlineImageViewer.prototype.fileName = null;\n    InlineImageViewer.prototype.fullPath = null;\n    InlineImageViewer.prototype.$wrapperDiv = null;\n    InlineImageViewer.prototype.$image = null;\n\n    InlineImageViewer.prototype.load = function (hostEditor) {\n        InlineImageViewer.prototype.parentClass.load.apply(this, arguments);\n\n        this.$wrapperDiv = $(inlineEditorTemplate);\n\n        // TODO (jason-sanjose): Use handlebars.js and update template to\n        // use expressions instead e.g. {{filename}}\n        // Header\n        $(this.$wrapperDiv.find(\"span\")).text(this.fileName);\n\n        // Image\n        this.$image = $(this.$wrapperDiv.find(\"img\")).attr(\"src\", this.fullPath);\n\n        this.$htmlContent.append(this.$wrapperDiv);\n        this.$htmlContent.click(this.close.bind(this));\n    };\n\n    InlineImageViewer.prototype.onAdded = function () {\n        InlineImageViewer.prototype.parentClass.onAdded.apply(this, arguments);\n        window.setTimeout(this._sizeEditorToContent.bind(this));\n    };\n\n    InlineImageViewer.prototype._sizeEditorToContent = function () {\n        // TODO: image might not be loaded yet--need to listen for load event and update then.\n        this.hostEditor.setInlineWidgetHeight(this, this.$wrapperDiv.height() + 20, true);\n        this.$image.css(\"opacity\", 1);\n    };\n\n    module.exports = InlineImageViewer;\n});\n"],"file":"InlineImageViewer.js"}