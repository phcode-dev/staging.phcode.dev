define(function(require,exports,module){const EventDispatcher=require("utils/EventDispatcher"),Resizer=require("utils/Resizer"),EVENT_PANEL_HIDDEN="panelHidden",EVENT_PANEL_SHOWN="panelShown",PANEL_TYPE_BOTTOM_PANEL="bottomPanel";function Panel($panel,id){this.$panel=$panel,this.panelID=id}Panel.prototype.$panel=null,Panel.prototype.isVisible=function(){return this.$panel.is(":visible")},Panel.prototype.registerCanBeShownHandler=function(canShowHandlerFn){this.canBeShownHandler&&canShowHandlerFn&&console.warn(`canBeShownHandler already registered for panel: ${this.panelID}. will be overwritten`),this.canBeShownHandler=canShowHandlerFn},Panel.prototype.canBeShown=function(){let self=this;return!self.canBeShownHandler||self.canBeShownHandler()},Panel.prototype.show=function(){!this.isVisible()&&this.canBeShown()&&(Resizer.show(this.$panel[0]),exports.trigger("panelShown",this.panelID))},Panel.prototype.hide=function(){this.isVisible()&&(Resizer.hide(this.$panel[0]),exports.trigger("panelHidden",this.panelID))},Panel.prototype.setVisible=function(visible){visible?this.show():this.hide()},Panel.prototype.getPanelType=function(){return"bottomPanel"},EventDispatcher.makeEventDispatcher(exports),exports.Panel=Panel,exports.EVENT_PANEL_HIDDEN="panelHidden",exports.EVENT_PANEL_SHOWN="panelShown",exports.PANEL_TYPE_BOTTOM_PANEL="bottomPanel"});
//# sourceMappingURL=PanelView.js.map
