{"version":3,"sources":["languageTools/LanguageClient/ProtocolAdapter.js"],"names":["protocol","require","Utils","ToolingInfo","LanguageClientInfo","toolingInfo","MESSAGE_FORMAT","BRACKETS","LSP","_constructParamsAndRelay","relay","type","params","_params","handler","format","undefined","JSON","parse","stringify","LANGUAGE_SERVICE","CUSTOM_REQUEST","sendCustomRequest","CUSTOM_NOTIFICATION","sendCustomNotification","SERVICE_REQUESTS","SHOW_SELECT_MESSAGE","REGISTRATION_REQUEST","UNREGISTRATION_REQUEST","PROJECT_FOLDERS_REQUEST","SERVICE_NOTIFICATIONS","SHOW_MESSAGE","LOG_MESSAGE","TELEMETRY","DIAGNOSTICS","SYNCHRONIZE_EVENTS","DOCUMENT_OPENED","didOpenTextDocument","textDocument","uri","pathToUri","filePath","languageId","version","text","fileContent","DOCUMENT_CHANGED","didChangeTextDocument","contentChanges","DOCUMENT_SAVED","didSaveTextDocument","DOCUMENT_CLOSED","didCloseTextDocument","PROJECT_FOLDERS_CHANGED","foldersAdded","foldersRemoved","convertToWorkspaceFolders","didChangeWorkspaceFolders","event","added","removed","FEATURES","CODE_HINTS","completion","PARAMETER_HINTS","signatureHelp","JUMP_TO_DECLARATION","gotoDeclaration","JUMP_TO_DEFINITION","gotoDefinition","JUMP_TO_IMPL","gotoImplementation","position","convertToLSPPosition","cursorPos","CODE_HINT_INFO","completionItemResolve","FIND_REFERENCES","findReferences","context","includeDeclaration","DOCUMENT_SYMBOLS","documentSymbol","PROJECT_SYMBOLS","workspaceSymbol","query","onCustom","connection","onNotification","sendRequest","sendNotification","DidOpenTextDocumentNotification","DidChangeTextDocumentNotification","DidCloseTextDocumentNotification","DidSaveTextDocumentNotification","DidChangeWorkspaceFoldersNotification","CompletionRequest","CompletionResolveRequest","SignatureHelpRequest","DefinitionRequest","DeclarationRequest","ImplementationRequest","ReferencesRequest","DocumentSymbolRequest","WorkspaceSymbolRequest","initialize","rootPath","workspaceFolders","rootPaths","Array","isArray","length","rootUri","processId","process","pid","capabilities","InitializeRequest","initialized","InitializedNotification","shutdown","ShutdownRequest","exit","ExitNotification","processRequest","message","processNotification","attachOnNotificationHandlers","_callbackFactory","ShowMessageNotification","bind","LogMessageNotification","TelemetryEventNotification","PublishDiagnosticsNotification","attachOnRequestHandlers","ShowMessageRequest","RegistrationRequest","UnregistrationRequest","WorkspaceFoldersRequest","onRequest","exports"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2019 - present Adobe. All rights reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n *\n */\n\n/*global LanguageClientInfo*/\n/*eslint-env es6, node*/\n/*eslint max-len: [\"error\", { \"code\": 200 }]*/\n/*eslint no-fallthrough: 0*/\n\n\nvar protocol = require(\"vscode-languageserver-protocol\"),\n    Utils = require(\"./Utils\"),\n    ToolingInfo = LanguageClientInfo.toolingInfo,\n    MESSAGE_FORMAT = {\n        BRACKETS: \"brackets\",\n        LSP: \"lsp\"\n    };\n\nfunction _constructParamsAndRelay(relay, type, params) {\n    var _params = null,\n        handler = null;\n\n    //Check for param object format. We won't change anything if the object is preformatted.\n    if (params.format === MESSAGE_FORMAT.LSP) {\n        params.format = undefined;\n        _params = JSON.parse(JSON.stringify(params));\n    }\n\n    switch (type) {\n    case ToolingInfo.LANGUAGE_SERVICE.CUSTOM_REQUEST:\n        return sendCustomRequest(relay, params.type, params.params);\n    case ToolingInfo.LANGUAGE_SERVICE.CUSTOM_NOTIFICATION:\n        {\n            sendCustomNotification(relay, params.type, params.params);\n            break;\n        }\n    case ToolingInfo.SERVICE_REQUESTS.SHOW_SELECT_MESSAGE:\n    case ToolingInfo.SERVICE_REQUESTS.REGISTRATION_REQUEST:\n    case ToolingInfo.SERVICE_REQUESTS.UNREGISTRATION_REQUEST:\n    case ToolingInfo.SERVICE_REQUESTS.PROJECT_FOLDERS_REQUEST:\n        {\n            _params = {\n                type: type,\n                params: params\n            };\n            return relay(_params);\n        }\n    case ToolingInfo.SERVICE_NOTIFICATIONS.SHOW_MESSAGE:\n    case ToolingInfo.SERVICE_NOTIFICATIONS.LOG_MESSAGE:\n    case ToolingInfo.SERVICE_NOTIFICATIONS.TELEMETRY:\n    case ToolingInfo.SERVICE_NOTIFICATIONS.DIAGNOSTICS:\n        {\n            _params = {\n                type: type,\n                params: params\n            };\n            relay(_params);\n            break;\n        }\n    case ToolingInfo.SYNCHRONIZE_EVENTS.DOCUMENT_OPENED:\n        {\n            _params = _params || {\n                textDocument: {\n                    uri: Utils.pathToUri(params.filePath),\n                    languageId: params.languageId,\n                    version: 1,\n                    text: params.fileContent\n                }\n            };\n            didOpenTextDocument(relay, _params);\n            break;\n        }\n    case ToolingInfo.SYNCHRONIZE_EVENTS.DOCUMENT_CHANGED:\n        {\n            _params = _params || {\n                textDocument: {\n                    uri: Utils.pathToUri(params.filePath),\n                    version: 1\n                },\n                contentChanges: [{\n                    text: params.fileContent\n                }]\n            };\n            didChangeTextDocument(relay, _params);\n            break;\n        }\n    case ToolingInfo.SYNCHRONIZE_EVENTS.DOCUMENT_SAVED:\n        {\n            if (!_params) {\n                _params = {\n                    textDocument: {\n                        uri: Utils.pathToUri(params.filePath)\n                    }\n                };\n\n                if (params.fileContent) {\n                    _params['text'] = params.fileContent;\n                }\n            }\n            didSaveTextDocument(relay, _params);\n            break;\n        }\n    case ToolingInfo.SYNCHRONIZE_EVENTS.DOCUMENT_CLOSED:\n        {\n            _params = _params || {\n                textDocument: {\n                    uri: Utils.pathToUri(params.filePath)\n                }\n            };\n\n            didCloseTextDocument(relay, _params);\n            break;\n        }\n    case ToolingInfo.SYNCHRONIZE_EVENTS.PROJECT_FOLDERS_CHANGED:\n        {\n            var foldersAdded = params.foldersAdded || [],\n                foldersRemoved = params.foldersRemoved || [];\n\n            foldersAdded = Utils.convertToWorkspaceFolders(foldersAdded);\n            foldersRemoved = Utils.convertToWorkspaceFolders(foldersRemoved);\n\n            _params = _params || {\n                event: {\n                    added: foldersAdded,\n                    removed: foldersRemoved\n                }\n            };\n            didChangeWorkspaceFolders(relay, _params);\n            break;\n        }\n    case ToolingInfo.FEATURES.CODE_HINTS:\n        handler = completion;\n    case ToolingInfo.FEATURES.PARAMETER_HINTS:\n        handler = handler || signatureHelp;\n    case ToolingInfo.FEATURES.JUMP_TO_DECLARATION:\n        handler = handler || gotoDeclaration;\n    case ToolingInfo.FEATURES.JUMP_TO_DEFINITION:\n        handler = handler || gotoDefinition;\n    case ToolingInfo.FEATURES.JUMP_TO_IMPL:\n        {\n            handler = handler || gotoImplementation;\n            _params = _params || {\n                textDocument: {\n                    uri: Utils.pathToUri(params.filePath)\n                },\n                position: Utils.convertToLSPPosition(params.cursorPos)\n            };\n\n            return handler(relay, _params);\n        }\n    case ToolingInfo.FEATURES.CODE_HINT_INFO:\n        {\n            return completionItemResolve(relay, params);\n        }\n    case ToolingInfo.FEATURES.FIND_REFERENCES:\n        {\n            _params = _params || {\n                textDocument: {\n                    uri: Utils.pathToUri(params.filePath)\n                },\n                position: Utils.convertToLSPPosition(params.cursorPos),\n                context: {\n                    includeDeclaration: params.includeDeclaration\n                }\n            };\n\n            return findReferences(relay, _params);\n        }\n    case ToolingInfo.FEATURES.DOCUMENT_SYMBOLS:\n        {\n            _params = _params || {\n                textDocument: {\n                    uri: Utils.pathToUri(params.filePath)\n                }\n            };\n\n            return documentSymbol(relay, _params);\n        }\n    case ToolingInfo.FEATURES.PROJECT_SYMBOLS:\n        {\n            _params = _params || {\n                query: params.query\n            };\n\n            return workspaceSymbol(relay, _params);\n        }\n    }\n}\n\n/** For custom messages */\nfunction onCustom(connection, type, handler) {\n    connection.onNotification(type, handler);\n}\n\nfunction sendCustomRequest(connection, type, params) {\n    return connection.sendRequest(type, params);\n}\n\nfunction sendCustomNotification(connection, type, params) {\n    connection.sendNotification(type, params);\n}\n\n/** For Notification messages */\nfunction didOpenTextDocument(connection, params) {\n    connection.sendNotification(protocol.DidOpenTextDocumentNotification.type, params);\n}\n\nfunction didChangeTextDocument(connection, params) {\n    connection.sendNotification(protocol.DidChangeTextDocumentNotification.type, params);\n}\n\nfunction didCloseTextDocument(connection, params) {\n    connection.sendNotification(protocol.DidCloseTextDocumentNotification.type, params);\n}\n\nfunction didSaveTextDocument(connection, params) {\n    connection.sendNotification(protocol.DidSaveTextDocumentNotification.type, params);\n}\n\nfunction didChangeWorkspaceFolders(connection, params) {\n    connection.sendNotification(protocol.DidChangeWorkspaceFoldersNotification.type, params);\n}\n\n/** For Request messages */\nfunction completion(connection, params) {\n    return connection.sendRequest(protocol.CompletionRequest.type, params);\n}\n\nfunction completionItemResolve(connection, params) {\n    return connection.sendRequest(protocol.CompletionResolveRequest.type, params);\n}\n\nfunction signatureHelp(connection, params) {\n    return connection.sendRequest(protocol.SignatureHelpRequest.type, params);\n}\n\nfunction gotoDefinition(connection, params) {\n    return connection.sendRequest(protocol.DefinitionRequest.type, params);\n}\n\nfunction gotoDeclaration(connection, params) {\n    return connection.sendRequest(protocol.DeclarationRequest.type, params);\n}\n\nfunction gotoImplementation(connection, params) {\n    return connection.sendRequest(protocol.ImplementationRequest.type, params);\n}\n\nfunction findReferences(connection, params) {\n    return connection.sendRequest(protocol.ReferencesRequest.type, params);\n}\n\nfunction documentSymbol(connection, params) {\n    return connection.sendRequest(protocol.DocumentSymbolRequest.type, params);\n}\n\nfunction workspaceSymbol(connection, params) {\n    return connection.sendRequest(protocol.WorkspaceSymbolRequest.type, params);\n}\n\n/**\n * Server commands\n */\nfunction initialize(connection, params) {\n    var rootPath = params.rootPath,\n        workspaceFolders = params.rootPaths;\n\n    if(!rootPath && workspaceFolders && Array.isArray(workspaceFolders)) {\n        rootPath = workspaceFolders[0];\n    }\n\n    if (!workspaceFolders) {\n        workspaceFolders = [rootPath];\n    }\n\n    if (workspaceFolders.length) {\n        workspaceFolders = Utils.convertToWorkspaceFolders(workspaceFolders);\n    }\n\n    var _params = {\n        rootPath: rootPath,\n        rootUri: Utils.pathToUri(rootPath),\n        processId: process.pid,\n        capabilities: params.capabilities,\n        workspaceFolders: workspaceFolders\n    };\n\n    return connection.sendRequest(protocol.InitializeRequest.type, _params);\n}\n\nfunction initialized(connection) {\n    connection.sendNotification(protocol.InitializedNotification.type);\n}\n\nfunction shutdown(connection) {\n    return connection.sendRequest(protocol.ShutdownRequest.type);\n}\n\nfunction exit(connection) {\n    connection.sendNotification(protocol.ExitNotification.type);\n}\n\nfunction processRequest(connection, message) {\n    return _constructParamsAndRelay(connection, message.type, message.params);\n}\n\nfunction processNotification(connection, message) {\n    _constructParamsAndRelay(connection, message.type, message.params);\n}\n\nfunction attachOnNotificationHandlers(connection, handler) {\n    function _callbackFactory(type) {\n        switch (type) {\n        case protocol.ShowMessageNotification.type:\n            return _constructParamsAndRelay.bind(null, handler, ToolingInfo.SERVICE_NOTIFICATIONS.SHOW_MESSAGE);\n        case protocol.LogMessageNotification.type:\n            return _constructParamsAndRelay.bind(null, handler, ToolingInfo.SERVICE_NOTIFICATIONS.LOG_MESSAGE);\n        case protocol.TelemetryEventNotification.type:\n            return _constructParamsAndRelay.bind(null, handler, ToolingInfo.SERVICE_NOTIFICATIONS.TELEMETRY);\n        case protocol.PublishDiagnosticsNotification.type:\n            return _constructParamsAndRelay.bind(null, handler, ToolingInfo.SERVICE_NOTIFICATIONS.DIAGNOSTICS);\n        }\n    }\n\n    connection.onNotification(protocol.ShowMessageNotification.type, _callbackFactory(protocol.ShowMessageNotification.type));\n    connection.onNotification(protocol.LogMessageNotification.type, _callbackFactory(protocol.LogMessageNotification.type));\n    connection.onNotification(protocol.TelemetryEventNotification.type, _callbackFactory(protocol.TelemetryEventNotification.type));\n    connection.onNotification(protocol.PublishDiagnosticsNotification.type, _callbackFactory(protocol.PublishDiagnosticsNotification.type));\n    connection.onNotification(function (type, params) {\n        var _params = {\n            type: type,\n            params: params\n        };\n        handler(_params);\n    });\n}\n\nfunction attachOnRequestHandlers(connection, handler) {\n    function _callbackFactory(type) {\n        switch (type) {\n        case protocol.ShowMessageRequest.type:\n            return _constructParamsAndRelay.bind(null, handler, ToolingInfo.SERVICE_REQUESTS.SHOW_SELECT_MESSAGE);\n        case protocol.RegistrationRequest.type:\n            return _constructParamsAndRelay.bind(null, handler, ToolingInfo.SERVICE_REQUESTS.REGISTRATION_REQUEST);\n        case protocol.UnregistrationRequest.type:\n            return _constructParamsAndRelay.bind(null, handler, ToolingInfo.SERVICE_REQUESTS.UNREGISTRATION_REQUEST);\n        case protocol.WorkspaceFoldersRequest.type:\n            return _constructParamsAndRelay.bind(null, handler, ToolingInfo.SERVICE_REQUESTS.PROJECT_FOLDERS_REQUEST);\n        }\n    }\n\n    connection.onRequest(protocol.ShowMessageRequest.type, _callbackFactory(protocol.ShowMessageRequest.type));\n    connection.onRequest(protocol.RegistrationRequest.type, _callbackFactory(protocol.RegistrationRequest.type));\n    // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\n    connection.onRequest(\"client/registerFeature\", _callbackFactory(protocol.RegistrationRequest.type));\n    connection.onRequest(protocol.UnregistrationRequest.type, _callbackFactory(protocol.UnregistrationRequest.type));\n    // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\n    connection.onRequest(\"client/unregisterFeature\", _callbackFactory(protocol.UnregistrationRequest.type));\n    connection.onRequest(protocol.WorkspaceFoldersRequest.type, _callbackFactory(protocol.WorkspaceFoldersRequest.type));\n    connection.onRequest(function (type, params) {\n        var _params = {\n            type: type,\n            params: params\n        };\n        return handler(_params);\n    });\n}\n\nexports.initialize = initialize;\nexports.initialized = initialized;\nexports.shutdown = shutdown;\nexports.exit = exit;\nexports.onCustom = onCustom;\nexports.sendCustomRequest = sendCustomRequest;\nexports.sendCustomNotification = sendCustomNotification;\nexports.processRequest = processRequest;\nexports.processNotification = processNotification;\nexports.attachOnNotificationHandlers = attachOnNotificationHandlers;\nexports.attachOnRequestHandlers = attachOnRequestHandlers;\n"],"file":"ProtocolAdapter.js"}