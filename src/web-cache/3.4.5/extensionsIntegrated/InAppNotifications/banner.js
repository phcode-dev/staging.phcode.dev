define(function(require,exports,module){const AppInit=require("utils/AppInit"),PreferencesManager=require("preferences/PreferencesManager"),ExtensionUtils=require("utils/ExtensionUtils"),Metrics=require("utils/Metrics"),utils=require("./utils"),NotificationBarHtml=require("text!./htmlContent/notificationContainer.html");ExtensionUtils.loadStyleSheet(module,"styles/styles.css");const ONE_DAY=864e5,IN_APP_NOTIFICATIONS_BANNER_SHOWN_STATE="InAppNotificationsBannerShown",NOTIFICATION_ACK_CLASS="notification_ack";async function _renderNotifications(notifications){if(!notifications)return;const _InAppBannerShownAndDone=PreferencesManager.getViewState(IN_APP_NOTIFICATIONS_BANNER_SHOWN_STATE);for(const notificationID of Object.keys(notifications))if(!_InAppBannerShownAndDone[notificationID]){const notification=notifications[notificationID];if(!utils.isValidForThisVersion(notification.FOR_VERSIONS))continue;if(!utils.isValidForThisPlatform(notification.PLATFORM))continue;notification.HTML_CONTENT.includes(NOTIFICATION_ACK_CLASS)||notification.DANGER_SHOW_ON_EVERY_BOOT||_markAsShownAndDone(notificationID),await showBannerAndWaitForDismiss(notification.HTML_CONTENT,notificationID),notification.DANGER_SHOW_ON_EVERY_BOOT||_markAsShownAndDone(notificationID)}}function _markAsShownAndDone(notificationID){const _InAppBannersShownAndDone=PreferencesManager.getViewState(IN_APP_NOTIFICATIONS_BANNER_SHOWN_STATE);_InAppBannersShownAndDone[notificationID]=!0,PreferencesManager.setViewState(IN_APP_NOTIFICATIONS_BANNER_SHOWN_STATE,_InAppBannersShownAndDone)}function fetchJSON(url){return fetch(url).then(response=>response.ok?response.json():null)}PreferencesManager.stateManager.definePreference(IN_APP_NOTIFICATIONS_BANNER_SHOWN_STATE,"object",{});let inProgress=!1;function _fetchAndRenderNotifications(){if(inProgress)return;inProgress=!0;const locale=brackets.getLocale(),fetchURL=`${brackets.config.app_notification_url}${locale}/banner.json`,defaultFetchURL=`${brackets.config.app_notification_url}root/banner.json`;fetchJSON(fetchURL).then(fetchedJSON=>null===fetchedJSON?fetchJSON(defaultFetchURL):fetchedJSON).then(_renderNotifications).catch(error=>{console.error("Error fetching and rendering banner.json",error)}).finally(()=>{inProgress=!1})}function cleanNotificationBanner(){const $notificationBar=$("#notification-bar");$notificationBar.length>0&&$notificationBar.remove()}async function showBannerAndWaitForDismiss(html,notificationID){let resolved=!1;return new Promise(resolve=>{const $htmlContent=$(html),$notificationBarElement=$(NotificationBarHtml);$htmlContent.find("script").remove(),$htmlContent.find("style").remove(),cleanNotificationBanner(),$notificationBarElement.prependTo(".content");var $notificationBar=$("#notification-bar"),$notificationContent=$notificationBar.find(".content-container"),$closeIcon=$notificationBar.find(".close-icon");$notificationContent.append($htmlContent),Metrics.countEvent(Metrics.EVENT_TYPE.NOTIFICATIONS,"banner-"+notificationID,"shown"),$closeIcon.length>0&&$closeIcon.click(function(){cleanNotificationBanner(),Metrics.countEvent(Metrics.EVENT_TYPE.NOTIFICATIONS,"banner-"+notificationID,"closeClick"),!resolved&&resolve($htmlContent),resolved=!0}),$notificationBar.find(`.${NOTIFICATION_ACK_CLASS}`).click(function(){cleanNotificationBanner(),Metrics.countEvent(Metrics.EVENT_TYPE.NOTIFICATIONS,"banner-"+notificationID,"ackClick"),!resolved&&resolve($htmlContent),resolved=!0})})}AppInit.appReady(function(){Phoenix.isTestWindow||(_fetchAndRenderNotifications(),setInterval(_fetchAndRenderNotifications,864e5))}),Phoenix.isTestWindow&&(exports.cleanNotificationBanner=cleanNotificationBanner,exports._renderNotifications=_renderNotifications)});
//# sourceMappingURL=banner.js.map
