{"version":3,"sources":["extensions/default/Phoenix-prettier/worker/prettier-helper.js"],"names":["importScripts","Phoenix","baseURL","_identifyChangedRange","oldText","newText","start","end","charsToEndIndex","length","newRangeStart","newRangeEnd","rangeEndInOldText","text","changedText","substring","rangeStart","rangeEnd","prettify","params","options","plugins","prettierPlugins","isFullFileBeautify","prettyText","prettier","format","cursorOffset","pluginURLS","php","yaml","markdown","typescript","builtinPlugins","_loadPlugin","pluginName","includes","console","log","WorkerComm","setExecHandler"],"mappings":"AAsBAA,iBAAiBC,QAAQC,4CACzBF,iBAAiBC,QAAQC,8CACzBF,iBAAiBC,QAAQC,6CACzBF,iBAAiBC,QAAQC,gDAExB,WAEG,SAASC,sBAAsBC,QAASC,QAASC,MAAOC,KACpD,IAAIC,gBAAkBJ,QAAQK,OAASF,IACnCG,cAAgBJ,MAChBK,YAAcN,QAAQI,OAASD,gBAC/BI,kBAAoBR,QAAQK,OAASD,gBACzC,MAAO,CACHK,KAAMR,QACNS,YAAaT,QAAQU,UAAUL,cAAeC,aAC9CK,WAAYN,cACZO,SAAUN,YACVC,kBAAmBA,mBAI3B,SAASM,SAASC,QACd,IAAIC,QAAUD,OAAOC,SAAW,GAChCA,QAAQC,QAASC,gBAIjB,IAAIC,oBAAsBH,QAAQJ,aAAeI,QAAQH,SACzDG,QAAQJ,WAAaI,QAAQJ,YAAc,EAC3CI,QAAQH,SAAWG,QAAQH,UAAYE,OAAON,KAAKJ,OACnD,IAAIe,WAAaC,SAASC,OAAOP,OAAON,KAAMO,SAC9C,OAAGG,mBACQ,CACHV,KAAMW,WACNG,aAAcR,OAAOQ,cAGtBxB,sBAAsBgB,OAAON,KAAMW,WAAYJ,QAAQJ,WAAYI,QAAQH,UAGtF,IAAIW,WAAa,CACbC,OAAQ5B,QAAQC,+CAChB4B,QAAS7B,QAAQC,4CACjB6B,YAAa9B,QAAQC,gDACrB8B,cAAe/B,QAAQC,mDAEvB+B,eAAiB,CAAC,QAAS,iBAAkB,OAAQ,MAAO,OAAQ,QACxE,SAASC,YAAYC,YACdP,WAAWO,YACVnC,cAAc4B,WAAWO,aAGzBF,eAAeG,SAASD,aACxBE,QAAQC,IAAI,uBAAwBH,YAI5CI,WAAWC,eAAe,WAAYtB,UACtCqB,WAAWC,eAAe,qBAAsBN,aArDpD","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/*global Phoenix, WorkerComm, prettier, prettierPlugins, FastDiff, Diff*/\n\nimportScripts(`${Phoenix.baseURL}thirdparty/prettier/standalone.js`);\nimportScripts(`${Phoenix.baseURL}thirdparty/prettier/parser-babel.js`);\nimportScripts(`${Phoenix.baseURL}thirdparty/prettier/parser-html.js`);\nimportScripts(`${Phoenix.baseURL}thirdparty/prettier/parser-postcss.js`);\n\n(function () {\n    // see https://prettier.io/docs/en/options.html#parser for more parsers available\n    function _identifyChangedRange(oldText, newText, start, end) {\n        let charsToEndIndex = oldText.length - end;\n        let newRangeStart = start,\n            newRangeEnd = newText.length - charsToEndIndex,\n            rangeEndInOldText = oldText.length - charsToEndIndex;\n        return {\n            text: newText,\n            changedText: newText.substring(newRangeStart, newRangeEnd),\n            rangeStart: newRangeStart,\n            rangeEnd: newRangeEnd,\n            rangeEndInOldText: rangeEndInOldText\n        };\n    }\n\n    function prettify(params) {\n        let options = params.options || {};\n        options.plugins= prettierPlugins;\n        // options.cursorOffset this option doesnt work well and prettier.formatWithCursor is buggy causing hangs\n        // unpredictably in worker thread. Hangs noted in large html, js and json files. test thoroughly before\n        // trying to implement again. https://github.com/prettier/prettier/issues/13387\n        let isFullFileBeautify = !options.rangeStart || !options.rangeEnd;\n        options.rangeStart = options.rangeStart || 0;\n        options.rangeEnd = options.rangeEnd || params.text.length;\n        let prettyText = prettier.format(params.text, options);\n        if(isFullFileBeautify){\n            return {\n                text: prettyText,\n                cursorOffset: params.cursorOffset\n            };\n        }\n        return _identifyChangedRange(params.text, prettyText, options.rangeStart, options.rangeEnd);\n    }\n\n    let pluginURLS = {\n        php: `${Phoenix.baseURL}thirdparty/prettier/php/standalone.js`,\n        yaml: `${Phoenix.baseURL}thirdparty/prettier/parser-yaml.js`,\n        markdown: `${Phoenix.baseURL}thirdparty/prettier/parser-markdown.js`,\n        typescript: `${Phoenix.baseURL}thirdparty/prettier/parser-typescript.js`\n    };\n    let builtinPlugins = [\"babel\", \"json-stringify\", \"html\", \"css\", \"less\", \"scss\"];\n    function _loadPlugin(pluginName) {\n        if(pluginURLS[pluginName]){\n            importScripts(pluginURLS[pluginName]);\n            return;\n        }\n        if(!builtinPlugins.includes(pluginName)){\n            console.log(\"no plugin loaded for\", pluginName);\n        }\n    }\n\n    WorkerComm.setExecHandler(\"prettify\", prettify);\n    WorkerComm.setExecHandler(\"loadPrettierPlugin\", _loadPlugin);\n}());\n"],"file":"prettier-helper.js"}