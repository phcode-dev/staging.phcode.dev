define(function(require,exports,module){const ColorUtils=brackets.getModule("utils/ColorUtils"),CSSUtils=brackets.getModule("language/CSSUtils"),TokenUtils=brackets.getModule("utils/TokenUtils"),AppInit=brackets.getModule("utils/AppInit"),QuickView=brackets.getModule("features/QuickViewManager"),Strings=brackets.getModule("strings"),Metrics=brackets.getModule("utils/Metrics"),CommandManager=brackets.getModule("command/CommandManager"),Commands=brackets.getModule("command/Commands");let styleLanguages=["css","text/x-less","sass","text/x-scss","stylus"];function getQuickView(editor,pos,token,line){return new Promise((resolve,reject)=>{let gradientRegEx=/-webkit-gradient\((?:[^\(]*?(?:\((?:[^\(]*?(?:\([^\)]*?\))*?)*?\))*?)*?\)|(?:(?:-moz-|-ms-|-o-|-webkit-|:|\s)((repeating-)?linear-gradient)|(?:-moz-|-ms-|-o-|-webkit-|:|\s)((repeating-)?radial-gradient))(\((?:[^\)]*?(?:\([^\)]*?\))*?)*?\))/gi,colorRegEx=new RegExp(ColorUtils.COLOR_REGEX),mode=TokenUtils.getModeAt(editor._codeMirror,pos,!1),isStyleSheet=-1!==styleLanguages.indexOf(mode);function areParensBalanced(str){let i,nestLevel=0,len;for(isStyleSheet&&(str=CSSUtils.reduceStyleSheetForRegExParsing(str)),len=str.length,i=0;i<len;i++)switch(str[i]){case"(":nestLevel++;break;case")":nestLevel--;break;case"\\":i++}return 0===nestLevel}function execGradientMatch(line,parensBalanced){let gradientMatch=parensBalanced?gradientRegEx.exec(line):null,prefix="",colorValue;return gradientMatch&&(-1!==gradientMatch[0].indexOf("@")?gradientMatch=null:(gradientMatch[0].match(/-o-|-moz-|-ms-|-webkit-/i)&&(prefix="-webkit-"),gradientMatch[1]?colorValue=gradientMatch[1]+gradientMatch[5]:gradientMatch[3]?colorValue=gradientMatch[3]+gradientMatch[5]:gradientMatch[0]&&(colorValue=gradientMatch[0],prefix=""))),{match:gradientMatch,prefix:prefix,colorValue:colorValue}}function execColorMatch(editor,line,pos){let colorMatch,ignoreNamedColors;function hyphenOnMatchBoundary(match,line){let beforeIndex,afterIndex;if(match){if((beforeIndex=match.index-1)>=0&&"-"===line[beforeIndex])return!0;if((afterIndex=match.index+match[0].length)<line.length&&"-"===line[afterIndex])return!0}return!1}function isNamedColor(match){if(match&&match[0]&&/^[a-z]+$/i.test(match[0]))return!0}do{if(!(colorMatch=colorRegEx.exec(line)))break;if(void 0===ignoreNamedColors){let mode=TokenUtils.getModeAt(editor._codeMirror,pos,!1).name;ignoreNamedColors=-1===styleLanguages.indexOf(mode)}}while(hyphenOnMatchBoundary(colorMatch,line)||ignoreNamedColors&&isNamedColor(colorMatch));return colorMatch}function splitStyleProperty(property){let token=/((?:[^"']|".*?"|'.*?')*?)([(,)]|$)/g,recurse=function(){let array=[];for(;;){let result=token.exec(property);if("("===result[2]){let str=result[1].trim()+"("+recurse().join(",")+")";str+=(result=token.exec(property))[1],array.push(str)}else array.push(result[1].trim());if(","!==result[2])return array}};return recurse()}function isGradientColorStop(args){return args.length>0&&null!==args[0].match(colorRegEx)}function hasLengthInPixels(args){return args.length>1&&args[1].indexOf("px")>0}function ensureHexFormat(str){return/^0x/.test(str)?str.replace("0x","#"):str}function normalizeGradientExpressionForQuickview(expression){if(expression.indexOf("px")>0){let paramStart=expression.indexOf("(")+1,paramEnd=expression.lastIndexOf(")"),parameters,params=splitStyleProperty(expression.substring(paramStart,paramEnd)),lowerBound=0,upperBound=$("#quick-view-color-swatch").width(),args,thisSize,i;for(i=0;i<params.length;i++)hasLengthInPixels(args=params[i].split(" "))&&(thisSize=parseFloat(args[1]),upperBound=Math.max(upperBound,thisSize),thisSize<0&&(lowerBound=Math.min(lowerBound,thisSize)));for(upperBound+=lowerBound=Math.abs(lowerBound),i=0;i<params.length;i++)isGradientColorStop(args=params[i].split(" "))&&hasLengthInPixels(args)&&(thisSize=0===upperBound?0:(parseFloat(args[1])+lowerBound)/upperBound*100,args[1]=thisSize+"%"),params[i]=args.join(" ");expression=expression.substring(0,paramStart)+params.join(", ")+expression.substring(paramEnd)}return expression}let parensBalanced=areParensBalanced(line),gradientMatch=execGradientMatch(line,parensBalanced),match=gradientMatch.match||execColorMatch(editor,line,pos),previewCSS,startPos,endPos,found=!1;for(;match;){if(pos.ch<match.index){if(!gradientMatch.match)break;gradientMatch={match:null,prefix:"",colorValue:null}}else if(pos.ch<=match.index+match[0].length){previewCSS=gradientMatch.prefix+(gradientMatch.colorValue||match[0]),startPos={line:pos.line,ch:match.index},endPos={line:pos.line,ch:match.index+match[0].length},found=!0;break}gradientMatch.match&&(gradientMatch=execGradientMatch(line,parensBalanced)),match=gradientMatch.match||execColorMatch(editor,line,pos)}if(found){let tooltip=gradientMatch.match?"":Strings.TOOLTIP_CLICK_TO_EDIT_COLOR;previewCSS=normalizeGradientExpressionForQuickview(ensureHexFormat(previewCSS));let preview=$(`<div id='quick-view-color-swatch' data-for-test='${previewCSS}' class='color-swatch'\n                        style='background: ${previewCSS}' title="${tooltip}">\n                        </div>`);return preview.click(function(){gradientMatch.match||(editor.setCursorPos(startPos),CommandManager.execute(Commands.TOGGLE_QUICK_EDIT),Metrics.countEvent(Metrics.EVENT_TYPE.QUICK_VIEW,"color","click"))}),Metrics.countEvent(Metrics.EVENT_TYPE.QUICK_VIEW,"color","show"),void resolve({start:startPos,end:endPos,content:preview})}reject()})}AppInit.appReady(function(){QuickView.registerQuickViewProvider(exports,["all"])}),exports.getQuickView=getQuickView,exports.QUICK_VIEW_NAME="colorGradientProvider"});
//# sourceMappingURL=colorGradientProvider.js.map
