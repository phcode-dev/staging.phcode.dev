{"version":3,"sources":["thirdparty/tern/lib/bootstrap.js"],"names":["tern","require","fs","path","url","glob","minimatch","resolveFrom","projectFileName","portFileName","findProjectDir","dir","process","cwd","statSync","resolve","isFile","e","shorter","dirname","defaultConfig","libs","loadEagerly","plugins","doc_comment","ecmaScript","ecmaVersion","dependencyBudget","defaultOptions","homeDir","env","HOME","USERPROFILE","readJSON","fileName","file","readFileSync","JSON","parse","console","error","message","exit","readProjectFile","data","name","option","hasOwnProperty","Object","prototype","call","findFile","projectDir","fallbackDir","options","local","disableLoadingLocal","existsSync","shared","distDir","__dirname","findDefs","config","defs","src","slice","indexOf","unshift","i","length","test","found","stderr","write","push","loadPlugins","plugin","val","mod","initialize","basename","startServer","ternConfig","getFile","c","dontLoad","some","pat","readFile","normalizeFilename","pt","realPathSync","relative","async","server","Server","forEach","sync","addFile","flush","module","exports","bootstrapServer"],"mappings":"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","sourcesContent":["var tern = require(\"./tern\");\nvar fs = require(\"fs\"), path = require(\"path\"), url = require(\"url\");\nvar glob = require(\"glob\"), minimatch = require(\"minimatch\");\nvar resolveFrom = require(\"resolve-from\");\n\nvar projectFileName = \".tern-project\", portFileName = \".tern-port\";\n\nfunction findProjectDir() {\n  var dir = process.cwd();\n  for (;;) {\n    try {\n      if (fs.statSync(path.resolve(dir, projectFileName)).isFile()) return dir;\n    } catch(e) {}\n    var shorter = path.dirname(dir);\n    if (shorter == dir) return null;\n    dir = shorter;\n  }\n}\n\nvar defaultConfig = {\n  libs: [],\n  loadEagerly: false,\n  plugins: {doc_comment: true},\n  ecmaScript: true,\n  ecmaVersion: 9,\n  dependencyBudget: tern.defaultOptions.dependencyBudget\n};\nvar homeDir = process.env.HOME || process.env.USERPROFILE;\nif (homeDir && fs.existsSync(path.resolve(homeDir, \".tern-config\")))\n  defaultConfig = readProjectFile(path.resolve(homeDir, \".tern-config\"));\n\nfunction readJSON(fileName) {\n  var file = fs.readFileSync(fileName, \"utf8\");\n  try {\n    return JSON.parse(file);\n  } catch (e) {\n    console.error(\"Bad JSON in \" + fileName + \": \" + e.message);\n    process.exit(1);\n  }\n}\n\nfunction readProjectFile(fileName) {\n  var data = readJSON(fileName), name;\n  for (var option in defaultConfig) {\n    if (!data.hasOwnProperty(option))\n      data[option] = defaultConfig[option];\n    else if (option == \"plugins\")\n      for (name in defaultConfig.plugins)\n        if (!Object.prototype.hasOwnProperty.call(data.plugins, name))\n          data.plugins[name] = defaultConfig.plugins[name];\n  }\n  return data;\n}\n\nfunction findFile(file, projectDir, fallbackDir, options) {\n  var local = path.resolve(projectDir, file);\n  if (!options.disableLoadingLocal && fs.existsSync(local)) return local;\n  var shared = path.resolve(fallbackDir, file);\n  if (fs.existsSync(shared)) return shared;\n}\n\nvar distDir = path.resolve(__dirname, \"..\");\n\nfunction findDefs(projectDir, config, options) {\n  var defs = [], src = config.libs.slice();\n  if (config.ecmaScript && src.indexOf(\"ecmascript\") == -1)\n    src.unshift(\"ecmascript\");\n  for (var i = 0; i < src.length; ++i) {\n    var file = src[i];\n    if (!/\\.json$/.test(file)) file = file + \".json\";\n    var found = findFile(file, projectDir, path.resolve(distDir, \"defs\"), options)\n        || resolveFrom(projectDir, \"tern-\" + src[i]);\n    if (!found) {\n      try {\n        found = require.resolve(\"tern-\" + src[i]);\n      } catch (e) {\n        process.stderr.write(\"Failed to find library \" + src[i] + \".\\n\");\n        continue;\n      }\n    }\n    if (found) defs.push(readJSON(found));\n  }\n  return defs;\n}\n\nfunction loadPlugins(projectDir, config, options) {\n  var plugins = config.plugins, options = {};\n  for (var plugin in plugins) {\n    var val = plugins[plugin];\n    if (!val) continue;\n    var found = findFile(plugin + \".js\", projectDir, path.resolve(distDir, \"plugin\"), options)\n        || resolveFrom(projectDir, \"tern-\" + plugin);\n    if (!found) {\n      try {\n        found = require.resolve(\"tern-\" + plugin);\n      } catch (e) {\n        process.stderr.write(\"Failed to find plugin \" + plugin + \".\\n\");\n        continue;\n      }\n    }\n    var mod = require(found);\n    if (mod.hasOwnProperty(\"initialize\")) mod.initialize(distDir);\n    options[path.basename(plugin)] = val;\n  }\n\n  return options;\n}\n\nfunction startServer(dir, config, options) {\n  var defs = findDefs(dir, config, options);\n  var plugins = loadPlugins(dir, config, options);\n  var ternConfig = {\n    getFile: function(name, c) {\n      if (config.dontLoad && config.dontLoad.some(function(pat) {return minimatch(name, pat)}))\n        c(null, \"\");\n      else\n        fs.readFile(path.resolve(dir, name), \"utf8\", c);\n    },\n    normalizeFilename: function(name) {\n      var pt = path.resolve(dir, name);\n      try { pt = fs.realPathSync(path.resolve(dir, name), true) }\n      catch(e) {}\n      return path.relative(dir, pt);\n    },\n    async: true,\n    defs: defs,\n    plugins: plugins,\n    projectDir: dir,\n    ecmaVersion: config.ecmaVersion,\n    dependencyBudget: config.dependencyBudget,\n  };\n  if (options.tern) {\n    for (var option in options.tern) {\n      if (options.tern.hasOwnProperty(option)) {\n        ternConfig[option] = options.tern[option];\n      }\n    }\n  }\n  var server = new tern.Server(ternConfig);\n\n  if (config.loadEagerly) config.loadEagerly.forEach(function(pat) {\n    glob.sync(pat, { cwd: dir }).forEach(function(file) {\n      server.addFile(file);\n    });\n  });\n  server.flush(function(){});\n  return server;\n}\n\nmodule.exports = function bootstrapServer(options) {\n  var projectDir = options.projectDir;\n  if (!projectDir) {\n    projectDir = findProjectDir();\n  }\n\n  if (projectDir) {\n    var config = readProjectFile(path.resolve(projectDir, projectFileName));\n  } else {\n    projectDir = process.cwd();\n    var config = defaultConfig;\n  }\n  return startServer(projectDir, config, options);\n}\n"],"file":"bootstrap.js"}