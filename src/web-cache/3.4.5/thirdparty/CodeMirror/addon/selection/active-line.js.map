{"version":3,"sources":["thirdparty/CodeMirror/addon/selection/active-line.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","WRAP_CLASS","BACK_CLASS","GUTT_CLASS","clearActiveLines","cm","i","state","activeLines","length","removeLineClass","sameArray","a","b","updateActiveLines","ranges","active","range","option","getOption","nonEmpty","anchor","line","head","empty","getLineHandleVisualStart","push","operation","addLineClass","selectionChange","sel","defineOption","val","old","prev","Init","off","listSelections","on"],"mappings":"CAGA,SAAUA,KACc,iBAAXC,SAAwC,iBAAVC,OACvCF,IAAIG,QAAQ,yBACY,mBAAVC,QAAwBA,OAAOC,IAC7CD,OAAO,CAAC,wBAAyBJ,KAEjCA,IAAIM,YANR,CAOG,SAASA,YACV,aACA,IAAIC,WAAa,wBACbC,WAAa,mCACbC,WAAa,+BAiBjB,SAASC,iBAAiBC,IACxB,IAAK,IAAIC,EAAI,EAAGA,EAAID,GAAGE,MAAMC,YAAYC,OAAQH,IAC/CD,GAAGK,gBAAgBL,GAAGE,MAAMC,YAAYF,GAAI,OAAQL,YACpDI,GAAGK,gBAAgBL,GAAGE,MAAMC,YAAYF,GAAI,aAAcJ,YAC1DG,GAAGK,gBAAgBL,GAAGE,MAAMC,YAAYF,GAAI,SAAUH,YAI1D,SAASQ,UAAUC,EAAGC,GACpB,GAAID,EAAEH,QAAUI,EAAEJ,OAAQ,OAAO,EACjC,IAAK,IAAIH,EAAI,EAAGA,EAAIM,EAAEH,OAAQH,IAC5B,GAAIM,EAAEN,IAAMO,EAAEP,GAAI,OAAO,EAC3B,OAAO,EAGT,SAASQ,kBAAkBT,GAAIU,QAE7B,IADA,IAAIC,OAAS,GACJV,EAAI,EAAGA,EAAIS,OAAON,OAAQH,IAAK,CACtC,IAAIW,MAAQF,OAAOT,GACfY,OAASb,GAAGc,UAAU,mBAC1B,GAAqB,iBAAVD,QAAsBA,OAAOE,SAAWH,MAAMI,OAAOC,MAAQL,MAAMM,KAAKD,KAAQL,MAAMO,QAAjG,CAEA,IAAIF,KAAOjB,GAAGoB,yBAAyBR,MAAMM,KAAKD,MAC9CN,OAAOA,OAAOP,OAAS,IAAMa,MAAMN,OAAOU,KAAKJ,OAEjDX,UAAUN,GAAGE,MAAMC,YAAaQ,SACpCX,GAAGsB,UAAU,WACXvB,iBAAiBC,IACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIU,OAAOP,OAAQH,IACjCD,GAAGuB,aAAaZ,OAAOV,GAAI,OAAQL,YACnCI,GAAGuB,aAAaZ,OAAOV,GAAI,aAAcJ,YACzCG,GAAGuB,aAAaZ,OAAOV,GAAI,SAAUH,YAEvCE,GAAGE,MAAMC,YAAcQ,SAI3B,SAASa,gBAAgBxB,GAAIyB,KAC3BhB,kBAAkBT,GAAIyB,IAAIf,QArD5Bf,WAAW+B,aAAa,mBAAmB,EAAO,SAAS1B,GAAI2B,IAAKC,KAClE,IAAIC,KAAOD,KAAOjC,WAAWmC,MAAeF,IACxCD,KAAOE,OACPA,OACF7B,GAAG+B,IAAI,wBAAyBP,iBAChCzB,iBAAiBC,WACVA,GAAGE,MAAMC,aAEdwB,MACF3B,GAAGE,MAAMC,YAAc,GACvBM,kBAAkBT,GAAIA,GAAGgC,kBACzBhC,GAAGiC,GAAG,wBAAyBT","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n  var WRAP_CLASS = \"CodeMirror-activeline\";\n  var BACK_CLASS = \"CodeMirror-activeline-background\";\n  var GUTT_CLASS = \"CodeMirror-activeline-gutter\";\n\n  CodeMirror.defineOption(\"styleActiveLine\", false, function(cm, val, old) {\n    var prev = old == CodeMirror.Init ? false : old;\n    if (val == prev) return\n    if (prev) {\n      cm.off(\"beforeSelectionChange\", selectionChange);\n      clearActiveLines(cm);\n      delete cm.state.activeLines;\n    }\n    if (val) {\n      cm.state.activeLines = [];\n      updateActiveLines(cm, cm.listSelections());\n      cm.on(\"beforeSelectionChange\", selectionChange);\n    }\n  });\n\n  function clearActiveLines(cm) {\n    for (var i = 0; i < cm.state.activeLines.length; i++) {\n      cm.removeLineClass(cm.state.activeLines[i], \"wrap\", WRAP_CLASS);\n      cm.removeLineClass(cm.state.activeLines[i], \"background\", BACK_CLASS);\n      cm.removeLineClass(cm.state.activeLines[i], \"gutter\", GUTT_CLASS);\n    }\n  }\n\n  function sameArray(a, b) {\n    if (a.length != b.length) return false;\n    for (var i = 0; i < a.length; i++)\n      if (a[i] != b[i]) return false;\n    return true;\n  }\n\n  function updateActiveLines(cm, ranges) {\n    var active = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      var option = cm.getOption(\"styleActiveLine\");\n      if (typeof option == \"object\" && option.nonEmpty ? range.anchor.line != range.head.line : !range.empty())\n        continue\n      var line = cm.getLineHandleVisualStart(range.head.line);\n      if (active[active.length - 1] != line) active.push(line);\n    }\n    if (sameArray(cm.state.activeLines, active)) return;\n    cm.operation(function() {\n      clearActiveLines(cm);\n      for (var i = 0; i < active.length; i++) {\n        cm.addLineClass(active[i], \"wrap\", WRAP_CLASS);\n        cm.addLineClass(active[i], \"background\", BACK_CLASS);\n        cm.addLineClass(active[i], \"gutter\", GUTT_CLASS);\n      }\n      cm.state.activeLines = active;\n    });\n  }\n\n  function selectionChange(cm, sel) {\n    updateActiveLines(cm, sel.ranges);\n  }\n});\n"],"file":"active-line.js"}