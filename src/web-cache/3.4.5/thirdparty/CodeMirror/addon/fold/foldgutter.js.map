{"version":3,"sources":["thirdparty/CodeMirror/addon/fold/foldgutter.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineOption","cm","val","old","Init","clearGutter","state","foldGutter","options","gutter","off","onGutterClick","onChange","onViewportChange","onFold","State","parseOptions","updateInViewport","on","Pos","this","from","to","opts","indicatorOpen","indicatorFolded","isFolded","line","marks","findMarks","i","length","__isFold","fromPos","find","marker","spec","elt","document","createElement","className","cloneNode","updateFoldInfo","cur","minSize","foldOption","func","clsFolded","classTest","clsOpen","eachLine","mark","gutterMarkers","test","pos","range","setGutterMarker","cls","RegExp","vp","getViewport","operation","folded","clear","foldCode","clearTimeout","changeUpdate","setTimeout","foldOnChangeTimeSpan","updateViewportTimeSpan"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"./foldcode\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"./foldcode\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"foldGutter\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.clearGutter(cm.state.foldGutter.options.gutter);\n      cm.state.foldGutter = null;\n      cm.off(\"gutterClick\", onGutterClick);\n      cm.off(\"changes\", onChange);\n      cm.off(\"viewportChange\", onViewportChange);\n      cm.off(\"fold\", onFold);\n      cm.off(\"unfold\", onFold);\n      cm.off(\"swapDoc\", onChange);\n    }\n    if (val) {\n      cm.state.foldGutter = new State(parseOptions(val));\n      updateInViewport(cm);\n      cm.on(\"gutterClick\", onGutterClick);\n      cm.on(\"changes\", onChange);\n      cm.on(\"viewportChange\", onViewportChange);\n      cm.on(\"fold\", onFold);\n      cm.on(\"unfold\", onFold);\n      cm.on(\"swapDoc\", onChange);\n    }\n  });\n\n  var Pos = CodeMirror.Pos;\n\n  function State(options) {\n    this.options = options;\n    this.from = this.to = 0;\n  }\n\n  function parseOptions(opts) {\n    if (opts === true) opts = {};\n    if (opts.gutter == null) opts.gutter = \"CodeMirror-foldgutter\";\n    if (opts.indicatorOpen == null) opts.indicatorOpen = \"CodeMirror-foldgutter-open\";\n    if (opts.indicatorFolded == null) opts.indicatorFolded = \"CodeMirror-foldgutter-folded\";\n    return opts;\n  }\n\n  function isFolded(cm, line) {\n    var marks = cm.findMarks(Pos(line, 0), Pos(line + 1, 0));\n    for (var i = 0; i < marks.length; ++i) {\n      if (marks[i].__isFold) {\n        var fromPos = marks[i].find(-1);\n        if (fromPos && fromPos.line === line)\n          return marks[i];\n      }\n    }\n  }\n\n  function marker(spec) {\n    if (typeof spec == \"string\") {\n      var elt = document.createElement(\"div\");\n      elt.className = spec + \" CodeMirror-guttermarker-subtle\";\n      return elt;\n    } else {\n      return spec.cloneNode(true);\n    }\n  }\n\n  function updateFoldInfo(cm, from, to) {\n    var opts = cm.state.foldGutter.options, cur = from - 1;\n    var minSize = cm.foldOption(opts, \"minFoldSize\");\n    var func = cm.foldOption(opts, \"rangeFinder\");\n    // we can reuse the built-in indicator element if its className matches the new state\n    var clsFolded = typeof opts.indicatorFolded == \"string\" && classTest(opts.indicatorFolded);\n    var clsOpen = typeof opts.indicatorOpen == \"string\" && classTest(opts.indicatorOpen);\n    cm.eachLine(from, to, function(line) {\n      ++cur;\n      var mark = null;\n      var old = line.gutterMarkers;\n      if (old) old = old[opts.gutter];\n      if (isFolded(cm, cur)) {\n        if (clsFolded && old && clsFolded.test(old.className)) return;\n        mark = marker(opts.indicatorFolded);\n      } else {\n        var pos = Pos(cur, 0);\n        var range = func && func(cm, pos);\n        if (range && range.to.line - range.from.line >= minSize) {\n          if (clsOpen && old && clsOpen.test(old.className)) return;\n          mark = marker(opts.indicatorOpen);\n        }\n      }\n      if (!mark && !old) return;\n      cm.setGutterMarker(line, opts.gutter, mark);\n    });\n  }\n\n  // copied from CodeMirror/src/util/dom.js\n  function classTest(cls) { return new RegExp(\"(^|\\\\s)\" + cls + \"(?:$|\\\\s)\\\\s*\") }\n\n  function updateInViewport(cm) {\n    var vp = cm.getViewport(), state = cm.state.foldGutter;\n    if (!state) return;\n    cm.operation(function() {\n      updateFoldInfo(cm, vp.from, vp.to);\n    });\n    state.from = vp.from; state.to = vp.to;\n  }\n\n  function onGutterClick(cm, line, gutter) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    if (gutter != opts.gutter) return;\n    var folded = isFolded(cm, line);\n    if (folded) folded.clear();\n    else cm.foldCode(Pos(line, 0), opts);\n  }\n\n  function onChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    state.from = state.to = 0;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function() { updateInViewport(cm); }, opts.foldOnChangeTimeSpan || 600);\n  }\n\n  function onViewportChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function() {\n      var vp = cm.getViewport();\n      if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n        updateInViewport(cm);\n      } else {\n        cm.operation(function() {\n          if (vp.from < state.from) {\n            updateFoldInfo(cm, vp.from, state.from);\n            state.from = vp.from;\n          }\n          if (vp.to > state.to) {\n            updateFoldInfo(cm, state.to, vp.to);\n            state.to = vp.to;\n          }\n        });\n      }\n    }, opts.updateViewportTimeSpan || 400);\n  }\n\n  function onFold(cm, from) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var line = from.line;\n    if (line >= state.from && line < state.to)\n      updateFoldInfo(cm, line, line + 1);\n  }\n});\n"],"file":"foldgutter.js"}