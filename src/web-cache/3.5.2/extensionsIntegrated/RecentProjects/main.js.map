{"version":3,"sources":["extensionsIntegrated/RecentProjects/main.js"],"names":["define","require","exports","module","ProjectManager","SidebarView","PreferencesManager","Commands","CommandManager","Menus","MainViewManager","FileSystem","AppInit","KeyEvent","FileUtils","PopUpManager","Strings","Mustache","ProjectsMenuTemplate","ExtensionInterface","RECENT_PROJECTS_INTERFACE","registerExtensionInterface","RECENT_PROJECT_STATE","stateManager","definePreference","watchExternalChanges","TOGGLE_DROPDOWN","MAX_PROJECTS","$dropdownItem","$dropdown","$links","getRecentProjects","recentProjects","getViewState","i","length","stripTrailingSlash","updateWelcomeProjectPath","add","root","getProjectRoot","fullPath","index","indexOf","splice","unshift","slice","setViewState","checkHovers","pageX","pageY","children","each","offset","$","this","width","outerWidth","height","outerHeight","left","top","triggerHandler","removeFromRecentProject","newProjects","push","renderDelete","mouseup","e","stopPropagation","parent","data","closest","remove","find","removeDeleteButton","addDeleteButton","$target","css","position","appendTo","selectNextItem","direction","$newItem","eq","searchStr","hasClass","removeClass","addClass","filterDropdown","searchString","$stickyLi","li","$li","text","toLowerCase","includes","removeSelectedItem","$cacheItem","keydownHook","event","keyHandled","keyCode","DOM_VK_UP","DOM_VK_DOWN","DOM_VK_ENTER","DOM_VK_RETURN","trigger","DOM_VK_DELETE","stopImmediatePropagation","preventDefault","ctrlKey","metaKey","key","Phoenix","app","clipboardReadText","then","closeDropdown","removePopUp","cleanupDropdown","off","focusActivePane","window","openProjectWithPath","Promise","resolve","reject","openProject","fail","err","item","_handleListEvents","on","$link","id","attr","path","execute","FILE_OPEN_FOLDER","FILE_NEW_PROJECT","FILE_DOWNLOAD_PROJECT","get","renderPath","parentDirPath","VFS","ensureTrailingSlash","dirname","rest","startsWith","getTauriDir","fs","getTauriPlatformPath","getMountDir","displayPath","replace","PROJECT_FROM_BROWSER_TERSE","folder","basename","renderList","downloadProjectCommand","currentProject","templateVars","projectList","downloadProjectClass","getEnabled","forEach","render","showDropdown","closeAll","addPopUp","handleKeyEvent","isVisible","show","focus","setTimeout","register","CMD_TOGGLE_RECENT_PROJECTS","appReady","htmlReady","wrap","after","cmenuAdapter","open","close","isOpen","ContextMenu","assignContextMenuToSelector"],"mappings":"AAuBAA,OAAO,SAAUC,QAASC,QAASC,QAI/B,MAAMC,eAA0BH,QAAQ,0BACpCI,YAA0BJ,QAAQ,uBAClCK,mBAA0BL,QAAQ,kCAClCM,SAA0BN,QAAQ,oBAClCO,eAA0BP,QAAQ,0BAClCQ,MAA0BR,QAAQ,iBAClCS,gBAA0BT,QAAQ,wBAClCU,WAA0BV,QAAQ,yBAClCW,QAA0BX,QAAQ,iBAClCY,SAA0BZ,QAAQ,kBAClCa,UAA0Bb,QAAQ,kBAClCc,aAA0Bd,QAAQ,wBAClCe,QAA0Bf,QAAQ,WAClCgB,SAA0BhB,QAAQ,gCAClCiB,qBAA0BjB,QAAQ,yCAClCkB,mBAAqBlB,QAAQ,4BAE3BmB,0BAA4B,8BAElCD,mBAAmBE,2BAA2BD,0BAA2BlB,SACzE,MAAMoB,qBAAuB,iBAC7BhB,mBAAmBiB,aAAaC,iBAAiBF,qBAAsB,QAAS,IAC3EG,uBAGL,IAAIC,gBAAkB,wBAGtB,IAAIC,aAAe,GAGfC,cACAC,UACAC,OAMJ,SAASC,oBACL,IAAIC,eAAiB1B,mBAAmB2B,aAAaX,uBAAyB,GAC1EY,EAEJ,IAAKA,EAAI,EAAGA,EAAIF,eAAeG,OAAQD,IAEnCF,eAAeE,GAAKpB,UAAUsB,mBAAmBhC,eAAeiC,yBAAyBL,eAAeE,GAAK,MAEjH,OAAOF,eAMX,SAASM,MACL,IAAIC,KAAOzB,UAAUsB,mBAAmBhC,eAAeoC,iBAAiBC,UACpET,eAAiBD,oBACjBW,MAAQV,eAAeW,QAAQJ,OAEpB,IAAXG,OACAV,eAAeY,OAAOF,MAAO,GAEjCV,eAAea,QAAQN,MACnBP,eAAeG,OAASR,eACxBK,eAAiBA,eAAec,MAAM,EAAGnB,eAE7CrB,mBAAmByC,aAAazB,qBAAsBU,gBAQ1D,SAASgB,YAAYC,MAAOC,OACxBrB,UAAUsB,WAAWC,KAAK,WACtB,IAAIC,OAASC,EAAEC,MAAMF,SACjBG,MAASF,EAAEC,MAAME,aACjBC,OAASJ,EAAEC,MAAMI,cAEjBV,OAASI,OAAOO,MAAQX,OAASI,OAAOO,KAAOJ,OAC3CN,OAASG,OAAOQ,KAAOX,OAASG,OAAOQ,IAAMH,QACjDJ,EAAE,sBAAuBC,MAAMO,eAAe,gBAK1D,SAASC,wBAAwBtB,UAC7BA,SAAW3B,UAAUsB,mBAAmBK,UACxC,IAAIT,eAAiBD,oBACjBW,MAAQV,eAAeW,QAAQF,UAC/BuB,YAAc,GACd9B,EACJ,IAAKA,EAAI,EAAGA,EAAIF,eAAeG,OAAQD,IAC/BA,IAAMQ,OACNsB,YAAYC,KAAKjC,eAAeE,IAGxC5B,mBAAmByC,aAAazB,qBAAsB0C,aAM1D,SAASE,eACL,OAAOZ,EAAE,mEACJa,QAAQ,SAAUC,GAEfA,EAAEC,kBAGFN,wBAAwBT,EAAEC,MAAMe,SAASC,KAAK,SAC9CjB,EAAEC,MAAMiB,QAAQ,MAAMC,SACtBzB,YAAYoB,EAAEnB,MAAOmB,EAAElB,OAEY,IAA/BnB,oBAAoBI,QACpBN,UAAU6C,KAAK,YAAYD,WAQ3C,SAASE,qBACLrB,EAAE,yBAAyBmB,SAM/B,SAASG,gBAAgBC,SACrBF,qBACAT,eACKY,IAAI,MAAOD,QAAQE,WAAWlB,IAAM,GACpCmB,SAASH,SAQlB,SAASI,eAAeC,WACpB,IAAIpD,OAAWD,UAAU6C,KAAK,aAC1BhC,MAAWd,cAAgBE,OAAOY,MAAMd,eAAkBsD,UAAY,GAAK,EAAI,EAC/EC,SAAWrD,OAAOsD,IAAI1C,MAAQwC,WAAapD,OAAOK,QAEnDkD,WAA+B,IAAlBvD,OAAOK,SAIpBgD,SAASb,SAASgB,SAAS,oBACZ,IAAX5C,QACCA,MAAQ,GAEZyC,SAAWrD,OAAOsD,IAAI1C,MAAQwC,WAAapD,OAAOK,SAElDP,eACAA,cAAc2D,YAAY,YAE9BJ,SAASK,SAAS,YAElB5D,cAAgBuD,SAChBR,sBAGJ,IAAIU,UAAW,GAKf,SAASI,eAAeC,cACpBL,UAAYK,aACZ,MAAMC,UAAY9D,UAAU6C,KAAK,oBAC9BgB,aACCC,UAAUJ,YAAY,iBAEtBI,UAAUH,SAAS,iBAGvB3D,UAAU6C,KAAK,MAAMtB,KAAK,SAASV,MAAOkD,IACtC,GAAa,IAAVlD,MAEC,OAEJ,MAAMmD,IAAMvC,EAAEsC,IACVC,IAAIC,OAAOC,cAAcC,SAASN,aAAaK,eAG/CF,IAAIN,YAAY,iBAFhBM,IAAIL,SAAS,mBAMlBE,cACCC,UAAUJ,YAAY,iBACtBI,UAAUjB,KAAK,mBAAmBoB,KAAKJ,eAEvCC,UAAUH,SAAS,iBAU3B,SAASS,mBAAmB7B,GACxB,IAAIpC,eAAiBD,oBACjBmE,WAAatE,cACbc,MAAQV,eAAeW,QAAQuD,WAAW3B,KAAK,SAGnD,OAAe,IAAX7B,QAKJV,eAAeY,OAAOF,MAAO,GAC7BpC,mBAAmByC,aAAazB,qBAAsBU,gBACtDgB,YAAYoB,EAAEnB,MAAOmB,EAAElB,OAEO,IAA1BlB,eAAeG,QACfN,UAAU6C,KAAK,YAAYD,SAE/BQ,eAAe,GACfiB,WAAW1B,QAAQ,MAAMC,UAClB,GAQX,SAAS0B,YAAYC,OACjB,IAAIC,YAAa,EAEjB,OAAQD,MAAME,SACd,KAAKzF,SAAS0F,UACVtB,gBAAgB,GAChBoB,YAAa,EACb,MACJ,KAAKxF,SAAS2F,YACVvB,eAAe,GACfoB,YAAa,EACb,MACJ,KAAKxF,SAAS4F,aACd,KAAK5F,SAAS6F,cACN9E,eACAA,cAAc+E,QAAQ,SAE1BN,YAAa,EACb,MACJ,KAAKxF,SAAS+F,cACNhF,gBACAqE,mBAAmBG,OACnBC,YAAa,GAKrB,GAAGA,WAGC,OAFAD,MAAMS,2BACNT,MAAMU,iBACCT,WACJ,IAAID,MAAMW,SAAWX,MAAMY,UAA0B,MAAdZ,MAAMa,IAChDC,QAAQC,IAAIC,oBAAoBC,KAAKvB,OAEjCL,eADAJ,WAAaS,QAGjBO,YAAa,OACV,GAAyB,IAArBD,MAAMa,IAAI9E,OACjBkD,WAAae,MAAMa,IACnBZ,YAAa,MACV,CAAA,GAAkB,cAAdD,MAAMa,IAMb,OAAO,EAJP5B,UAAaA,UAAUvC,MAAM,GAAI,GACjCuD,YAAa,EAWjB,OANAZ,eAAeJ,WAEXgB,aACAD,MAAMS,2BACNT,MAAMU,kBAEHT,WAOX,SAASiB,gBAIDzF,WACAd,aAAawG,YAAY1F,WAE7BwD,UAAY,GAOhB,SAASmC,kBACLlE,EAAE,QAAQmE,IAAI,QAASH,eACvBhE,EAAE,4BAA4BmE,IAAI,SAAUH,eAC5ChE,EAAE,kBAAkBmE,IAAI,QAASH,eACjCzF,UAAY,KAEZnB,gBAAgBgH,kBAEhBpE,EAAEqE,QAAQF,IAAI,UAAWtB,aACzBd,UAAY,GAGhB,SAASuC,oBAAoBnF,UACzB,OAAO,IAAIoF,QAAQ,CAACC,QAASC,UACzB3H,eAAe4H,YAAYvF,UACtB4E,KAAKS,SACLG,KAAK,WAEF,IAAIjG,eAAiBD,oBACjBW,MAAQV,eAAeW,QAAQF,WACpB,IAAXC,MAIJ/B,WAAWmH,QAAQrF,SAAU,SAAUyF,IAAKC,MACpCD,KACAlG,eAAeY,OAAOF,MAAO,GAEjCqF,WAPAA,aAgBpB,SAASK,oBACLvG,UACKwG,GAAG,QAAS,IAAK,WACd,IAAIC,MAAQhF,EAAEC,MACVgF,GAAQD,MAAME,KAAK,MACnBC,KAAQH,MAAM/D,KAAK,QAEnBkE,MACAb,oBAAoBa,MACpBnB,iBAEc,qBAAPiB,GACP/H,eAAekI,QAAQnI,SAASoI,kBAClB,qBAAPJ,GACP/H,eAAekI,QAAQnI,SAASqI,kBAClB,0BAAPL,IACP/H,eAAekI,QAAQnI,SAASsI,yBAIvCR,GAAG,aAAc,IAAK,WACfzG,eACAA,cAAc2D,YAAY,aAE9B3D,cAAgB0B,EAAEC,MAAMiC,SAAS,aAEfF,SAAS,uBAGvBV,gBAAgBtB,EAAEC,SAGzB8E,GAAG,aAAc,IAAK,WACnB,IAAIC,MAAQhF,EAAEC,MAAMgC,YAAY,YAE5B+C,MAAMQ,IAAI,KAAOlH,cAAckH,IAAI,KACnClH,cAAgB,MAEhB0G,MAAMhD,SAAS,uBACfX,uBAUhB,SAASoE,WAAWtG,UAChB,IAAIuG,cAAgB9B,QAAQ+B,IAAIC,oBAAoBvB,OAAOc,KAAKU,QAAQ1G,WACpE2G,KACJ,GAAGJ,cAAcK,WAAWnC,QAAQ+B,IAAIK,eACpCF,KAAO,MAAQzB,OAAO4B,GAAGC,qBAAqBR,oBAC3C,GAAGA,cAAcK,WAAWnC,QAAQ+B,IAAIQ,eAAgB,CAC3D,MAAMC,YAAcV,cAAcW,QAAQzC,QAAQ+B,IAAIQ,cAAe,IAClEC,cACCN,KAAO,MAAQM,kBAGnBN,KAAO,MAAQpI,QAAQ4I,2BAG3B,MAAO,CAACnB,KAAMhG,SAAUoH,OAAQlC,OAAOc,KAAKqB,SAASrH,UAAW2G,KAAMA,MAO1E,SAASW,aACL,MAAM/H,eAAiBD,oBACnBiI,uBAAyBxJ,eAAesI,IAAIvI,SAASsI,uBACrDoB,eAAiBnJ,UAAUsB,mBAAmBhC,eAAeoC,iBAAiBC,UAC9EyH,aAAiB,CACbC,YAAa,GACbnJ,QAASA,QACToJ,qBAAsBJ,uBAAuBK,aAAe,GAAI,iBASxE,OANArI,eAAesI,QAAQ,SAAU/H,MACzBA,OAAS0H,gBACTC,aAAaC,YAAYlG,KAAK8E,WAAWxG,SAI1CtB,SAASsJ,OAAOrJ,qBAAsBgJ,cAQjD,SAASM,aAAazF,UAGdlD,YAIJpB,MAAMgK,WAEN5I,UAAYyB,EAAEyG,cACTjF,IAAI,CACDlB,KAAMmB,SAAS9B,MACfY,IAAKkB,SAAS7B,QAEjB8B,SAAS1B,EAAE,SAEhBvC,aAAa2J,SAAS7I,UAAW2F,iBAAiB,GAIlDlE,EAAE,QAAQ+E,GAAG,QAASf,eAOtBhE,EAAE,4BAA4B+E,GAAG,SAAUf,eAO3ChE,EAAE,kBAAkB+E,GAAG,QAASf,eAEhCc,oBACA9E,EAAEqE,QAAQU,GAAG,UAAWlC,cAO5B,SAASwE,iBACA9I,YACIxB,YAAYuK,aACbvK,YAAYwK,OAGhBvH,EAAE,4BAA4BqD,QAAQ,SAEtC9E,UAAUiJ,QACVhJ,OAASD,UAAU6C,KAAK,MAGxB9C,cAAgBE,OAAOsD,GAAGtD,OAAOK,OAAS,EAAI,EAAI,IACpCqD,SAAS,YAGvBmC,OAAOoD,WAAW,WACdlJ,UAAUiJ,SACX,IAKXtK,eAAewK,SAAShK,QAAQiK,2BAA4BvJ,gBAAiBiJ,gBAG7E/J,QAAQsK,SAAS,WACb9K,eAAeiI,GAAG,cAAe/F,KACjClC,eAAeiI,GAAG,qBAAsB/F,KAExCA,QAGJ1B,QAAQuK,UAAU,WACd7H,EAAE,kBACG8H,KAAK,kEACLC,MAAM,wCAEX,IAAIC,aAAe,CACfC,KAAMf,aACNgB,MAAOlE,cACPmE,OAAQ,WACJ,QAAS5J,YAGjBpB,MAAMiL,YAAYC,4BAA4B,2BAA4BL,gBAG9EpL,QAAQ6B,kBAAoBA,kBAC5B7B,QAAQ0H,oBAAsBA,oBAC9B1H,QAAQ6D,wBAA0BA","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2012 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/*global Phoenix*/\n\ndefine(function (require, exports, module) {\n\n\n    // Brackets modules\n    const ProjectManager          = require(\"project/ProjectManager\"),\n        SidebarView             = require(\"project/SidebarView\"),\n        PreferencesManager      = require(\"preferences/PreferencesManager\"),\n        Commands                = require(\"command/Commands\"),\n        CommandManager          = require(\"command/CommandManager\"),\n        Menus                   = require(\"command/Menus\"),\n        MainViewManager         = require(\"view/MainViewManager\"),\n        FileSystem              = require(\"filesystem/FileSystem\"),\n        AppInit                 = require(\"utils/AppInit\"),\n        KeyEvent                = require(\"utils/KeyEvent\"),\n        FileUtils               = require(\"file/FileUtils\"),\n        PopUpManager            = require(\"widgets/PopUpManager\"),\n        Strings                 = require(\"strings\"),\n        Mustache                = require(\"thirdparty/mustache/mustache\"),\n        ProjectsMenuTemplate    = require(\"text!./htmlContent/projects-menu.html\"),\n        ExtensionInterface = require(\"utils/ExtensionInterface\");\n\n    const RECENT_PROJECTS_INTERFACE = \"Extn.Phoenix.recentProjects\";\n\n    ExtensionInterface.registerExtensionInterface(RECENT_PROJECTS_INTERFACE, exports);\n    const RECENT_PROJECT_STATE = \"recentProjects\";\n    PreferencesManager.stateManager.definePreference(RECENT_PROJECT_STATE, 'array', [])\n        .watchExternalChanges();\n\n    /** @const {string} Recent Projects commands ID */\n    let TOGGLE_DROPDOWN = \"recentProjects.toggle\";\n\n    /** @const {number} Maximum number of displayed recent projects */\n    var MAX_PROJECTS = 20;\n\n    /** @type {$.Element} jQuery elements used for the dropdown menu */\n    var $dropdownItem,\n        $dropdown,\n        $links;\n\n    /**\n     * Get the stored list of recent projects, fixing up paths as appropriate.\n     * Warning: unlike most paths in Brackets, these lack a trailing \"/\"\n     */\n    function getRecentProjects() {\n        var recentProjects = PreferencesManager.getViewState(RECENT_PROJECT_STATE) || [],\n            i;\n\n        for (i = 0; i < recentProjects.length; i++) {\n            // We have to canonicalize & then de-canonicalize the path here, since our pref format uses no trailing \"/\"\n            recentProjects[i] = FileUtils.stripTrailingSlash(ProjectManager.updateWelcomeProjectPath(recentProjects[i] + \"/\"));\n        }\n        return recentProjects;\n    }\n\n    /**\n     * Add a project to the stored list of recent projects, up to MAX_PROJECTS.\n     */\n    function add() {\n        var root = FileUtils.stripTrailingSlash(ProjectManager.getProjectRoot().fullPath),\n            recentProjects = getRecentProjects(),\n            index = recentProjects.indexOf(root);\n\n        if (index !== -1) {\n            recentProjects.splice(index, 1);\n        }\n        recentProjects.unshift(root);\n        if (recentProjects.length > MAX_PROJECTS) {\n            recentProjects = recentProjects.slice(0, MAX_PROJECTS);\n        }\n        PreferencesManager.setViewState(RECENT_PROJECT_STATE, recentProjects);\n    }\n\n    /**\n     * Check the list of items to see if any of them are hovered, and if so trigger a mouseenter.\n     * Normally the mouseenter event handles this, but when a previous item is deleted and the next\n     * item moves up to be underneath the mouse, we don't get a mouseenter event for that item.\n     */\n    function checkHovers(pageX, pageY) {\n        $dropdown.children().each(function () {\n            var offset = $(this).offset(),\n                width  = $(this).outerWidth(),\n                height = $(this).outerHeight();\n\n            if (pageX >= offset.left && pageX <= offset.left + width &&\n                    pageY >= offset.top && pageY <= offset.top + height) {\n                $(\".recent-folder-link\", this).triggerHandler(\"mouseenter\");\n            }\n        });\n    }\n\n    function removeFromRecentProject(fullPath) {\n        fullPath = FileUtils.stripTrailingSlash(fullPath);\n        let recentProjects = getRecentProjects(),\n            index = recentProjects.indexOf(fullPath),\n            newProjects = [],\n            i;\n        for (i = 0; i < recentProjects.length; i++) {\n            if (i !== index) {\n                newProjects.push(recentProjects[i]);\n            }\n        }\n        PreferencesManager.setViewState(RECENT_PROJECT_STATE, newProjects);\n    }\n\n    /**\n     * Create the \"delete\" button that shows up when you hover over a project.\n     */\n    function renderDelete() {\n        return $(\"<div id='recent-folder-delete' class='trash-icon'>&times;</div>\")\n            .mouseup(function (e) {\n                // Don't let the click bubble upward.\n                e.stopPropagation();\n\n                // Remove the project from the preferences.\n                removeFromRecentProject($(this).parent().data(\"path\"));\n                $(this).closest(\"li\").remove();\n                checkHovers(e.pageX, e.pageY);\n\n                if (getRecentProjects().length === 1) {\n                    $dropdown.find(\".divider\").remove();\n                }\n            });\n    }\n\n    /**\n     * Hide the delete button.\n     */\n    function removeDeleteButton() {\n        $(\"#recent-folder-delete\").remove();\n    }\n\n    /**\n     * Show the delete button over a given target.\n     */\n    function addDeleteButton($target) {\n        removeDeleteButton();\n        renderDelete()\n            .css(\"top\", $target.position().top + 6)\n            .appendTo($target);\n    }\n\n\n    /**\n     * Selects the next or previous item in the list\n     * @param {number} direction  +1 for next, -1 for prev\n     */\n    function selectNextItem(direction) {\n        let $links   = $dropdown.find(\"a:visible\"),\n            index    = $dropdownItem ? $links.index($dropdownItem) : (direction > 0 ? -1 : 0),\n            $newItem = $links.eq((index + direction) % $links.length);\n\n        if(searchStr && $links.length === 1){\n            // no search result, only the top search field visible\n            return;\n        }\n        if($newItem.parent().hasClass(\"sticky-li-top\")) {\n            if(index === -1){\n                index = 0;\n            }\n            $newItem = $links.eq((index + direction) % $links.length);\n        }\n        if ($dropdownItem) {\n            $dropdownItem.removeClass(\"selected\");\n        }\n        $newItem.addClass(\"selected\");\n\n        $dropdownItem = $newItem;\n        removeDeleteButton();\n    }\n\n    let searchStr =\"\";\n    /**\n     * hides all elements in popup that doesn't match the given search string, also shows the search bar in popup\n     * @param searchString\n     */\n    function filterDropdown(searchString) {\n        searchStr = searchString;\n        const $stickyLi = $dropdown.find('li.sticky-li-top');\n        if(searchString){\n            $stickyLi.removeClass(\"forced-hidden\");\n        } else {\n            $stickyLi.addClass(\"forced-hidden\");\n        }\n\n        $dropdown.find('li').each(function(index, li) {\n            if(index === 0){\n                // this is the top search box itself\n                return;\n            }\n            const $li = $(li);\n            if(!$li.text().toLowerCase().includes(searchString.toLowerCase())){\n                $li.addClass(\"forced-hidden\");\n            } else {\n                $li.removeClass(\"forced-hidden\");\n            }\n        });\n\n        if(searchString) {\n            $stickyLi.removeClass('forced-hidden');\n            $stickyLi.find('.searchTextSpan').text(searchString);\n        } else {\n            $stickyLi.addClass('forced-hidden');\n        }\n    }\n\n    /**\n     * Deletes the selected item and\n     * move the focus to next item in list.\n     *\n     * @return {boolean} TRUE if project is removed\n     */\n    function removeSelectedItem(e) {\n        var recentProjects = getRecentProjects(),\n            $cacheItem = $dropdownItem,\n            index = recentProjects.indexOf($cacheItem.data(\"path\"));\n\n        // When focus is not on project item\n        if (index === -1) {\n            return false;\n        }\n\n        // remove project\n        recentProjects.splice(index, 1);\n        PreferencesManager.setViewState(RECENT_PROJECT_STATE, recentProjects);\n        checkHovers(e.pageX, e.pageY);\n\n        if (recentProjects.length === 1) {\n            $dropdown.find(\".divider\").remove();\n        }\n        selectNextItem(+1);\n        $cacheItem.closest(\"li\").remove();\n        return true;\n    }\n\n    /**\n     * Handles the Key Down events\n     * @param {KeyboardEvent} event\n     * @return {boolean} True if the key was handled\n     */\n    function keydownHook(event) {\n        var keyHandled = false;\n\n        switch (event.keyCode) {\n        case KeyEvent.DOM_VK_UP:\n            selectNextItem(-1);\n            keyHandled = true;\n            break;\n        case KeyEvent.DOM_VK_DOWN:\n            selectNextItem(+1);\n            keyHandled = true;\n            break;\n        case KeyEvent.DOM_VK_ENTER:\n        case KeyEvent.DOM_VK_RETURN:\n            if ($dropdownItem) {\n                $dropdownItem.trigger(\"click\");\n            }\n            keyHandled = true;\n            break;\n        case KeyEvent.DOM_VK_DELETE:\n            if ($dropdownItem) {\n                removeSelectedItem(event);\n                keyHandled = true;\n            }\n            break;\n        }\n\n        if(keyHandled){\n            event.stopImmediatePropagation();\n            event.preventDefault();\n            return keyHandled;\n        } else if((event.ctrlKey || event.metaKey) && event.key === 'v') {\n            Phoenix.app.clipboardReadText().then(text=>{\n                searchStr += text;\n                filterDropdown(searchStr);\n            });\n            keyHandled = true;\n        } else if (event.key.length === 1) {\n            searchStr += event.key;\n            keyHandled = true;\n        } else if (event.key === 'Backspace') {\n            // Remove the last character when Backspace is pressed\n            searchStr  = searchStr.slice(0, -1);\n            keyHandled = true;\n        } else {\n            // bubble up, not for us to handle\n            return false;\n        }\n        filterDropdown(searchStr);\n\n        if (keyHandled) {\n            event.stopImmediatePropagation();\n            event.preventDefault();\n        }\n        return keyHandled;\n    }\n\n\n    /**\n     * Close the dropdown.\n     */\n    function closeDropdown() {\n        // Since we passed \"true\" for autoRemove to addPopUp(), this will\n        // automatically remove the dropdown from the DOM. Also, PopUpManager\n        // will call cleanupDropdown().\n        if ($dropdown) {\n            PopUpManager.removePopUp($dropdown);\n        }\n        searchStr = \"\";\n    }\n\n    /**\n     * Remove the various event handlers that close the dropdown. This is called by the\n     * PopUpManager when the dropdown is closed.\n     */\n    function cleanupDropdown() {\n        $(\"html\").off(\"click\", closeDropdown);\n        $(\"#project-files-container\").off(\"scroll\", closeDropdown);\n        $(\"#titlebar .nav\").off(\"click\", closeDropdown);\n        $dropdown = null;\n\n        MainViewManager.focusActivePane();\n\n        $(window).off(\"keydown\", keydownHook);\n        searchStr = \"\";\n    }\n\n    function openProjectWithPath(fullPath) {\n        return new Promise((resolve, reject)=>{\n            ProjectManager.openProject(fullPath)\n                .then(resolve)\n                .fail(function () {\n                    // Remove the project from the list only if it does not exist on disk\n                    var recentProjects = getRecentProjects(),\n                        index = recentProjects.indexOf(fullPath);\n                    if (index === -1) {\n                        reject();\n                        return;\n                    }\n                    FileSystem.resolve(fullPath, function (err, item) {\n                        if (err) {\n                            recentProjects.splice(index, 1);\n                        }\n                        reject();\n                    });\n                });\n        });\n    }\n\n    /**\n     * Adds the click and mouse enter/leave events to the dropdown\n     */\n    function _handleListEvents() {\n        $dropdown\n            .on(\"click\", \"a\", function () {\n                var $link = $(this),\n                    id    = $link.attr(\"id\"),\n                    path  = $link.data(\"path\");\n\n                if (path) {\n                    openProjectWithPath(path);\n                    closeDropdown();\n\n                } else if (id === \"open-folder-link\") {\n                    CommandManager.execute(Commands.FILE_OPEN_FOLDER);\n                } else if (id === \"new-project-link\") {\n                    CommandManager.execute(Commands.FILE_NEW_PROJECT);\n                } else if (id === \"download-project-link\") {\n                    CommandManager.execute(Commands.FILE_DOWNLOAD_PROJECT);\n                }\n\n            })\n            .on(\"mouseenter\", \"a\", function () {\n                if ($dropdownItem) {\n                    $dropdownItem.removeClass(\"selected\");\n                }\n                $dropdownItem = $(this).addClass(\"selected\");\n\n                if ($dropdownItem.hasClass(\"recent-folder-link\")) {\n                    // Note: we can't depend on the event here because this can be triggered\n                    // manually from checkHovers().\n                    addDeleteButton($(this));\n                }\n            })\n            .on(\"mouseleave\", \"a\", function () {\n                var $link = $(this).removeClass(\"selected\");\n\n                if ($link.get(0) === $dropdownItem.get(0)) {\n                    $dropdownItem = null;\n                }\n                if ($link.hasClass(\"recent-folder-link\")) {\n                    removeDeleteButton();\n                }\n            });\n    }\n\n    /**\n     * Parses the path and returns an object with the full path, the folder name and the path without the folder.\n     * @param {string} fullPath The full path to the folder.\n     * @return {{path: string, folder: string, rest: string}}\n     */\n    function renderPath(fullPath) {\n        let parentDirPath = Phoenix.VFS.ensureTrailingSlash(window.path.dirname(fullPath));\n        let rest;\n        if(parentDirPath.startsWith(Phoenix.VFS.getTauriDir())) {\n            rest = \" - \" + window.fs.getTauriPlatformPath(parentDirPath);\n        } else if(parentDirPath.startsWith(Phoenix.VFS.getMountDir())) {\n            const displayPath = parentDirPath.replace(Phoenix.VFS.getMountDir(), \"\");\n            if(displayPath){\n                rest = \" - \" + displayPath;\n            }\n        } else {\n            rest = \" - \" + Strings.PROJECT_FROM_BROWSER_TERSE;\n        }\n\n        return {path: fullPath, folder: window.path.basename(fullPath), rest: rest};\n    }\n\n    /**\n     * Create the list of projects in the dropdown menu.\n     * @return {string} The html content\n     */\n    function renderList() {\n        const recentProjects = getRecentProjects(),\n            downloadProjectCommand = CommandManager.get(Commands.FILE_DOWNLOAD_PROJECT),\n            currentProject = FileUtils.stripTrailingSlash(ProjectManager.getProjectRoot().fullPath),\n            templateVars   = {\n                projectList: [],\n                Strings: Strings,\n                downloadProjectClass: downloadProjectCommand.getEnabled() ? \"\": \"forced-hidden\"\n            };\n\n        recentProjects.forEach(function (root) {\n            if (root !== currentProject) {\n                templateVars.projectList.push(renderPath(root));\n            }\n        });\n\n        return Mustache.render(ProjectsMenuTemplate, templateVars);\n    }\n\n    /**\n     * Show or hide the recent projects dropdown.\n     *\n     * @param {{pageX:number, pageY:number}} position - the absolute position where to open the dropdown\n     */\n    function showDropdown(position) {\n        // If the dropdown is already visible, just return (so the root click handler on html\n        // will close it).\n        if ($dropdown) {\n            return;\n        }\n\n        Menus.closeAll();\n\n        $dropdown = $(renderList())\n            .css({\n                left: position.pageX,\n                top: position.pageY\n            })\n            .appendTo($(\"body\"));\n\n        PopUpManager.addPopUp($dropdown, cleanupDropdown, true);\n\n        // TODO: should use capture, otherwise clicking on the menus doesn't close it. More fallout\n        // from the fact that we can't use the Boostrap (1.4) dropdowns.\n        $(\"html\").on(\"click\", closeDropdown);\n\n        // Hide the menu if the user scrolls in the project tree. Otherwise the Lion scrollbar\n        // overlaps it.\n        // TODO: This duplicates logic that's already in ProjectManager (which calls Menus.close()).\n        // We should fix this when the popup handling is centralized in PopupManager, as well\n        // as making Esc close the dropdown. See issue #1381.\n        $(\"#project-files-container\").on(\"scroll\", closeDropdown);\n\n        // Note: PopUpManager will automatically hide the sidebar in other cases, such as when a\n        // command is run, Esc is pressed, or the menu is focused.\n\n        // Hacky: if we detect a click in the menubar, close ourselves.\n        // TODO: again, we should have centralized popup management.\n        $(\"#titlebar .nav\").on(\"click\", closeDropdown);\n\n        _handleListEvents();\n        $(window).on(\"keydown\", keydownHook);\n    }\n\n\n    /**\n     * Show or hide the recent projects dropdown from the toogle command.\n     */\n    function handleKeyEvent() {\n        if (!$dropdown) {\n            if (!SidebarView.isVisible()) {\n                SidebarView.show();\n            }\n\n            $(\"#project-dropdown-toggle\").trigger(\"click\");\n\n            $dropdown.focus();\n            $links = $dropdown.find(\"a\");\n            // By default, select the most recent project (which is at the top of the list underneath Open Folder),\n            // but if there are none, select Open Folder instead.\n            $dropdownItem = $links.eq($links.length > 1 ? 1 : 0);\n            $dropdownItem.addClass(\"selected\");\n\n            // If focusing the dropdown caused a modal bar to close, we need to refocus the dropdown\n            window.setTimeout(function () {\n                $dropdown.focus();\n            }, 0);\n        }\n    }\n\n    // Register command handlers\n    CommandManager.register(Strings.CMD_TOGGLE_RECENT_PROJECTS, TOGGLE_DROPDOWN, handleKeyEvent);\n\n    // Initialize extension\n    AppInit.appReady(function () {\n        ProjectManager.on(\"projectOpen\", add);\n        ProjectManager.on(\"beforeProjectClose\", add);\n        // add the current project at startup.\n        add();\n    });\n\n    AppInit.htmlReady(function () {\n        $(\"#project-title\")\n            .wrap(\"<div id='project-dropdown-toggle' class='btn-alt-quiet'></div>\")\n            .after(\"<span class='dropdown-arrow'></span>\");\n\n        var cmenuAdapter = {\n            open: showDropdown,\n            close: closeDropdown,\n            isOpen: function () {\n                return !!$dropdown;\n            }\n        };\n        Menus.ContextMenu.assignContextMenuToSelector(\"#project-dropdown-toggle\", cmenuAdapter);\n    });\n\n    exports.getRecentProjects = getRecentProjects;\n    exports.openProjectWithPath = openProjectWithPath;\n    exports.removeFromRecentProject = removeFromRecentProject;\n});\n"],"file":"main.js"}