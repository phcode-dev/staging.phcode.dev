{"version":3,"sources":["extensions/default/HtmlEntityCodeHints/unittests.js"],"names":["define","require","exports","module","SpecRunnerUtils","brackets","getModule","HTMLEntityHints","SpecialCharHints","defaultContent","fixPos","pos","sticky","describe","testEditorAndDoc","hintProvider","expectHints","provider","expect","hasHints","editor","toBe","hintsObj","getHints","toBeTruthy","hints","expectNoHints","beforeEach","createMockEditor","afterEach","destroyMockEditor","doc","it","setCursorPos","line","ch","toEqual","insertHint","document","getRange","getCursorPos","toEql"],"mappings":"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","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2013 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/*global describe, it, expect, beforeEach, afterEach */\n\ndefine(function (require, exports, module) {\n\n\n    // Modules from the SpecRunner window\n    var SpecRunnerUtils = brackets.getModule(\"spec/SpecRunnerUtils\"),\n        HTMLEntityHints = require(\"main\").SpecialCharHints,\n        defaultContent  = require(\"text!unittest-files/default.html\");\n\n    // Helper function for testing cursor position\n    function fixPos(pos) {\n        if (!(\"sticky\" in pos)) {\n            pos.sticky = null;\n        }\n        return pos;\n    }\n\n    describe(\"unit:HTML Entity Hinting\", function () {\n\n        var testEditorAndDoc,\n            hintProvider = new HTMLEntityHints();\n\n        beforeEach(function () {\n            testEditorAndDoc = SpecRunnerUtils.createMockEditor(defaultContent, \"html\");\n        });\n\n        afterEach(function () {\n            SpecRunnerUtils.destroyMockEditor(testEditorAndDoc.doc);\n        });\n\n        // Ask provider for hints at current cursor position; expect it to return some\n        function expectHints(provider) {\n            expect(provider.hasHints(testEditorAndDoc.editor, null)).toBe(true);\n            var hintsObj = provider.getHints(null);\n            expect(hintsObj).toBeTruthy();\n            return hintsObj.hints; // return just the array of hints\n        }\n\n        // Ask provider for hints at current cursor position\n        function expectNoHints(provider) {\n            expect(provider.hasHints(testEditorAndDoc.editor, null)).toBe(false);\n        }\n\n        it(\"should show hints when in Text in paragraph\", function () {\n            testEditorAndDoc.editor.setCursorPos({line: 7, ch: 17});\n\n            expectHints(hintProvider);\n        });\n\n        it(\"should show hints when another entity is in the same line\", function () {\n            testEditorAndDoc.editor.setCursorPos({line: 12, ch: 23});\n\n            expectHints(hintProvider);\n        });\n\n        it(\"should show hints when cursor inside entity\", function () {\n            testEditorAndDoc.editor.setCursorPos({line: 17, ch: 19});\n\n            var hints = expectHints(hintProvider);\n            expect(hints).toEqual([\"&amp;acirc; <span class='entity-display-character'>&acirc;</span>\",\n                \"&amp;acute; <span class='entity-display-character'>&acute;</span>\"]);\n        });\n\n        it(\"shouldn't show hints when inside an opening tag\", function () {\n            testEditorAndDoc.editor.setCursorPos({line: 21, ch: 11});\n\n            expectNoHints(hintProvider);\n        });\n\n        it(\"shouldn't show hints when inside a closing tag\", function () {\n            testEditorAndDoc.editor.setCursorPos({line: 24, ch: 15});\n\n            expectNoHints(hintProvider);\n        });\n\n        it(\"should show hints when semi-colon on the same line\", function () {\n            testEditorAndDoc.editor.setCursorPos({line: 28, ch: 21});\n\n            expectHints(hintProvider);\n        });\n\n        it(\"shouldn't show hints in attribute name\", function () {\n            testEditorAndDoc.editor.setCursorPos({line: 32, ch: 12});\n\n            expectNoHints(hintProvider);\n        });\n\n        it(\"shouldn't show hints in attribute value\", function () {\n            testEditorAndDoc.editor.setCursorPos({line: 35, ch: 19});\n\n            expectNoHints(hintProvider);\n        });\n\n        it(\"shouldn't show hints in url\", function () {\n            testEditorAndDoc.editor.setCursorPos({line: 38, ch: 78});\n\n            expectNoHints(hintProvider);\n        });\n\n        it(\"should show multiple hints in the same line\", function () {\n            testEditorAndDoc.editor.setCursorPos({line: 41, ch: 17});\n\n            expectHints(hintProvider);\n\n            testEditorAndDoc.editor.setCursorPos({line: 41, ch: 29});\n\n            expectHints(hintProvider);\n        });\n\n        it(\"should sort &#xxxx hints numerically not alphabetically\", function () {\n            testEditorAndDoc.editor.setCursorPos({line: 45, ch: 14});\n\n            var hints = expectHints(hintProvider);\n            hintProvider.insertHint(hints[0]);\n            expect(testEditorAndDoc.editor.document.getRange({line: 45, ch: 12}, {line: 45, ch: 17})).toEqual(\"&#33;\");\n\n            testEditorAndDoc.editor.setCursorPos({line: 45, ch: 14});\n            hintProvider.insertHint(hints[23]);\n            expect(testEditorAndDoc.editor.document.getRange({line: 45, ch: 12}, {line: 45, ch: 18})).toEqual(\"&#123;\");\n        });\n\n        describe(\"Inserting Tests\", function () {\n\n            it(\"should replace entity with hint if inside entity\", function () {\n                testEditorAndDoc.editor.setCursorPos({line: 17, ch: 19});\n\n                var hints = expectHints(hintProvider);\n                hintProvider.insertHint(hints[0]);\n                expect(testEditorAndDoc.editor.document.getRange({line: 17, ch: 16}, {line: 17, ch: 23})).toEqual(\"&acirc;\");\n            });\n\n            it(\"should place cursor at the end of the replaced entity\", function () {\n                testEditorAndDoc.editor.setCursorPos({line: 17, ch: 19});\n\n                var hints = expectHints(hintProvider);\n                hintProvider.insertHint(hints[0]);\n                expect(fixPos(testEditorAndDoc.editor.getCursorPos())).toEql(fixPos({line: 17, ch: 23}));\n            });\n        });\n    });\n});\n"],"file":"unittests.js"}