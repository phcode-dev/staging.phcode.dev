{"version":3,"sources":["xorigin.js"],"names":["testCrossOriginError","window","navigator","userAgent","search","message","url","line","slice","document","location","href","substr","previousErrorHandler","onerror","handleError","alert"],"mappings":"CAwBC,WAGG,IAAIA,qBAeJ,IAbuD,IAAnDC,OAAOC,UAAUC,UAAUC,OAAO,YAElCJ,qBAAuB,SAAUK,QAASC,IAAKC,MAC3C,MAAe,KAARD,KAAuB,IAATC,MAA0B,kBAAZF,SAEW,WAA3CJ,OAAOC,UAAUC,UAAUK,MAAM,EAAG,KAE3CR,qBAAuB,SAAUK,QAASC,IAAKC,MAC3C,MAAmB,kDAAZF,UAKW,oBAAf,UAC4C,YAA/CJ,OAAOQ,SAASC,SAASC,KAAKC,OAAO,EAAG,IACvCZ,qBAFT,CAOA,IAAIa,qBAAuBZ,OAAOa,QAqBlCb,OAAOa,QAAUC,YAlBjB,SAASA,YAAYV,QAASC,IAAKC,MAG/B,IAAKP,qBAAqBK,QAASC,IAAKC,MACpC,OAAIM,qBACOA,qBAAqBR,QAASC,IAAKC,WAE9C,EAIJN,OAAOe,MAAM,gRAGbf,OAAOa,QAAUD,sBA1CzB","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2013 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/**\n * Function to test whether a given error represents an illegal cross origin access\n */\n(function () {\n\n\n    var testCrossOriginError;\n\n    if (window.navigator.userAgent.search(\" Chrome/\") !== -1) {\n        // Chrome support\n        testCrossOriginError = function (message, url, line) {\n            return url === \"\" && line === 0 && message === \"Script error.\";\n        };\n    } else if (window.navigator.userAgent.slice(0, 6) === 'Opera/') {\n        // Opera support\n        testCrossOriginError = function (message, url, line) {\n            return message === \"Uncaught exception: DOMException: NETWORK_ERR\";\n        };\n    }\n\n    // Abort if running in the shell, running on a server or not running in a supported and affected browser\n    if (typeof (brackets) !== \"undefined\" ||\n            window.document.location.href.substr(0, 7) !== \"file://\" ||\n            !testCrossOriginError) {\n        return;\n    }\n\n    // Remember the current error handler to restore it once we're done\n    var previousErrorHandler = window.onerror;\n\n    // Our error handler\n    function handleError(message, url, line) {\n        // Ignore this error if it does not look like the rather vague cross origin error in Chrome\n        // Chrome will print it to the console anyway\n        if (!testCrossOriginError(message, url, line)) {\n            if (previousErrorHandler) {\n                return previousErrorHandler(message, url, line);\n            }\n            return;\n        }\n\n        // Show an error message\n        window.alert(\"Oops! This application doesn't run in browsers yet.\\n\\nIt is built in HTML, but right now it runs as a desktop app so you can use it to edit local files. Please use the application shell in the following repo to run this application:\\n\\ngithub.com/adobe/brackets-shell\");\n\n        // Restore the original handler for later errors\n        window.onerror = previousErrorHandler;\n    }\n\n    // Install our error handler\n    window.onerror = handleError;\n}());\n"],"file":"xorigin.js"}