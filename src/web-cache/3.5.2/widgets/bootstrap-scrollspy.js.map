{"version":3,"sources":["widgets/bootstrap-scrollspy.js"],"names":["$","ScrollSpy","element","options","process","proxy","this","$element","is","window","href","extend","fn","scrollspy","defaults","$scrollElement","on","selector","target","attr","replace","$body","refresh","prototype","constructor","self","offsets","targets","find","map","$el","data","$href","test","length","position","top","isWindow","get","scrollTop","sort","a","b","each","push","offset","scrollHeight","maxScroll","height","activeTarget","i","last","activate","active","parent","removeClass","addClass","closest","trigger","old","option","$this","Constructor","noConflict","$spy","jQuery"],"mappings":"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","sourcesContent":["/* =============================================================\n * bootstrap-scrollspy.js v2.3.1\n * http://twitter.github.com/bootstrap/javascript.html#scrollspy\n * =============================================================\n * Copyright 2012 Twitter, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ============================================================== */\n\n\n!function ($) {\n\n  \"use strict\"; // jshint ;_;\n\n\n /* SCROLLSPY CLASS DEFINITION\n  * ========================== */\n\n  function ScrollSpy(element, options) {\n    var process = $.proxy(this.process, this)\n      , $element = $(element).is('body') ? $(window) : $(element)\n      , href\n    this.options = $.extend({}, $.fn.scrollspy.defaults, options)\n    this.$scrollElement = $element.on('scroll.scroll-spy.data-api', process)\n    this.selector = (this.options.target\n      || ((href = $(element).attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) //strip for ie7\n      || '') + ' .nav li > a'\n    this.$body = $('body')\n    this.refresh()\n    this.process()\n  }\n\n  ScrollSpy.prototype = {\n\n      constructor: ScrollSpy\n\n    , refresh: function () {\n        var self = this\n\n        this.offsets = $([])\n        this.targets = $([])\n\n        this.$body\n          .find(this.selector)\n          .map(function () {\n            var $el = $(this)\n              , href = $el.data('target') || $el.attr('href')\n              , $href = /^#\\w/.test(href) && $(href)\n            return ( $href\n              && $href.length\n              && [[ $href.position().top + (!$.isWindow(self.$scrollElement.get(0)) && self.$scrollElement.scrollTop()), href ]] ) || null\n          })\n          .sort(function (a, b) { return a[0] - b[0] })\n          .each(function () {\n            self.offsets.push(this[0])\n            self.targets.push(this[1])\n          })\n      }\n\n    , process: function () {\n        var scrollTop = this.$scrollElement.scrollTop() + this.options.offset\n          , scrollHeight = this.$scrollElement[0].scrollHeight || this.$body[0].scrollHeight\n          , maxScroll = scrollHeight - this.$scrollElement.height()\n          , offsets = this.offsets\n          , targets = this.targets\n          , activeTarget = this.activeTarget\n          , i\n\n        if (scrollTop >= maxScroll) {\n          return activeTarget != (i = targets.last()[0])\n            && this.activate ( i )\n        }\n\n        for (i = offsets.length; i--;) {\n          activeTarget != targets[i]\n            && scrollTop >= offsets[i]\n            && (!offsets[i + 1] || scrollTop <= offsets[i + 1])\n            && this.activate( targets[i] )\n        }\n      }\n\n    , activate: function (target) {\n        var active\n          , selector\n\n        this.activeTarget = target\n\n        $(this.selector)\n          .parent('.active')\n          .removeClass('active')\n\n        selector = this.selector\n          + '[data-target=\"' + target + '\"],'\n          + this.selector + '[href=\"' + target + '\"]'\n\n        active = $(selector)\n          .parent('li')\n          .addClass('active')\n\n        if (active.parent('.dropdown-menu').length)  {\n          active = active.closest('li.dropdown').addClass('active')\n        }\n\n        active.trigger('activate')\n      }\n\n  }\n\n\n /* SCROLLSPY PLUGIN DEFINITION\n  * =========================== */\n\n  var old = $.fn.scrollspy\n\n  $.fn.scrollspy = function (option) {\n    return this.each(function () {\n      var $this = $(this)\n        , data = $this.data('scrollspy')\n        , options = typeof option == 'object' && option\n      if (!data) $this.data('scrollspy', (data = new ScrollSpy(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  $.fn.scrollspy.Constructor = ScrollSpy\n\n  $.fn.scrollspy.defaults = {\n    offset: 10\n  }\n\n\n /* SCROLLSPY NO CONFLICT\n  * ===================== */\n\n  $.fn.scrollspy.noConflict = function () {\n    $.fn.scrollspy = old\n    return this\n  }\n\n\n /* SCROLLSPY DATA-API\n  * ================== */\n\n  $(window).on('load', function () {\n    $('[data-spy=\"scroll\"]').each(function () {\n      var $spy = $(this)\n      $spy.scrollspy($spy.data())\n    })\n  })\n\n}(window.jQuery);"],"file":"bootstrap-scrollspy.js"}