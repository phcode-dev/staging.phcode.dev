{"version":3,"sources":["languageTools/LanguageClient/NodeToBracketsInterface.js"],"names":["EventEmitter","bracketsEventHandler","require","_generateUUID","result","numericSeed","Math","random","toString","NodeToBracketsInterface","domainManager","domainName","this","nodeFn","_registerDataEvents","prototype","processRequest","params","methodName","method","call","processAsyncRequest","resolver","then","catch","err","processResponse","requestId","error","emit","createInterface","respond","self","callObject","retval","undefined","emitEvent","Promise","resolve","reject","once","response","registerMethod","methodHandle","registerMethods","methodList","forEach","methodObj","hasDomain","registerDomain","major","minor","registerCommand","bind","name","type","description","registerEvent","exports"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2019 - present Adobe. All rights reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n *\n */\n\n/*global require, Promise, exports*/\n/*eslint no-invalid-this: 0*/\n/*eslint max-len: [\"error\", { \"code\": 200 }]*/\n(function () {\n\n\n\n    var EventEmitter = require(\"events\"),\n        bracketsEventHandler = new EventEmitter();\n\n    /** https://gist.github.com/LeverOne/1308368 */\n    /*eslint-disable */\n    function _generateUUID() {\n        var result,\n            numericSeed;\n        for (\n            result = numericSeed = '';\n            numericSeed++ < 36;\n            result += numericSeed * 51 & 52 ? (numericSeed ^ 15 ? 8 ^ Math.random() * (numericSeed ^ 20 ? 16 : 4) : 4).toString(16) : '-'\n        );\n\n        return result;\n    }\n    /*eslint-enable */\n\n    function NodeToBracketsInterface(domainManager, domainName) {\n        this.domainManager = domainManager;\n        this.domainName = domainName;\n        this.nodeFn = {};\n\n        this._registerDataEvents(domainManager, domainName);\n    }\n\n    NodeToBracketsInterface.prototype.processRequest = function (params) {\n        var methodName = params.method;\n        if (this.nodeFn[methodName]) {\n            var method = this.nodeFn[methodName];\n            return method.call(null, params.params);\n        }\n    };\n\n    NodeToBracketsInterface.prototype.processAsyncRequest = function (params, resolver) {\n        var methodName = params.method;\n        if (this.nodeFn[methodName]) {\n            var method = this.nodeFn[methodName];\n            method.call(null, params.params) //The Async function should return a promise\n                .then(function (result) {\n                    resolver(null, result);\n                }).catch(function (err) {\n                    resolver(err, null);\n                });\n        }\n    };\n\n    NodeToBracketsInterface.prototype.processResponse = function (params) {\n        if (params.requestId) {\n            if (params.error) {\n                bracketsEventHandler.emit(params.requestId, params.error);\n            } else {\n                bracketsEventHandler.emit(params.requestId, false, params.params);\n            }\n        } else {\n            bracketsEventHandler.emit(params.requestId, \"error\");\n        }\n    };\n\n    NodeToBracketsInterface.prototype.createInterface = function (methodName, respond) {\n        var self = this;\n        return function (params) {\n            var callObject = {\n                method: methodName,\n                params: params\n            };\n\n            var retval = undefined;\n            if (respond) {\n                var requestId = _generateUUID();\n\n                callObject[\"respond\"] = true;\n                callObject[\"requestId\"] = requestId;\n\n                self.domainManager.emitEvent(self.domainName, \"data\", callObject);\n\n                retval = new Promise(function (resolve, reject) {\n                    bracketsEventHandler.once(requestId, function (err, response) {\n                        if (err) {\n                            reject(err);\n                        } else {\n                            resolve(response);\n                        }\n                    });\n                });\n            } else {\n                self.domainManager.emitEvent(self.domainName, \"data\", callObject);\n            }\n            return retval;\n        };\n    };\n\n    NodeToBracketsInterface.prototype.registerMethod = function (methodName, methodHandle) {\n        var self = this;\n        if (methodName && methodHandle &&\n            typeof methodName === \"string\" && typeof methodHandle === \"function\") {\n            self.nodeFn[methodName] = methodHandle;\n        }\n    };\n\n    NodeToBracketsInterface.prototype.registerMethods = function (methodList) {\n        var self = this;\n        methodList.forEach(function (methodObj) {\n            self.registerMethod(methodObj.methodName, methodObj.methodHandle);\n        });\n    };\n\n    NodeToBracketsInterface.prototype._registerDataEvents = function (domainManager, domainName) {\n        if (!domainManager.hasDomain(domainName)) {\n            domainManager.registerDomain(domainName, {\n                major: 0,\n                minor: 1\n            });\n        }\n\n        domainManager.registerCommand(\n            domainName,\n            \"data\",\n            this.processRequest.bind(this),\n            false,\n            \"Receives sync request from brackets\",\n            [\n                {\n                    name: \"params\",\n                    type: \"object\",\n                    description: \"json object containing message info\"\n                }\n            ],\n            []\n        );\n\n        domainManager.registerCommand(\n            domainName,\n            \"response\",\n            this.processResponse.bind(this),\n            false,\n            \"Receives response from brackets for an earlier request\",\n            [\n                {\n                    name: \"params\",\n                    type: \"object\",\n                    description: \"json object containing message info\"\n                }\n            ],\n            []\n        );\n\n        domainManager.registerCommand(\n            domainName,\n            \"asyncData\",\n            this.processAsyncRequest.bind(this),\n            true,\n            \"Receives async call request from brackets\",\n            [\n                {\n                    name: \"params\",\n                    type: \"object\",\n                    description: \"json object containing message info\"\n                },\n                {\n                    name: \"resolver\",\n                    type: \"function\",\n                    description: \"callback required to resolve the async request\"\n                }\n            ],\n            []\n        );\n\n        domainManager.registerEvent(\n            domainName,\n            \"data\",\n            [\n                {\n                    name: \"params\",\n                    type: \"object\",\n                    description: \"json object containing message info to pass to brackets\"\n                }\n            ]\n        );\n    };\n\n    exports.NodeToBracketsInterface = NodeToBracketsInterface;\n}());\n"],"file":"NodeToBracketsInterface.js"}