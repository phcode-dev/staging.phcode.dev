{"version":3,"sources":["JSUtils/worker/testTern.js"],"names":["ternSimpleTest","getFile","name","contentCb","indexjs","listjs","simplejs","ternOptions","defs","async","plugins","requirejs","complete_strings","doc_comment","doc_comments","es_modules","ternServer","Tern","Server","addFile","query","req","type","variable","lineCharPositions","end","line","ch","file","files","setTimeout","request","error","data","console","log"],"mappings":"CAEC,WAKG,SAASA,iBACL,SAASC,QAAQC,KAAMC,WACnB,OAAQD,MACJ,IAAK,WAAY,OAAOC,UAAU,KAAMC,SACxC,IAAK,UAAW,OAAOD,UAAU,KAAME,QACvC,IAAK,YAAa,OAAOF,UAAU,KAAMG,UACzC,QAAS,MAAO,IAIxB,IAAIC,YAAc,CACdC,KAAM,GACNC,OAAO,EACPR,QAASA,QACTS,QAAS,CACLC,UAAW,GAIXC,kBAAkB,EAClBC,aAAa,EACbC,cAAc,EACdC,YAAY,IAOhBC,WAAa,IAAIC,KAAKC,OAAOX,aACjCS,WAAWG,QAAQ,YACnBH,WAAWG,QAAQ,WACnB,IAAIC,MAUAC,IAAM,CAACD,MAVC,CACRE,KAAQ,aACRC,SAAY,KACZC,mBAAqB,EACrBC,IAAO,CACHC,KAAQ,EACRC,GAAM,GAEVC,KAAQ,YAEaC,MAAO,IAChCC,WAAW,KACPd,WAAWe,QAAQV,IAAK,SAASW,MAAOC,MACpCC,QAAQC,IAAIH,MAAOC,SAExB,KAIP,IAAI7B,QACA,miBAqBAC,OACA,idAuBAC,SACA,6BAMJN,iBA7GJ","sourcesContent":["/*global Tern*/\n\n(function () {\n    /**\n     * This is a very simple tern worker that can be used to debug tern commands. This file is not really needed\n     * for phoenix, but just here to save some pain with tern debugging\n     */\n    function ternSimpleTest() {\n        function getFile(name, contentCb) {\n            switch (name) {\n                case 'index.js': return contentCb(null, indexjs);\n                case 'list.js': return contentCb(null, listjs);\n                case 'simple.js': return contentCb(null, simplejs);\n                default: return '';\n            }\n        }\n\n        let ternOptions = {\n            defs: [],\n            async: true,\n            getFile: getFile,\n            plugins: {\n                requirejs: {},\n                //angular: true,\n                //node: true,\n                //node_resolve: true,\n                complete_strings: true,\n                doc_comment: true,\n                doc_comments: true,\n                es_modules: true\n                //commonjs: true\n            }\n        };\n\n        // If a server is already created just reset the analysis data before marking it for GC\n\n        let ternServer = new Tern.Server(ternOptions);\n        ternServer.addFile(\"index.js\");\n        ternServer.addFile(\"list.js\");\n        let query = {\n            \"type\": \"definition\",\n            \"variable\": null,\n            \"lineCharPositions\": true,\n            \"end\": {\n                \"line\": 6,\n                \"ch\": 9\n            },\n            \"file\": \"index.js\"\n        };\n        let req = {query: query, files: []};\n        setTimeout(()=>{\n            ternServer.request(req, function(error, data) {\n                console.log(error, data);\n            });\n        }, 1000);\n    }\n\n\n    let indexjs =\n        `// Tern can do ECMAScript 6 (2015) too!\n\n// Imports and exports work. You can complete module names, and\n// jump to the definition of things defined in modules.\n\n// (Press alt-. on \\`List\\` to jump to the class definition)\nimport {List} from \"./list\"\n\nconst l = List.of(3, 4, 5)\nfor (let elt of l.map(x => x * 2)) {\n  // Tern knows that \\`elt\\` is a number!\n  let output = myMath.halve(elt)\n  console.log(output)\n}\n\n// Raw template string\nlet raw = String.raw\\`\\\\n\\`\n\n// Default arguments\nArray.of(1, 2, 3, 4).find(x => x % 3 == 0)`;\n\n    let listjs =\n        `export class List {\n  constructor(head, tail) {\n    this.head = head\n    this.tail = tail\n  }\n\n  static of(...elements) {\n    let result = null\n    for (let i = elements.length - 1; i >= 0; i--)\n      result = new List(elements[i], result)\n    return result\n  }\n\n  map(f) {\n    return new List(f(this.head), this.tail && this.tail.map(f))\n  }\n\n  *[Symbol.iterator]() {\n    for (let pos = this; pos; pos = pos.tail)\n      yield pos.head\n  }\n}`;\n\n    let simplejs =\n        `function x(){\n}\n\nx();\n`;\n\n    ternSimpleTest();\n}());\n"],"file":"testTern.js"}