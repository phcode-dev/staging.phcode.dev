{"version":3,"sources":["view/ThemeView.js"],"names":["define","require","exports","module","CodeMirror","PreferencesManager","prefs","getExtensionPrefs","$scrollbars","$","appendTo","updateScrollbars","theme","get","scrollbar","join","text","updateThemes","cm","newTheme","cmTheme","getOption","replace","defaults","setOption"],"mappings":"AAuBAA,OAAO,SAAUC,QAASC,QAASC,QAG/B,IAAIC,WAAqBH,QAAQ,wCAC7BI,mBACAC,MADqBL,QAAQ,kCACWM,kBAAkB,UAE1DC,YAAcC,EAAE,2BAA2BC,SAAS,QASxD,SAASC,iBAAiBC,OAEtB,GADAA,MAAQA,OAAS,GACbN,MAAMO,IAAI,mBAAoB,CAC9B,IAAIC,WAAaF,MAAME,WAAa,IAAIC,KAAK,KAC7CP,YAAYQ,KAAKF,WAAa,SAE9BN,YAAYQ,KAAK,IAUzB,SAASC,aAAaC,IAClB,IAAIC,SAAWb,MAAMO,IAAI,SACrBO,SAAYF,GAAGG,UAAU,UAAY,IAAIC,QAAQ,QAAS,MAG9CH,WAKhBf,WAAWmB,SAASX,MAAQO,SAC5BD,GAAGM,UAAU,QAASL,WAI1BjB,QAAQS,iBAAmBA,iBAC3BT,QAAQe,aAAmBA","sourcesContent":["/**\n * Brackets Themes Copyright (c) 2014 Miguel Castillo.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n *\n */\n\ndefine(function (require, exports, module) {\n\n\n    var CodeMirror         = require(\"thirdparty/CodeMirror/lib/codemirror\"),\n        PreferencesManager = require(\"preferences/PreferencesManager\"),\n        prefs              = PreferencesManager.getExtensionPrefs(\"themes\");\n\n    var $scrollbars = $(\"<style id='scrollbars'>\").appendTo(\"head\");\n\n\n    /**\n     * Load scrollbar styling based on whether or not theme scrollbars are enabled.\n     *\n     * @param {ThemeManager.Theme} theme Is the theme object with the corresponding scrollbar style\n     *   to be updated\n     */\n    function updateScrollbars(theme) {\n        theme = theme || {};\n        if (prefs.get(\"themeScrollbars\")) {\n            var scrollbar = (theme.scrollbar || []).join(\" \");\n            $scrollbars.text(scrollbar || \"\");\n        } else {\n            $scrollbars.text(\"\");\n        }\n    }\n\n\n    /**\n     *  Handles updating codemirror with the current selection of themes.\n     *\n     * @param {CodeMirror} cm is the CodeMirror instance currently loaded\n     */\n    function updateThemes(cm) {\n        var newTheme = prefs.get(\"theme\"),\n            cmTheme  = (cm.getOption(\"theme\") || \"\").replace(/[\\s]*/, \"\"); // Normalize themes string\n\n        // Check if the editor already has the theme applied...\n        if (cmTheme === newTheme) {\n            return;\n        }\n\n        // Setup current and further documents to get the new theme...\n        CodeMirror.defaults.theme = newTheme;\n        cm.setOption(\"theme\", newTheme);\n    }\n\n\n    exports.updateScrollbars = updateScrollbars;\n    exports.updateThemes     = updateThemes;\n});\n"],"file":"ThemeView.js"}