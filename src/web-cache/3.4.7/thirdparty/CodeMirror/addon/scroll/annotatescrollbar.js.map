{"version":3,"sources":["thirdparty/CodeMirror/addon/scroll/annotatescrollbar.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","Annotation","cm","options","scheduleRedraw","delay","clearTimeout","self","doRedraw","setTimeout","redraw","this","buttonHeight","scrollButtonHeight","getOption","annotations","doUpdate","div","getWrapperElement","appendChild","document","createElement","style","cssText","computeScale","on","resizeHandler","listenForChanges","changeHandler","defineExtension","className","defineOption","prototype","hScale","clientHeight","display","barHeight","getScrollerElement","scrollHeight","update","compute","frag","createDocumentFragment","anns","wrapping","singleLineH","defaultTextHeight","curLine","curLineObj","getY","pos","top","line","getLineHandle","visual","getLineHandleVisualStart","getLineNumber","widgets","length","height","charCoords","heightAtLine","topY","lastLine","barWidth","i","nextTop","ann","to","from","bottom","Math","max","elt","id","setAttribute","textContent","clear","off","parentNode","removeChild"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineExtension(\"annotateScrollbar\", function(options) {\n    if (typeof options == \"string\") options = {className: options};\n    return new Annotation(this, options);\n  });\n\n  CodeMirror.defineOption(\"scrollButtonHeight\", 0);\n\n  function Annotation(cm, options) {\n    this.cm = cm;\n    this.options = options;\n    this.buttonHeight = options.scrollButtonHeight || cm.getOption(\"scrollButtonHeight\");\n    this.annotations = [];\n    this.doRedraw = this.doUpdate = null;\n    this.div = cm.getWrapperElement().appendChild(document.createElement(\"div\"));\n    this.div.style.cssText = \"position: absolute; right: 0; top: 0; z-index: 7; pointer-events: none\";\n    this.computeScale();\n\n    function scheduleRedraw(delay) {\n      clearTimeout(self.doRedraw);\n      self.doRedraw = setTimeout(function() { self.redraw(); }, delay);\n    }\n\n    var self = this;\n    cm.on(\"refresh\", this.resizeHandler = function() {\n      clearTimeout(self.doUpdate);\n      self.doUpdate = setTimeout(function() {\n        if (self.computeScale()) scheduleRedraw(20);\n      }, 100);\n    });\n    cm.on(\"markerAdded\", this.resizeHandler);\n    cm.on(\"markerCleared\", this.resizeHandler);\n    if (options.listenForChanges !== false)\n      cm.on(\"changes\", this.changeHandler = function() {\n        scheduleRedraw(250);\n      });\n  }\n\n  Annotation.prototype.computeScale = function() {\n    var cm = this.cm;\n    var hScale = (cm.getWrapperElement().clientHeight - cm.display.barHeight - this.buttonHeight * 2) /\n      cm.getScrollerElement().scrollHeight\n    if (hScale != this.hScale) {\n      this.hScale = hScale;\n      return true;\n    }\n  };\n\n  Annotation.prototype.update = function(annotations) {\n    this.annotations = annotations;\n    this.redraw();\n  };\n\n  Annotation.prototype.redraw = function(compute) {\n    if (compute !== false) this.computeScale();\n    var cm = this.cm, hScale = this.hScale;\n\n    var frag = document.createDocumentFragment(), anns = this.annotations;\n\n    var wrapping = cm.getOption(\"lineWrapping\");\n    var singleLineH = wrapping && cm.defaultTextHeight() * 1.5;\n    var curLine = null, curLineObj = null;\n\n    function getY(pos, top) {\n      if (curLine != pos.line) {\n        curLine = pos.line\n        curLineObj = cm.getLineHandle(pos.line)\n        var visual = cm.getLineHandleVisualStart(curLineObj)\n        if (visual != curLineObj) {\n          curLine = cm.getLineNumber(visual)\n          curLineObj = visual\n        }\n      }\n      if ((curLineObj.widgets && curLineObj.widgets.length) ||\n          (wrapping && curLineObj.height > singleLineH))\n        return cm.charCoords(pos, \"local\")[top ? \"top\" : \"bottom\"];\n      var topY = cm.heightAtLine(curLineObj, \"local\");\n      return topY + (top ? 0 : curLineObj.height);\n    }\n\n    var lastLine = cm.lastLine()\n    if (cm.display.barWidth) for (var i = 0, nextTop; i < anns.length; i++) {\n      var ann = anns[i];\n      if (ann.to.line > lastLine) continue;\n      var top = nextTop || getY(ann.from, true) * hScale;\n      var bottom = getY(ann.to, false) * hScale;\n      while (i < anns.length - 1) {\n        if (anns[i + 1].to.line > lastLine) break;\n        nextTop = getY(anns[i + 1].from, true) * hScale;\n        if (nextTop > bottom + .9) break;\n        ann = anns[++i];\n        bottom = getY(ann.to, false) * hScale;\n      }\n      if (bottom == top) continue;\n      var height = Math.max(bottom - top, 3);\n\n      var elt = frag.appendChild(document.createElement(\"div\"));\n      elt.style.cssText = \"position: absolute; right: 0px; width: \" + Math.max(cm.display.barWidth - 1, 2) + \"px; top: \"\n        + (top + this.buttonHeight) + \"px; height: \" + height + \"px\";\n      elt.className = this.options.className;\n      if (ann.id) {\n        elt.setAttribute(\"annotation-id\", ann.id);\n      }\n    }\n    this.div.textContent = \"\";\n    this.div.appendChild(frag);\n  };\n\n  Annotation.prototype.clear = function() {\n    this.cm.off(\"refresh\", this.resizeHandler);\n    this.cm.off(\"markerAdded\", this.resizeHandler);\n    this.cm.off(\"markerCleared\", this.resizeHandler);\n    if (this.changeHandler) this.cm.off(\"changes\", this.changeHandler);\n    this.div.parentNode.removeChild(this.div);\n  };\n});\n"],"file":"annotatescrollbar.js"}