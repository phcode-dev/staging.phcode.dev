{"version":3,"sources":["languageTools/LanguageClientWrapper.js"],"names":["define","require","exports","module","ToolingInfo","JSON","parse","MESSAGE_FORMAT","BRACKETS","LSP","_addTypeInformation","type","params","hasValidProp","obj","prop","undefined","hasValidProps","props","retval","len","length","i","validateRequestParams","validatedParams","format","LANGUAGE_SERVICE","START","capabilities","FEATURES","CODE_HINTS","PARAMETER_HINTS","JUMP_TO_DECLARATION","JUMP_TO_DEFINITION","JUMP_TO_IMPL","CODE_HINT_INFO","FIND_REFERENCES","includeDeclaration","DOCUMENT_SYMBOLS","PROJECT_SYMBOLS","query","CUSTOM_REQUEST","validateNotificationParams","SYNCHRONIZE_EVENTS","DOCUMENT_OPENED","DOCUMENT_CHANGED","DOCUMENT_SAVED","DOCUMENT_CLOSED","PROJECT_FOLDERS_CHANGED","CUSTOM_NOTIFICATION","validateHandler","handler","console","warn","LanguageClientWrapper","name","path","domainInterface","languages","this","_name","_path","_domainInterface","_languages","_startClient","_stopClient","_notifyClient","_requestClient","_onRequestHandler","_onNotificationHandlers","_dynamicCapabilities","_serverCapabilities","_onEventHandlers","activeEditorChange","projectOpen","beforeProjectClose","dirtyFlagChange","documentChange","fileNameChange","beforeAppClose","_init","logAnalyticsData","typeStrKey","editor","getActiveEditor","document","language","languageName","Metrics","typeStr","countEvent","EVENT_TYPE","toLowerCase","prototype","registerMethods","methodName","REQUEST","methodHandle","_onRequestDelegator","bind","NOTIFY","_onNotificationDelegator","createInterface","STOP","log","$","Deferred","reject","requestHandler","SERVICE_REQUESTS","REGISTRATION_REQUEST","_registrationShim","UNREGISTRATION_REQUEST","_unregistrationShim","call","notificationHandlers","Array","isArray","forEach","_request","_notify","_addOnRequestHandler","_addOnNotificationHandler","push","start","self","then","result","setServerCapabilities","resolve","err","stop","restart","requestHints","response","items","getAdditionalInfoForHint","requestParameterHints","signatures","gotoDefinition","range","gotoDeclaration","gotoImplementation","findReferences","requestSymbolsForDocument","requestSymbolsForWorkspace","addOnShowMessage","SERVICE_NOTIFICATIONS","SHOW_MESSAGE","addOnLogMessage","LOG_MESSAGE","addOnTelemetryEvent","TELEMETRY","addOnCodeInspection","DIAGNOSTICS","onShowMessageWithRequest","SHOW_SELECT_MESSAGE","onProjectFoldersRequest","PROJECT_FOLDERS_REQUEST","registrations","registration","id","onDynamicCapabilityRegistration","unregistrations","unregistration","onDynamicCapabilityUnregistration","notifyProjectRootsChanged","notifyTextDocumentOpened","notifyTextDocumentClosed","notifyTextDocumentChanged","notifyTextDocumentSave","sendCustomNotification","onCustomNotification","sendCustomRequest","onCustomRequest","addOnEditorChangeHandler","addOnProjectOpenHandler","addBeforeProjectCloseHandler","addOnDocumentDirtyFlagChangeHandler","addOnDocumentChangeHandler","addOnFileRenameHandler","addBeforeAppClose","addOnCustomEventHandler","eventName","triggerEvent","event","eventArgs","arguments","handlers","apply","getDynamicCapabilities","getServerCapabilities","serverCapabilities"],"mappings":"AA0BAA,OAAO,SAAUC,QAASC,QAASC,QAG/B,IAAIC,YAAcC,KAAKC,MAAML,QAAQ,wCACjCM,eAAiB,CACbC,SAAU,WACVC,IAAK,OAGb,SAASC,oBAAoBC,KAAMC,QAC/B,MAAO,CACHD,KAAMA,KACNC,OAAQA,QAIhB,SAASC,aAAaC,IAAKC,MACvB,OAAQD,UAAqBE,IAAdF,IAAIC,OAAqC,OAAdD,IAAIC,MAGlD,SAASE,cAAcH,IAAKI,OACxB,IAAIC,SAAWL,IACXM,IAAMF,MAAMG,OACZC,EAEJ,IAAKA,EAAI,EAAGH,QAAWG,EAAIF,IAAME,IAC7BH,OAAUA,aAA4BH,IAAlBF,IAAII,MAAMI,KAAuC,OAAlBR,IAAII,MAAMI,IAGjE,OAAOH,OAKX,SAASI,sBAAsBZ,KAAMC,QACjC,IAAIY,gBAAkB,KAKtB,IAHAZ,OAASA,QAAU,IAGRa,SAAWlB,eAAeE,IACjC,OAAOG,OAGX,OAAQD,MACJ,KAAKP,YAAYsB,iBAAiBC,OAEtBd,aAAaD,OAAQ,cAAgBC,aAAaD,OAAQ,gBAC1DY,gBAAkBZ,QACFgB,aAAeJ,gBAAgBI,eAAgB,GAEnE,MAER,KAAKxB,YAAYyB,SAASC,WAC1B,KAAK1B,YAAYyB,SAASE,gBAC1B,KAAK3B,YAAYyB,SAASG,oBAC1B,KAAK5B,YAAYyB,SAASI,mBAC1B,KAAK7B,YAAYyB,SAASK,aAEdjB,cAAcL,OAAQ,CAAC,WAAY,gBACnCY,gBAAkBZ,QAEtB,MAER,KAAKR,YAAYyB,SAASM,eAElBX,gBAAkBZ,OAClB,MAER,KAAKR,YAAYyB,SAASO,gBAEdnB,cAAcL,OAAQ,CAAC,WAAY,iBACnCY,gBAAkBZ,QACFyB,mBAAqBb,gBAAgBa,qBAAsB,GAE/E,MAER,KAAKjC,YAAYyB,SAASS,iBAEdzB,aAAaD,OAAQ,cACrBY,gBAAkBZ,QAEtB,MAER,KAAKR,YAAYyB,SAASU,gBAEd1B,aAAaD,OAAQ,UAAoC,iBAAjBA,OAAO4B,QAC/ChB,gBAAkBZ,QAEtB,MAER,KAAKR,YAAYsB,iBAAiBe,eAE1BjB,gBAAkBZ,OAI9B,OAAOY,gBAMX,SAASkB,2BAA2B/B,KAAMC,QACtC,IAAIY,gBAAkB,KAKtB,IAHAZ,OAASA,QAAU,IAGRa,SAAWlB,eAAeE,IACjC,OAAOG,OAGX,OAAQD,MACJ,KAAKP,YAAYuC,mBAAmBC,gBAExB3B,cAAcL,OAAQ,CAAC,WAAY,cAAe,iBAClDY,gBAAkBZ,QAEtB,MAER,KAAKR,YAAYuC,mBAAmBE,iBAExB5B,cAAcL,OAAQ,CAAC,WAAY,kBACnCY,gBAAkBZ,QAEtB,MAER,KAAKR,YAAYuC,mBAAmBG,eAOpC,KAAK1C,YAAYuC,mBAAmBI,gBAExBlC,aAAaD,OAAQ,cACrBY,gBAAkBZ,QAEtB,MAER,KAAKR,YAAYuC,mBAAmBK,wBAExB/B,cAAcL,OAAQ,CAAC,eAAgB,qBACvCY,gBAAkBZ,QAEtB,MAER,KAAKR,YAAYsB,iBAAiBuB,oBAE1BzB,gBAAkBZ,OAI9B,OAAOY,gBAGX,SAAS0B,gBAAgBC,SACrB,IAAIhC,QAAS,EAQb,OANIgC,SAA8B,mBAAZA,QAClBhC,QAAS,EAETiC,QAAQC,KAAK,wGAAyGF,SAGnHhC,OAGX,SAASmC,sBAAsBC,KAAMC,KAAMC,gBAAiBC,WACxDC,KAAKC,MAAQL,KACbI,KAAKE,MAAQL,KACbG,KAAKG,iBAAmBL,gBACxBE,KAAKI,WAAaL,WAAa,GAC/BC,KAAKK,aAAe,KACpBL,KAAKM,YAAc,KACnBN,KAAKO,cAAgB,KACrBP,KAAKQ,eAAiB,KACtBR,KAAKS,kBAAoB,GACzBT,KAAKU,wBAA0B,GAC/BV,KAAKW,qBAAuB,GAC5BX,KAAKY,oBAAsB,GAG3BZ,KAAKa,iBAAmB,CACpBC,mBAAsB,GACtBC,YAAe,GACfC,mBAAsB,GACtBC,gBAAmB,GACnBC,eAAkB,GAClBC,eAAkB,GAClBC,eAAkB,IAGtBpB,KAAKqB,QA0aT,SAASC,iBAAiBC,YACtB,IAAIC,OAAUlF,QAAQ,wBAAwBmF,kBAC1CC,SAAWF,OAASA,OAAOE,SAAW,KACtCC,SAAWD,SAAWA,SAASC,SAAW,KAC1CC,aAAeD,SAAWA,SAAS1B,MAAQ,GAC3C4B,QAAUvF,QAAQ,iBAClBwF,QAAUP,WAEdM,QAAQE,WACJF,QAAQG,WAAW7D,WACnB,yBACA2D,QAAUF,aAAaK,eAlb/BtC,sBAAsBuC,UAAUb,MAAQ,WACpCrB,KAAKG,iBAAiBgC,gBAAgB,CAClC,CACIC,WAAY3F,YAAYsB,iBAAiBsE,QACzCC,aAActC,KAAKuC,oBAAoBC,KAAKxC,OAEhD,CACIoC,WAAY3F,YAAYsB,iBAAiB0E,OACzCH,aAActC,KAAK0C,yBAAyBF,KAAKxC,SAKzDA,KAAKK,aAAeL,KAAKG,iBAAiBwC,gBAAgBlG,YAAYsB,iBAAiBC,OAAO,GAC9FgC,KAAKM,YAAcN,KAAKG,iBAAiBwC,gBAAgBlG,YAAYsB,iBAAiB6E,MAAM,GAC5F5C,KAAKO,cAAgBP,KAAKG,iBAAiBwC,gBAAgBlG,YAAYsB,iBAAiB0E,QACxFzC,KAAKQ,eAAiBR,KAAKG,iBAAiBwC,gBAAgBlG,YAAYsB,iBAAiBsE,SAAS,IAGtG1C,sBAAsBuC,UAAUK,oBAAsB,SAAUtF,QAC5D,IAAKA,SAAWA,OAAOD,KAEnB,OADAyC,QAAQoD,IAAI,0BACLC,EAAEC,WAAWC,SAGxB,IAAIC,eAAiBjD,KAAKS,kBAAkBxD,OAAOD,MACnD,OAAIC,OAAOD,OAASP,YAAYyG,iBAAiBC,qBACtCnD,KAAKoD,kBAAkBnG,OAAOA,OAAQgG,gBAG7ChG,OAAOD,OAASP,YAAYyG,iBAAiBG,uBACtCrD,KAAKsD,oBAAoBrG,OAAOA,OAAQgG,gBAG/C1D,gBAAgB0D,gBACTA,eAAeM,KAAK,KAAMtG,OAAOA,SAE5CwC,QAAQoD,IAAI,iDAAkD5F,OAAOD,MAC9D8F,EAAEC,WAAWC,WAIxBrD,sBAAsBuC,UAAUQ,yBAA2B,SAAUzF,QACjE,GAAKA,QAAWA,OAAOD,KAAvB,CAKA,IAAIwG,qBAAuBxD,KAAKU,wBAAwBzD,OAAOD,MAC3DwG,sBAAwBC,MAAMC,QAAQF,uBAAyBA,qBAAqB9F,OACpF8F,qBAAqBG,QAAQ,SAAUnE,SAC/BD,gBAAgBC,UAChBA,QAAQ+D,KAAK,KAAMtG,OAAOA,UAIlCwC,QAAQoD,IAAI,uDAAwD5F,OAAOD,WAZ3EyC,QAAQoD,IAAI,gCAgBpBlD,sBAAsBuC,UAAU0B,SAAW,SAAU5G,KAAMC,QAEvD,OADAA,OAASW,sBAAsBZ,KAAMC,UAEjCA,OAASF,oBAAoBC,KAAMC,QAC5B+C,KAAKQ,eAAevD,UAG/BwC,QAAQoD,IAAI,kDAAmD7F,MACxD8F,EAAEC,WAAWC,WAGxBrD,sBAAsBuC,UAAU2B,QAAU,SAAU7G,KAAMC,SACtDA,OAAS8B,2BAA2B/B,KAAMC,UAEtCA,OAASF,oBAAoBC,KAAMC,QACnC+C,KAAKO,cAActD,SAEnBwC,QAAQoD,IAAI,uDAAwD7F,OAI5E2C,sBAAsBuC,UAAU4B,qBAAuB,SAAU9G,KAAMwC,SAC/DD,gBAAgBC,WAChBQ,KAAKS,kBAAkBzD,MAAQwC,UAIvCG,sBAAsBuC,UAAU6B,0BAA4B,SAAU/G,KAAMwC,SACpED,gBAAgBC,WACXQ,KAAKU,wBAAwB1D,QAC9BgD,KAAKU,wBAAwB1D,MAAQ,IAGzCgD,KAAKU,wBAAwB1D,MAAMgH,KAAKxE,WAQhDG,sBAAsBuC,UAAU+B,MAAQ,SAAUhH,QAE9C,GADAA,OAASW,sBAAsBnB,YAAYsB,iBAAiBC,MAAOf,QACvD,CACR,IAAIiH,KAAOlE,KACX,OAAOA,KAAKK,aAAapD,QAChBkH,KAAK,SAAUC,QAEZ,OADAF,KAAKG,sBAAsBD,OAAOnG,cAC3B6E,EAAEC,WAAWuB,QAAQF,SAC7B,SAAUG,KACT,OAAOzB,EAAEC,WAAWC,OAAOuB,OAK3C,OADA9E,QAAQoD,IAAI,wDACLC,EAAEC,WAAWC,UAIxBrD,sBAAsBuC,UAAUsC,KAAO,WACnC,OAAOxE,KAAKM,eAIhBX,sBAAsBuC,UAAUuC,QAAU,SAAUxH,QAChD,IAAIiH,KAAOlE,KACX,OAAOA,KAAKwE,OAAOL,KAAK,WACpB,OAAOD,KAAKD,MAAMhH,WAQ1B0C,sBAAsBuC,UAAUwC,aAAe,SAAUzH,QACrD,OAAO+C,KAAK4D,SAASnH,YAAYyB,SAASC,WAAYlB,QACjDkH,KAAK,SAASQ,UAIX,OAHGA,UAAYA,SAASC,OAASD,SAASC,MAAMlH,QAC5C4D,iBAAiB,cAEdwB,EAAEC,WAAWuB,QAAQK,WAC7B,SAASJ,KACR,OAAOzB,EAAEC,WAAWC,OAAOuB,QAKvC5E,sBAAsBuC,UAAU2C,yBAA2B,SAAU5H,QACjE,OAAO+C,KAAK4D,SAASnH,YAAYyB,SAASM,eAAgBvB,SAI9D0C,sBAAsBuC,UAAU4C,sBAAwB,SAAU7H,QAC9D,OAAO+C,KAAK4D,SAASnH,YAAYyB,SAASE,gBAAiBnB,QACtDkH,KAAK,SAASQ,UAIX,OAHIA,UAAYA,SAASI,YAAcJ,SAASI,WAAWrH,QACvD4D,iBAAiB,eAEdwB,EAAEC,WAAWuB,QAAQK,WAC7B,SAASJ,KACR,OAAOzB,EAAEC,WAAWC,OAAOuB,QAKvC5E,sBAAsBuC,UAAU8C,eAAiB,SAAU/H,QACvD,OAAO+C,KAAK4D,SAASnH,YAAYyB,SAASI,mBAAoBrB,QACzDkH,KAAK,SAASQ,UAIX,OAHGA,UAAYA,SAASM,OACpB3D,iBAAiB,eAEdwB,EAAEC,WAAWuB,QAAQK,WAC7B,SAASJ,KACR,OAAOzB,EAAEC,WAAWC,OAAOuB,QAKvC5E,sBAAsBuC,UAAUgD,gBAAkB,SAAUjI,QACxD,OAAO+C,KAAK4D,SAASnH,YAAYyB,SAASG,oBAAqBpB,SAInE0C,sBAAsBuC,UAAUiD,mBAAqB,SAAUlI,QAC3D,OAAO+C,KAAK4D,SAASnH,YAAYyB,SAASK,aAActB,SAI5D0C,sBAAsBuC,UAAUkD,eAAiB,SAAUnI,QACvD,OAAO+C,KAAK4D,SAASnH,YAAYyB,SAASO,gBAAiBxB,SAI/D0C,sBAAsBuC,UAAUmD,0BAA4B,SAAUpI,QAClE,OAAO+C,KAAK4D,SAASnH,YAAYyB,SAASS,iBAAkB1B,SAOhE0C,sBAAsBuC,UAAUoD,2BAA6B,SAAUrI,QACnE,OAAO+C,KAAK4D,SAASnH,YAAYyB,SAASU,gBAAiB3B,SAQ/D0C,sBAAsBuC,UAAUqD,iBAAmB,SAAU/F,SACzDQ,KAAK+D,0BAA0BtH,YAAY+I,sBAAsBC,aAAcjG,UAInFG,sBAAsBuC,UAAUwD,gBAAkB,SAAUlG,SACxDQ,KAAK+D,0BAA0BtH,YAAY+I,sBAAsBG,YAAanG,UAOlFG,sBAAsBuC,UAAU0D,oBAAsB,SAAUpG,SAC5DQ,KAAK+D,0BAA0BtH,YAAY+I,sBAAsBK,UAAWrG,UAOhFG,sBAAsBuC,UAAU4D,oBAAsB,SAAUtG,SAC5DQ,KAAK+D,0BAA0BtH,YAAY+I,sBAAsBO,YAAavG,UAQlFG,sBAAsBuC,UAAU8D,yBAA2B,SAAUxG,SACjEQ,KAAK8D,qBAAqBrH,YAAYyG,iBAAiB+C,oBAAqBzG,UAGhFG,sBAAsBuC,UAAUgE,wBAA0B,SAAU1G,SAChEQ,KAAK8D,qBAAqBrH,YAAYyG,iBAAiBiD,wBAAyB3G,UAGpFG,sBAAsBuC,UAAUkB,kBAAoB,SAAUnG,OAAQuC,SAClE,IAAI0E,KAAOlE,KAEPoG,cAKJ,OALoBnJ,OAAOmJ,cACbzC,QAAQ,SAAU0C,cAC5B,IAAIC,GAAKD,aAAaC,GACtBpC,KAAKvD,qBAAqB2F,IAAMD,eAE7B9G,gBAAgBC,SAAWA,QAAQvC,QAAU6F,EAAEC,WAAWuB,WAGrE3E,sBAAsBuC,UAAUqE,gCAAkC,SAAU/G,SACxEQ,KAAK8D,qBAAqBrH,YAAYyG,iBAAiBC,qBAAsB3D,UAGjFG,sBAAsBuC,UAAUoB,oBAAsB,SAAUrG,OAAQuC,SACpE,IAAI0E,KAAOlE,KAEPwG,gBAKJ,OALsBvJ,OAAOuJ,gBACb7C,QAAQ,SAAU8C,gBAC9B,IAAIH,GAAKG,eAAeH,UACjBpC,KAAKvD,qBAAqB2F,MAE9B/G,gBAAgBC,SAAWA,QAAQvC,QAAU6F,EAAEC,WAAWuB,WAGrE3E,sBAAsBuC,UAAUwE,kCAAoC,SAAUlH,SAC1EQ,KAAK8D,qBAAqBrH,YAAYyG,iBAAiBG,uBAAwB7D,UAiBnFG,sBAAsBuC,UAAUyE,0BAA4B,SAAU1J,QAClE+C,KAAK6D,QAAQpH,YAAYuC,mBAAmBK,wBAAyBpC,SAOzE0C,sBAAsBuC,UAAU0E,yBAA2B,SAAU3J,QACjE+C,KAAK6D,QAAQpH,YAAYuC,mBAAmBC,gBAAiBhC,SAIjE0C,sBAAsBuC,UAAU2E,yBAA2B,SAAU5J,QACjE+C,KAAK6D,QAAQpH,YAAYuC,mBAAmBI,gBAAiBnC,SAIjE0C,sBAAsBuC,UAAU4E,0BAA4B,SAAU7J,QAClE+C,KAAK6D,QAAQpH,YAAYuC,mBAAmBE,iBAAkBjC,SAIlE0C,sBAAsBuC,UAAU6E,uBAAyB,SAAU9J,QAC/D+C,KAAK6D,QAAQpH,YAAYuC,mBAAmBG,eAAgBlC,SAQhE0C,sBAAsBuC,UAAU8E,uBAAyB,SAAU/J,QAC/D+C,KAAK6D,QAAQpH,YAAYsB,iBAAiBuB,oBAAqBrC,SAGnE0C,sBAAsBuC,UAAU+E,qBAAuB,SAAUjK,KAAMwC,SACnEQ,KAAK+D,0BAA0B/G,KAAMwC,UAIzCG,sBAAsBuC,UAAUgF,kBAAoB,SAAUjK,QAC1D,OAAO+C,KAAK4D,SAASnH,YAAYsB,iBAAiBe,eAAgB7B,SAGtE0C,sBAAsBuC,UAAUiF,gBAAkB,SAAUnK,KAAMwC,SAC9DQ,KAAK8D,qBAAqB9G,KAAMwC,UAIpCG,sBAAsBuC,UAAUkF,yBAA2B,SAAU5H,SAC7DD,gBAAgBC,UAChBQ,KAAKa,iBAAqC,mBAAEmD,KAAKxE,UAIzDG,sBAAsBuC,UAAUmF,wBAA0B,SAAU7H,SAC5DD,gBAAgBC,UAChBQ,KAAKa,iBAA8B,YAAEmD,KAAKxE,UAIlDG,sBAAsBuC,UAAUoF,6BAA+B,SAAU9H,SACjED,gBAAgBC,UAChBQ,KAAKa,iBAAqC,mBAAEmD,KAAKxE,UAIzDG,sBAAsBuC,UAAUqF,oCAAsC,SAAU/H,SACxED,gBAAgBC,UAChBQ,KAAKa,iBAAkC,gBAAEmD,KAAKxE,UAItDG,sBAAsBuC,UAAUsF,2BAA6B,SAAUhI,SAC/DD,gBAAgBC,UAChBQ,KAAKa,iBAAiC,eAAEmD,KAAKxE,UAIrDG,sBAAsBuC,UAAUuF,uBAAyB,SAAUjI,SAC3DD,gBAAgBC,UAChBQ,KAAKa,iBAAiC,eAAEmD,KAAKxE,UAIrDG,sBAAsBuC,UAAUwF,kBAAoB,SAAUlI,SACtDD,gBAAgBC,UAChBQ,KAAKa,iBAAiC,eAAEmD,KAAKxE,UAIrDG,sBAAsBuC,UAAUyF,wBAA0B,SAAUC,UAAWpI,SACvED,gBAAgBC,WACXQ,KAAKa,iBAAiB+G,aACvB5H,KAAKa,iBAAiB+G,WAAa,IAEvC5H,KAAKa,iBAAiB+G,WAAW5D,KAAKxE,WAI9CG,sBAAsBuC,UAAU2F,aAAe,SAAUC,OACrD,IAAIF,UAAYE,MAAM9K,KAClB+K,UAAYC,UAGRC,SADJjI,KAAKa,iBAAiB+G,YAAcnE,MAAMC,QAAQ1D,KAAKa,iBAAiB+G,aACzD5H,KAAKa,iBAAiB+G,WAE5BjE,QAAQ,SAAUnE,SACnBD,gBAAgBC,UAChBA,QAAQ0I,MAAM,KAAMH,cAMpCpI,sBAAsBuC,UAAUiG,uBAAyB,WACrD,OAAOnI,KAAKW,sBAGhBhB,sBAAsBuC,UAAUkG,sBAAwB,WACpD,OAAOpI,KAAKY,qBAGhBjB,sBAAsBuC,UAAUmC,sBAAwB,SAAUgE,oBAC9DrI,KAAKY,oBAAsByH,oBAG/B9L,QAAQoD,sBAAwBA,sBAkBhCpD,QAAQqB,sBAAwBA,sBAChCrB,QAAQwC,2BAA6BA","sourcesContent":["/*\n * Copyright (c) 2019 - present Adobe. All rights reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n *\n */\n\n/*eslint no-console: 0*/\n/*eslint indent: 0*/\n/*eslint max-len: [\"error\", { \"code\": 200 }]*/\ndefine(function (require, exports, module) {\n\n\n    var ToolingInfo = JSON.parse(require(\"text!languageTools/ToolingInfo.json\")),\n        MESSAGE_FORMAT = {\n            BRACKETS: \"brackets\",\n            LSP: \"lsp\"\n        };\n\n    function _addTypeInformation(type, params) {\n        return {\n            type: type,\n            params: params\n        };\n    }\n\n    function hasValidProp(obj, prop) {\n        return (obj && obj[prop] !== undefined && obj[prop] !== null);\n    }\n\n    function hasValidProps(obj, props) {\n        var retval = !!obj,\n            len = props.length,\n            i;\n\n        for (i = 0; retval && (i < len); i++) {\n            retval = (retval && obj[props[i]] !== undefined && obj[props[i]] !== null);\n        }\n\n        return retval;\n    }\n    /*\n        RequestParams creator - sendNotifications/request\n    */\n    function validateRequestParams(type, params) {\n        var validatedParams = null;\n\n        params = params || {};\n\n        //Don't validate if the formatting is done by the caller\n        if (params.format === MESSAGE_FORMAT.LSP) {\n            return params;\n        }\n\n        switch (type) {\n            case ToolingInfo.LANGUAGE_SERVICE.START:\n                {\n                    if (hasValidProp(params, \"rootPaths\") || hasValidProp(params, \"rootPath\")) {\n                        validatedParams = params;\n                        validatedParams.capabilities = validatedParams.capabilities || false;\n                    }\n                    break;\n                }\n            case ToolingInfo.FEATURES.CODE_HINTS:\n            case ToolingInfo.FEATURES.PARAMETER_HINTS:\n            case ToolingInfo.FEATURES.JUMP_TO_DECLARATION:\n            case ToolingInfo.FEATURES.JUMP_TO_DEFINITION:\n            case ToolingInfo.FEATURES.JUMP_TO_IMPL:\n                {\n                    if (hasValidProps(params, [\"filePath\", \"cursorPos\"])) {\n                        validatedParams = params;\n                    }\n                    break;\n                }\n            case ToolingInfo.FEATURES.CODE_HINT_INFO:\n                {\n                    validatedParams = params;\n                    break;\n                }\n            case ToolingInfo.FEATURES.FIND_REFERENCES:\n                {\n                    if (hasValidProps(params, [\"filePath\", \"cursorPos\"])) {\n                        validatedParams = params;\n                        validatedParams.includeDeclaration = validatedParams.includeDeclaration || false;\n                    }\n                    break;\n                }\n            case ToolingInfo.FEATURES.DOCUMENT_SYMBOLS:\n                {\n                    if (hasValidProp(params, \"filePath\")) {\n                        validatedParams = params;\n                    }\n                    break;\n                }\n            case ToolingInfo.FEATURES.PROJECT_SYMBOLS:\n                {\n                    if (hasValidProp(params, \"query\") && typeof params.query === \"string\") {\n                        validatedParams = params;\n                    }\n                    break;\n                }\n            case ToolingInfo.LANGUAGE_SERVICE.CUSTOM_REQUEST:\n                {\n                    validatedParams = params;\n                }\n        }\n\n        return validatedParams;\n    }\n\n    /*\n        ReponseParams transformer - used by OnNotifications\n    */\n    function validateNotificationParams(type, params) {\n        var validatedParams = null;\n\n        params = params || {};\n\n        //Don't validate if the formatting is done by the caller\n        if (params.format === MESSAGE_FORMAT.LSP) {\n            return params;\n        }\n\n        switch (type) {\n            case ToolingInfo.SYNCHRONIZE_EVENTS.DOCUMENT_OPENED:\n                {\n                    if (hasValidProps(params, [\"filePath\", \"fileContent\", \"languageId\"])) {\n                        validatedParams = params;\n                    }\n                    break;\n                }\n            case ToolingInfo.SYNCHRONIZE_EVENTS.DOCUMENT_CHANGED:\n                {\n                    if (hasValidProps(params, [\"filePath\", \"fileContent\"])) {\n                        validatedParams = params;\n                    }\n                    break;\n                }\n            case ToolingInfo.SYNCHRONIZE_EVENTS.DOCUMENT_SAVED:\n                {\n                    if (hasValidProp(params, \"filePath\")) {\n                        validatedParams = params;\n                    }\n                    break;\n                }\n            case ToolingInfo.SYNCHRONIZE_EVENTS.DOCUMENT_CLOSED:\n                {\n                    if (hasValidProp(params, \"filePath\")) {\n                        validatedParams = params;\n                    }\n                    break;\n                }\n            case ToolingInfo.SYNCHRONIZE_EVENTS.PROJECT_FOLDERS_CHANGED:\n                {\n                    if (hasValidProps(params, [\"foldersAdded\", \"foldersRemoved\"])) {\n                        validatedParams = params;\n                    }\n                    break;\n                }\n            case ToolingInfo.LANGUAGE_SERVICE.CUSTOM_NOTIFICATION:\n                {\n                    validatedParams = params;\n                }\n        }\n\n        return validatedParams;\n    }\n\n    function validateHandler(handler) {\n        var retval = false;\n\n        if (handler && typeof handler === \"function\") {\n            retval = true;\n        } else {\n            console.warn(\"Handler validation failed. Handler should be of type 'function'. Provided handler is of type :\", typeof handler);\n        }\n\n        return retval;\n    }\n\n    function LanguageClientWrapper(name, path, domainInterface, languages) {\n        this._name = name;\n        this._path = path;\n        this._domainInterface = domainInterface;\n        this._languages = languages || [];\n        this._startClient = null;\n        this._stopClient = null;\n        this._notifyClient = null;\n        this._requestClient = null;\n        this._onRequestHandler = {};\n        this._onNotificationHandlers = {};\n        this._dynamicCapabilities = {};\n        this._serverCapabilities = {};\n\n        //Initialize with keys for brackets events we want to tap into.\n        this._onEventHandlers = {\n            \"activeEditorChange\": [],\n            \"projectOpen\": [],\n            \"beforeProjectClose\": [],\n            \"dirtyFlagChange\": [],\n            \"documentChange\": [],\n            \"fileNameChange\": [],\n            \"beforeAppClose\": []\n        };\n\n        this._init();\n    }\n\n    LanguageClientWrapper.prototype._init = function () {\n        this._domainInterface.registerMethods([\n            {\n                methodName: ToolingInfo.LANGUAGE_SERVICE.REQUEST,\n                methodHandle: this._onRequestDelegator.bind(this)\n            },\n            {\n                methodName: ToolingInfo.LANGUAGE_SERVICE.NOTIFY,\n                methodHandle: this._onNotificationDelegator.bind(this)\n            }\n        ]);\n\n        //create function interfaces\n        this._startClient = this._domainInterface.createInterface(ToolingInfo.LANGUAGE_SERVICE.START, true);\n        this._stopClient = this._domainInterface.createInterface(ToolingInfo.LANGUAGE_SERVICE.STOP, true);\n        this._notifyClient = this._domainInterface.createInterface(ToolingInfo.LANGUAGE_SERVICE.NOTIFY);\n        this._requestClient = this._domainInterface.createInterface(ToolingInfo.LANGUAGE_SERVICE.REQUEST, true);\n    };\n\n    LanguageClientWrapper.prototype._onRequestDelegator = function (params) {\n        if (!params || !params.type) {\n            console.log(\"Invalid server request\");\n            return $.Deferred().reject();\n        }\n\n        var requestHandler = this._onRequestHandler[params.type];\n        if (params.type === ToolingInfo.SERVICE_REQUESTS.REGISTRATION_REQUEST) {\n            return this._registrationShim(params.params, requestHandler);\n        }\n\n        if (params.type === ToolingInfo.SERVICE_REQUESTS.UNREGISTRATION_REQUEST) {\n            return this._unregistrationShim(params.params, requestHandler);\n        }\n\n        if (validateHandler(requestHandler)) {\n            return requestHandler.call(null, params.params);\n        }\n        console.log(\"No handler provided for server request type : \", params.type);\n        return $.Deferred().reject();\n\n    };\n\n    LanguageClientWrapper.prototype._onNotificationDelegator = function (params) {\n        if (!params || !params.type) {\n            console.log(\"Invalid server notification\");\n            return;\n        }\n\n        var notificationHandlers = this._onNotificationHandlers[params.type];\n        if (notificationHandlers && Array.isArray(notificationHandlers) && notificationHandlers.length) {\n            notificationHandlers.forEach(function (handler) {\n                if (validateHandler(handler)) {\n                    handler.call(null, params.params);\n                }\n            });\n        } else {\n            console.log(\"No handlers provided for server notification type : \", params.type);\n        }\n    };\n\n    LanguageClientWrapper.prototype._request = function (type, params) {\n        params = validateRequestParams(type, params);\n        if (params) {\n            params = _addTypeInformation(type, params);\n            return this._requestClient(params);\n        }\n\n        console.log(\"Invalid Parameters provided for request type : \", type);\n        return $.Deferred().reject();\n    };\n\n    LanguageClientWrapper.prototype._notify = function (type, params) {\n        params = validateNotificationParams(type, params);\n        if (params) {\n            params = _addTypeInformation(type, params);\n            this._notifyClient(params);\n        } else {\n            console.log(\"Invalid Parameters provided for notification type : \", type);\n        }\n    };\n\n    LanguageClientWrapper.prototype._addOnRequestHandler = function (type, handler) {\n        if (validateHandler(handler)) {\n            this._onRequestHandler[type] = handler;\n        }\n    };\n\n    LanguageClientWrapper.prototype._addOnNotificationHandler = function (type, handler) {\n        if (validateHandler(handler)) {\n            if (!this._onNotificationHandlers[type]) {\n                this._onNotificationHandlers[type] = [];\n            }\n\n            this._onNotificationHandlers[type].push(handler);\n        }\n    };\n\n    /**\n        Requests\n    */\n    //start\n    LanguageClientWrapper.prototype.start = function (params) {\n        params = validateRequestParams(ToolingInfo.LANGUAGE_SERVICE.START, params);\n        if (params) {\n            var self = this;\n            return this._startClient(params)\n                    .then(function (result) {\n                        self.setServerCapabilities(result.capabilities);\n                        return $.Deferred().resolve(result);\n                    }, function (err) {\n                        return $.Deferred().reject(err);\n                    });\n        }\n\n        console.log(\"Invalid Parameters provided for request type : start\");\n        return $.Deferred().reject();\n    };\n\n    //shutdown\n    LanguageClientWrapper.prototype.stop = function () {\n        return this._stopClient();\n    };\n\n    //restart\n    LanguageClientWrapper.prototype.restart = function (params) {\n        var self = this;\n        return this.stop().then(function () {\n            return self.start(params);\n        });\n    };\n\n    /**\n        textDocument requests\n    */\n    //completion\n    LanguageClientWrapper.prototype.requestHints = function (params) {\n        return this._request(ToolingInfo.FEATURES.CODE_HINTS, params)\n            .then(function(response) {\n                if(response && response.items && response.items.length) {\n                    logAnalyticsData(\"CODE_HINTS\");\n                }\n                return $.Deferred().resolve(response);\n            }, function(err) {\n                return $.Deferred().reject(err);\n            });\n    };\n\n    //completionItemResolve\n    LanguageClientWrapper.prototype.getAdditionalInfoForHint = function (params) {\n        return this._request(ToolingInfo.FEATURES.CODE_HINT_INFO, params);\n    };\n\n    //signatureHelp\n    LanguageClientWrapper.prototype.requestParameterHints = function (params) {\n        return this._request(ToolingInfo.FEATURES.PARAMETER_HINTS, params)\n            .then(function(response) {\n                if (response && response.signatures && response.signatures.length) {\n                    logAnalyticsData(\"PARAM_HINTS\");\n                }\n                return $.Deferred().resolve(response);\n            }, function(err) {\n                return $.Deferred().reject(err);\n            });\n    };\n\n    //gotoDefinition\n    LanguageClientWrapper.prototype.gotoDefinition = function (params) {\n        return this._request(ToolingInfo.FEATURES.JUMP_TO_DEFINITION, params)\n            .then(function(response) {\n                if(response && response.range) {\n                    logAnalyticsData(\"JUMP_TO_DEF\");\n                }\n                return $.Deferred().resolve(response);\n            }, function(err) {\n                return $.Deferred().reject(err);\n            });\n    };\n\n    //gotoDeclaration\n    LanguageClientWrapper.prototype.gotoDeclaration = function (params) {\n        return this._request(ToolingInfo.FEATURES.JUMP_TO_DECLARATION, params);\n    };\n\n    //gotoImplementation\n    LanguageClientWrapper.prototype.gotoImplementation = function (params) {\n        return this._request(ToolingInfo.FEATURES.JUMP_TO_IMPL, params);\n    };\n\n    //findReferences\n    LanguageClientWrapper.prototype.findReferences = function (params) {\n        return this._request(ToolingInfo.FEATURES.FIND_REFERENCES, params);\n    };\n\n    //documentSymbol\n    LanguageClientWrapper.prototype.requestSymbolsForDocument = function (params) {\n        return this._request(ToolingInfo.FEATURES.DOCUMENT_SYMBOLS, params);\n    };\n\n    /**\n        workspace requests\n    */\n    //workspaceSymbol\n    LanguageClientWrapper.prototype.requestSymbolsForWorkspace = function (params) {\n        return this._request(ToolingInfo.FEATURES.PROJECT_SYMBOLS, params);\n    };\n\n    //These will mostly be callbacks/[done-fail](promises)\n    /**\n        Window OnNotifications\n    */\n    //showMessage\n    LanguageClientWrapper.prototype.addOnShowMessage = function (handler) {\n        this._addOnNotificationHandler(ToolingInfo.SERVICE_NOTIFICATIONS.SHOW_MESSAGE, handler);\n    };\n\n    //logMessage\n    LanguageClientWrapper.prototype.addOnLogMessage = function (handler) {\n        this._addOnNotificationHandler(ToolingInfo.SERVICE_NOTIFICATIONS.LOG_MESSAGE, handler);\n    };\n\n    /**\n        healthData/logging OnNotifications\n    */\n    //telemetry\n    LanguageClientWrapper.prototype.addOnTelemetryEvent = function (handler) {\n        this._addOnNotificationHandler(ToolingInfo.SERVICE_NOTIFICATIONS.TELEMETRY, handler);\n    };\n\n    /**\n        textDocument OnNotifications\n    */\n    //onPublishDiagnostics\n    LanguageClientWrapper.prototype.addOnCodeInspection = function (handler) {\n        this._addOnNotificationHandler(ToolingInfo.SERVICE_NOTIFICATIONS.DIAGNOSTICS, handler);\n    };\n\n    /**\n        Window OnRequest\n    */\n\n    //showMessageRequest - handler must return promise\n    LanguageClientWrapper.prototype.onShowMessageWithRequest = function (handler) {\n        this._addOnRequestHandler(ToolingInfo.SERVICE_REQUESTS.SHOW_SELECT_MESSAGE, handler);\n    };\n\n    LanguageClientWrapper.prototype.onProjectFoldersRequest = function (handler) {\n        this._addOnRequestHandler(ToolingInfo.SERVICE_REQUESTS.PROJECT_FOLDERS_REQUEST, handler);\n    };\n\n    LanguageClientWrapper.prototype._registrationShim = function (params, handler) {\n        var self = this;\n\n        var registrations = params.registrations;\n        registrations.forEach(function (registration) {\n            var id = registration.id;\n            self._dynamicCapabilities[id] = registration;\n        });\n        return validateHandler(handler) ? handler(params) : $.Deferred().resolve();\n    };\n\n    LanguageClientWrapper.prototype.onDynamicCapabilityRegistration = function (handler) {\n        this._addOnRequestHandler(ToolingInfo.SERVICE_REQUESTS.REGISTRATION_REQUEST, handler);\n    };\n\n    LanguageClientWrapper.prototype._unregistrationShim = function (params, handler) {\n        var self = this;\n\n        var unregistrations = params.unregistrations;\n        unregistrations.forEach(function (unregistration) {\n            var id = unregistration.id;\n            delete self._dynamicCapabilities[id];\n        });\n        return validateHandler(handler) ? handler(params) : $.Deferred().resolve();\n    };\n\n    LanguageClientWrapper.prototype.onDynamicCapabilityUnregistration = function (handler) {\n        this._addOnRequestHandler(ToolingInfo.SERVICE_REQUESTS.UNREGISTRATION_REQUEST, handler);\n    };\n\n    /*\n        Unimplemented OnNotifications\n            workspace\n                applyEdit (codeAction, codeLens)\n    */\n\n    /**\n        SendNotifications\n    */\n\n    /**\n        workspace SendNotifications\n    */\n    //didChangeProjectRoots\n    LanguageClientWrapper.prototype.notifyProjectRootsChanged = function (params) {\n        this._notify(ToolingInfo.SYNCHRONIZE_EVENTS.PROJECT_FOLDERS_CHANGED, params);\n    };\n\n    /**\n        textDocument SendNotifications\n    */\n    //didOpenTextDocument\n    LanguageClientWrapper.prototype.notifyTextDocumentOpened = function (params) {\n        this._notify(ToolingInfo.SYNCHRONIZE_EVENTS.DOCUMENT_OPENED, params);\n    };\n\n    //didCloseTextDocument\n    LanguageClientWrapper.prototype.notifyTextDocumentClosed = function (params) {\n        this._notify(ToolingInfo.SYNCHRONIZE_EVENTS.DOCUMENT_CLOSED, params);\n    };\n\n    //didChangeTextDocument\n    LanguageClientWrapper.prototype.notifyTextDocumentChanged = function (params) {\n        this._notify(ToolingInfo.SYNCHRONIZE_EVENTS.DOCUMENT_CHANGED, params);\n    };\n\n    //didSaveTextDocument\n    LanguageClientWrapper.prototype.notifyTextDocumentSave = function (params) {\n        this._notify(ToolingInfo.SYNCHRONIZE_EVENTS.DOCUMENT_SAVED, params);\n    };\n\n    /**\n        Custom messages\n     */\n\n    //customNotification\n    LanguageClientWrapper.prototype.sendCustomNotification = function (params) {\n        this._notify(ToolingInfo.LANGUAGE_SERVICE.CUSTOM_NOTIFICATION, params);\n    };\n\n    LanguageClientWrapper.prototype.onCustomNotification = function (type, handler) {\n        this._addOnNotificationHandler(type, handler);\n    };\n\n    //customRequest\n    LanguageClientWrapper.prototype.sendCustomRequest = function (params) {\n        return this._request(ToolingInfo.LANGUAGE_SERVICE.CUSTOM_REQUEST, params);\n    };\n\n    LanguageClientWrapper.prototype.onCustomRequest = function (type, handler) {\n        this._addOnRequestHandler(type, handler);\n    };\n\n    //Handling Brackets Events\n    LanguageClientWrapper.prototype.addOnEditorChangeHandler = function (handler) {\n        if (validateHandler(handler)) {\n            this._onEventHandlers[\"activeEditorChange\"].push(handler);\n        }\n    };\n\n    LanguageClientWrapper.prototype.addOnProjectOpenHandler = function (handler) {\n        if (validateHandler(handler)) {\n            this._onEventHandlers[\"projectOpen\"].push(handler);\n        }\n    };\n\n    LanguageClientWrapper.prototype.addBeforeProjectCloseHandler = function (handler) {\n        if (validateHandler(handler)) {\n            this._onEventHandlers[\"beforeProjectClose\"].push(handler);\n        }\n    };\n\n    LanguageClientWrapper.prototype.addOnDocumentDirtyFlagChangeHandler = function (handler) {\n        if (validateHandler(handler)) {\n            this._onEventHandlers[\"dirtyFlagChange\"].push(handler);\n        }\n    };\n\n    LanguageClientWrapper.prototype.addOnDocumentChangeHandler = function (handler) {\n        if (validateHandler(handler)) {\n            this._onEventHandlers[\"documentChange\"].push(handler);\n        }\n    };\n\n    LanguageClientWrapper.prototype.addOnFileRenameHandler = function (handler) {\n        if (validateHandler(handler)) {\n            this._onEventHandlers[\"fileNameChange\"].push(handler);\n        }\n    };\n\n    LanguageClientWrapper.prototype.addBeforeAppClose = function (handler) {\n        if (validateHandler(handler)) {\n            this._onEventHandlers[\"beforeAppClose\"].push(handler);\n        }\n    };\n\n    LanguageClientWrapper.prototype.addOnCustomEventHandler = function (eventName, handler) {\n        if (validateHandler(handler)) {\n            if (!this._onEventHandlers[eventName]) {\n                this._onEventHandlers[eventName] = [];\n            }\n            this._onEventHandlers[eventName].push(handler);\n        }\n    };\n\n    LanguageClientWrapper.prototype.triggerEvent = function (event) {\n        var eventName = event.type,\n            eventArgs = arguments;\n\n        if (this._onEventHandlers[eventName] && Array.isArray(this._onEventHandlers[eventName])) {\n            var handlers = this._onEventHandlers[eventName];\n\n            handlers.forEach(function (handler) {\n                if (validateHandler(handler)) {\n                    handler.apply(null, eventArgs);\n                }\n            });\n        }\n    };\n\n    LanguageClientWrapper.prototype.getDynamicCapabilities = function () {\n        return this._dynamicCapabilities;\n    };\n\n    LanguageClientWrapper.prototype.getServerCapabilities = function () {\n        return this._serverCapabilities;\n    };\n\n    LanguageClientWrapper.prototype.setServerCapabilities = function (serverCapabilities) {\n        this._serverCapabilities = serverCapabilities;\n    };\n\n    exports.LanguageClientWrapper = LanguageClientWrapper;\n\n    function logAnalyticsData(typeStrKey) {\n        var editor =  require(\"editor/EditorManager\").getActiveEditor(),\n            document = editor ? editor.document : null,\n            language = document ? document.language : null,\n            languageName = language ? language._name : \"\",\n            Metrics = require(\"utils/Metrics\"),\n            typeStr = typeStrKey;\n\n        Metrics.countEvent(\n            Metrics.EVENT_TYPE.CODE_HINTS,\n            \"languageServerProtocol\",\n            typeStr + languageName.toLowerCase()\n          );\n    }\n\n    //For unit testting\n    exports.validateRequestParams = validateRequestParams;\n    exports.validateNotificationParams = validateNotificationParams;\n});\n"],"file":"LanguageClientWrapper.js"}