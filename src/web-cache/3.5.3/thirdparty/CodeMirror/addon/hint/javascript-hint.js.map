{"version":3,"sources":["thirdparty/CodeMirror/addon/hint/javascript-hint.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","Pos","forEach","arr","f","i","e","length","arrayContains","item","Array","prototype","indexOf","scriptHint","editor","keywords","getToken","options","cur","getCursor","token","test","type","innerMode","getMode","state","mode","helperType","string","end","ch","slice","start","tprop","line","context","push","list","getCompletions","from","to","javascriptHint","javascriptKeywords","getTokenAt","getCoffeeScriptToken","charAt","replace","coffeescriptHint","coffeescriptKeywords","registerHelper","stringProps","split","arrayProps","funcProps","forAllProps","obj","callback","Object","getOwnPropertyNames","getPrototypeOf","o","name","found","global","globalScope","window","maybeAdd","str","lastIndexOf","gatherCompletions","Function","pop","base","additionalContext","useGlobalScope","jQuery","_","v","localVars","next","c","prev","vars","globalVars","key"],"mappings":"CAGA,SAAUA,KACc,iBAAXC,SAAwC,iBAAVC,OACvCF,IAAIG,QAAQ,yBACY,mBAAVC,QAAwBA,OAAOC,IAC7CD,OAAO,CAAC,wBAAyBJ,KAEjCA,IAAIM,YANR,CAOG,SAASA,YACV,IAAIC,IAAMD,WAAWC,IAErB,SAASC,QAAQC,IAAKC,GACpB,IAAK,IAAIC,EAAI,EAAGC,EAAIH,IAAII,OAAQF,EAAIC,IAAKD,EAAGD,EAAED,IAAIE,IAGpD,SAASG,cAAcL,IAAKM,MAC1B,IAAKC,MAAMC,UAAUC,QAAS,CAE5B,IADA,IAAIP,EAAIF,IAAII,OACLF,KACL,GAAIF,IAAIE,KAAOI,KACb,OAAO,EAGX,OAAO,EAET,OAA6B,GAAtBN,IAAIS,QAAQH,MAGrB,SAASI,WAAWC,OAAQC,SAAUC,SAAUC,SAE9C,IAAIC,IAAMJ,OAAOK,YAAaC,MAAQJ,SAASF,OAAQI,KACvD,IAAI,yBAAyBG,KAAKD,MAAME,MAAxC,CACA,IAAIC,UAAYvB,WAAWuB,UAAUT,OAAOU,UAAWJ,MAAMK,OAC7D,GAAkC,SAA9BF,UAAUG,KAAKC,WAAnB,CACAP,MAAMK,MAAQF,UAAUE,MAGnB,YAAYJ,KAAKD,MAAMQ,QAGjBR,MAAMS,IAAMX,IAAIY,KACzBV,MAAMS,IAAMX,IAAIY,GAChBV,MAAMQ,OAASR,MAAMQ,OAAOG,MAAM,EAAGb,IAAIY,GAAKV,MAAMY,QAJpDZ,MAAQ,CAACY,MAAOd,IAAIY,GAAID,IAAKX,IAAIY,GAAIF,OAAQ,GAAIH,MAAOL,MAAMK,MACrDH,KAAsB,KAAhBF,MAAMQ,OAAgB,WAAa,MAQpD,IAFA,IAAIK,MAAQb,MAES,YAAda,MAAMX,MAAoB,CAE/B,GAAoB,MADpBW,MAAQjB,SAASF,OAAQb,IAAIiB,IAAIgB,KAAMD,MAAMD,SACnCJ,OAAe,OAEzB,GADAK,MAAQjB,SAASF,OAAQb,IAAIiB,IAAIgB,KAAMD,MAAMD,SACxCG,QAAS,IAAIA,QAAU,GAC5BA,QAAQC,KAAKH,OAEf,MAAO,CAACI,KAAMC,eAAelB,MAAOe,QAASpB,SAAUE,SAC/CsB,KAAMtC,IAAIiB,IAAIgB,KAAMd,MAAMY,OAC1BQ,GAAIvC,IAAIiB,IAAIgB,KAAMd,MAAMS,QAGlC,SAASY,eAAe3B,OAAQG,SAC9B,OAAOJ,WAAWC,OAAQ4B,mBACR,SAAUpC,EAAGY,KAAM,OAAOZ,EAAEqC,WAAWzB,MACvCD,SAIpB,SAAS2B,qBAAqB9B,OAAQI,KAIpC,IAAIE,MAAQN,OAAO6B,WAAWzB,KAW9B,OAVIA,IAAIY,IAAMV,MAAMY,MAAQ,GAA+B,KAA1BZ,MAAMQ,OAAOiB,OAAO,IACnDzB,MAAMS,IAAMT,MAAMY,MAClBZ,MAAMQ,OAAS,IACfR,MAAME,KAAO,YAEN,cAAcD,KAAKD,MAAMQ,UAChCR,MAAME,KAAO,WACbF,MAAMY,QACNZ,MAAMQ,OAASR,MAAMQ,OAAOkB,QAAQ,KAAM,KAErC1B,MAGT,SAAS2B,iBAAiBjC,OAAQG,SAChC,OAAOJ,WAAWC,OAAQkC,qBAAsBJ,qBAAsB3B,SArBxEjB,WAAWiD,eAAe,OAAQ,aAAcR,gBAuBhDzC,WAAWiD,eAAe,OAAQ,eAAgBF,kBAElD,IAAIG,YAAc,iJAC8DC,MAAM,KAClFC,WAAa,4IACkED,MAAM,KACrFE,UAAY,4BAA4BF,MAAM,KAC9CT,mBAAqB,4NACoGS,MAAM,KAC/HH,qBAAuB,gMAC8GG,MAAM,KAE/I,SAASG,YAAYC,IAAKC,UACxB,GAAKC,OAAOC,qBAAwBD,OAAOE,eAGzC,IAAK,IAAIC,EAAIL,IAAKK,EAAGA,EAAIH,OAAOE,eAAeC,GAC7CH,OAAOC,oBAAoBE,GAAG1D,QAAQsD,eAHxC,IAAK,IAAIK,QAAQN,IAAKC,SAASK,MAOnC,SAASvB,eAAelB,MAAOe,QAASpB,SAAUE,SAChD,IAAI6C,MAAQ,GAAI9B,MAAQZ,MAAMQ,OAAQmC,OAAS9C,SAAWA,QAAQ+C,aAAeC,OACjF,SAASC,SAASC,KACiB,GAA7BA,IAAIC,YAAYpC,MAAO,IAAYxB,cAAcsD,MAAOK,MAAML,MAAM1B,KAAK+B,KAE/E,SAASE,kBAAkBd,KACP,iBAAPA,IAAiBrD,QAAQgD,YAAagB,UACxCX,eAAe7C,MAAOR,QAAQkD,WAAYc,UAC1CX,eAAee,UAAUpE,QAAQmD,UAAWa,UACrDZ,YAAYC,IAAKW,UAGnB,GAAI/B,SAAWA,QAAQ5B,OAAQ,CAG7B,IAAIgD,IAAMpB,QAAQoC,MAAOC,KAiBzB,IAhBIjB,IAAIjC,MAAyC,IAAjCiC,IAAIjC,KAAKV,QAAQ,aAC3BK,SAAWA,QAAQwD,oBACrBD,KAAOvD,QAAQwD,kBAAkBlB,IAAI3B,SAClCX,UAAsC,IAA3BA,QAAQyD,iBACtBF,KAAOA,MAAQT,OAAOR,IAAI3B,UACP,UAAZ2B,IAAIjC,KACbkD,KAAO,GACc,QAAZjB,IAAIjC,KACbkD,KAAO,EACc,YAAZjB,IAAIjC,OACQ,MAAjByC,OAAOY,QAAiC,KAAdpB,IAAI3B,QAA+B,UAAd2B,IAAI3B,QAC1B,mBAAjBmC,OAAOY,OAEE,MAAZZ,OAAOa,GAA4B,KAAdrB,IAAI3B,QAAsC,mBAAZmC,OAAOa,IACjEJ,KAAOT,OAAOa,KAFdJ,KAAOT,OAAOY,UAIH,MAARH,MAAgBrC,QAAQ5B,QAC7BiE,KAAOA,KAAKrC,QAAQoC,MAAM3C,QAChB,MAAR4C,MAAcH,kBAAkBG,UAC/B,CAGL,IAAK,IAAIK,EAAIzD,MAAMK,MAAMqD,UAAWD,EAAGA,EAAIA,EAAEE,KAAMb,SAASW,EAAEhB,MAC9D,IAAK,IAAImB,EAAI5D,MAAMK,MAAMU,QAAS6C,EAAGA,EAAIA,EAAEC,KACzC,IAAK,IAAIJ,EAAIG,EAAEE,KAAML,EAAGA,EAAIA,EAAEE,KAAMb,SAASW,EAAEhB,MACjD,IAAK,IAAIgB,EAAIzD,MAAMK,MAAM0D,WAAYN,EAAGA,EAAIA,EAAEE,KAAMb,SAASW,EAAEhB,MAC/D,GAAI5C,SAAwC,MAA7BA,QAAQwD,kBACrB,IAAK,IAAIW,OAAOnE,QAAQwD,kBACtBP,SAASkB,KACRnE,UAAsC,IAA3BA,QAAQyD,gBACtBL,kBAAkBN,QACpB7D,QAAQa,SAAUmD,UAEpB,OAAOJ","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  var Pos = CodeMirror.Pos;\n\n  function forEach(arr, f) {\n    for (var i = 0, e = arr.length; i < e; ++i) f(arr[i]);\n  }\n\n  function arrayContains(arr, item) {\n    if (!Array.prototype.indexOf) {\n      var i = arr.length;\n      while (i--) {\n        if (arr[i] === item) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return arr.indexOf(item) != -1;\n  }\n\n  function scriptHint(editor, keywords, getToken, options) {\n    // Find the token at the cursor\n    var cur = editor.getCursor(), token = getToken(editor, cur);\n    if (/\\b(?:string|comment)\\b/.test(token.type)) return;\n    var innerMode = CodeMirror.innerMode(editor.getMode(), token.state);\n    if (innerMode.mode.helperType === \"json\") return;\n    token.state = innerMode.state;\n\n    // If it's not a 'word-style' token, ignore the token.\n    if (!/^[\\w$_]*$/.test(token.string)) {\n      token = {start: cur.ch, end: cur.ch, string: \"\", state: token.state,\n               type: token.string == \".\" ? \"property\" : null};\n    } else if (token.end > cur.ch) {\n      token.end = cur.ch;\n      token.string = token.string.slice(0, cur.ch - token.start);\n    }\n\n    var tprop = token;\n    // If it is a property, find out what it is a property of.\n    while (tprop.type == \"property\") {\n      tprop = getToken(editor, Pos(cur.line, tprop.start));\n      if (tprop.string != \".\") return;\n      tprop = getToken(editor, Pos(cur.line, tprop.start));\n      if (!context) var context = [];\n      context.push(tprop);\n    }\n    return {list: getCompletions(token, context, keywords, options),\n            from: Pos(cur.line, token.start),\n            to: Pos(cur.line, token.end)};\n  }\n\n  function javascriptHint(editor, options) {\n    return scriptHint(editor, javascriptKeywords,\n                      function (e, cur) {return e.getTokenAt(cur);},\n                      options);\n  };\n  CodeMirror.registerHelper(\"hint\", \"javascript\", javascriptHint);\n\n  function getCoffeeScriptToken(editor, cur) {\n  // This getToken, it is for coffeescript, imitates the behavior of\n  // getTokenAt method in javascript.js, that is, returning \"property\"\n  // type and treat \".\" as independent token.\n    var token = editor.getTokenAt(cur);\n    if (cur.ch == token.start + 1 && token.string.charAt(0) == '.') {\n      token.end = token.start;\n      token.string = '.';\n      token.type = \"property\";\n    }\n    else if (/^\\.[\\w$_]*$/.test(token.string)) {\n      token.type = \"property\";\n      token.start++;\n      token.string = token.string.replace(/\\./, '');\n    }\n    return token;\n  }\n\n  function coffeescriptHint(editor, options) {\n    return scriptHint(editor, coffeescriptKeywords, getCoffeeScriptToken, options);\n  }\n  CodeMirror.registerHelper(\"hint\", \"coffeescript\", coffeescriptHint);\n\n  var stringProps = (\"charAt charCodeAt indexOf lastIndexOf substring substr slice trim trimLeft trimRight \" +\n                     \"toUpperCase toLowerCase split concat match replace search\").split(\" \");\n  var arrayProps = (\"length concat join splice push pop shift unshift slice reverse sort indexOf \" +\n                    \"lastIndexOf every some filter forEach map reduce reduceRight \").split(\" \");\n  var funcProps = \"prototype apply call bind\".split(\" \");\n  var javascriptKeywords = (\"break case catch class const continue debugger default delete do else export extends false finally for function \" +\n                  \"if in import instanceof new null return super switch this throw true try typeof var void while with yield\").split(\" \");\n  var coffeescriptKeywords = (\"and break catch class continue delete do else extends false finally for \" +\n                  \"if in instanceof isnt new no not null of off on or return switch then throw true try typeof until void while with yes\").split(\" \");\n\n  function forAllProps(obj, callback) {\n    if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {\n      for (var name in obj) callback(name)\n    } else {\n      for (var o = obj; o; o = Object.getPrototypeOf(o))\n        Object.getOwnPropertyNames(o).forEach(callback)\n    }\n  }\n\n  function getCompletions(token, context, keywords, options) {\n    var found = [], start = token.string, global = options && options.globalScope || window;\n    function maybeAdd(str) {\n      if (str.lastIndexOf(start, 0) == 0 && !arrayContains(found, str)) found.push(str);\n    }\n    function gatherCompletions(obj) {\n      if (typeof obj == \"string\") forEach(stringProps, maybeAdd);\n      else if (obj instanceof Array) forEach(arrayProps, maybeAdd);\n      else if (obj instanceof Function) forEach(funcProps, maybeAdd);\n      forAllProps(obj, maybeAdd)\n    }\n\n    if (context && context.length) {\n      // If this is a property, see if it belongs to some object we can\n      // find in the current environment.\n      var obj = context.pop(), base;\n      if (obj.type && obj.type.indexOf(\"variable\") === 0) {\n        if (options && options.additionalContext)\n          base = options.additionalContext[obj.string];\n        if (!options || options.useGlobalScope !== false)\n          base = base || global[obj.string];\n      } else if (obj.type == \"string\") {\n        base = \"\";\n      } else if (obj.type == \"atom\") {\n        base = 1;\n      } else if (obj.type == \"function\") {\n        if (global.jQuery != null && (obj.string == '$' || obj.string == 'jQuery') &&\n            (typeof global.jQuery == 'function'))\n          base = global.jQuery();\n        else if (global._ != null && (obj.string == '_') && (typeof global._ == 'function'))\n          base = global._();\n      }\n      while (base != null && context.length)\n        base = base[context.pop().string];\n      if (base != null) gatherCompletions(base);\n    } else {\n      // If not, just look in the global object, any local scope, and optional additional-context\n      // (reading into JS mode internals to get at the local and global variables)\n      for (var v = token.state.localVars; v; v = v.next) maybeAdd(v.name);\n      for (var c = token.state.context; c; c = c.prev)\n        for (var v = c.vars; v; v = v.next) maybeAdd(v.name)\n      for (var v = token.state.globalVars; v; v = v.next) maybeAdd(v.name);\n      if (options && options.additionalContext != null)\n        for (var key in options.additionalContext)\n          maybeAdd(key);\n      if (!options || options.useGlobalScope !== false)\n        gatherCompletions(global);\n      forEach(keywords, maybeAdd);\n    }\n    return found;\n  }\n});\n"],"file":"javascript-hint.js"}