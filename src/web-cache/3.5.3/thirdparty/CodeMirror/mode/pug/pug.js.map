{"version":3,"sources":["thirdparty/CodeMirror/mode/pug/pug.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","KEYWORD","DOCTYPE","ID","CLASS","ATTRS_NEST","{","(","[","jsMode","getMode","State","this","javaScriptLine","javaScriptLineExcludesColon","javaScriptArguments","javaScriptArgumentsDepth","isInterpolating","interpolationNesting","jsState","startState","restOfLine","isIncludeFiltered","isEach","lastTag","scriptType","isAttrs","attrsNest","inAttributeName","attributeIsType","attrValue","indentOf","Infinity","indentToken","innerMode","innerState","innerModeForLine","javaScript","stream","state","sol","peek","tok","token","eol","yieldStatement","match","doctype","interpolation","interpolationContinued","next","caseStatement","when","defaultStatement","extendsStatement","append","prepend","block","include","includeFiltered","includeFilteredContinued","filter","mixin","call","mixinCallAfter","callArguments","conditional","each","eachContinued","whileStatement","tag","captures","toLowerCase","innerModes","current","substring","setInnerMode","code","id","className","attrs","attrsContinued","push","length","pop","eat","trim","toString","Function","replace","backUp","ex","attributesBlock","indent","eatSpace","comment","indentation","colon","text","dot","indexOf","fail","mode","mimeModes","name","force","hideFirstChars","skipToEnd","copyState","copy","nextToken","prototype","res","slice","defineMIME"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../javascript/javascript\"), require(\"../css/css\"), require(\"../htmlmixed/htmlmixed\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../javascript/javascript\", \"../css/css\", \"../htmlmixed/htmlmixed\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"pug\", function (config) {\n  // token types\n  var KEYWORD = 'keyword';\n  var DOCTYPE = 'meta';\n  var ID = 'builtin';\n  var CLASS = 'qualifier';\n\n  var ATTRS_NEST = {\n    '{': '}',\n    '(': ')',\n    '[': ']'\n  };\n\n  var jsMode = CodeMirror.getMode(config, 'javascript');\n\n  function State() {\n    this.javaScriptLine = false;\n    this.javaScriptLineExcludesColon = false;\n\n    this.javaScriptArguments = false;\n    this.javaScriptArgumentsDepth = 0;\n\n    this.isInterpolating = false;\n    this.interpolationNesting = 0;\n\n    this.jsState = CodeMirror.startState(jsMode);\n\n    this.restOfLine = '';\n\n    this.isIncludeFiltered = false;\n    this.isEach = false;\n\n    this.lastTag = '';\n    this.scriptType = '';\n\n    // Attributes Mode\n    this.isAttrs = false;\n    this.attrsNest = [];\n    this.inAttributeName = true;\n    this.attributeIsType = false;\n    this.attrValue = '';\n\n    // Indented Mode\n    this.indentOf = Infinity;\n    this.indentToken = '';\n\n    this.innerMode = null;\n    this.innerState = null;\n\n    this.innerModeForLine = false;\n  }\n  /**\n   * Safely copy a state\n   *\n   * @return {State}\n   */\n  State.prototype.copy = function () {\n    var res = new State();\n    res.javaScriptLine = this.javaScriptLine;\n    res.javaScriptLineExcludesColon = this.javaScriptLineExcludesColon;\n    res.javaScriptArguments = this.javaScriptArguments;\n    res.javaScriptArgumentsDepth = this.javaScriptArgumentsDepth;\n    res.isInterpolating = this.isInterpolating;\n    res.interpolationNesting = this.interpolationNesting;\n\n    res.jsState = CodeMirror.copyState(jsMode, this.jsState);\n\n    res.innerMode = this.innerMode;\n    if (this.innerMode && this.innerState) {\n      res.innerState = CodeMirror.copyState(this.innerMode, this.innerState);\n    }\n\n    res.restOfLine = this.restOfLine;\n\n    res.isIncludeFiltered = this.isIncludeFiltered;\n    res.isEach = this.isEach;\n    res.lastTag = this.lastTag;\n    res.scriptType = this.scriptType;\n    res.isAttrs = this.isAttrs;\n    res.attrsNest = this.attrsNest.slice();\n    res.inAttributeName = this.inAttributeName;\n    res.attributeIsType = this.attributeIsType;\n    res.attrValue = this.attrValue;\n    res.indentOf = this.indentOf;\n    res.indentToken = this.indentToken;\n\n    res.innerModeForLine = this.innerModeForLine;\n\n    return res;\n  };\n\n  function javaScript(stream, state) {\n    if (stream.sol()) {\n      // if javaScriptLine was set at end of line, ignore it\n      state.javaScriptLine = false;\n      state.javaScriptLineExcludesColon = false;\n    }\n    if (state.javaScriptLine) {\n      if (state.javaScriptLineExcludesColon && stream.peek() === ':') {\n        state.javaScriptLine = false;\n        state.javaScriptLineExcludesColon = false;\n        return;\n      }\n      var tok = jsMode.token(stream, state.jsState);\n      if (stream.eol()) state.javaScriptLine = false;\n      return tok || true;\n    }\n  }\n  function javaScriptArguments(stream, state) {\n    if (state.javaScriptArguments) {\n      if (state.javaScriptArgumentsDepth === 0 && stream.peek() !== '(') {\n        state.javaScriptArguments = false;\n        return;\n      }\n      if (stream.peek() === '(') {\n        state.javaScriptArgumentsDepth++;\n      } else if (stream.peek() === ')') {\n        state.javaScriptArgumentsDepth--;\n      }\n      if (state.javaScriptArgumentsDepth === 0) {\n        state.javaScriptArguments = false;\n        return;\n      }\n\n      var tok = jsMode.token(stream, state.jsState);\n      return tok || true;\n    }\n  }\n\n  function yieldStatement(stream) {\n    if (stream.match(/^yield\\b/)) {\n        return 'keyword';\n    }\n  }\n\n  function doctype(stream) {\n    if (stream.match(/^(?:doctype) *([^\\n]+)?/)) {\n        return DOCTYPE;\n    }\n  }\n\n  function interpolation(stream, state) {\n    if (stream.match('#{')) {\n      state.isInterpolating = true;\n      state.interpolationNesting = 0;\n      return 'punctuation';\n    }\n  }\n\n  function interpolationContinued(stream, state) {\n    if (state.isInterpolating) {\n      if (stream.peek() === '}') {\n        state.interpolationNesting--;\n        if (state.interpolationNesting < 0) {\n          stream.next();\n          state.isInterpolating = false;\n          return 'punctuation';\n        }\n      } else if (stream.peek() === '{') {\n        state.interpolationNesting++;\n      }\n      return jsMode.token(stream, state.jsState) || true;\n    }\n  }\n\n  function caseStatement(stream, state) {\n    if (stream.match(/^case\\b/)) {\n      state.javaScriptLine = true;\n      return KEYWORD;\n    }\n  }\n\n  function when(stream, state) {\n    if (stream.match(/^when\\b/)) {\n      state.javaScriptLine = true;\n      state.javaScriptLineExcludesColon = true;\n      return KEYWORD;\n    }\n  }\n\n  function defaultStatement(stream) {\n    if (stream.match(/^default\\b/)) {\n      return KEYWORD;\n    }\n  }\n\n  function extendsStatement(stream, state) {\n    if (stream.match(/^extends?\\b/)) {\n      state.restOfLine = 'string';\n      return KEYWORD;\n    }\n  }\n\n  function append(stream, state) {\n    if (stream.match(/^append\\b/)) {\n      state.restOfLine = 'variable';\n      return KEYWORD;\n    }\n  }\n  function prepend(stream, state) {\n    if (stream.match(/^prepend\\b/)) {\n      state.restOfLine = 'variable';\n      return KEYWORD;\n    }\n  }\n  function block(stream, state) {\n    if (stream.match(/^block\\b *(?:(prepend|append)\\b)?/)) {\n      state.restOfLine = 'variable';\n      return KEYWORD;\n    }\n  }\n\n  function include(stream, state) {\n    if (stream.match(/^include\\b/)) {\n      state.restOfLine = 'string';\n      return KEYWORD;\n    }\n  }\n\n  function includeFiltered(stream, state) {\n    if (stream.match(/^include:([a-zA-Z0-9\\-]+)/, false) && stream.match('include')) {\n      state.isIncludeFiltered = true;\n      return KEYWORD;\n    }\n  }\n\n  function includeFilteredContinued(stream, state) {\n    if (state.isIncludeFiltered) {\n      var tok = filter(stream, state);\n      state.isIncludeFiltered = false;\n      state.restOfLine = 'string';\n      return tok;\n    }\n  }\n\n  function mixin(stream, state) {\n    if (stream.match(/^mixin\\b/)) {\n      state.javaScriptLine = true;\n      return KEYWORD;\n    }\n  }\n\n  function call(stream, state) {\n    if (stream.match(/^\\+([-\\w]+)/)) {\n      if (!stream.match(/^\\( *[-\\w]+ *=/, false)) {\n        state.javaScriptArguments = true;\n        state.javaScriptArgumentsDepth = 0;\n      }\n      return 'variable';\n    }\n    if (stream.match('+#{', false)) {\n      stream.next();\n      state.mixinCallAfter = true;\n      return interpolation(stream, state);\n    }\n  }\n  function callArguments(stream, state) {\n    if (state.mixinCallAfter) {\n      state.mixinCallAfter = false;\n      if (!stream.match(/^\\( *[-\\w]+ *=/, false)) {\n        state.javaScriptArguments = true;\n        state.javaScriptArgumentsDepth = 0;\n      }\n      return true;\n    }\n  }\n\n  function conditional(stream, state) {\n    if (stream.match(/^(if|unless|else if|else)\\b/)) {\n      state.javaScriptLine = true;\n      return KEYWORD;\n    }\n  }\n\n  function each(stream, state) {\n    if (stream.match(/^(- *)?(each|for)\\b/)) {\n      state.isEach = true;\n      return KEYWORD;\n    }\n  }\n  function eachContinued(stream, state) {\n    if (state.isEach) {\n      if (stream.match(/^ in\\b/)) {\n        state.javaScriptLine = true;\n        state.isEach = false;\n        return KEYWORD;\n      } else if (stream.sol() || stream.eol()) {\n        state.isEach = false;\n      } else if (stream.next()) {\n        while (!stream.match(/^ in\\b/, false) && stream.next());\n        return 'variable';\n      }\n    }\n  }\n\n  function whileStatement(stream, state) {\n    if (stream.match(/^while\\b/)) {\n      state.javaScriptLine = true;\n      return KEYWORD;\n    }\n  }\n\n  function tag(stream, state) {\n    var captures;\n    if (captures = stream.match(/^(\\w(?:[-:\\w]*\\w)?)\\/?/)) {\n      state.lastTag = captures[1].toLowerCase();\n      if (state.lastTag === 'script') {\n        state.scriptType = 'application/javascript';\n      }\n      return 'tag';\n    }\n  }\n\n  function filter(stream, state) {\n    if (stream.match(/^:([\\w\\-]+)/)) {\n      var innerMode;\n      if (config && config.innerModes) {\n        innerMode = config.innerModes(stream.current().substring(1));\n      }\n      if (!innerMode) {\n        innerMode = stream.current().substring(1);\n      }\n      if (typeof innerMode === 'string') {\n        innerMode = CodeMirror.getMode(config, innerMode);\n      }\n      setInnerMode(stream, state, innerMode);\n      return 'atom';\n    }\n  }\n\n  function code(stream, state) {\n    if (stream.match(/^(!?=|-)/)) {\n      state.javaScriptLine = true;\n      return 'punctuation';\n    }\n  }\n\n  function id(stream) {\n    if (stream.match(/^#([\\w-]+)/)) {\n      return ID;\n    }\n  }\n\n  function className(stream) {\n    if (stream.match(/^\\.([\\w-]+)/)) {\n      return CLASS;\n    }\n  }\n\n  function attrs(stream, state) {\n    if (stream.peek() == '(') {\n      stream.next();\n      state.isAttrs = true;\n      state.attrsNest = [];\n      state.inAttributeName = true;\n      state.attrValue = '';\n      state.attributeIsType = false;\n      return 'punctuation';\n    }\n  }\n\n  function attrsContinued(stream, state) {\n    if (state.isAttrs) {\n      if (ATTRS_NEST[stream.peek()]) {\n        state.attrsNest.push(ATTRS_NEST[stream.peek()]);\n      }\n      if (state.attrsNest[state.attrsNest.length - 1] === stream.peek()) {\n        state.attrsNest.pop();\n      } else  if (stream.eat(')')) {\n        state.isAttrs = false;\n        return 'punctuation';\n      }\n      if (state.inAttributeName && stream.match(/^[^=,\\)!]+/)) {\n        if (stream.peek() === '=' || stream.peek() === '!') {\n          state.inAttributeName = false;\n          state.jsState = CodeMirror.startState(jsMode);\n          if (state.lastTag === 'script' && stream.current().trim().toLowerCase() === 'type') {\n            state.attributeIsType = true;\n          } else {\n            state.attributeIsType = false;\n          }\n        }\n        return 'attribute';\n      }\n\n      var tok = jsMode.token(stream, state.jsState);\n      if (state.attributeIsType && tok === 'string') {\n        state.scriptType = stream.current().toString();\n      }\n      if (state.attrsNest.length === 0 && (tok === 'string' || tok === 'variable' || tok === 'keyword')) {\n        try {\n          Function('', 'var x ' + state.attrValue.replace(/,\\s*$/, '').replace(/^!/, ''));\n          state.inAttributeName = true;\n          state.attrValue = '';\n          stream.backUp(stream.current().length);\n          return attrsContinued(stream, state);\n        } catch (ex) {\n          //not the end of an attribute\n        }\n      }\n      state.attrValue += stream.current();\n      return tok || true;\n    }\n  }\n\n  function attributesBlock(stream, state) {\n    if (stream.match(/^&attributes\\b/)) {\n      state.javaScriptArguments = true;\n      state.javaScriptArgumentsDepth = 0;\n      return 'keyword';\n    }\n  }\n\n  function indent(stream) {\n    if (stream.sol() && stream.eatSpace()) {\n      return 'indent';\n    }\n  }\n\n  function comment(stream, state) {\n    if (stream.match(/^ *\\/\\/(-)?([^\\n]*)/)) {\n      state.indentOf = stream.indentation();\n      state.indentToken = 'comment';\n      return 'comment';\n    }\n  }\n\n  function colon(stream) {\n    if (stream.match(/^: */)) {\n      return 'colon';\n    }\n  }\n\n  function text(stream, state) {\n    if (stream.match(/^(?:\\| ?| )([^\\n]+)/)) {\n      return 'string';\n    }\n    if (stream.match(/^(<[^\\n]*)/, false)) {\n      // html string\n      setInnerMode(stream, state, 'htmlmixed');\n      state.innerModeForLine = true;\n      return innerMode(stream, state, true);\n    }\n  }\n\n  function dot(stream, state) {\n    if (stream.eat('.')) {\n      var innerMode = null;\n      if (state.lastTag === 'script' && state.scriptType.toLowerCase().indexOf('javascript') != -1) {\n        innerMode = state.scriptType.toLowerCase().replace(/\"|'/g, '');\n      } else if (state.lastTag === 'style') {\n        innerMode = 'css';\n      }\n      setInnerMode(stream, state, innerMode);\n      return 'dot';\n    }\n  }\n\n  function fail(stream) {\n    stream.next();\n    return null;\n  }\n\n\n  function setInnerMode(stream, state, mode) {\n    mode = CodeMirror.mimeModes[mode] || mode;\n    mode = config.innerModes ? config.innerModes(mode) || mode : mode;\n    mode = CodeMirror.mimeModes[mode] || mode;\n    mode = CodeMirror.getMode(config, mode);\n    state.indentOf = stream.indentation();\n\n    if (mode && mode.name !== 'null') {\n      state.innerMode = mode;\n    } else {\n      state.indentToken = 'string';\n    }\n  }\n  function innerMode(stream, state, force) {\n    if (stream.indentation() > state.indentOf || (state.innerModeForLine && !stream.sol()) || force) {\n      if (state.innerMode) {\n        if (!state.innerState) {\n          state.innerState = state.innerMode.startState ? CodeMirror.startState(state.innerMode, stream.indentation()) : {};\n        }\n        return stream.hideFirstChars(state.indentOf + 2, function () {\n          return state.innerMode.token(stream, state.innerState) || true;\n        });\n      } else {\n        stream.skipToEnd();\n        return state.indentToken;\n      }\n    } else if (stream.sol()) {\n      state.indentOf = Infinity;\n      state.indentToken = null;\n      state.innerMode = null;\n      state.innerState = null;\n    }\n  }\n  function restOfLine(stream, state) {\n    if (stream.sol()) {\n      // if restOfLine was set at end of line, ignore it\n      state.restOfLine = '';\n    }\n    if (state.restOfLine) {\n      stream.skipToEnd();\n      var tok = state.restOfLine;\n      state.restOfLine = '';\n      return tok;\n    }\n  }\n\n\n  function startState() {\n    return new State();\n  }\n  function copyState(state) {\n    return state.copy();\n  }\n  /**\n   * Get the next token in the stream\n   *\n   * @param {Stream} stream\n   * @param {State} state\n   */\n  function nextToken(stream, state) {\n    var tok = innerMode(stream, state)\n      || restOfLine(stream, state)\n      || interpolationContinued(stream, state)\n      || includeFilteredContinued(stream, state)\n      || eachContinued(stream, state)\n      || attrsContinued(stream, state)\n      || javaScript(stream, state)\n      || javaScriptArguments(stream, state)\n      || callArguments(stream, state)\n\n      || yieldStatement(stream)\n      || doctype(stream)\n      || interpolation(stream, state)\n      || caseStatement(stream, state)\n      || when(stream, state)\n      || defaultStatement(stream)\n      || extendsStatement(stream, state)\n      || append(stream, state)\n      || prepend(stream, state)\n      || block(stream, state)\n      || include(stream, state)\n      || includeFiltered(stream, state)\n      || mixin(stream, state)\n      || call(stream, state)\n      || conditional(stream, state)\n      || each(stream, state)\n      || whileStatement(stream, state)\n      || tag(stream, state)\n      || filter(stream, state)\n      || code(stream, state)\n      || id(stream)\n      || className(stream)\n      || attrs(stream, state)\n      || attributesBlock(stream, state)\n      || indent(stream)\n      || text(stream, state)\n      || comment(stream, state)\n      || colon(stream)\n      || dot(stream, state)\n      || fail(stream);\n\n    return tok === true ? null : tok;\n  }\n  return {\n    startState: startState,\n    copyState: copyState,\n    token: nextToken\n  };\n}, 'javascript', 'css', 'htmlmixed');\n\nCodeMirror.defineMIME('text/x-pug', 'pug');\nCodeMirror.defineMIME('text/x-jade', 'pug');\n\n});\n"],"file":"pug.js"}