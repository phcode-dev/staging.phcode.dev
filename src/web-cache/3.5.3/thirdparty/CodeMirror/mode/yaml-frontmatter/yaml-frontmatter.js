!function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("../../lib/codemirror"),require("../yaml/yaml")):"function"==typeof define&&define.amd?define(["../../lib/codemirror","../yaml/yaml"],mod):mod(CodeMirror)}(function(CodeMirror){var START=0,FRONTMATTER=1,BODY=2;CodeMirror.defineMode("yaml-frontmatter",function(config,parserConfig){var yamlMode=CodeMirror.getMode(config,"yaml"),innerMode=CodeMirror.getMode(config,parserConfig&&parserConfig.base||"gfm");function localMode(state){return state.state==FRONTMATTER?{mode:yamlMode,state:state.yaml}:{mode:innerMode,state:state.inner}}return{startState:function(){return{state:0,yaml:null,inner:CodeMirror.startState(innerMode)}},copyState:function(state){return{state:state.state,yaml:state.yaml&&CodeMirror.copyState(yamlMode,state.yaml),inner:CodeMirror.copyState(innerMode,state.inner)}},token:function(stream,state){if(0==state.state)return stream.match("---",!1)?(state.state=FRONTMATTER,state.yaml=CodeMirror.startState(yamlMode),yamlMode.token(stream,state.yaml)):(state.state=2,innerMode.token(stream,state.inner));if(state.state==FRONTMATTER){var end=stream.sol()&&stream.match(/(---|\.\.\.)/,!1),style=yamlMode.token(stream,state.yaml);return end&&(state.state=2,state.yaml=null),style}return innerMode.token(stream,state.inner)},innerMode:localMode,indent:function(state,a,b){var m=localMode(state);return m.mode.indent?m.mode.indent(m.state,a,b):CodeMirror.Pass},blankLine:function(state){var m=localMode(state);if(m.mode.blankLine)return m.mode.blankLine(m.state)}}})});
//# sourceMappingURL=yaml-frontmatter.js.map
