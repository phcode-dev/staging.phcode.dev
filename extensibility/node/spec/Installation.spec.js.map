{"version":3,"sources":["extensibility/node/spec/Installation.spec.js"],"names":["ExtensionsDomain","require","fs","async","path","testFilesDirectory","join","dirname","module","filename","installParent","installDirectory","disabledDirectory","systemExtensionDirectory","basicValidExtension","basicValidExtension09","basicValidExtension2","missingMain","oneLevelDown","incompatibleVersion","invalidZip","missingPackageJSON","missingPackageJSONUpdate","missingPackageJSONRenamed","withSymlink","withNpmDependencies","describe","standardOptions","apiVersion","checkPaths","pathsToCheck","callback","existsCalls","forEach","push","exists","apply","parallel","err","results","expect","toBeNull","result","num","toEqual","beforeEach","done","mkdirs","afterEach","remove","it","_cmdInstall","errors","length","installationStatus","extensionDirectory","metadata","name","installedTo","localPath","toBe","_cmdUpdate","substr","existsSync","packageInfo","readJsonSync","version","message","disabledReason","_cmdRemove","legacyDirectory","JSON","parse","readFileSync","slice"],"mappings":"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","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2013 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/*eslint-env node */\n/*jslint node: true */\n/*global expect, describe, it, beforeEach, afterEach */\n\n\n\nvar ExtensionsDomain = require(\"../ExtensionManagerDomain\"),\n    fs               = require(\"fs-extra\"),\n    async            = require(\"async\"),\n    path             = require(\"path\");\n\nvar testFilesDirectory = path.join(path.dirname(module.filename),\n                                    \"..\",   // node\n                                    \"..\",   // extensibility\n                                    \"..\",   // src\n                                    \"..\",   // brackets\n                                    \"test\",\n                                    \"spec\",\n                                    \"extension-test-files\"),\n    installParent      = path.join(path.dirname(module.filename), \"extensions\"),\n    installDirectory   = path.join(installParent, \"good\"),\n    disabledDirectory  = path.join(installParent, \"disabled\"),\n    systemExtensionDirectory = path.join(installParent, \"system\");\n\nvar basicValidExtension       = path.join(testFilesDirectory, \"basic-valid-extension.zip\"),\n    basicValidExtension09     = path.join(testFilesDirectory, \"basic-valid-extension-0.9.zip\"),\n    basicValidExtension2      = path.join(testFilesDirectory, \"basic-valid-extension-2.0.zip\"),\n    missingMain               = path.join(testFilesDirectory, \"missing-main.zip\"),\n    oneLevelDown              = path.join(testFilesDirectory, \"one-level-extension-master.zip\"),\n    incompatibleVersion       = path.join(testFilesDirectory, \"incompatible-version.zip\"),\n    invalidZip                = path.join(testFilesDirectory, \"invalid-zip-file.zip\"),\n    missingPackageJSON        = path.join(testFilesDirectory, \"missing-package-json.zip\"),\n    missingPackageJSONUpdate  = path.join(testFilesDirectory, \"missing-package-json-update.zip\"),\n    missingPackageJSONRenamed = path.join(testFilesDirectory, \"added-package-json-test\", \"missing-package-json.zip\"),\n    withSymlink               = path.join(testFilesDirectory, \"with-symlink.zip\"),\n    withNpmDependencies       = path.join(testFilesDirectory, \"with-npm-dependencies.zip\");\n\n\ndescribe(\"Package Installation\", function () {\n\n    var standardOptions = {\n        disabledDirectory: disabledDirectory,\n        systemExtensionDirectory: systemExtensionDirectory,\n        apiVersion: \"0.22.0\"\n    };\n\n    beforeEach(function (done) {\n        fs.mkdirs(installDirectory, function (err) {\n            fs.mkdirs(disabledDirectory, function (err) {\n                done();\n            });\n        });\n    });\n\n    afterEach(function (done) {\n        fs.remove(installParent, function (err) {\n            done();\n        });\n    });\n\n    function checkPaths(pathsToCheck, callback) {\n        var existsCalls = [];\n        pathsToCheck.forEach(function (path) {\n            existsCalls.push(function (callback) {\n                fs.exists(path, async.apply(callback, null));\n            });\n        });\n\n        async.parallel(existsCalls, function (err, results) {\n            expect(err).toBeNull();\n            results.forEach(function (result, num) {\n                expect(result ? \"\" : pathsToCheck[num] + \" does not exist\").toEqual(\"\");\n            });\n            callback();\n        });\n    }\n\n    it(\"should validate the package\", function (done) {\n        ExtensionsDomain._cmdInstall(missingMain, installDirectory, standardOptions, function (err, result) {\n            expect(err).toBeNull();\n            var errors = result.errors;\n            expect(errors.length).toEqual(1);\n            expect(result.installationStatus).toEqual(\"FAILED\");\n            done();\n        });\n    });\n\n    it(\"should work fine if all is well\", function (done) {\n        ExtensionsDomain._cmdInstall(basicValidExtension, installDirectory, standardOptions, function (err, result) {\n            var extensionDirectory = path.join(installDirectory, \"basic-valid-extension\");\n\n            expect(err).toBeNull();\n            var errors = result.errors;\n            expect(errors.length).toEqual(0);\n            expect(result.metadata.name).toEqual(\"basic-valid-extension\");\n            expect(result.name).toEqual(\"basic-valid-extension\");\n            expect(result.installedTo).toEqual(extensionDirectory);\n            expect(result.installationStatus).toEqual(\"INSTALLED\");\n\n            var pathsToCheck = [\n                path.join(extensionDirectory, \"package.json\"),\n                path.join(extensionDirectory, \"main.js\")\n            ];\n\n            checkPaths(pathsToCheck, done);\n        });\n    });\n\n    it(\"should signal if an update installation is required\", function (done) {\n        ExtensionsDomain._cmdInstall(basicValidExtension, installDirectory, standardOptions, function (err, result) {\n            var extensionDirectory = path.join(installDirectory, \"basic-valid-extension\");\n\n            expect(err).toBeNull();\n            expect(result.installedTo).toEqual(extensionDirectory);\n            expect(result.installationStatus).toEqual(\"INSTALLED\");\n            ExtensionsDomain._cmdInstall(basicValidExtension2, installDirectory, standardOptions, function (err, result) {\n                expect(err).toBeNull();\n                expect(result.installationStatus).toEqual(\"NEEDS_UPDATE\");\n                expect(result.localPath).toEqual(basicValidExtension2);\n                done();\n            });\n        });\n    });\n\n    it(\"should successfully update an extension\", function (done) {\n        ExtensionsDomain._cmdInstall(basicValidExtension, installDirectory, standardOptions, function (err, result) {\n            expect(err).toBeNull();\n            ExtensionsDomain._cmdInstall(basicValidExtension2, installDirectory, standardOptions, function (err, result) {\n                expect(err).toBeNull();\n                expect(result.installationStatus).toBe(\"NEEDS_UPDATE\");\n                ExtensionsDomain._cmdUpdate(basicValidExtension2, installDirectory, standardOptions, function (err, result) {\n                    expect(err).toBeNull();\n                    expect(result.installationStatus).toBe(\"INSTALLED\");\n                    expect(result.installedTo.substr(0, installDirectory.length)).toEqual(installDirectory);\n                    expect(fs.existsSync(result.installedTo)).toBe(true);\n                    var packageInfo = fs.readJsonSync(path.join(result.installedTo, \"package.json\"));\n                    expect(packageInfo.version).toBe(\"2.0.0\");\n                    done();\n                });\n            });\n        });\n    });\n\n    it(\"should signal an update if a package.json appears\", function (done) {\n        ExtensionsDomain._cmdInstall(missingPackageJSON, installDirectory, standardOptions, function (err, result) {\n            expect(err).toBeNull();\n            expect(result.installationStatus).toEqual(\"INSTALLED\");\n            ExtensionsDomain._cmdInstall(missingPackageJSONUpdate, installDirectory, standardOptions, function (err, result) {\n                expect(err).toBeNull();\n                expect(result.installationStatus).toEqual(\"NEEDS_UPDATE\");\n                done();\n            });\n        });\n    });\n\n    // This is mildly redundant. the validation check should catch this.\n    // But, I wanted to be sure that the install function doesn't try to\n    // do anything with the file before validation.\n    it(\"should fail for missing package\", function (done) {\n        ExtensionsDomain._cmdInstall(path.join(testFilesDirectory, \"NOT A PACKAGE\"),\n                                     installDirectory, standardOptions, function (err, result) {\n                                         expect(err).toBeNull();\n                                         var errors = result.errors;\n                                         expect(errors.length).toEqual(1);\n                                         expect(errors[0][0]).toEqual(\"NOT_FOUND_ERR\");\n                                         done();\n                                     });\n    });\n\n    it(\"should not install by default if the same version is already installed\", function (done) {\n        ExtensionsDomain._cmdInstall(basicValidExtension, installDirectory, standardOptions, function (err, result) {\n            expect(err).toBeNull();\n            ExtensionsDomain._cmdInstall(basicValidExtension, installDirectory, standardOptions, function (err, result) {\n                expect(err).toBeNull();\n                expect(result.installationStatus).toEqual(\"SAME_VERSION\");\n                done();\n            });\n        });\n    });\n\n    it(\"should not install by default if an older version is already installed\", function (done) {\n        ExtensionsDomain._cmdInstall(basicValidExtension, installDirectory, standardOptions, function (err, result) {\n            expect(err).toBeNull();\n            ExtensionsDomain._cmdInstall(basicValidExtension09, installDirectory, standardOptions, function (err, result) {\n                expect(err).toBeNull();\n                expect(result.installationStatus).toEqual(\"OLDER_VERSION\");\n                done();\n            });\n        });\n    });\n\n    it(\"should not install by default if the same legacy extension is already installed\", function (done) {\n        ExtensionsDomain._cmdInstall(missingPackageJSON, installDirectory, standardOptions, function (err, result) {\n            expect(err).toBeNull();\n            ExtensionsDomain._cmdInstall(missingPackageJSON, installDirectory, standardOptions, function (err, result) {\n                expect(err).toBeNull();\n                expect(result.installationStatus).toEqual(\"ALREADY_INSTALLED\");\n                done();\n            });\n        });\n    });\n\n    it(\"should yield an error if there's no disabled directory set\", function (done) {\n        ExtensionsDomain._cmdInstall(basicValidExtension, installDirectory, { apiVersion: \"0.22.0\" }, function (err, result) {\n            expect(err.message).toEqual(\"MISSING_REQUIRED_OPTIONS\");\n            done();\n        });\n    });\n\n    it(\"should yield an error if there's no apiVersion set\", function (done) {\n        ExtensionsDomain._cmdInstall(basicValidExtension, installDirectory, { disabledDirectory: disabledDirectory }, function (err, result) {\n            expect(err.message).toEqual(\"MISSING_REQUIRED_OPTIONS\");\n            done();\n        });\n    });\n\n    it(\"should derive the name from the zip if there's no package.json\", function (done) {\n        ExtensionsDomain._cmdInstall(missingPackageJSON, installDirectory, standardOptions, function (err, result) {\n            expect(err).toBeNull();\n            expect(result.disabledReason).toBeNull();\n            var extensionDirectory = path.join(installDirectory, \"missing-package-json\");\n            var pathsToCheck = [\n                path.join(extensionDirectory, \"main.js\")\n            ];\n            checkPaths(pathsToCheck, done);\n        });\n    });\n\n    it(\"should install with the common prefix removed\", function (done) {\n        ExtensionsDomain._cmdInstall(oneLevelDown, installDirectory, standardOptions, function (err, result) {\n            expect(err).toBeNull();\n            var extensionDirectory = path.join(installDirectory, \"one-level-extension\");\n            var pathsToCheck = [\n                path.join(extensionDirectory, \"main.js\"),\n                path.join(extensionDirectory, \"package.json\"),\n                path.join(extensionDirectory, \"lib\", \"foo.js\")\n            ];\n            checkPaths(pathsToCheck, done);\n        });\n    });\n\n    it(\"should disable extensions that are not compatible with the current Brackets API\", function (done) {\n        ExtensionsDomain._cmdInstall(incompatibleVersion, installDirectory, standardOptions, function (err, result) {\n            expect(err).toBeNull();\n            expect(result.installationStatus).toEqual(\"DISABLED\");\n            expect(result.disabledReason).toEqual(\"API_NOT_COMPATIBLE\");\n            var extensionDirectory = path.join(disabledDirectory, \"incompatible-version\");\n            var pathsToCheck = [\n                path.join(extensionDirectory, \"main.js\"),\n                path.join(extensionDirectory, \"package.json\")\n            ];\n            checkPaths(pathsToCheck, done);\n        });\n    });\n\n    it(\"should not have trouble with invalid zip files\", function (done) {\n        ExtensionsDomain._cmdInstall(invalidZip, installDirectory, standardOptions, function (err, result) {\n            expect(err).toBeNull();\n            expect(result.errors.length).toEqual(1);\n            done();\n        });\n    });\n\n    it(\"should remove an installed package\", function (done) {\n        ExtensionsDomain._cmdInstall(basicValidExtension, installDirectory, standardOptions, function (err, result) {\n            expect(err).toBeNull();\n            expect(fs.existsSync(result.installedTo)).toBe(true);\n            ExtensionsDomain._cmdRemove(result.installedTo, function (err) {\n                expect(err).toBeNull();\n                expect(fs.existsSync(result.installedTo)).toBe(false);\n                done();\n            });\n        });\n    });\n\n    it(\"should handle a package renamed with package.json\", function (done) {\n        ExtensionsDomain._cmdInstall(missingPackageJSON, installDirectory, standardOptions, function (err, result) {\n            expect(err).toBeNull();\n            expect(fs.existsSync(result.installedTo)).toBe(true);\n            var legacyDirectory = result.installedTo;\n            ExtensionsDomain._cmdInstall(missingPackageJSONRenamed, installDirectory, standardOptions, function (err, result) {\n                expect(err).toBeNull();\n                expect(result.installationStatus).toBe(\"NEEDS_UPDATE\");\n                expect(result.name).toBe(\"missing-package-json\");\n                ExtensionsDomain._cmdUpdate(missingPackageJSONRenamed, installDirectory, standardOptions, function (err, result) {\n                    expect(err).toBeNull();\n                    expect(result.installationStatus).toBe(\"INSTALLED\");\n                    expect(result.name).toBe(\"renamed-in-package-json\");\n                    expect(fs.existsSync(legacyDirectory)).toBe(false);\n                    done();\n                });\n            });\n        });\n    });\n\n    it(\"should strip out symlinks in the zipfile\", function (done) {\n        ExtensionsDomain._cmdInstall(withSymlink, installDirectory, standardOptions, function (err, result) {\n            expect(err).toBeNull();\n            expect(result.errors.length).toEqual(0);\n            expect(fs.existsSync(result.installedTo)).toBe(true);\n            expect(fs.existsSync(path.join(result.installedTo, \"bin\", \"foo\"))).toBe(false);\n            done();\n        });\n    });\n\n    it(\"should download npm dependencies when present\", function (done) {\n        ExtensionsDomain._cmdInstall(withNpmDependencies, installDirectory, standardOptions, function (err, result) {\n            expect(err).toBeNull();\n            expect(result.errors.length).toEqual(0);\n            expect(fs.existsSync(result.installedTo)).toBe(true);\n            expect(fs.existsSync(path.join(result.installedTo, \"node_modules\"))).toBe(true);\n\n            expect(fs.existsSync(path.join(result.installedTo, \"node_modules\", \"lodash\"))).toBe(true);\n            expect(fs.existsSync(path.join(result.installedTo, \"node_modules\", \"lodash\", \"package.json\"))).toBe(true);\n            var packageInfo = JSON.parse(fs.readFileSync(path.join(result.installedTo, \"node_modules\", \"lodash\", \"package.json\")));\n            expect(packageInfo.version.slice(0, 2)).toBe(\"3.\");\n\n            expect(fs.existsSync(path.join(result.installedTo, \"node_modules\", \"moment\"))).toBe(true);\n            expect(fs.existsSync(path.join(result.installedTo, \"node_modules\", \"moment\", \"package.json\"))).toBe(true);\n            packageInfo = JSON.parse(fs.readFileSync(path.join(result.installedTo, \"node_modules\", \"moment\", \"package.json\")));\n            expect(packageInfo.version.slice(0, 4)).toBe(\"2.5.\");\n\n            expect(fs.existsSync(path.join(result.installedTo, \"node_modules\", \"underscore\"))).toBe(true);\n            expect(fs.existsSync(path.join(result.installedTo, \"node_modules\", \"underscore\", \"package.json\"))).toBe(true);\n            packageInfo = JSON.parse(fs.readFileSync(path.join(result.installedTo, \"node_modules\", \"underscore\", \"package.json\")));\n            expect(packageInfo.version).toBe(\"1.0.4\");\n\n            done();\n        });\n    });\n});\n"],"file":"Installation.spec.js"}