define(function(require,exports,module){var _=require("thirdparty/lodash"),EventDispatcher=require("utils/EventDispatcher"),Package=require("extensibility/Package"),AppInit=require("utils/AppInit"),Async=require("utils/Async"),ExtensionLoader=require("utils/ExtensionLoader"),ExtensionUtils=require("utils/ExtensionUtils"),FileSystem=require("filesystem/FileSystem"),FileUtils=require("file/FileUtils"),PreferencesManager=require("preferences/PreferencesManager"),Strings=require("strings"),StringUtils=require("utils/StringUtils"),ThemeManager=require("view/ThemeManager"),semver=require("thirdparty/semver.browser"),pendingDownloadRegistry=null,ENABLED="enabled",DISABLED="disabled",START_FAILED="startFailed",LOCATION_DEFAULT="default",LOCATION_DEV="dev",LOCATION_USER="user",LOCATION_UNKNOWN="unknown",FOLDER_AUTOINSTALL="auto-install-extensions",extensions={},_idsToRemove={},_idsToUpdate={},_idsToDisable={};function synchronizeEntry(id){var entry=extensions[id];if(entry&&entry.installInfo&&entry.registryInfo){entry.installInfo.owner=entry.registryInfo.owner,entry.installInfo.updateAvailable=!1,entry.registryInfo.updateAvailable=!1,entry.installInfo.updateCompatible=!1,entry.registryInfo.updateCompatible=!1;var currentVersion=entry.installInfo.metadata?entry.installInfo.metadata.version:null;if(currentVersion&&semver.lt(currentVersion,entry.registryInfo.metadata.version)){entry.registryInfo.updateAvailable=!0,entry.installInfo.updateAvailable=!0;var lastCompatibleVersionInfo=_.findLast(entry.registryInfo.versions,function(versionInfo){return!versionInfo.brackets||semver.satisfies(brackets.metadata.apiVersion,versionInfo.brackets)});lastCompatibleVersionInfo&&lastCompatibleVersionInfo.version&&semver.lt(currentVersion,lastCompatibleVersionInfo.version)&&(entry.installInfo.updateCompatible=!0,entry.registryInfo.updateCompatible=!0,entry.installInfo.lastCompatibleVersion=lastCompatibleVersionInfo.version,entry.registryInfo.lastCompatibleVersion=lastCompatibleVersionInfo.version)}exports.trigger("registryUpdate",id)}}function loadTheme(id){var extension=extensions[id];extension.installInfo&&extension.installInfo.metadata&&extension.installInfo.metadata.theme&&ThemeManager.loadPackage(extension.installInfo)}function _setExtensions(newExtensions){exports.extensions=extensions=newExtensions,Object.keys(extensions).forEach(function(id){synchronizeEntry(id)})}function _reset(){exports.extensions=extensions={},_idsToRemove={},_idsToUpdate={},_idsToDisable={}}function downloadRegistry(){return pendingDownloadRegistry?pendingDownloadRegistry.promise():(pendingDownloadRegistry=new $.Deferred,$.ajax({url:brackets.config.extension_registry,dataType:"json",cache:!1}).done(function(data){exports.hasDownloadedRegistry=!0,Object.keys(data).forEach(function(id){extensions[id]||(extensions[id]={}),extensions[id].registryInfo=data[id],synchronizeEntry(id)}),exports.trigger("registryDownload"),pendingDownloadRegistry.resolve()}).fail(function(){pendingDownloadRegistry.reject()}).always(function(){pendingDownloadRegistry=null}),pendingDownloadRegistry.promise())}function _handleExtensionLoad(e,path){function setData(metadata){let locationType,id=metadata.name,userExtensionPath=ExtensionLoader.getUserExtensionPath();if(metadata.title=metadata.title||metadata.name,0===path.indexOf(userExtensionPath))locationType=LOCATION_USER;else{var segments=path.split("/"),parent;segments.length>2&&(parent=segments[segments.length-2]),locationType="dev"===parent?LOCATION_DEV:"default"===parent?LOCATION_DEFAULT:LOCATION_UNKNOWN}extensions[id]||(extensions[id]={}),extensions[id].installInfo={metadata:metadata,path:path,locationType:locationType,status:"loadFailed"===e.type?START_FAILED:"disabled"===e.type?DISABLED:ENABLED},synchronizeEntry(id),loadTheme(id),exports.trigger("statusChange",id)}function deduceMetadata(){var match=path.match(/\/([^\/]+)$/),name=match&&match[1]||path,metadata;return{name:name,title:name}}ExtensionUtils.loadMetadata(path).done(function(metadata){setData(metadata)}).fail(function(disabled){var metadata=deduceMetadata();metadata.disabled=disabled,setData(metadata)})}function getCompatibilityInfoForVersion(extVersion,apiVersion){var requiredVersion=extVersion.brackets||extVersion.engines&&extVersion.engines.brackets,result={};if(result.isCompatible=!requiredVersion||semver.satisfies(apiVersion,requiredVersion),result.isCompatible)result.compatibleVersion=extVersion.version;else if("<"===requiredVersion.charAt(0))result.requiresNewer=!1;else if(">"===requiredVersion.charAt(0))result.requiresNewer=!0;else if("~"===requiredVersion.charAt(0)){var compareVersion=requiredVersion.slice(1);compareVersion.match(/^[0-9]+$/)?compareVersion+=".0.0":compareVersion.match(/^[0-9]+\.[0-9]+$/)&&(compareVersion+=".0"),result.requiresNewer=semver.lt(apiVersion,compareVersion)}return result}function getCompatibilityInfo(entry,apiVersion){if(!entry.versions){var fallback=getCompatibilityInfoForVersion(entry.metadata,apiVersion);return fallback.isCompatible&&(fallback.isLatestVersion=!0),fallback}var i=entry.versions.length-1,latestInfo=getCompatibilityInfoForVersion(entry.versions[i],apiVersion);if(latestInfo.isCompatible)return latestInfo.isLatestVersion=!0,latestInfo;for(i--;i>=0;i--){var compatInfo=getCompatibilityInfoForVersion(entry.versions[i],apiVersion);if(compatInfo.isCompatible)return compatInfo.isLatestVersion=!1,compatInfo.requiresNewer=latestInfo.requiresNewer,compatInfo}return latestInfo}function getExtensionURL(id,version){return StringUtils.format(brackets.config.extension_url,id,version)}function remove(id){var result=new $.Deferred;return extensions[id]&&extensions[id].installInfo?Package.remove(extensions[id].installInfo.path).done(function(){extensions[id].installInfo=null,result.resolve(),exports.trigger("statusChange",id)}).fail(function(err){result.reject(err)}):result.reject(StringUtils.format(Strings.EXTENSION_NOT_INSTALLED,id)),result.promise()}function _enableOrDisable(id,enable){var result=new $.Deferred,extension=extensions[id];return extension&&extension.installInfo?Package[enable?"enable":"disable"](extension.installInfo.path).done(function(){extension.installInfo.status=enable?ENABLED:DISABLED,extension.installInfo.metadata.disabled=!enable,result.resolve(),exports.trigger("statusChange",id)}).fail(function(err){result.reject(err)}):result.reject(StringUtils.format(Strings.EXTENSION_NOT_INSTALLED,id)),result.promise()}function disable(id){return _enableOrDisable(id,!1)}function enable(id){return _enableOrDisable(id,!0)}function update(id,packagePath,keepFile){return Package.installUpdate(packagePath,id).done(function(){keepFile||FileSystem.getFileForPath(packagePath).unlink()})}function cleanupUpdates(){Object.keys(_idsToUpdate).forEach(function(id){var installResult=_idsToUpdate[id],keepFile=installResult.keepFile,filename=installResult.localPath;filename&&!keepFile&&FileSystem.getFileForPath(filename).unlink()}),_idsToUpdate={}}function unmarkAllForRemoval(){_idsToRemove={}}function markForRemoval(id,mark){mark?_idsToRemove[id]=!0:delete _idsToRemove[id],exports.trigger("statusChange",id)}function isMarkedForRemoval(id){return!!_idsToRemove[id]}function hasExtensionsToRemove(){return Object.keys(_idsToRemove).length>0}function markForDisabling(id,mark){mark?_idsToDisable[id]=!0:delete _idsToDisable[id],exports.trigger("statusChange",id)}function isMarkedForDisabling(id){return!!_idsToDisable[id]}function hasExtensionsToDisable(){return Object.keys(_idsToDisable).length>0}function unmarkAllForDisabling(){_idsToDisable={}}function updateFromDownload(installationResult){void 0===installationResult.keepFile&&(installationResult.keepFile=!1);var installationStatus=installationResult.installationStatus;if(installationStatus===Package.InstallationStatuses.ALREADY_INSTALLED||installationStatus===Package.InstallationStatuses.NEEDS_UPDATE||installationStatus===Package.InstallationStatuses.SAME_VERSION||installationStatus===Package.InstallationStatuses.OLDER_VERSION){var id=installationResult.name;delete _idsToRemove[id],_idsToUpdate[id]=installationResult,exports.trigger("statusChange",id)}}function removeUpdate(id){var installationResult=_idsToUpdate[id];installationResult&&(installationResult.localPath&&!installationResult.keepFile&&FileSystem.getFileForPath(installationResult.localPath).unlink(),delete _idsToUpdate[id],exports.trigger("statusChange",id))}function isMarkedForUpdate(id){return!!_idsToUpdate[id]}function hasExtensionsToUpdate(){return Object.keys(_idsToUpdate).length>0}function removeMarkedExtensions(){return Async.doInParallel_aggregateErrors(Object.keys(_idsToRemove),function(id){return remove(id)})}function disableMarkedExtensions(){return Async.doInParallel_aggregateErrors(Object.keys(_idsToDisable),function(id){return disable(id)})}function updateExtensions(){return Async.doInParallel_aggregateErrors(Object.keys(_idsToUpdate),function(id){var installationResult=_idsToUpdate[id];return update(installationResult.name,installationResult.localPath,installationResult.keepFile)})}function getAvailableUpdates(){var result=[];return Object.keys(extensions).forEach(function(extensionId){var extensionInfo=extensions[extensionId];extensionInfo.installInfo&&extensionInfo.registryInfo&&extensionInfo.registryInfo.updateCompatible&&result.push({id:extensionId,installVersion:extensionInfo.installInfo.metadata.version,registryVersion:extensionInfo.registryInfo.lastCompatibleVersion})}),result}function cleanAvailableUpdates(updates){return updates.reduce(function(arr,updateInfo){var extDefinition=extensions[updateInfo.id];if(!extDefinition||!extDefinition.installInfo)return arr;var installedVersion=extDefinition.installInfo.metadata.version;return semver.lt(installedVersion,updateInfo.registryVersion)&&arr.push(updateInfo),arr},[])}function _getAutoInstallFiles(dirPath,autoExtensions){var zipFiles=[],installZips=[],updateZips=[],deferred=new $.Deferred;return FileSystem.getDirectoryForPath(dirPath).getContents(function(err,contents){err||(zipFiles=contents.filter(function(dirItem){return dirItem.isFile&&"zip"===FileUtils.getFileExtension(dirItem.fullPath)})),Async.doInParallel_aggregateErrors(zipFiles,function(file){var zipFilePromise=new $.Deferred;return Package.validate(file.fullPath,{requirePackageJSON:!0}).done(function(info){if(info.errors.length)zipFilePromise.reject(Package.formatError(info.errors));else{var extensionInfo,installedVersion,zipArray,existingItem,extensionName=info.metadata.name,autoExtVersion=autoExtensions[extensionName];autoExtVersion&&semver.lte(info.metadata.version,autoExtVersion)?zipFilePromise.reject():(installedVersion=(extensionInfo=extensions[extensionName])&&extensionInfo.installInfo&&extensionInfo.installInfo.metadata.version)&&semver.lte(info.metadata.version,installedVersion)?zipFilePromise.reject():((zipArray=installedVersion?updateZips:installZips).some(function(zip){return zip.info.metadata.name===extensionName&&(existingItem=zip,!0)}),existingItem?semver.lt(existingItem.info.metadata.version,info.metadata.version)&&(existingItem.file=file,existingItem.info=info):zipArray.push({file:file,info:info}),zipFilePromise.resolve())}}).fail(function(err){zipFilePromise.reject(Package.formatError(err))}),zipFilePromise.promise()}).fail(function(errorArray){errorArray.forEach(function(errorObj){errorObj.error&&(errorObj.error.forEach?(console.error("Errors for",errorObj.item),errorObj.error.forEach(function(error){console.error(Package.formatError(error))})):console.error("Error for",errorObj.item,errorObj))})}).always(function(){deferred.resolve({installZips:installZips,updateZips:updateZips})})}),deferred.promise()}function _autoInstallExtensions(){var dirPath=FileUtils.getDirectoryPath(FileUtils.getNativeBracketsDirectoryPath())+FOLDER_AUTOINSTALL+"/",autoExtensions=PreferencesManager.getViewState(FOLDER_AUTOINSTALL)||{},deferred=new $.Deferred;return _getAutoInstallFiles(dirPath,autoExtensions).done(function(result){var installPromise,updatePromise;Async.doSequentially(result.installZips,function(zip){return autoExtensions[zip.info.metadata.name]=zip.info.metadata.version,Package.installFromPath(zip.file.fullPath)}).always(function(){return Async.doSequentially(result.updateZips,function(zip){return autoExtensions[zip.info.metadata.name]=zip.info.metadata.version,Package.installUpdate(zip.file.fullPath)})}).always(function(){PreferencesManager.setViewState(FOLDER_AUTOINSTALL,autoExtensions),deferred.resolve()})}),deferred.promise()}PreferencesManager.stateManager.definePreference(FOLDER_AUTOINSTALL,"object",void 0),PreferencesManager.definePreference("extensions.sort","string","publishedDate",{description:Strings.SORT_EXTENSION_METHOD}),AppInit.appReady(function(){Package._getNodeConnectionDeferred().done(function(){_autoInstallExtensions()})}),ExtensionLoader.on("load",_handleExtensionLoad).on("loadFailed",_handleExtensionLoad).on("disabled",_handleExtensionLoad),EventDispatcher.makeEventDispatcher(exports),exports.downloadRegistry=downloadRegistry,exports.getCompatibilityInfo=getCompatibilityInfo,exports.getExtensionURL=getExtensionURL,exports.remove=remove,exports.update=update,exports.disable=disable,exports.enable=enable,exports.extensions=extensions,exports.cleanupUpdates=cleanupUpdates,exports.markForRemoval=markForRemoval,exports.isMarkedForRemoval=isMarkedForRemoval,exports.unmarkAllForRemoval=unmarkAllForRemoval,exports.hasExtensionsToRemove=hasExtensionsToRemove,exports.markForDisabling=markForDisabling,exports.isMarkedForDisabling=isMarkedForDisabling,exports.unmarkAllForDisabling=unmarkAllForDisabling,exports.hasExtensionsToDisable=hasExtensionsToDisable,exports.updateFromDownload=updateFromDownload,exports.removeUpdate=removeUpdate,exports.isMarkedForUpdate=isMarkedForUpdate,exports.hasExtensionsToUpdate=hasExtensionsToUpdate,exports.removeMarkedExtensions=removeMarkedExtensions,exports.disableMarkedExtensions=disableMarkedExtensions,exports.updateExtensions=updateExtensions,exports.getAvailableUpdates=getAvailableUpdates,exports.cleanAvailableUpdates=cleanAvailableUpdates,exports.hasDownloadedRegistry=!1,exports.ENABLED=ENABLED,exports.DISABLED=DISABLED,exports.START_FAILED=START_FAILED,exports.LOCATION_DEFAULT=LOCATION_DEFAULT,exports.LOCATION_DEV=LOCATION_DEV,exports.LOCATION_USER=LOCATION_USER,exports.LOCATION_UNKNOWN=LOCATION_UNKNOWN,exports._getAutoInstallFiles=_getAutoInstallFiles,exports._reset=_reset,exports._setExtensions=_setExtensions});
//# sourceMappingURL=ExtensionManager.js.map
