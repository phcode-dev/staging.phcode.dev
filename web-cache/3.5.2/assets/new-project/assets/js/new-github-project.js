let createProjectBtn,websiteURLInput,locationInput;const FLATTEN_ZIP_FIRST_LEVEL_DIR=!0;function _isValidGitHubURL(url){let githubPrefix="https://github.com/",components=(url=url.replace(/\/$/,"")).replace("https://github.com/","").split("/");return!(!url.startsWith(githubPrefix)||2!==components.length)}function _fixGitHubBrokenURL(){let githubPrefix="https://github.com/",gitSuffix=".git",githubURL=websiteURLInput.value;if(githubURL.startsWith("http:")&&(githubURL=githubURL.replace("http:","https:")),!githubURL.startsWith(githubPrefix))return;let queryParamTrimIndex=githubURL.indexOf("?")>=0?githubURL.indexOf("?"):githubURL.length,components=(githubURL=githubURL.substring(0,queryParamTrimIndex)).replace("https://github.com/","").split("/");githubURL.endsWith(".git")&&(githubURL=githubURL.replace(new RegExp(".git$"),"")),components.length>2&&(githubURL=`https://github.com/${components[0]}/${components[1]}`),websiteURLInput.value=githubURL}function _validateGitHubURL(){let githubURL;return _fixGitHubBrokenURL(),_isValidGitHubURL(websiteURLInput.value)?($(websiteURLInput).removeClass("error-border"),!0):($(websiteURLInput).addClass("error-border"),!1)}function _validateProjectLocation(){if(!window.showDirectoryPicker)return!0;let location;return locationInput.value===Strings.PLEASE_SELECT_A_FOLDER?($(locationInput).addClass("error-border"),!1):($(locationInput).removeClass("error-border"),!0)}function _validate(){return _validateGitHubURL()&&_validateProjectLocation()}function _selectFolder(){newProjectExtension.showFolderSelect().then(file=>{locationInput.fullPath=file,locationInput.value=file.replace(newProjectExtension.getMountDir(),""),_validateProjectLocation()})}function _createProjectClicked(){if(_validate()){let githubURL,components=websiteURLInput.value.replace("https://github.com/","").split("/"),zipURL=`https://phcode.site/getGitHubZip?org=${components[0]}&repo=${components[1]}`,suggestedProjectName=`${components[0]}-${components[1]}`;newProjectExtension.downloadAndOpenProject(zipURL,locationInput.fullPath,suggestedProjectName,FLATTEN_ZIP_FIRST_LEVEL_DIR).then(()=>{Metrics.countEvent(Metrics.EVENT_TYPE.NEW_PROJECT,"github.Click","create.success"),newProjectExtension.closeDialogue()})}else newProjectExtension.showErrorDialogue(Strings.MISSING_FIELDS,Strings.PLEASE_FILL_ALL_REQUIRED);Metrics.countEvent(Metrics.EVENT_TYPE.NEW_PROJECT,"github.Click","create")}function initGithubProject(){window.showDirectoryPicker||$(document.getElementById("projectLocation")).addClass("forced-hidden"),createProjectBtn=document.getElementById("createProjectBtn"),websiteURLInput=document.getElementById("websiteURLInput"),locationInput=document.getElementById("locationInput"),createProjectBtn.onclick=_createProjectClicked,$(websiteURLInput).keyup(_validate),locationInput.value=Strings.PLEASE_SELECT_A_FOLDER,locationInput.onclick=_selectFolder,_validate()}
//# sourceMappingURL=new-github-project.js.map
