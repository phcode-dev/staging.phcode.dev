{"version":3,"sources":["languageTools/DefaultProviders.js"],"names":["define","require","exports","module","_","brackets","getModule","EditorManager","DocumentManager","ExtensionUtils","CommandManager","Commands","TokenUtils","StringMatch","CodeInspection","PathConverters","matcher","StringMatcher","preferPrefixMatches","setClient","client","this","CodeHintsProvider","query","ignoreQuery","formatTypeDataForToken","$hintObj","token","addClass","detail","trim","length","$","split","join","toString","appendTo","keyword","documentation","attr","text","filterWithQueryAndMatcher","hints","matchResults","map","hint","searchResult","match","label","key","ParameterHintsProvider","setJumpPosition","curPos","getCurrentFullEditor","setCursorPos","line","ch","JumpToDefProvider","LintingProvider","_results","Map","_promiseMap","_validateOnType","serverRespToSearchModelFormat","msgObj","referenceModel","result","Deferred","cursorPos","reject","results","numFiles","fulfilled","forEach","element","i","filePath","uriToPath","uri","getDocumentForPath","done","doc","startRange","range","start","character","endRange","end","highlightOffset","getLine","matches","queryInfo","getRange","push","always","numMatches","allResultsAvailable","resolve","promise","ReferencesProvider","loadStyleSheet","prototype","hasHints","editor","implicitChar","serverCapabilities","getServerCapabilities","completionProvider","getHints","getActiveEditor","pos","getCursorPos","docPath","document","file","_path","$deferredHints","self","requestHints","context","getInitialContext","_codeMirror","string","slice","res","filteredHints","items","basicMatchSort","$fHint","stringRanges","item","matched","append","escape","data","fail","insertHint","$hint","cursor","txt","shouldIgnoreQuery","inclusion","includes","textEdit","newText","replaceRange","hasParameterHints","signatureHelpProvider","getParameterHints","requestParameterHints","paramList","activeParameter","signatures","param","parameters","ele","currentIndex","functionDocumentation","canJumpToDef","definitionProvider","doJumpToDef","getFocusedEditor","docPathUri","pathToUri","gotoDefinition","Array","isArray","docUri","startCurPos","documentPath","execute","FILE_OPEN","fullPath","clearExistingResults","filePathProvided","delete","clear","setInspectionResults","diagnostics","errors","obj","message","type","severity","Type","ERROR","WARNING","META","set","get","requestRun","getInspectionResultsAsync","fileText","getInspectionResults","hasReferences","referencesProvider","getReferences","hostEditor","findReferences"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2019 - present Adobe. All rights reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n *\n */\n\n/*global Map*/\n/* eslint-disable indent */\n/* eslint max-len: [\"error\", { \"code\": 200 }], no-invalid-this: 0*/\ndefine(function (require, exports, module) {\n\n\n    var _ = brackets.getModule(\"thirdparty/lodash\");\n\n    var EditorManager = require('editor/EditorManager'),\n        DocumentManager = require('document/DocumentManager'),\n        ExtensionUtils = require(\"utils/ExtensionUtils\"),\n        CommandManager = require(\"command/CommandManager\"),\n        Commands = require(\"command/Commands\"),\n        TokenUtils = require(\"utils/TokenUtils\"),\n        StringMatch = require(\"utils/StringMatch\"),\n        CodeInspection = require(\"language/CodeInspection\"),\n        PathConverters = require(\"languageTools/PathConverters\"),\n        matcher = new StringMatch.StringMatcher({\n            preferPrefixMatches: true\n        });\n\n    ExtensionUtils.loadStyleSheet(module, \"styles/default_provider_style.css\");\n\n    function setClient(client) {\n        if (client) {\n            this.client = client;\n        }\n    }\n\n    function CodeHintsProvider(client) {\n        this.client = client;\n        this.query = \"\";\n        this.ignoreQuery = [\"-\", \"->\", \">\", \":\", \"::\", \"(\", \"()\", \")\", \"[\", \"[]\", \"]\", \"{\", \"{}\", \"}\"];\n    }\n\n    CodeHintsProvider.prototype.setClient = setClient;\n\n    function formatTypeDataForToken($hintObj, token) {\n        $hintObj.addClass('brackets-hints-with-type-details');\n        if (token.detail) {\n            if (token.detail.trim() !== '?') {\n                if (token.detail.length < 30) {\n                    $('<span>' + token.detail.split('->').join(':').toString().trim() + '</span>').appendTo($hintObj).addClass(\"brackets-hints-type-details\");\n                }\n                $('<span>' + token.detail.split('->').join(':').toString().trim() + '</span>').appendTo($hintObj).addClass(\"hint-description\");\n            }\n        } else {\n            if (token.keyword) {\n                $('<span>keyword</span>').appendTo($hintObj).addClass(\"brackets-hints-keyword\");\n            }\n        }\n        if (token.documentation) {\n            $hintObj.attr('title', token.documentation);\n            $('<span></span>').text(token.documentation.trim()).appendTo($hintObj).addClass(\"hint-doc\");\n        }\n    }\n\n    function filterWithQueryAndMatcher(hints, query) {\n        var matchResults = $.map(hints, function (hint) {\n            var searchResult = matcher.match(hint.label, query);\n            if (searchResult) {\n                for (var key in hint) {\n                    searchResult[key] = hint[key];\n                }\n            }\n\n            return searchResult;\n        });\n\n        return matchResults;\n    }\n\n    CodeHintsProvider.prototype.hasHints = function (editor, implicitChar) {\n        if (!this.client) {\n            return false;\n        }\n\n        var serverCapabilities = this.client.getServerCapabilities();\n        if (!serverCapabilities || !serverCapabilities.completionProvider) {\n            return false;\n        }\n\n        return true;\n    };\n\n    CodeHintsProvider.prototype.getHints = function (implicitChar) {\n        if (!this.client) {\n            return null;\n        }\n\n        var editor = EditorManager.getActiveEditor(),\n            pos = editor.getCursorPos(),\n            docPath = editor.document.file._path,\n            $deferredHints = $.Deferred(),\n            self = this;\n\n        this.client.requestHints({\n            filePath: docPath,\n            cursorPos: pos\n        }).done(function (msgObj) {\n            var context = TokenUtils.getInitialContext(editor._codeMirror, pos),\n                hints = [];\n\n            self.query = context.token.string.slice(0, context.pos.ch - context.token.start);\n            if (msgObj) {\n                var res = msgObj.items,\n                    filteredHints = filterWithQueryAndMatcher(res, self.query);\n\n                StringMatch.basicMatchSort(filteredHints);\n                filteredHints.forEach(function (element) {\n                    var $fHint = $(\"<span>\")\n                        .addClass(\"brackets-hints\");\n\n                    if (element.stringRanges) {\n                        element.stringRanges.forEach(function (item) {\n                            if (item.matched) {\n                                $fHint.append($(\"<span>\")\n                                    .append(_.escape(item.text))\n                                    .addClass(\"matched-hint\"));\n                            } else {\n                                $fHint.append(_.escape(item.text));\n                            }\n                        });\n                    } else {\n                        $fHint.text(element.label);\n                    }\n\n                    $fHint.data(\"token\", element);\n                    formatTypeDataForToken($fHint, element);\n                    hints.push($fHint);\n                });\n            }\n\n            $deferredHints.resolve({\n                \"hints\": hints\n            });\n        }).fail(function () {\n            $deferredHints.reject();\n        });\n\n        return $deferredHints;\n    };\n\n    CodeHintsProvider.prototype.insertHint = function ($hint) {\n        var editor = EditorManager.getActiveEditor(),\n            cursor = editor.getCursorPos(),\n            token = $hint.data(\"token\"),\n            txt = null,\n            query = this.query,\n            shouldIgnoreQuery = this.ignoreQuery.includes(query),\n            inclusion = shouldIgnoreQuery ? \"\" : query,\n            start = {\n                line: cursor.line,\n                ch: cursor.ch - inclusion.length\n            },\n            end = {\n                line: cursor.line,\n                ch: cursor.ch\n            };\n\n        txt = token.label;\n        if (token.textEdit && token.textEdit.newText) {\n            txt = token.textEdit.newText;\n            start = {\n                line: token.textEdit.range.start.line,\n                ch: token.textEdit.range.start.character\n            };\n            end = {\n                line: token.textEdit.range.end.line,\n                ch: token.textEdit.range.end.character\n            };\n        }\n\n        if (editor) {\n            editor.document.replaceRange(txt, start, end);\n        }\n        // Return false to indicate that another hinting session is not needed\n        return false;\n    };\n\n    function ParameterHintsProvider(client) {\n        this.client = client;\n    }\n\n    ParameterHintsProvider.prototype.setClient = setClient;\n\n    ParameterHintsProvider.prototype.hasParameterHints = function (editor, implicitChar) {\n        if (!this.client) {\n            return false;\n        }\n\n        var serverCapabilities = this.client.getServerCapabilities();\n        if (!serverCapabilities || !serverCapabilities.signatureHelpProvider) {\n            return false;\n        }\n\n        return true;\n    };\n\n    ParameterHintsProvider.prototype.getParameterHints = function () {\n        if (!this.client) {\n            return null;\n        }\n\n        var editor = EditorManager.getActiveEditor(),\n            pos = editor.getCursorPos(),\n            docPath = editor.document.file._path,\n            $deferredHints = $.Deferred();\n\n        this.client.requestParameterHints({\n            filePath: docPath,\n            cursorPos: pos\n        }).done(function (msgObj) {\n            let paramList = [];\n            let label;\n            let activeParameter;\n            if (msgObj) {\n                let res;\n                res = msgObj.signatures;\n                activeParameter = msgObj.activeParameter;\n                if (res && res.length) {\n                    res.forEach(function (element) {\n                        label = element.documentation;\n                        let param = element.parameters;\n                        param.forEach(ele => {\n                            paramList.push({\n                                label: ele.label,\n                                documentation: ele.documentation\n                            });\n                        });\n                    });\n\n                    $deferredHints.resolve({\n                        parameters: paramList,\n                        currentIndex: activeParameter,\n                        functionDocumentation: label\n                    });\n                } else {\n                    $deferredHints.reject();\n                }\n            } else {\n                $deferredHints.reject();\n            }\n        }).fail(function () {\n            $deferredHints.reject();\n        });\n\n        return $deferredHints;\n    };\n\n    /**\n     * Utility function to make the jump\n     * @param   {Object} curPos - target postion for the cursor after the jump\n     */\n    function setJumpPosition(curPos) {\n        EditorManager.getCurrentFullEditor().setCursorPos(curPos.line, curPos.ch, true);\n    }\n\n    function JumpToDefProvider(client) {\n        this.client = client;\n    }\n\n    JumpToDefProvider.prototype.setClient = setClient;\n\n    JumpToDefProvider.prototype.canJumpToDef = function (editor, implicitChar) {\n        if (!this.client) {\n            return false;\n        }\n\n        var serverCapabilities = this.client.getServerCapabilities();\n        if (!serverCapabilities || !serverCapabilities.definitionProvider) {\n            return false;\n        }\n\n        return true;\n    };\n\n    /**\n     * Method to handle jump to definition feature.\n     */\n    JumpToDefProvider.prototype.doJumpToDef = function () {\n        if (!this.client) {\n            return null;\n        }\n\n        var editor = EditorManager.getFocusedEditor(),\n            pos = editor.getCursorPos(),\n            docPath = editor.document.file._path,\n            docPathUri = PathConverters.pathToUri(docPath),\n            $deferredHints = $.Deferred();\n\n        this.client.gotoDefinition({\n            filePath: docPath,\n            cursorPos: pos\n        }).done(function (msgObj) {\n            //For Older servers\n            if (Array.isArray(msgObj)) {\n                msgObj = msgObj[msgObj.length - 1];\n            }\n\n            if (msgObj && msgObj.range) {\n                var docUri = msgObj.uri,\n                    startCurPos = {};\n                startCurPos.line = msgObj.range.start.line;\n                startCurPos.ch = msgObj.range.start.character;\n\n                if (docUri !== docPathUri) {\n                    let documentPath = PathConverters.uriToPath(docUri);\n                    CommandManager.execute(Commands.FILE_OPEN, {\n                            fullPath: documentPath\n                        })\n                        .done(function () {\n                            setJumpPosition(startCurPos);\n                            $deferredHints.resolve();\n                        });\n                } else { //definition is in current document\n                    setJumpPosition(startCurPos);\n                    $deferredHints.resolve();\n                }\n            }\n        }).fail(function () {\n            $deferredHints.reject();\n        });\n\n        return $deferredHints;\n    };\n\n    function LintingProvider() {\n        this._results = new Map();\n        this._promiseMap = new Map();\n        this._validateOnType = false;\n    }\n\n    LintingProvider.prototype.setClient = setClient;\n\n    LintingProvider.prototype.clearExistingResults = function (filePath) {\n        var filePathProvided = !!filePath;\n\n        if (filePathProvided) {\n            this._results.delete(filePath);\n            this._promiseMap.delete(filePath);\n        } else {\n            //clear all results\n            this._results.clear();\n            this._promiseMap.clear();\n        }\n    };\n\n    /**\n     * Publish the diagnostics information related to current document\n     * @param   {Object} msgObj - json object containing information associated with 'textDocument/publishDiagnostics' notification from server\n     */\n    LintingProvider.prototype.setInspectionResults = function (msgObj) {\n        let diagnostics = msgObj.diagnostics,\n            filePath = PathConverters.uriToPath(msgObj.uri),\n            errors = [];\n\n        errors = diagnostics.map(function (obj) {\n            return {\n                pos: {\n                    line: obj.range.start.line,\n                    ch: obj.range.start.character\n                },\n                message: obj.message,\n                type: (obj.severity === 1 ? CodeInspection.Type.ERROR : (obj.severity === 2 ? CodeInspection.Type.WARNING : CodeInspection.Type.META))\n            };\n        });\n\n        this._results.set(filePath, {\n            errors: errors\n        });\n        if(this._promiseMap.get(filePath)) {\n           this._promiseMap.get(filePath).resolve(this._results.get(filePath));\n           this._promiseMap.delete(filePath);\n        }\n        if (this._validateOnType) {\n            var editor = EditorManager.getActiveEditor(),\n                docPath = editor ? editor.document.file._path : \"\";\n            if (filePath === docPath) {\n                CodeInspection.requestRun();\n            }\n        }\n    };\n\n    LintingProvider.prototype.getInspectionResultsAsync = function (fileText, filePath) {\n        var result = $.Deferred();\n\n        if (this._results.get(filePath)) {\n            return result.resolve(this._results.get(filePath));\n        }\n        this._promiseMap.set(filePath, result);\n        return result;\n    };\n\n    LintingProvider.prototype.getInspectionResults = function (fileText, filePath) {\n        return this._results.get(filePath);\n    };\n\n    function serverRespToSearchModelFormat(msgObj) {\n        var referenceModel = {},\n            result = $.Deferred();\n\n        if(!(msgObj && msgObj.length && msgObj.cursorPos)) {\n            return result.reject();\n        }\n        referenceModel.results = {};\n        referenceModel.numFiles = 0;\n        var fulfilled = 0;\n        msgObj.forEach((element, i) => {\n            var filePath = PathConverters.uriToPath(element.uri);\n            DocumentManager.getDocumentForPath(filePath)\n                .done(function(doc) {\n                    var startRange = {line: element.range.start.line, ch: element.range.start.character};\n                    var endRange = {line: element.range.end.line, ch: element.range.end.character};\n                    var match = {\n                        start: startRange,\n                        end: endRange,\n                        highlightOffset: 0,\n                        line: doc.getLine(element.range.start.line)\n                    };\n                    if(!referenceModel.results[filePath]) {\n                        referenceModel.numFiles = referenceModel.numFiles + 1;\n                        referenceModel.results[filePath] = {\"matches\": []};\n                    }\n                    if(!referenceModel.queryInfo || msgObj.cursorPos.line === startRange.line) {\n                        referenceModel.queryInfo = doc.getRange(startRange, endRange);\n                    }\n                    referenceModel.results[filePath][\"matches\"].push(match);\n                }).always(function() {\n                    fulfilled++;\n                    if(fulfilled === msgObj.length) {\n                        referenceModel.numMatches = msgObj.length;\n                        referenceModel.allResultsAvailable = true;\n                        result.resolve(referenceModel);\n                    }\n                });\n        });\n        return result.promise();\n    }\n\n    function ReferencesProvider(client) {\n        this.client = client;\n    }\n\n    ReferencesProvider.prototype.setClient = setClient;\n\n    ReferencesProvider.prototype.hasReferences = function() {\n        if (!this.client) {\n            return false;\n        }\n\n        var serverCapabilities = this.client.getServerCapabilities();\n        if (!serverCapabilities || !serverCapabilities.referencesProvider) {\n            return false;\n        }\n\n        return true;\n    };\n\n    ReferencesProvider.prototype.getReferences = function(hostEditor, curPos) {\n        var editor = hostEditor || EditorManager.getActiveEditor(),\n            pos = curPos || editor ? editor.getCursorPos() : null,\n            docPath = editor.document.file._path,\n            result = $.Deferred();\n\n        if (this.client) {\n            this.client.findReferences({\n                filePath: docPath,\n                cursorPos: pos\n            }).done(function(msgObj){\n                    if(msgObj && msgObj.length) {\n                        msgObj.cursorPos = pos;\n                        serverRespToSearchModelFormat(msgObj)\n                            .done(result.resolve)\n                            .fail(result.reject);\n                    } else {\n                        result.reject();\n                    }\n                }).fail(function(){\n                    result.reject();\n                });\n            return result.promise();\n        }\n        return result.reject();\n    };\n\n    exports.CodeHintsProvider = CodeHintsProvider;\n    exports.ParameterHintsProvider = ParameterHintsProvider;\n    exports.JumpToDefProvider = JumpToDefProvider;\n    exports.LintingProvider = LintingProvider;\n    exports.ReferencesProvider = ReferencesProvider;\n    exports.serverRespToSearchModelFormat = serverRespToSearchModelFormat;\n});\n"],"file":"DefaultProviders.js"}