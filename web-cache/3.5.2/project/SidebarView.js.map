{"version":3,"sources":["project/SidebarView.js"],"names":["define","require","exports","module","AppInit","ProjectManager","WorkingSetView","MainViewManager","CommandManager","Commands","Strings","Resizer","_","$sidebar","$splitViewMenu","$projectTitle","$projectFilesContainer","$workingSetViewsContainer","_cmdSplitNone","_cmdSplitVertical","_cmdSplitHorizontal","_updateProjectTitle","displayName","getProjectRoot","name","fullPath","html","escape","attr","Phoenix","app","getDisplayLocation","trigger","toggle","show","hide","isVisible","_updateWorkingSetState","enabled","getPaneCount","getWorkingSetSize","ACTIVE_PANE","get","CMD_WORKINGSET_SORT_BY_ADDED","setEnabled","CMD_WORKINGSET_SORT_BY_NAME","CMD_WORKINGSET_SORT_BY_TYPE","CMD_WORKING_SORT_TOGGLE_AUTO","_updateUIStates","spriteIndex","layoutScheme","getLayoutScheme","columns","rows","setChecked","_handleSplitViewNone","setLayoutScheme","_handleSplitViewVertical","_handleSplitViewHorizontal","htmlReady","$","find","on","evt","width","css","_setFileTreeSelectionWidth","triggerHandler","syncSelectionIndicator","VIEW_HIDE_SIDEBAR","setName","CMD_SHOW_SIDEBAR","refresh","CMD_HIDE_SIDEBAR","is","paneId","createWorkingSetViewForPane","forEach","getPaneIdList","GEAR_MENU_TOOLTIP","register","CMD_SPLITVIEW_NONE","CMD_SPLITVIEW_VERTICAL","CMD_SPLITVIEW_HORIZONTAL","CMD_TOGGLE_SIDEBAR","SHOW_SIDEBAR","HIDE_SIDEBAR"],"mappings":"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","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2012 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/*global Phoenix*/\n\n/**\n * The view that controls the showing and hiding of the sidebar.\n *\n * Although the sidebar view doesn't dispatch any events directly, it is a\n * resizable element (../utils/Resizer.js), which means it can dispatch Resizer\n * events.  For example, if you want to listen for the sidebar showing\n * or hiding itself, set up listeners for the corresponding Resizer events,\n * panelCollapsed and panelExpanded:\n *\n *      $(\"#sidebar\").on(\"panelCollapsed\", ...);\n *      $(\"#sidebar\").on(\"panelExpanded\", ...);\n */\ndefine(function (require, exports, module) {\n\n\n    var AppInit         = require(\"utils/AppInit\"),\n        ProjectManager  = require(\"project/ProjectManager\"),\n        WorkingSetView  = require(\"project/WorkingSetView\"),\n        MainViewManager = require(\"view/MainViewManager\"),\n        CommandManager  = require(\"command/CommandManager\"),\n        Commands        = require(\"command/Commands\"),\n        Strings         = require(\"strings\"),\n        Resizer         = require(\"utils/Resizer\"),\n        _               = require(\"thirdparty/lodash\");\n\n    // These vars are initialized by the htmlReady handler\n    // below since they refer to DOM elements\n    var $sidebar,\n        $splitViewMenu,\n        $projectTitle,\n        $projectFilesContainer,\n        $workingSetViewsContainer;\n\n    var _cmdSplitNone,\n        _cmdSplitVertical,\n        _cmdSplitHorizontal;\n\n    /**\n     * @private\n     * Update project title when the project root changes\n     */\n    function _updateProjectTitle() {\n        var displayName = ProjectManager.getProjectRoot().name;\n        var fullPath = ProjectManager.getProjectRoot().fullPath;\n\n        if (displayName === \"\" && fullPath === \"/\") {\n            displayName = \"/\";\n        }\n\n        $projectTitle.html(_.escape(displayName));\n        $projectTitle.attr(\"title\", Phoenix.app.getDisplayLocation(fullPath));\n\n        // Trigger a scroll on the project files container to\n        // reposition the scroller shadows and avoid issue #2255\n        $projectFilesContainer.trigger(\"scroll\");\n    }\n\n    /**\n     * Toggle sidebar visibility.\n     */\n    function toggle() {\n        Resizer.toggle($sidebar);\n    }\n\n    /**\n     * Show the sidebar.\n     */\n    function show() {\n        Resizer.show($sidebar);\n    }\n\n    /**\n     * Hide the sidebar.\n     */\n    function hide() {\n        Resizer.hide($sidebar);\n    }\n\n    /**\n     * Returns the visibility state of the sidebar.\n     * @return {boolean} true if element is visible, false if it is not visible\n     */\n    function isVisible() {\n        return Resizer.isVisible($sidebar);\n    }\n\n    /**\n     * Update state of working set\n     * @private\n     */\n    function _updateWorkingSetState() {\n        let enabled = false;\n\n        if (MainViewManager.getPaneCount() === 1 &&\n                MainViewManager.getWorkingSetSize(MainViewManager.ACTIVE_PANE) === 0) {\n            $workingSetViewsContainer.hide();\n        } else {\n            $workingSetViewsContainer.show();\n            enabled = true;\n        }\n        CommandManager.get(Commands.CMD_WORKINGSET_SORT_BY_ADDED).setEnabled(enabled);\n        CommandManager.get(Commands.CMD_WORKINGSET_SORT_BY_NAME).setEnabled(enabled);\n        CommandManager.get(Commands.CMD_WORKINGSET_SORT_BY_TYPE).setEnabled(enabled);\n        CommandManager.get(Commands.CMD_WORKING_SORT_TOGGLE_AUTO).setEnabled(enabled);\n    }\n\n    /**\n     * Update state of splitview and option elements\n     * @private\n     */\n    function _updateUIStates() {\n        var spriteIndex,\n            layoutScheme = MainViewManager.getLayoutScheme();\n\n        if (layoutScheme.columns > 1) {\n            spriteIndex = 1;\n        } else if (layoutScheme.rows > 1) {\n            spriteIndex = 2;\n        } else {\n            spriteIndex = 0;\n        }\n\n        // SplitView Menu\n        _cmdSplitNone.setChecked(spriteIndex === 0);\n        _cmdSplitVertical.setChecked(spriteIndex === 1);\n        _cmdSplitHorizontal.setChecked(spriteIndex === 2);\n\n        // Options icon\n        _updateWorkingSetState();\n    }\n\n    /**\n     * Handle No Split Command\n     * @private\n     */\n    function _handleSplitViewNone() {\n        MainViewManager.setLayoutScheme(1, 1);\n    }\n\n    /**\n     * Handle Vertical Split Command\n     * @private\n     */\n    function _handleSplitViewVertical() {\n        MainViewManager.setLayoutScheme(1, 2);\n    }\n\n    /**\n     * Handle Horizontal Split Command\n     * @private\n     */\n    function _handleSplitViewHorizontal() {\n        MainViewManager.setLayoutScheme(2, 1);\n    }\n\n    // Initialize items dependent on HTML DOM\n    AppInit.htmlReady(function () {\n        $sidebar                  = $(\"#sidebar\");\n        $splitViewMenu            = $sidebar.find(\".working-set-splitview-btn\");\n        $projectTitle             = $sidebar.find(\"#project-title\");\n        $projectFilesContainer    = $sidebar.find(\"#project-files-container\");\n        $workingSetViewsContainer = $sidebar.find(\"#working-set-list-container\");\n\n        // init\n        $sidebar.on(\"panelResizeStart\", function (evt, width) {\n            $sidebar.find(\".sidebar-selection-extension\").css(\"display\", \"none\");\n            $sidebar.find(\".scroller-shadow\").css(\"display\", \"none\");\n        });\n\n        $sidebar.on(\"panelResizeUpdate\", function (evt, width) {\n            ProjectManager._setFileTreeSelectionWidth(width);\n        });\n\n        $sidebar.on(\"panelResizeEnd\", function (evt, width) {\n            $sidebar.find(\".sidebar-selection-extension\").css(\"display\", \"block\").css(\"left\", width);\n            $sidebar.find(\".scroller-shadow\").css(\"display\", \"block\");\n            $projectFilesContainer.triggerHandler(\"scroll\");\n            WorkingSetView.syncSelectionIndicator();\n        });\n\n        $sidebar.on(\"panelCollapsed\", function (evt, width) {\n            CommandManager.get(Commands.VIEW_HIDE_SIDEBAR).setName(Strings.CMD_SHOW_SIDEBAR);\n        });\n\n        $sidebar.on(\"panelExpanded\", function (evt, width) {\n            WorkingSetView.refresh();\n            $sidebar.find(\".scroller-shadow\").css(\"display\", \"block\");\n            $sidebar.find(\".sidebar-selection-extension\").css(\"left\", width);\n            $projectFilesContainer.triggerHandler(\"scroll\");\n            WorkingSetView.syncSelectionIndicator();\n            CommandManager.get(Commands.VIEW_HIDE_SIDEBAR).setName(Strings.CMD_HIDE_SIDEBAR);\n        });\n\n        // AppInit.htmlReady in utils/Resizer executes before, so it's possible that the sidebar\n        // is collapsed before we add the event. Check here initially\n        if (!$sidebar.is(\":visible\")) {\n            $sidebar.trigger(\"panelCollapsed\");\n        }\n\n        // wire up an event handler to monitor when panes are created\n        MainViewManager.on(\"paneCreate\", function (evt, paneId) {\n            WorkingSetView.createWorkingSetViewForPane($workingSetViewsContainer, paneId);\n        });\n\n        MainViewManager.on(\"paneLayoutChange\", function () {\n            _updateUIStates();\n        });\n\n        MainViewManager.on(\"workingSetAdd workingSetAddList workingSetRemove workingSetRemoveList workingSetUpdate\", function () {\n            _updateWorkingSetState();\n        });\n\n        // create WorkingSetViews for each pane already created\n        _.forEach(MainViewManager.getPaneIdList(), function (paneId) {\n            WorkingSetView.createWorkingSetViewForPane($workingSetViewsContainer, paneId);\n        });\n\n        _updateUIStates();\n\n        // Tooltips\n        $splitViewMenu.attr(\"title\", Strings.GEAR_MENU_TOOLTIP);\n    });\n\n    ProjectManager.on(\"projectOpen\", _updateProjectTitle);\n\n    /**\n     * Register Command Handlers\n     */\n    _cmdSplitNone       = CommandManager.register(Strings.CMD_SPLITVIEW_NONE,       Commands.CMD_SPLITVIEW_NONE,       _handleSplitViewNone);\n    _cmdSplitVertical   = CommandManager.register(Strings.CMD_SPLITVIEW_VERTICAL,   Commands.CMD_SPLITVIEW_VERTICAL,   _handleSplitViewVertical);\n    _cmdSplitHorizontal = CommandManager.register(Strings.CMD_SPLITVIEW_HORIZONTAL, Commands.CMD_SPLITVIEW_HORIZONTAL, _handleSplitViewHorizontal);\n\n    CommandManager.register(Strings.CMD_TOGGLE_SIDEBAR, Commands.VIEW_HIDE_SIDEBAR, toggle);\n    CommandManager.register(Strings.CMD_SHOW_SIDEBAR, Commands.SHOW_SIDEBAR, show);\n    CommandManager.register(Strings.CMD_HIDE_SIDEBAR, Commands.HIDE_SIDEBAR, hide);\n\n    // Define public API\n    exports.toggle      = toggle;\n    exports.show        = show;\n    exports.hide        = hide;\n    exports.isVisible   = isVisible;\n});\n"],"file":"SidebarView.js"}