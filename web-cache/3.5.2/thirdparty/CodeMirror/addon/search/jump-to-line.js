!function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("../../lib/codemirror"),require("../dialog/dialog")):"function"==typeof define&&define.amd?define(["../../lib/codemirror","../dialog/dialog"],mod):mod(CodeMirror)}(function(CodeMirror){"use strict";function dialog(cm,text,shortText,deflt,f){cm.openDialog?cm.openDialog(text,f,{value:deflt,selectValueOnOpen:!0,bottom:cm.options.search.bottom}):f(prompt(shortText,deflt))}function getJumpDialog(cm){return cm.phrase("Jump to line:")+' <input type="text" style="width: 10em" class="CodeMirror-search-field"/> <span style="color: #888" class="CodeMirror-search-hint">'+cm.phrase("(Use line:column or scroll% syntax)")+"</span>"}function interpretLine(cm,string){var num=Number(string);return/^[-+]/.test(string)?cm.getCursor().line+num:num-1}CodeMirror.defineOption("search",{bottom:!1}),CodeMirror.commands.jumpToLine=function(cm){var cur=cm.getCursor();dialog(cm,getJumpDialog(cm),cm.phrase("Jump to line:"),cur.line+1+":"+cur.ch,function(posStr){var match;if(posStr)if(match=/^\s*([\+\-]?\d+)\s*\:\s*(\d+)\s*$/.exec(posStr))cm.setCursor(interpretLine(cm,match[1]),Number(match[2]));else if(match=/^\s*([\+\-]?\d+(\.\d+)?)\%\s*/.exec(posStr)){var line=Math.round(cm.lineCount()*Number(match[1])/100);/^[-+]/.test(match[1])&&(line=cur.line+line+1),cm.setCursor(line-1,cur.ch)}else(match=/^\s*\:?\s*([\+\-]?\d+)\s*/.exec(posStr))&&cm.setCursor(interpretLine(cm,match[1]),cur.ch)})},CodeMirror.keyMap.default["Alt-G"]="jumpToLine"});
//# sourceMappingURL=jump-to-line.js.map
