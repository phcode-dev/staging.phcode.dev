{"version":3,"sources":["thirdparty/CodeMirror/addon/mode/multiplex_test.js"],"names":["CodeMirror","defineMode","inner","getMode","outer","innerOptions","open","close","mode","delimStyle","innerStyle","multiplexingMode","MT","name","test","Array","prototype","slice","call","arguments","indentUnit","parseDelimiters","mode2"],"mappings":"CAGA,WACEA,WAAWC,WAAW,qBAAsB,WAC1C,IAAIC,MAAQF,WAAWG,QAAQ,GAAI,QAC/BC,MAAQJ,WAAWG,QAAQ,GAAI,YAE/BE,aAAe,CACjBC,KAAM,IACNC,MAAO,IACPC,KAAMN,MACNO,WAAY,QACZC,WAAY,SAGd,OAAOV,WAAWW,iBAAiBP,MAAOC,gBAG5C,IAAIG,KAAOR,WAAWG,QAAQ,GAAI,sBAElC,SAASS,GAAGC,MACVC,KAAKN,KACHK,KACAL,KACAO,MAAMC,UAAUC,MAAMC,KAAKC,UAAW,GACtC,gBAGJP,GACE,qBACA,oFAEFZ,WAAWC,WAAW,4BAA6B,WACjD,OAAOD,WAAWW,iBAAiBX,WAAWG,QAAQ,CAACiB,WAAY,GAAI,cAAe,CACpFd,KAAM,IACNC,MAAO,IACPC,KAAMR,WAAWG,QAAQ,GAAI,YAC7BkB,iBAAiB,EACjBX,WAAY,QAIhB,IAAIY,MAAQtB,WAAWG,QAAQ,GAAI,6BAEnCW,KAAKN,KAAK,4CAA6Cc,MAAO,CAC5D,iEACC,gBA5CL","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function() {\n  CodeMirror.defineMode(\"markdown_with_stex\", function(){\n    var inner = CodeMirror.getMode({}, \"stex\");\n    var outer = CodeMirror.getMode({}, \"markdown\");\n\n    var innerOptions = {\n      open: '$',\n      close: '$',\n      mode: inner,\n      delimStyle: 'delim',\n      innerStyle: 'inner'\n    };\n\n    return CodeMirror.multiplexingMode(outer, innerOptions);\n  });\n\n  var mode = CodeMirror.getMode({}, \"markdown_with_stex\");\n\n  function MT(name) {\n    test.mode(\n      name,\n      mode,\n      Array.prototype.slice.call(arguments, 1),\n      'multiplexing');\n  }\n\n  MT(\n    \"stexInsideMarkdown\",\n    \"[strong **Equation:**] [delim&delim-open $][inner&tag \\\\pi][delim&delim-close $]\");\n\n  CodeMirror.defineMode(\"identical_delim_multiplex\", function() {\n    return CodeMirror.multiplexingMode(CodeMirror.getMode({indentUnit: 2}, \"javascript\"), {\n      open: \"#\",\n      close: \"#\",\n      mode: CodeMirror.getMode({}, \"markdown\"),\n      parseDelimiters: true,\n      innerStyle: \"q\"\n    });\n  });\n\n  var mode2 = CodeMirror.getMode({}, \"identical_delim_multiplex\");\n\n  test.mode(\"identical_delimiters_with_parseDelimiters\", mode2, [\n    \"[keyword let] [def x] [operator =] [q #foo][q&em *bar*][q #];\"\n  ], \"multiplexing\")\n})();\n"],"file":"multiplex_test.js"}