{"version":3,"sources":["thirdparty/CodeMirror/keymap/emacs.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","cmds","commands","Pos","posEq","a","b","line","ch","killRing","addToRing","str","push","length","shift","growRingTop","getFromRing","n","Math","min","popFromRing","pop","lastKill","_kill","cm","from","to","ring","text","getRange","pos","isClean","gen","replaceRange","changeGeneration","byChar","dir","findPosH","byWord","byLine","findPosV","doc","sel","goalColumn","byPage","byParagraph","no","getLine","sawText","test","slice","fst","firstLine","lst","lastLine","clipPos","hasText","bySentence","sawWord","next","charAt","byExpr","wrap","findMatchingBracket","strict","match","forward","first","token","getTokenAt","after","start","end","string","newPos","getPrefix","precise","digits","state","emacsPrefix","clearPrefix","Number","repeated","cmd","f","execCommand","prefix","i","findEnd","by","move","extendSelection","getCursor","motion","killTo","selections","listSelections","cursor","head","_killRegion","somethingSelected","selection","anchor","addPrefix","digit","on","maybeClearPrefix","maybeDuplicateInput","prefixPreservingKeys","Alt-G","Ctrl-X","Ctrl-Q","Ctrl-U","arg","emacsPrefixMap","hasOwnProperty","off","event","dup","origin","one","join","txt","replaceSelection","maybeRemovePrefixMap","removeKeyMap","prefixMap","clearMark","setExtending","setCursor","makePrompt","msg","fragment","document","createDocumentFragment","input","createElement","setAttribute","style","width","appendChild","createTextNode","getInput","openDialog","bottom","prompt","operateOnWord","op","toEnclosingExpr","stack","setMark","getExtending","killRegion","killLineEmacs","killRingSave","getSelection","yank","setSelection","yankPop","forwardChar","backwardChar","deleteChar","deleteForwardChar","deleteBackwardChar","forwardWord","backwardWord","killWord","backwardKillWord","nextLine","previousLine","scrollDownCommand","scrollUpCommand","backwardParagraph","forwardParagraph","backwardSentence","forwardSentence","killSentence","backwardKillSentence","killSexp","backwardKillSexp","forwardSexp","backwardSexp","markSexp","transposeSexps","leftStart","leftEnd","rightEnd","rightStart","backwardUpList","justOneSpace","openLine","transposeCharsRepeatable","capitalizeWord","w","letter","search","toUpperCase","toLowerCase","upcaseWord","downcaseWord","undoRepeatable","keyboardQuit","newline","gotoLine","num","isNaN","indentRigidly","indentSelection","getOption","exchangePointAndMark","quotedInsertTab","universalArgument","addPrefixMap","addKeyMap","emacs","kill","keyMap","normalizeKeyMap","Ctrl-W","Ctrl-K","Alt-W","Ctrl-Y","Alt-Y","Ctrl-Space","Ctrl-Shift-2","Ctrl-F","Ctrl-B","Right","Left","Ctrl-D","Delete","Ctrl-H","Backspace","Alt-F","Alt-B","Alt-Right","Alt-Left","Alt-D","Alt-Backspace","Ctrl-N","Ctrl-P","Down","Up","Ctrl-A","Ctrl-E","End","Home","Alt-V","Ctrl-V","PageUp","PageDown","Ctrl-Up","Ctrl-Down","Alt-{","Alt-}","Alt-A","Alt-E","Alt-K","Ctrl-X Delete","Ctrl-Alt-K","Ctrl-Alt-Backspace","Ctrl-Alt-F","Ctrl-Alt-B","Shift-Ctrl-Alt-2","Ctrl-Alt-T","Ctrl-Alt-U","Alt-Space","Ctrl-O","Ctrl-T","Alt-C","Alt-U","Alt-L","Alt-;","Ctrl-/","Shift-Ctrl--","Ctrl-Z","Cmd-Z","Ctrl-X U","Shift-Ctrl-Z","Shift-Alt-,","Shift-Alt-.","Ctrl-S","Ctrl-R","Ctrl-G","Shift-Alt-5","Alt-/","Enter","Ctrl-J","Tab","Alt-G G","Ctrl-X Tab","Ctrl-X Ctrl-X","Ctrl-X Ctrl-S","Ctrl-X Ctrl-W","Ctrl-X S","Ctrl-X F","Ctrl-X K","Ctrl-X H","Ctrl-Q Tab","fallthrough","regPrefix","d","String"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var cmds = CodeMirror.commands;\n  var Pos = CodeMirror.Pos;\n  function posEq(a, b) { return a.line == b.line && a.ch == b.ch; }\n\n  // Kill 'ring'\n\n  var killRing = [];\n  function addToRing(str) {\n    killRing.push(str);\n    if (killRing.length > 50) killRing.shift();\n  }\n  function growRingTop(str) {\n    if (!killRing.length) return addToRing(str);\n    killRing[killRing.length - 1] += str;\n  }\n  function getFromRing(n) { return killRing[killRing.length - (n ? Math.min(n, 1) : 1)] || \"\"; }\n  function popFromRing() { if (killRing.length > 1) killRing.pop(); return getFromRing(); }\n\n  var lastKill = null;\n\n  // Internal generic kill function, used by several mapped kill \"family\" functions.\n  function _kill(cm, from, to, ring, text) {\n    if (text == null) text = cm.getRange(from, to);\n\n    if (ring == \"grow\" && lastKill && lastKill.cm == cm && posEq(from, lastKill.pos) && cm.isClean(lastKill.gen))\n      growRingTop(text);\n    else if (ring !== false)\n      addToRing(text);\n    cm.replaceRange(\"\", from, to, \"+delete\");\n\n    if (ring == \"grow\") lastKill = {cm: cm, pos: from, gen: cm.changeGeneration()};\n    else lastKill = null;\n  }\n\n  // Boundaries of various units\n\n  function byChar(cm, pos, dir) {\n    return cm.findPosH(pos, dir, \"char\", true);\n  }\n\n  function byWord(cm, pos, dir) {\n    return cm.findPosH(pos, dir, \"word\", true);\n  }\n\n  function byLine(cm, pos, dir) {\n    return cm.findPosV(pos, dir, \"line\", cm.doc.sel.goalColumn);\n  }\n\n  function byPage(cm, pos, dir) {\n    return cm.findPosV(pos, dir, \"page\", cm.doc.sel.goalColumn);\n  }\n\n  function byParagraph(cm, pos, dir) {\n    var no = pos.line, line = cm.getLine(no);\n    var sawText = /\\S/.test(dir < 0 ? line.slice(0, pos.ch) : line.slice(pos.ch));\n    var fst = cm.firstLine(), lst = cm.lastLine();\n    for (;;) {\n      no += dir;\n      if (no < fst || no > lst)\n        return cm.clipPos(Pos(no - dir, dir < 0 ? 0 : null));\n      line = cm.getLine(no);\n      var hasText = /\\S/.test(line);\n      if (hasText) sawText = true;\n      else if (sawText) return Pos(no, 0);\n    }\n  }\n\n  function bySentence(cm, pos, dir) {\n    var line = pos.line, ch = pos.ch;\n    var text = cm.getLine(pos.line), sawWord = false;\n    for (;;) {\n      var next = text.charAt(ch + (dir < 0 ? -1 : 0));\n      if (!next) { // End/beginning of line reached\n        if (line == (dir < 0 ? cm.firstLine() : cm.lastLine())) return Pos(line, ch);\n        text = cm.getLine(line + dir);\n        if (!/\\S/.test(text)) return Pos(line, ch);\n        line += dir;\n        ch = dir < 0 ? text.length : 0;\n        continue;\n      }\n      if (sawWord && /[!?.]/.test(next)) return Pos(line, ch + (dir > 0 ? 1 : 0));\n      if (!sawWord) sawWord = /\\w/.test(next);\n      ch += dir;\n    }\n  }\n\n  function byExpr(cm, pos, dir) {\n    var wrap;\n    if (cm.findMatchingBracket && (wrap = cm.findMatchingBracket(pos, {strict: true}))\n        && wrap.match && (wrap.forward ? 1 : -1) == dir)\n      return dir > 0 ? Pos(wrap.to.line, wrap.to.ch + 1) : wrap.to;\n\n    for (var first = true;; first = false) {\n      var token = cm.getTokenAt(pos);\n      var after = Pos(pos.line, dir < 0 ? token.start : token.end);\n      if (first && dir > 0 && token.end == pos.ch || !/\\w/.test(token.string)) {\n        var newPos = cm.findPosH(after, dir, \"char\");\n        if (posEq(after, newPos)) return pos;\n        else pos = newPos;\n      } else {\n        return after;\n      }\n    }\n  }\n\n  // Prefixes (only crudely supported)\n\n  function getPrefix(cm, precise) {\n    var digits = cm.state.emacsPrefix;\n    if (!digits) return precise ? null : 1;\n    clearPrefix(cm);\n    return digits == \"-\" ? -1 : Number(digits);\n  }\n\n  function repeated(cmd) {\n    var f = typeof cmd == \"string\" ? function(cm) { cm.execCommand(cmd); } : cmd;\n    return function(cm) {\n      var prefix = getPrefix(cm);\n      f(cm);\n      for (var i = 1; i < prefix; ++i) f(cm);\n    };\n  }\n\n  function findEnd(cm, pos, by, dir) {\n    var prefix = getPrefix(cm);\n    if (prefix < 0) { dir = -dir; prefix = -prefix; }\n    for (var i = 0; i < prefix; ++i) {\n      var newPos = by(cm, pos, dir);\n      if (posEq(newPos, pos)) break;\n      pos = newPos;\n    }\n    return pos;\n  }\n\n  function move(by, dir) {\n    var f = function(cm) {\n      cm.extendSelection(findEnd(cm, cm.getCursor(), by, dir));\n    };\n    f.motion = true;\n    return f;\n  }\n\n  function killTo(cm, by, dir, ring) {\n    var selections = cm.listSelections(), cursor;\n    var i = selections.length;\n    while (i--) {\n      cursor = selections[i].head;\n      _kill(cm, cursor, findEnd(cm, cursor, by, dir), ring);\n    }\n  }\n\n  function _killRegion(cm, ring) {\n    if (cm.somethingSelected()) {\n      var selections = cm.listSelections(), selection;\n      var i = selections.length;\n      while (i--) {\n        selection = selections[i];\n        _kill(cm, selection.anchor, selection.head, ring);\n      }\n      return true;\n    }\n  }\n\n  function addPrefix(cm, digit) {\n    if (cm.state.emacsPrefix) {\n      if (digit != \"-\") cm.state.emacsPrefix += digit;\n      return;\n    }\n    // Not active yet\n    cm.state.emacsPrefix = digit;\n    cm.on(\"keyHandled\", maybeClearPrefix);\n    cm.on(\"inputRead\", maybeDuplicateInput);\n  }\n\n  var prefixPreservingKeys = {\"Alt-G\": true, \"Ctrl-X\": true, \"Ctrl-Q\": true, \"Ctrl-U\": true};\n\n  function maybeClearPrefix(cm, arg) {\n    if (!cm.state.emacsPrefixMap && !prefixPreservingKeys.hasOwnProperty(arg))\n      clearPrefix(cm);\n  }\n\n  function clearPrefix(cm) {\n    cm.state.emacsPrefix = null;\n    cm.off(\"keyHandled\", maybeClearPrefix);\n    cm.off(\"inputRead\", maybeDuplicateInput);\n  }\n\n  function maybeDuplicateInput(cm, event) {\n    var dup = getPrefix(cm);\n    if (dup > 1 && event.origin == \"+input\") {\n      var one = event.text.join(\"\\n\"), txt = \"\";\n      for (var i = 1; i < dup; ++i) txt += one;\n      cm.replaceSelection(txt);\n    }\n  }\n\n  function maybeRemovePrefixMap(cm, arg) {\n    if (typeof arg == \"string\" && (/^\\d$/.test(arg) || arg == \"Ctrl-U\")) return;\n    cm.removeKeyMap(prefixMap);\n    cm.state.emacsPrefixMap = false;\n    cm.off(\"keyHandled\", maybeRemovePrefixMap);\n    cm.off(\"inputRead\", maybeRemovePrefixMap);\n  }\n\n  // Utilities\n\n  cmds.setMark = function (cm) {\n    cm.setCursor(cm.getCursor());\n    cm.setExtending(!cm.getExtending());\n    cm.on(\"change\", function() { cm.setExtending(false); });\n  }\n\n  function clearMark(cm) {\n    cm.setExtending(false);\n    cm.setCursor(cm.getCursor());\n  }\n\n  function makePrompt(msg) {\n    var fragment = document.createDocumentFragment();\n    var input = document.createElement(\"input\");\n    input.setAttribute(\"type\", \"text\");\n    input.style.width = \"10em\";\n    fragment.appendChild(document.createTextNode(msg + \": \"));\n    fragment.appendChild(input);\n    return fragment;\n  }\n\n  function getInput(cm, msg, f) {\n    if (cm.openDialog)\n      cm.openDialog(makePrompt(msg), f, {bottom: true});\n    else\n      f(prompt(msg, \"\"));\n  }\n\n  function operateOnWord(cm, op) {\n    var start = cm.getCursor(), end = cm.findPosH(start, 1, \"word\");\n    cm.replaceRange(op(cm.getRange(start, end)), start, end);\n    cm.setCursor(end);\n  }\n\n  function toEnclosingExpr(cm) {\n    var pos = cm.getCursor(), line = pos.line, ch = pos.ch;\n    var stack = [];\n    while (line >= cm.firstLine()) {\n      var text = cm.getLine(line);\n      for (var i = ch == null ? text.length : ch; i > 0;) {\n        var ch = text.charAt(--i);\n        if (ch == \")\")\n          stack.push(\"(\");\n        else if (ch == \"]\")\n          stack.push(\"[\");\n        else if (ch == \"}\")\n          stack.push(\"{\");\n        else if (/[\\(\\{\\[]/.test(ch) && (!stack.length || stack.pop() != ch))\n          return cm.extendSelection(Pos(line, i));\n      }\n      --line; ch = null;\n    }\n  }\n\n  // Commands. Names should match emacs function names (albeit in camelCase)\n  // except where emacs function names collide with code mirror core commands.\n\n  cmds.killRegion = function(cm) {\n    _kill(cm, cm.getCursor(\"start\"), cm.getCursor(\"end\"), true);\n  };\n\n  // Maps to emacs kill-line\n  cmds.killLineEmacs = repeated(function(cm) {\n    var start = cm.getCursor(), end = cm.clipPos(Pos(start.line));\n    var text = cm.getRange(start, end);\n    if (!/\\S/.test(text)) {\n      text += \"\\n\";\n      end = Pos(start.line + 1, 0);\n    }\n    _kill(cm, start, end, \"grow\", text);\n  });\n\n  cmds.killRingSave = function(cm) {\n    addToRing(cm.getSelection());\n    clearMark(cm);\n  };\n\n  cmds.yank = function(cm) {\n    var start = cm.getCursor();\n    cm.replaceRange(getFromRing(getPrefix(cm)), start, start, \"paste\");\n    cm.setSelection(start, cm.getCursor());\n  };\n\n  cmds.yankPop = function(cm) {\n    cm.replaceSelection(popFromRing(), \"around\", \"paste\");\n  };\n\n  cmds.forwardChar = move(byChar, 1);\n\n  cmds.backwardChar = move(byChar, -1)\n\n  cmds.deleteChar = function(cm) { killTo(cm, byChar, 1, false); };\n\n  cmds.deleteForwardChar = function(cm) {\n    _killRegion(cm, false) || killTo(cm, byChar, 1, false);\n  };\n\n  cmds.deleteBackwardChar = function(cm) {\n    _killRegion(cm, false) || killTo(cm, byChar, -1, false);\n  };\n\n  cmds.forwardWord = move(byWord, 1);\n\n  cmds.backwardWord = move(byWord, -1);\n\n  cmds.killWord = function(cm) { killTo(cm, byWord, 1, \"grow\"); };\n\n  cmds.backwardKillWord = function(cm) { killTo(cm, byWord, -1, \"grow\"); };\n\n  cmds.nextLine = move(byLine, 1);\n\n  cmds.previousLine = move(byLine, -1);\n\n  cmds.scrollDownCommand = move(byPage, -1);\n\n  cmds.scrollUpCommand = move(byPage, 1);\n\n  cmds.backwardParagraph = move(byParagraph, -1);\n\n  cmds.forwardParagraph = move(byParagraph, 1);\n\n  cmds.backwardSentence = move(bySentence, -1);\n\n  cmds.forwardSentence = move(bySentence, 1);\n\n  cmds.killSentence = function(cm) { killTo(cm, bySentence, 1, \"grow\"); };\n\n  cmds.backwardKillSentence = function(cm) {\n    _kill(cm, cm.getCursor(), bySentence(cm, cm.getCursor(), 1), \"grow\");\n  };\n\n  cmds.killSexp = function(cm) { killTo(cm, byExpr, 1, \"grow\"); };\n\n  cmds.backwardKillSexp = function(cm) { killTo(cm, byExpr, -1, \"grow\"); };\n\n  cmds.forwardSexp = move(byExpr, 1);\n\n  cmds.backwardSexp = move(byExpr, -1);\n\n  cmds.markSexp = function(cm) {\n    var cursor = cm.getCursor();\n    cm.setSelection(findEnd(cm, cursor, byExpr, 1), cursor);\n  };\n\n  cmds.transposeSexps = function(cm) {\n    var leftStart = byExpr(cm, cm.getCursor(), -1);\n    var leftEnd = byExpr(cm, leftStart, 1);\n    var rightEnd = byExpr(cm, leftEnd, 1);\n    var rightStart = byExpr(cm, rightEnd, -1);\n    cm.replaceRange(cm.getRange(rightStart, rightEnd) +\n                    cm.getRange(leftEnd, rightStart) +\n                    cm.getRange(leftStart, leftEnd), leftStart, rightEnd);\n  };\n\n  cmds.backwardUpList = repeated(toEnclosingExpr);\n\n  cmds.justOneSpace = function(cm) {\n    var pos = cm.getCursor(), from = pos.ch;\n    var to = pos.ch, text = cm.getLine(pos.line);\n    while (from && /\\s/.test(text.charAt(from - 1))) --from;\n    while (to < text.length && /\\s/.test(text.charAt(to))) ++to;\n    cm.replaceRange(\" \", Pos(pos.line, from), Pos(pos.line, to));\n  };\n\n  cmds.openLine = repeated(function(cm) {\n    cm.replaceSelection(\"\\n\", \"start\");\n  });\n\n  // maps to emacs 'transpose-chars'\n  cmds.transposeCharsRepeatable = repeated(function(cm) {\n    cm.execCommand(\"transposeChars\");\n  });\n\n  cmds.capitalizeWord = repeated(function(cm) {\n    operateOnWord(cm, function(w) {\n      var letter = w.search(/\\w/);\n      if (letter == -1) return w;\n      return w.slice(0, letter) + w.charAt(letter).toUpperCase() +\n          w.slice(letter + 1).toLowerCase();\n    });\n  });\n\n  cmds.upcaseWord = repeated(function(cm) {\n    operateOnWord(cm, function(w) { return w.toUpperCase(); });\n  });\n\n  cmds.downcaseWord = repeated(function(cm) {\n    operateOnWord(cm, function(w) { return w.toLowerCase(); });\n  });\n\n  // maps to emacs 'undo'\n  cmds.undoRepeatable = repeated(\"undo\");\n\n  cmds.keyboardQuit = function(cm) {\n    cm.execCommand(\"clearSearch\");\n    clearMark(cm);\n  }\n\n  cmds.newline = repeated(function(cm) { cm.replaceSelection(\"\\n\", \"end\"); });\n\n  cmds.gotoLine = function(cm) {\n    var prefix = getPrefix(cm, true);\n    if (prefix != null && prefix > 0) return cm.setCursor(prefix - 1);\n\n    getInput(cm, \"Goto line\", function(str) {\n      var num;\n      if (str && !isNaN(num = Number(str)) && num == (num|0) && num > 0)\n      cm.setCursor(num - 1);\n    });\n  };\n\n  cmds.indentRigidly = function(cm) {\n    cm.indentSelection(getPrefix(cm, true) || cm.getOption(\"indentUnit\"));\n  };\n\n  cmds.exchangePointAndMark = function(cm) {\n    cm.setSelection(cm.getCursor(\"head\"), cm.getCursor(\"anchor\"));\n  };\n\n  cmds.quotedInsertTab = repeated(\"insertTab\");\n\n  cmds.universalArgument = function addPrefixMap(cm) {\n    cm.state.emacsPrefixMap = true;\n    cm.addKeyMap(prefixMap);\n    cm.on(\"keyHandled\", maybeRemovePrefixMap);\n    cm.on(\"inputRead\", maybeRemovePrefixMap);\n  };\n\n  CodeMirror.emacs = {kill: _kill, killRegion: _killRegion, repeated: repeated};\n\n  // Actual keymap\n  var keyMap = CodeMirror.keyMap.emacs = CodeMirror.normalizeKeyMap({\n    \"Ctrl-W\": \"killRegion\",\n    \"Ctrl-K\": \"killLineEmacs\",\n    \"Alt-W\": \"killRingSave\",\n    \"Ctrl-Y\": \"yank\",\n    \"Alt-Y\": \"yankPop\",\n    \"Ctrl-Space\": \"setMark\",\n    \"Ctrl-Shift-2\": \"setMark\",\n    \"Ctrl-F\": \"forwardChar\",\n    \"Ctrl-B\": \"backwardChar\",\n    \"Right\": \"forwardChar\",\n    \"Left\": \"backwardChar\",\n    \"Ctrl-D\": \"deleteChar\",\n    \"Delete\": \"deleteForwardChar\",\n    \"Ctrl-H\": \"deleteBackwardChar\",\n    \"Backspace\": \"deleteBackwardChar\",\n    \"Alt-F\": \"forwardWord\",\n    \"Alt-B\": \"backwardWord\",\n    \"Alt-Right\": \"forwardWord\",\n    \"Alt-Left\": \"backwardWord\",\n    \"Alt-D\": \"killWord\",\n    \"Alt-Backspace\": \"backwardKillWord\",\n    \"Ctrl-N\": \"nextLine\",\n    \"Ctrl-P\": \"previousLine\",\n    \"Down\": \"nextLine\",\n    \"Up\": \"previousLine\",\n    \"Ctrl-A\": \"goLineStart\",\n    \"Ctrl-E\": \"goLineEnd\",\n    \"End\": \"goLineEnd\",\n    \"Home\": \"goLineStart\",\n    \"Alt-V\": \"scrollDownCommand\",\n    \"Ctrl-V\": \"scrollUpCommand\",\n    \"PageUp\": \"scrollDownCommand\",\n    \"PageDown\": \"scrollUpCommand\",\n    \"Ctrl-Up\": \"backwardParagraph\",\n    \"Ctrl-Down\": \"forwardParagraph\",\n    \"Alt-{\": \"backwardParagraph\",\n    \"Alt-}\": \"forwardParagraph\",\n    \"Alt-A\": \"backwardSentence\",\n    \"Alt-E\": \"forwardSentence\",\n    \"Alt-K\": \"killSentence\",\n    \"Ctrl-X Delete\": \"backwardKillSentence\",\n    \"Ctrl-Alt-K\": \"killSexp\",\n    \"Ctrl-Alt-Backspace\": \"backwardKillSexp\",\n    \"Ctrl-Alt-F\": \"forwardSexp\",\n    \"Ctrl-Alt-B\": \"backwardSexp\",\n    \"Shift-Ctrl-Alt-2\": \"markSexp\",\n    \"Ctrl-Alt-T\": \"transposeSexps\",\n    \"Ctrl-Alt-U\": \"backwardUpList\",\n    \"Alt-Space\": \"justOneSpace\",\n    \"Ctrl-O\": \"openLine\",\n    \"Ctrl-T\": \"transposeCharsRepeatable\",\n    \"Alt-C\": \"capitalizeWord\",\n    \"Alt-U\": \"upcaseWord\",\n    \"Alt-L\": \"downcaseWord\",\n    \"Alt-;\": \"toggleComment\",\n    \"Ctrl-/\": \"undoRepeatable\",\n    \"Shift-Ctrl--\": \"undoRepeatable\",\n    \"Ctrl-Z\": \"undoRepeatable\",\n    \"Cmd-Z\": \"undoRepeatable\",\n    \"Ctrl-X U\": \"undoRepeatable\",\n    \"Shift-Ctrl-Z\": \"redo\",\n    \"Shift-Alt-,\": \"goDocStart\",\n    \"Shift-Alt-.\": \"goDocEnd\",\n    \"Ctrl-S\": \"findPersistentNext\",\n    \"Ctrl-R\": \"findPersistentPrev\",\n    \"Ctrl-G\": \"keyboardQuit\",\n    \"Shift-Alt-5\": \"replace\",\n    \"Alt-/\": \"autocomplete\",\n    \"Enter\": \"newlineAndIndent\",\n    \"Ctrl-J\": \"newline\",\n    \"Tab\": \"indentAuto\",\n    \"Alt-G G\": \"gotoLine\",\n    \"Ctrl-X Tab\": \"indentRigidly\",\n    \"Ctrl-X Ctrl-X\": \"exchangePointAndMark\",\n    \"Ctrl-X Ctrl-S\": \"save\",\n    \"Ctrl-X Ctrl-W\": \"save\",\n    \"Ctrl-X S\": \"saveAll\",\n    \"Ctrl-X F\": \"open\",\n    \"Ctrl-X K\": \"close\",\n    \"Ctrl-X H\": \"selectAll\",\n    \"Ctrl-Q Tab\": \"quotedInsertTab\",\n    \"Ctrl-U\": \"universalArgument\",\n    \"fallthrough\": \"default\"\n  });\n\n  var prefixMap = {\"Ctrl-G\": clearPrefix};\n  function regPrefix(d) {\n    prefixMap[d] = function(cm) { addPrefix(cm, d); };\n    keyMap[\"Ctrl-\" + d] = function(cm) { addPrefix(cm, d); };\n    prefixPreservingKeys[\"Ctrl-\" + d] = true;\n  }\n  for (var i = 0; i < 10; ++i) regPrefix(String(i));\n  regPrefix(\"-\");\n});\n"],"file":"emacs.js"}