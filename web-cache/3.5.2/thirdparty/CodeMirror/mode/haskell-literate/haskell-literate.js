!function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("../../lib/codemirror"),require("../haskell/haskell")):"function"==typeof define&&define.amd?define(["../../lib/codemirror","../haskell/haskell"],mod):mod(CodeMirror)}(function(CodeMirror){"use strict";CodeMirror.defineMode("haskell-literate",function(config,parserConfig){var baseMode=CodeMirror.getMode(config,parserConfig&&parserConfig.base||"haskell");return{startState:function(){return{inCode:!1,baseState:CodeMirror.startState(baseMode)}},token:function(stream,state){return stream.sol()&&(state.inCode=stream.eat(">"))?"meta":state.inCode?baseMode.token(stream,state.baseState):(stream.skipToEnd(),"comment")},innerMode:function(state){return state.inCode?{state:state.baseState,mode:baseMode}:null}}},"haskell"),CodeMirror.defineMIME("text/x-literate-haskell","haskell-literate")});
//# sourceMappingURL=haskell-literate.js.map
