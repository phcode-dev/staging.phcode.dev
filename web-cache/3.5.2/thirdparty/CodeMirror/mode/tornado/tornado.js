!function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("../../lib/codemirror"),require("../htmlmixed/htmlmixed"),require("../../addon/mode/overlay")):"function"==typeof define&&define.amd?define(["../../lib/codemirror","../htmlmixed/htmlmixed","../../addon/mode/overlay"],mod):mod(CodeMirror)}(function(CodeMirror){"use strict";CodeMirror.defineMode("tornado:inner",function(){var keywords=["and","as","assert","autoescape","block","break","class","comment","context","continue","datetime","def","del","elif","else","end","escape","except","exec","extends","false","finally","for","from","global","if","import","in","include","is","json_encode","lambda","length","linkify","load","module","none","not","or","pass","print","put","raise","raw","return","self","set","squeeze","super","true","try","url_escape","while","with","without","xhtml_escape","yield"];function tokenBase(stream,state){stream.eatWhile(/[^\{]/);var ch=stream.next();if("{"==ch&&(ch=stream.eat(/\{|%|#/)))return state.tokenize=inTag(ch),"tag"}function inTag(close){return"{"==close&&(close="}"),function(stream,state){var ch;return stream.next()==close&&stream.eat("}")?(state.tokenize=tokenBase,"tag"):stream.match(keywords)?"keyword":"#"==close?"comment":"string"}}return keywords=new RegExp("^(("+keywords.join(")|(")+"))\\b"),{startState:function(){return{tokenize:tokenBase}},token:function(stream,state){return state.tokenize(stream,state)}}}),CodeMirror.defineMode("tornado",function(config){var htmlBase=CodeMirror.getMode(config,"text/html"),tornadoInner=CodeMirror.getMode(config,"tornado:inner");return CodeMirror.overlayMode(htmlBase,tornadoInner)}),CodeMirror.defineMIME("text/x-tornado","tornado")});
//# sourceMappingURL=tornado.js.map
