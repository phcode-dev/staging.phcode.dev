{"version":3,"sources":["thirdparty/CodeMirror/mode/julia/julia.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","parserConf","wordRegexp","words","end","pre","RegExp","join","octChar","hexChar","sChar","uChar","asciiOperatorsList","operators","delimiters","identifiers","chars","openersList","closersList","keywordsList","builtinsList","registerHelper","concat","openers","closers","keywords","builtins","macro","symbol","stringPrefixes","macroOperators","symbolOperators","external","inArray","state","nestedArrays","inGenerator","nestedGenerators","currentScope","n","scopes","length","tokenBase","stream","match","tokenize","tokenComment","leavingExpr","sol","eatSpace","ch","peek","skipToEnd","push","pop","lastToken","tokenAnnotation","imMatcher","numberLiteral","tokenChar","tokenStringFactory","current","isDefinition","next","nestedParameters","nestedComments","isChar","value","parseInt","delimiter","tokenString","eat","eatWhile","substr","startState","firstParenPos","token","style","indent","textAfter","delta","test","indentUnit","electricInput","blockCommentStart","blockCommentEnd","lineComment","closeBrackets","fold","defineMIME"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"julia\", function(config, parserConf) {\n  function wordRegexp(words, end, pre) {\n    if (typeof pre === \"undefined\") { pre = \"\"; }\n    if (typeof end === \"undefined\") { end = \"\\\\b\"; }\n    return new RegExp(\"^\" + pre + \"((\" + words.join(\")|(\") + \"))\" + end);\n  }\n\n  var octChar = \"\\\\\\\\[0-7]{1,3}\";\n  var hexChar = \"\\\\\\\\x[A-Fa-f0-9]{1,2}\";\n  var sChar = \"\\\\\\\\[abefnrtv0%?'\\\"\\\\\\\\]\";\n  var uChar = \"([^\\\\u0027\\\\u005C\\\\uD800-\\\\uDFFF]|[\\\\uD800-\\\\uDFFF][\\\\uDC00-\\\\uDFFF])\";\n\n  var asciiOperatorsList = [\n    \"[<>]:\", \"[<>=]=\", \"<<=?\", \">>>?=?\", \"=>\", \"--?>\", \"<--[->]?\", \"\\\\/\\\\/\",\n    \"\\\\.{2,3}\", \"[\\\\.\\\\\\\\%*+\\\\-<>!\\\\/^|&]=?\", \"\\\\?\", \"\\\\$\", \"~\", \":\"\n  ];\n  var operators = parserConf.operators || wordRegexp([\n    \"[<>]:\", \"[<>=]=\", \"[!=]==\", \"<<=?\", \">>>?=?\", \"=>?\", \"--?>\", \"<--[->]?\", \"\\\\/\\\\/\",\n    \"[\\\\\\\\%*+\\\\-<>!\\\\/^|&\\\\u00F7\\\\u22BB]=?\", \"\\\\?\", \"\\\\$\", \"~\", \":\",\n    \"\\\\u00D7\", \"\\\\u2208\", \"\\\\u2209\", \"\\\\u220B\", \"\\\\u220C\", \"\\\\u2218\",\n    \"\\\\u221A\", \"\\\\u221B\", \"\\\\u2229\", \"\\\\u222A\", \"\\\\u2260\", \"\\\\u2264\",\n    \"\\\\u2265\", \"\\\\u2286\", \"\\\\u2288\", \"\\\\u228A\", \"\\\\u22C5\",\n    \"\\\\b(in|isa)\\\\b(?!\\.?\\\\()\"\n  ], \"\");\n  var delimiters = parserConf.delimiters || /^[;,()[\\]{}]/;\n  var identifiers = parserConf.identifiers ||\n        /^[_A-Za-z\\u00A1-\\u2217\\u2219-\\uFFFF][\\w\\u00A1-\\u2217\\u2219-\\uFFFF]*!*/;\n\n  var chars = wordRegexp([octChar, hexChar, sChar, uChar], \"'\");\n\n  var openersList = [\"begin\", \"function\", \"type\", \"struct\", \"immutable\", \"let\",\n        \"macro\", \"for\", \"while\", \"quote\", \"if\", \"else\", \"elseif\", \"try\",\n        \"finally\", \"catch\", \"do\"];\n\n  var closersList = [\"end\", \"else\", \"elseif\", \"catch\", \"finally\"];\n\n  var keywordsList = [\"if\", \"else\", \"elseif\", \"while\", \"for\", \"begin\", \"let\",\n        \"end\", \"do\", \"try\", \"catch\", \"finally\", \"return\", \"break\", \"continue\",\n        \"global\", \"local\", \"const\", \"export\", \"import\", \"importall\", \"using\",\n        \"function\", \"where\", \"macro\", \"module\", \"baremodule\", \"struct\", \"type\",\n        \"mutable\", \"immutable\", \"quote\", \"typealias\", \"abstract\", \"primitive\",\n        \"bitstype\"];\n\n  var builtinsList = [\"true\", \"false\", \"nothing\", \"NaN\", \"Inf\"];\n\n  CodeMirror.registerHelper(\"hintWords\", \"julia\", keywordsList.concat(builtinsList));\n\n  var openers = wordRegexp(openersList);\n  var closers = wordRegexp(closersList);\n  var keywords = wordRegexp(keywordsList);\n  var builtins = wordRegexp(builtinsList);\n\n  var macro = /^@[_A-Za-z\\u00A1-\\uFFFF][\\w\\u00A1-\\uFFFF]*!*/;\n  var symbol = /^:[_A-Za-z\\u00A1-\\uFFFF][\\w\\u00A1-\\uFFFF]*!*/;\n  var stringPrefixes = /^(`|([_A-Za-z\\u00A1-\\uFFFF]*\"(\"\")?))/;\n\n  var macroOperators = wordRegexp(asciiOperatorsList, \"\", \"@\");\n  var symbolOperators = wordRegexp(asciiOperatorsList, \"\", \":\");\n\n  function inArray(state) {\n    return (state.nestedArrays > 0);\n  }\n\n  function inGenerator(state) {\n    return (state.nestedGenerators > 0);\n  }\n\n  function currentScope(state, n) {\n    if (typeof(n) === \"undefined\") { n = 0; }\n    if (state.scopes.length <= n) {\n      return null;\n    }\n    return state.scopes[state.scopes.length - (n + 1)];\n  }\n\n  // tokenizers\n  function tokenBase(stream, state) {\n    // Handle multiline comments\n    if (stream.match('#=', false)) {\n      state.tokenize = tokenComment;\n      return state.tokenize(stream, state);\n    }\n\n    // Handle scope changes\n    var leavingExpr = state.leavingExpr;\n    if (stream.sol()) {\n      leavingExpr = false;\n    }\n    state.leavingExpr = false;\n\n    if (leavingExpr) {\n      if (stream.match(/^'+/)) {\n        return \"operator\";\n      }\n    }\n\n    if (stream.match(/\\.{4,}/)) {\n      return \"error\";\n    } else if (stream.match(/\\.{1,3}/)) {\n      return \"operator\";\n    }\n\n    if (stream.eatSpace()) {\n      return null;\n    }\n\n    var ch = stream.peek();\n\n    // Handle single line comments\n    if (ch === '#') {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    if (ch === '[') {\n      state.scopes.push('[');\n      state.nestedArrays++;\n    }\n\n    if (ch === '(') {\n      state.scopes.push('(');\n      state.nestedGenerators++;\n    }\n\n    if (inArray(state) && ch === ']') {\n      while (state.scopes.length && currentScope(state) !== \"[\") { state.scopes.pop(); }\n      state.scopes.pop();\n      state.nestedArrays--;\n      state.leavingExpr = true;\n    }\n\n    if (inGenerator(state) && ch === ')') {\n      while (state.scopes.length && currentScope(state) !== \"(\") { state.scopes.pop(); }\n      state.scopes.pop();\n      state.nestedGenerators--;\n      state.leavingExpr = true;\n    }\n\n    if (inArray(state)) {\n      if (state.lastToken == \"end\" && stream.match(':')) {\n        return \"operator\";\n      }\n      if (stream.match('end')) {\n        return \"number\";\n      }\n    }\n\n    var match;\n    if (match = stream.match(openers, false)) {\n      state.scopes.push(match[0]);\n    }\n\n    if (stream.match(closers, false)) {\n      state.scopes.pop();\n    }\n\n    // Handle type annotations\n    if (stream.match(/^::(?![:\\$])/)) {\n      state.tokenize = tokenAnnotation;\n      return state.tokenize(stream, state);\n    }\n\n    // Handle symbols\n    if (!leavingExpr && (stream.match(symbol) || stream.match(symbolOperators))) {\n      return \"builtin\";\n    }\n\n    // Handle parametric types\n    //if (stream.match(/^{[^}]*}(?=\\()/)) {\n    //  return \"builtin\";\n    //}\n\n    // Handle operators and Delimiters\n    if (stream.match(operators)) {\n      return \"operator\";\n    }\n\n    // Handle Number Literals\n    if (stream.match(/^\\.?\\d/, false)) {\n      var imMatcher = RegExp(/^im\\b/);\n      var numberLiteral = false;\n      if (stream.match(/^0x\\.[0-9a-f_]+p[\\+\\-]?[_\\d]+/i)) { numberLiteral = true; }\n      // Integers\n      if (stream.match(/^0x[0-9a-f_]+/i)) { numberLiteral = true; } // Hex\n      if (stream.match(/^0b[01_]+/i)) { numberLiteral = true; } // Binary\n      if (stream.match(/^0o[0-7_]+/i)) { numberLiteral = true; } // Octal\n      // Floats\n      if (stream.match(/^(?:(?:\\d[_\\d]*)?\\.(?!\\.)(?:\\d[_\\d]*)?|\\d[_\\d]*\\.(?!\\.)(?:\\d[_\\d]*))?([Eef][\\+\\-]?[_\\d]+)?/i)) { numberLiteral = true; }\n      if (stream.match(/^\\d[_\\d]*(e[\\+\\-]?\\d+)?/i)) { numberLiteral = true; } // Decimal\n      if (numberLiteral) {\n          // Integer literals may be \"long\"\n          stream.match(imMatcher);\n          state.leavingExpr = true;\n          return \"number\";\n      }\n    }\n\n    // Handle Chars\n    if (stream.match('\\'')) {\n      state.tokenize = tokenChar;\n      return state.tokenize(stream, state);\n    }\n\n    // Handle Strings\n    if (stream.match(stringPrefixes)) {\n      state.tokenize = tokenStringFactory(stream.current());\n      return state.tokenize(stream, state);\n    }\n\n    if (stream.match(macro) || stream.match(macroOperators)) {\n      return \"meta\";\n    }\n\n    if (stream.match(delimiters)) {\n      return null;\n    }\n\n    if (stream.match(keywords)) {\n      return \"keyword\";\n    }\n\n    if (stream.match(builtins)) {\n      return \"builtin\";\n    }\n\n    var isDefinition = state.isDefinition || state.lastToken == \"function\" ||\n                       state.lastToken == \"macro\" || state.lastToken == \"type\" ||\n                       state.lastToken == \"struct\" || state.lastToken == \"immutable\";\n\n    if (stream.match(identifiers)) {\n      if (isDefinition) {\n        if (stream.peek() === '.') {\n          state.isDefinition = true;\n          return \"variable\";\n        }\n        state.isDefinition = false;\n        return \"def\";\n      }\n      state.leavingExpr = true;\n      return \"variable\";\n    }\n\n    // Handle non-detected items\n    stream.next();\n    return \"error\";\n  }\n\n  function tokenAnnotation(stream, state) {\n    stream.match(/.*?(?=[,;{}()=\\s]|$)/);\n    if (stream.match('{')) {\n      state.nestedParameters++;\n    } else if (stream.match('}') && state.nestedParameters > 0) {\n      state.nestedParameters--;\n    }\n    if (state.nestedParameters > 0) {\n      stream.match(/.*?(?={|})/) || stream.next();\n    } else if (state.nestedParameters == 0) {\n      state.tokenize = tokenBase;\n    }\n    return \"builtin\";\n  }\n\n  function tokenComment(stream, state) {\n    if (stream.match('#=')) {\n      state.nestedComments++;\n    }\n    if (!stream.match(/.*?(?=(#=|=#))/)) {\n      stream.skipToEnd();\n    }\n    if (stream.match('=#')) {\n      state.nestedComments--;\n      if (state.nestedComments == 0)\n        state.tokenize = tokenBase;\n    }\n    return \"comment\";\n  }\n\n  function tokenChar(stream, state) {\n    var isChar = false, match;\n    if (stream.match(chars)) {\n      isChar = true;\n    } else if (match = stream.match(/\\\\u([a-f0-9]{1,4})(?=')/i)) {\n      var value = parseInt(match[1], 16);\n      if (value <= 55295 || value >= 57344) { // (U+0,U+D7FF), (U+E000,U+FFFF)\n        isChar = true;\n        stream.next();\n      }\n    } else if (match = stream.match(/\\\\U([A-Fa-f0-9]{5,8})(?=')/)) {\n      var value = parseInt(match[1], 16);\n      if (value <= 1114111) { // U+10FFFF\n        isChar = true;\n        stream.next();\n      }\n    }\n    if (isChar) {\n      state.leavingExpr = true;\n      state.tokenize = tokenBase;\n      return \"string\";\n    }\n    if (!stream.match(/^[^']+(?=')/)) { stream.skipToEnd(); }\n    if (stream.match('\\'')) { state.tokenize = tokenBase; }\n    return \"error\";\n  }\n\n  function tokenStringFactory(delimiter) {\n    if (delimiter.substr(-3) === '\"\"\"') {\n      delimiter = '\"\"\"';\n    } else if (delimiter.substr(-1) === '\"') {\n      delimiter = '\"';\n    }\n    function tokenString(stream, state) {\n      if (stream.eat('\\\\')) {\n        stream.next();\n      } else if (stream.match(delimiter)) {\n        state.tokenize = tokenBase;\n        state.leavingExpr = true;\n        return \"string\";\n      } else {\n        stream.eat(/[`\"]/);\n      }\n      stream.eatWhile(/[^\\\\`\"]/);\n      return \"string\";\n    }\n    return tokenString;\n  }\n\n  var external = {\n    startState: function() {\n      return {\n        tokenize: tokenBase,\n        scopes: [],\n        lastToken: null,\n        leavingExpr: false,\n        isDefinition: false,\n        nestedArrays: 0,\n        nestedComments: 0,\n        nestedGenerators: 0,\n        nestedParameters: 0,\n        firstParenPos: -1\n      };\n    },\n\n    token: function(stream, state) {\n      var style = state.tokenize(stream, state);\n      var current = stream.current();\n\n      if (current && style) {\n        state.lastToken = current;\n      }\n\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      var delta = 0;\n      if ( textAfter === ']' || textAfter === ')' || /^end\\b/.test(textAfter) ||\n           /^else/.test(textAfter) || /^catch\\b/.test(textAfter) || /^elseif\\b/.test(textAfter) ||\n           /^finally/.test(textAfter) ) {\n        delta = -1;\n      }\n      return (state.scopes.length + delta) * config.indentUnit;\n    },\n\n    electricInput: /\\b(end|else|catch|finally)\\b/,\n    blockCommentStart: \"#=\",\n    blockCommentEnd: \"=#\",\n    lineComment: \"#\",\n    closeBrackets: \"()[]{}\\\"\\\"\",\n    fold: \"indent\"\n  };\n  return external;\n});\n\n\nCodeMirror.defineMIME(\"text/x-julia\", \"julia\");\n\n});\n"],"file":"julia.js"}