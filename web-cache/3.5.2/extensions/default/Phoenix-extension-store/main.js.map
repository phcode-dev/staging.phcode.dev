{"version":3,"sources":["extensions/default/Phoenix-extension-store/main.js"],"names":["define","require","exports","module","CommandManager","brackets","getModule","ExtensionUtils","FeatureGate","WorkspaceManager","AppInit","FEATURE_NEW_EXTENSION_STORE","registerFeatureGate","panelHTML","$icon","$iframe","$panel","panel","toggleCmd","_setPanelVisibility","isVisible","toggleClass","show","hide","_toggleVisibility","alert","visible","setChecked","_createExtensionPanel","$","removeClass","click","find","onload","attr","config","extension_store_url","minSize","window","innerWidth","createPluginPanel","recomputeLayout","loadStyleSheet","register","appReady","isFeatureEnabled"],"mappings":"AAyCAA,OAAO,SAAUC,QAASC,QAASC,QAG/B,IAAIC,eAAqBC,SAASC,UAAU,0BACxCC,eAAqBF,SAASC,UAAU,wBACxCE,YAAqBH,SAASC,UAAU,qBACxCG,iBAAqBJ,SAASC,UAAU,yBACxCI,QAAqBL,SAASC,UAAU,iBAE5C,MAAMK,4BAA8B,oBAEpCH,YAAYI,oBAFwB,qBAEyB,GAG7D,IAAIC,UAAkBZ,QAAQ,mBAG1Ba,MACAC,QACAC,OAGAC,MACAC,UAEJ,SAASC,oBAAoBC,WACrBA,WACAN,MAAMO,YAAY,UAElBJ,MAAMK,SAGNR,MAAMO,YAAY,UAClBJ,MAAMM,QAId,SAASC,oBACLC,MAAM,iCACN,IAAIC,SAAWT,MAAMG,YACrBD,oBAAoBO,SAEpBR,UAAUS,WAAWD,SAOzB,SAASE,yBACLd,MAAQe,EAAE,+BACJC,YAAY,kBAClBhB,MAAMiB,MAAMP,mBACZR,OAASa,EAAEhB,YACXE,QAAUC,OAAOgB,KAAK,iCACd,GAAGC,OAAS,WAChBlB,QAAQmB,KAAK,SAAU,OAE3BnB,QAAQmB,KAAK,MAAO7B,SAAS8B,OAAOC,qBACpC,IAAIC,QAAUC,OAAOC,WAAW,EAEhCtB,MAAQR,iBAAiB+B,kBAAkB,kBAAmBxB,OAAQqB,QAASvB,OAE/EL,iBAAiBgC,iBAAgB,GAlBrClC,eAAemC,eAAevC,OAAQ,uBAEtCe,UAAYd,eAAeuC,SAAS,mBAAoB,wBAAyBnB,mBAmBjFd,QAAQkC,SAAS,WACTpC,YAAYqC,iBA1DgB,sBA6DhCjB","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/*jslint vars: true, plusplus: true, devel: true, nomen: true, regexp: true, indent: 4, maxerr: 50 */\n/*global define, brackets */\n//jshint-ignore:no-start\n\ndefine(function (require, exports, module) {\n\n\n    var CommandManager     = brackets.getModule(\"command/CommandManager\"),\n        ExtensionUtils     = brackets.getModule(\"utils/ExtensionUtils\"),\n        FeatureGate        = brackets.getModule(\"utils/FeatureGate\"),\n        WorkspaceManager   = brackets.getModule(\"view/WorkspaceManager\"),\n        AppInit            = brackets.getModule(\"utils/AppInit\");\n\n    const FEATURE_NEW_EXTENSION_STORE = 'newExtensionStore';\n\n    FeatureGate.registerFeatureGate(FEATURE_NEW_EXTENSION_STORE, false);\n\n    // Templates\n    var panelHTML       = require(\"text!panel.html\");\n\n    // jQuery objects\n    var $icon,\n        $iframe,\n        $panel;\n\n    // Other vars\n    var panel,\n        toggleCmd;\n\n    function _setPanelVisibility(isVisible) {\n        if (isVisible) {\n            $icon.toggleClass(\"active\");\n\n            panel.show();\n\n        } else {\n            $icon.toggleClass(\"active\");\n            panel.hide();\n        }\n    }\n\n    function _toggleVisibility() {\n        alert(\"extension support coming soon\");\n        let visible = !panel.isVisible();\n        _setPanelVisibility(visible);\n\n        toggleCmd.setChecked(visible);\n    }\n\n    ExtensionUtils.loadStyleSheet(module, \"extension-store.css\");\n    // todo: replace with extension manager dialogue command\n    toggleCmd = CommandManager.register(\"Extensions Panel\", \"toggleExtensionsPanel\", _toggleVisibility);\n\n    function _createExtensionPanel() {\n        $icon = $(\"#toolbar-extension-manager\");\n        $icon.removeClass(\"hidden-element\");\n        $icon.click(_toggleVisibility);\n        $panel = $(panelHTML);\n        $iframe = $panel.find(\"#panel-extension-store-frame\");\n        $iframe[0].onload = function () {\n            $iframe.attr('srcdoc', null);\n        };\n        $iframe.attr('src', brackets.config.extension_store_url);\n        let minSize = window.innerWidth/3;\n\n        panel = WorkspaceManager.createPluginPanel(\"extension-panel\", $panel, minSize, $icon);\n\n        WorkspaceManager.recomputeLayout(false);\n    }\n\n    AppInit.appReady(function () {\n        if(!FeatureGate.isFeatureEnabled(FEATURE_NEW_EXTENSION_STORE)){\n            return;\n        }\n        _createExtensionPanel();\n    });\n});\n\n\n"],"file":"main.js"}