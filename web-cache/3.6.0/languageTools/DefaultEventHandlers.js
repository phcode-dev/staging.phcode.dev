define(function(require,exports,module){var LanguageManager=require("language/LanguageManager"),ProjectManager=require("project/ProjectManager"),PathConverters=require("languageTools/PathConverters");function EventPropagationProvider(client){this.client=client,this.previousProject="",this.currentProject=ProjectManager.getProjectRoot()}function handleProjectFoldersRequest(event){var projectRoot,workspaceFolders=[ProjectManager.getProjectRoot()];return workspaceFolders=PathConverters.convertToWorkspaceFolders(workspaceFolders),$.Deferred().resolve(workspaceFolders)}EventPropagationProvider.prototype._sendDocumentOpenNotification=function(languageId,doc){this.client&&this.client._languages.includes(languageId)&&this.client.notifyTextDocumentOpened({languageId:languageId,filePath:doc.file._path||doc.file.fullPath,fileContent:doc.getText()})},EventPropagationProvider.prototype.handleActiveEditorChange=function(event,current,previous){var self=this;if(this.client){if(previous){previous.document.off("languageChanged.language-tools");var previousLanguageId=LanguageManager.getLanguageForPath(previous.document.file.fullPath).getId();this.client._languages.includes(previousLanguageId)&&this.client.notifyTextDocumentClosed({filePath:previous.document.file._path||previous.document.file.fullPath})}if(current){var currentLanguageId=LanguageManager.getLanguageForPath(current.document.file.fullPath).getId();current.document.on("languageChanged.language-tools",function(){var languageId=LanguageManager.getLanguageForPath(current.document.file.fullPath).getId();self._sendDocumentOpenNotification(languageId,current.document)}),self._sendDocumentOpenNotification(currentLanguageId,current.document)}}},EventPropagationProvider.prototype.handleProjectOpen=function(event,directory){this.client&&(this.currentProject=directory.fullPath,this.client.notifyProjectRootsChanged({foldersAdded:[this.currentProject],foldersRemoved:[this.previousProject]}))},EventPropagationProvider.prototype.handleProjectClose=function(event,directory){this.client&&(this.previousProject=directory.fullPath)},EventPropagationProvider.prototype.handleDocumentDirty=function(event,doc){if(this.client&&!doc.isDirty){var docLanguageId=LanguageManager.getLanguageForPath(doc.file.fullPath).getId();this.client._languages.includes(docLanguageId)&&this.client.notifyTextDocumentSave({filePath:doc.file._path||doc.file.fullPath})}},EventPropagationProvider.prototype.handleDocumentChange=function(event,doc,changeList){if(this.client){var docLanguageId=LanguageManager.getLanguageForPath(doc.file.fullPath).getId();this.client._languages.includes(docLanguageId)&&this.client.notifyTextDocumentChanged({filePath:doc.file._path||doc.file.fullPath,fileContent:doc.getText()})}},EventPropagationProvider.prototype.handleDocumentRename=function(event,oldName,newName){if(this.client){var oldDocLanguageId=LanguageManager.getLanguageForPath(oldName).getId();this.client._languages.includes(oldDocLanguageId)&&this.client.notifyTextDocumentClosed({filePath:oldName});var newDocLanguageId=LanguageManager.getLanguageForPath(newName).getId();this.client._languages.includes(newDocLanguageId)&&this.client.notifyTextDocumentOpened({filePath:newName})}},EventPropagationProvider.prototype.handleAppClose=function(event){this.client&&this.client.stop()},EventPropagationProvider.prototype.registerClientForEditorEvent=function(){if(this.client){var handleActiveEditorChange=this.handleActiveEditorChange.bind(this),handleProjectOpen=this.handleProjectOpen.bind(this),handleProjectClose=this.handleProjectClose.bind(this),handleDocumentDirty=this.handleDocumentDirty.bind(this),handleDocumentChange=this.handleDocumentChange.bind(this),handleDocumentRename=this.handleDocumentRename.bind(this),handleAppClose=this.handleAppClose.bind(this);this.client.addOnEditorChangeHandler(handleActiveEditorChange),this.client.addOnProjectOpenHandler(handleProjectOpen),this.client.addBeforeProjectCloseHandler(handleProjectClose),this.client.addOnDocumentDirtyFlagChangeHandler(handleDocumentDirty),this.client.addOnDocumentChangeHandler(handleDocumentChange),this.client.addOnFileRenameHandler(handleDocumentRename),this.client.addBeforeAppClose(handleAppClose),this.client.onProjectFoldersRequest(handleProjectFoldersRequest)}else console.log("No client provided for event propagation")},exports.EventPropagationProvider=EventPropagationProvider});
//# sourceMappingURL=DefaultEventHandlers.js.map
