{"version":3,"sources":["languageTools/LanguageTools.js"],"names":["define","require","exports","module","ClientLoader","EditorManager","ProjectManager","DocumentManager","DocumentModule","PreferencesManager","Strings","LanguageClientWrapper","languageClients","Map","languageToolsPrefs","showServerLogsInConsole","BRACKETS_EVENTS_NAMES","EDITOR_CHANGE_EVENT","PROJECT_OPEN_EVENT","PROJECT_CLOSE_EVENT","DOCUMENT_DIRTY_EVENT","DOCUMENT_CHANGE_EVENT","FILE_RENAME_EVENT","BEFORE_APP_CLOSE","registerLanguageClient","clientName","languageClient","set","_withNamespace","event","split","filter","value","map","join","_eventHandler","eventArgs","arguments","forEach","client","triggerEvent","apply","_attachEventHandlers","on","listenToCustomEvent","eventModule","eventName","initiateToolingService","clientFilePath","languages","result","$","Deferred","initiateLanguageClient","done","languageClientInfo","languageClientName","name","languageClientInterface","interface","resolve","fail","reject","definePreference","description","LANGUAGE_TOOLS_PREFERENCES","get","syncPrefsWithDomain"],"mappings":"AA0BAA,OAAO,SAAUC,QAASC,QAASC,QAG/B,IAAIC,aAAeH,QAAQ,8BACvBI,cAAgBJ,QAAQ,wBACxBK,eAAiBL,QAAQ,0BACzBM,gBAAkBN,QAAQ,4BAC1BO,eAAiBP,QAAQ,qBACzBQ,mBAAqBR,QAAQ,kCAC7BS,QAAUT,QAAQ,WAClBU,sBAAwBV,QAAQ,uCAAuCU,sBAEvEC,gBAAkB,IAAIC,IACtBC,mBAAqB,CACjBC,yBAAyB,GAE7BC,sBAAwB,CACpBC,oBAAqB,qBACrBC,mBAAoB,cACpBC,oBAAqB,qBACrBC,qBAAsB,kBACtBC,sBAAuB,iBACvBC,kBAAmB,iBACnBC,iBAAkB,kBAa1B,SAASC,uBAAuBC,WAAYC,gBACxCd,gBAAgBe,IAAIF,WAAYC,gBAGpC,SAASE,eAAeC,OACpB,OAAOA,MAAMC,MAAM,KACdC,OAAQC,SAAYA,OACpBC,IAAKD,OAAUA,MAAQ,mBACvBE,KAAK,KAGd,SAASC,gBACL,IAAIC,UAAYC,UAEhBzB,gBAAgB0B,QAAQ,SAAUC,QAC9BA,OAAOC,aAAaC,MAAMF,OAAQH,aAI1C,SAASM,uBAELrC,cAAcsC,GAAGf,eAAeZ,sBAAsBC,qBAAsBkB,eAC5E7B,eAAeqC,GAAGf,eAAeZ,sBAAsBE,oBAAqBiB,eAC5E7B,eAAeqC,GAAGf,eAAeZ,sBAAsBG,qBAAsBgB,eAC7E5B,gBAAgBoC,GAAGf,eAAeZ,sBAAsBI,sBAAuBe,eAC/E3B,eAAemC,GAAGf,eAAeZ,sBAAsBK,uBAAwBc,eAC/E5B,gBAAgBoC,GAAGf,eAAeZ,sBAAsBM,mBAAoBa,eAC5E7B,eAAeqC,GAAGf,eAAeZ,sBAAsBO,kBAAmBY,eAK9E,SAASS,oBAAoBC,YAAaC,WACtCD,YAAYF,GAAGf,eAAekB,WAAYX,eAG9C,SAASY,uBAAuBtB,WAAYuB,eAAgBC,WACxD,IAAIC,OAASC,EAAEC,WAcf,OAZAhD,aAAaiD,uBAAuB5B,WAAYuB,gBAC3CM,KAAK,SAAUC,oBACZ,IAAIC,mBAAqBD,mBAAmBE,KACxCC,wBAA0BH,mBAAmBI,UAC7CjC,eAAiB,IAAIf,sBAAsB6C,mBAAoBR,eAAgBU,wBAAyBT,WAE5GzB,uBAAuBgC,mBAAoB9B,gBAE3CwB,OAAOU,QAAQlC,kBAElBmC,KAAKX,OAAOY,QAEVZ,OA7DXzC,mBAAmBsD,iBAAiB,gBAAiB,SAAUjD,mBAAoB,CAC/EkD,YAAatD,QAAQuD,6BAGzBxD,mBAAmBkC,GAAG,SAAU,gBAAiB,WAC7C7B,mBAAqBL,mBAAmByD,IAAI,iBAE5C9D,aAAa+D,oBAAoBrD,sBAiCrC4B,uBAwBAxC,QAAQ6C,uBAAyBA,uBACjC7C,QAAQ0C,oBAAsBA","sourcesContent":["/*\n * Copyright (c) 2019 - present Adobe. All rights reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n *\n */\n\n/*eslint no-console: 0*/\n/*eslint max-len: [\"error\", { \"code\": 200 }]*/\n/*eslint-env es6*/\ndefine(function (require, exports, module) {\n\n\n    var ClientLoader = require(\"languageTools/ClientLoader\"),\n        EditorManager = require(\"editor/EditorManager\"),\n        ProjectManager = require(\"project/ProjectManager\"),\n        DocumentManager = require(\"document/DocumentManager\"),\n        DocumentModule = require(\"document/Document\"),\n        PreferencesManager = require(\"preferences/PreferencesManager\"),\n        Strings = require(\"strings\"),\n        LanguageClientWrapper = require(\"languageTools/LanguageClientWrapper\").LanguageClientWrapper;\n\n    var languageClients = new Map(),\n        languageToolsPrefs = {\n            showServerLogsInConsole: false\n        },\n        BRACKETS_EVENTS_NAMES = {\n            EDITOR_CHANGE_EVENT: \"activeEditorChange\",\n            PROJECT_OPEN_EVENT: \"projectOpen\",\n            PROJECT_CLOSE_EVENT: \"beforeProjectClose\",\n            DOCUMENT_DIRTY_EVENT: \"dirtyFlagChange\",\n            DOCUMENT_CHANGE_EVENT: \"documentChange\",\n            FILE_RENAME_EVENT: \"fileNameChange\",\n            BEFORE_APP_CLOSE: \"beforeAppClose\"\n        };\n\n    PreferencesManager.definePreference(\"languageTools\", \"object\", languageToolsPrefs, {\n        description: Strings.LANGUAGE_TOOLS_PREFERENCES\n    });\n\n    PreferencesManager.on(\"change\", \"languageTools\", function () {\n        languageToolsPrefs = PreferencesManager.get(\"languageTools\");\n\n        ClientLoader.syncPrefsWithDomain(languageToolsPrefs);\n    });\n\n    function registerLanguageClient(clientName, languageClient) {\n        languageClients.set(clientName, languageClient);\n    }\n\n    function _withNamespace(event) {\n        return event.split(\" \")\n            .filter((value) => !!value)\n            .map((value) => value + \".language-tools\")\n            .join(\" \");\n    }\n\n    function _eventHandler() {\n        var eventArgs = arguments;\n        //Broadcast event to all clients\n        languageClients.forEach(function (client) {\n            client.triggerEvent.apply(client, eventArgs);\n        });\n    }\n\n    function _attachEventHandlers() {\n        //Attach standard listeners\n        EditorManager.on(_withNamespace(BRACKETS_EVENTS_NAMES.EDITOR_CHANGE_EVENT), _eventHandler); //(event, current, previous)\n        ProjectManager.on(_withNamespace(BRACKETS_EVENTS_NAMES.PROJECT_OPEN_EVENT), _eventHandler); //(event, directory)\n        ProjectManager.on(_withNamespace(BRACKETS_EVENTS_NAMES.PROJECT_CLOSE_EVENT), _eventHandler); //(event, directory)\n        DocumentManager.on(_withNamespace(BRACKETS_EVENTS_NAMES.DOCUMENT_DIRTY_EVENT), _eventHandler); //(event, document)\n        DocumentModule.on(_withNamespace(BRACKETS_EVENTS_NAMES.DOCUMENT_CHANGE_EVENT), _eventHandler); //(event, document, changeList)\n        DocumentManager.on(_withNamespace(BRACKETS_EVENTS_NAMES.FILE_RENAME_EVENT), _eventHandler); //(event, oldName, newName)\n        ProjectManager.on(_withNamespace(BRACKETS_EVENTS_NAMES.BEFORE_APP_CLOSE), _eventHandler); //(event, oldName, newName)\n    }\n\n    _attachEventHandlers();\n\n    function listenToCustomEvent(eventModule, eventName) {\n        eventModule.on(_withNamespace(eventName), _eventHandler);\n    }\n\n    function initiateToolingService(clientName, clientFilePath, languages) {\n        var result = $.Deferred();\n\n        ClientLoader.initiateLanguageClient(clientName, clientFilePath)\n            .done(function (languageClientInfo) {\n                var languageClientName = languageClientInfo.name,\n                    languageClientInterface = languageClientInfo.interface,\n                    languageClient = new LanguageClientWrapper(languageClientName, clientFilePath, languageClientInterface, languages);\n\n                registerLanguageClient(languageClientName, languageClient);\n\n                result.resolve(languageClient);\n            })\n            .fail(result.reject);\n\n        return result;\n    }\n\n    exports.initiateToolingService = initiateToolingService;\n    exports.listenToCustomEvent = listenToCustomEvent;\n});\n"],"file":"LanguageTools.js"}