{"version":3,"sources":["thirdparty/CodeMirror/addon/hint/anyword-hint.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","WORD","RANGE","registerHelper","editor","options","word","range","cur","getCursor","curLine","getLine","line","end","ch","start","test","charAt","curWord","slice","list","seen","re","RegExp","source","dir","endLine","Math","min","max","firstLine","lastLine","text","m","exec","lastIndexOf","Object","prototype","hasOwnProperty","call","push","from","Pos","to"],"mappings":"CAGA,SAAUA,KACc,iBAAXC,SAAwC,iBAAVC,OACvCF,IAAIG,QAAQ,yBACY,mBAAVC,QAAwBA,OAAOC,IAC7CD,OAAO,CAAC,wBAAyBJ,KAEjCA,IAAIM,YANR,CAOG,SAASA,YACV,aAEA,IAAIC,KAAO,SAAUC,MAAQ,IAE7BF,WAAWG,eAAe,OAAQ,UAAW,SAASC,OAAQC,SAK5D,IAJA,IAAIC,KAAOD,SAAWA,QAAQC,MAAQL,KAClCM,MAAQF,SAAWA,QAAQE,OAJJ,IAKvBC,IAAMJ,OAAOK,YAAaC,QAAUN,OAAOO,QAAQH,IAAII,MACvDC,IAAML,IAAIM,GAAIC,MAAQF,IACnBE,OAAST,KAAKU,KAAKN,QAAQO,OAAOF,MAAQ,OAAOA,MAKxD,IAJA,IAAIG,QAAUH,OAASF,KAAOH,QAAQS,MAAMJ,MAAOF,KAE/CO,KAAOf,SAAWA,QAAQe,MAAQ,GAAIC,KAAO,GAC7CC,GAAK,IAAIC,OAAOjB,KAAKkB,OAAQ,KACxBC,KAAO,EAAGA,KAAO,EAAGA,KAAO,EAElC,IADA,IAAIb,KAAOJ,IAAII,KAAMc,QAAUC,KAAKC,IAAID,KAAKE,IAAIjB,KAAOa,IAAMlB,MAAOH,OAAO0B,aAAc1B,OAAO2B,YAAcN,IACxGb,MAAQc,QAASd,MAAQa,IAE9B,IADA,IAAIO,KAAO5B,OAAOO,QAAQC,MAAOqB,EAC1BA,EAAIX,GAAGY,KAAKF,OACbpB,MAAQJ,IAAII,MAAQqB,EAAE,KAAOf,SAC3BA,SAA2C,GAAhCe,EAAE,GAAGE,YAAYjB,QAAS,IAAakB,OAAOC,UAAUC,eAAeC,KAAKlB,KAAMY,EAAE,MACnGZ,KAAKY,EAAE,KAAM,EACbb,KAAKoB,KAAKP,EAAE,KAKpB,MAAO,CAACb,KAAMA,KAAMqB,KAAMzC,WAAW0C,IAAIlC,IAAII,KAAMG,OAAQ4B,GAAI3C,WAAW0C,IAAIlC,IAAII,KAAMC","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var WORD = /[\\w$]+/, RANGE = 500;\n\n  CodeMirror.registerHelper(\"hint\", \"anyword\", function(editor, options) {\n    var word = options && options.word || WORD;\n    var range = options && options.range || RANGE;\n    var cur = editor.getCursor(), curLine = editor.getLine(cur.line);\n    var end = cur.ch, start = end;\n    while (start && word.test(curLine.charAt(start - 1))) --start;\n    var curWord = start != end && curLine.slice(start, end);\n\n    var list = options && options.list || [], seen = {};\n    var re = new RegExp(word.source, \"g\");\n    for (var dir = -1; dir <= 1; dir += 2) {\n      var line = cur.line, endLine = Math.min(Math.max(line + dir * range, editor.firstLine()), editor.lastLine()) + dir;\n      for (; line != endLine; line += dir) {\n        var text = editor.getLine(line), m;\n        while (m = re.exec(text)) {\n          if (line == cur.line && m[0] === curWord) continue;\n          if ((!curWord || m[0].lastIndexOf(curWord, 0) == 0) && !Object.prototype.hasOwnProperty.call(seen, m[0])) {\n            seen[m[0]] = true;\n            list.push(m[0]);\n          }\n        }\n      }\n    }\n    return {list: list, from: CodeMirror.Pos(cur.line, start), to: CodeMirror.Pos(cur.line, end)};\n  });\n});\n"],"file":"anyword-hint.js"}