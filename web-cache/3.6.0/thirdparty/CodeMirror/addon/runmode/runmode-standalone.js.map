{"version":3,"sources":["thirdparty/CodeMirror/addon/runmode/runmode-standalone.js"],"names":["copyObj","obj","target","overwrite","prop","hasOwnProperty","countColumn","string","end","tabSize","startIndex","startValue","search","length","i","n","nextTab","indexOf","nothing","createObj","base","props","inst","Object","create","prototype","StringStream","lineOracle","this","pos","start","lastColumnPos","lastColumnValue","lineStart","eol","sol","peek","charAt","undefined","next","eat","match","ch","ok","test","eatWhile","eatSpace","skipToEnd","skipTo","found","backUp","column","indentation","pattern","consume","caseInsensitive","slice","index","cased","str","toLowerCase","substr","current","hideFirstChars","inner","lookAhead","oracle","baseToken","modes","mimeModes","defineMode","name","mode","arguments","dependencies","Array","call","defineMIME","mime","spec","resolveMode","getMode","options","mfactory","modeObj","modeExtensions","exts","helperType","modeProps","prop$1","extendMode","properties","copyState","state","nstate","val","concat","innerMode","info","startState","a1","a2","modeMethods","__proto__","root","globalThis","window","mod","exported","CodeMirror","token","stream","registerHelper","registerGlobalHelper","Math","min","splitLines","split","defaults","indentUnit","runMode","modespec","callback","appendChild","ie","ie_lt9","navigator","userAgent","document","documentMode","node","col","textContent","text","style","createTextNode","content","idx","size","sp","createElement","className","replace","lines","e","blankLine","exports","module","require","define","amd"],"mappings":"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","sourcesContent":["(function () {\n  'use strict';\n\n  function copyObj(obj, target, overwrite) {\n    if (!target) { target = {}; }\n    for (var prop in obj)\n      { if (obj.hasOwnProperty(prop) && (overwrite !== false || !target.hasOwnProperty(prop)))\n        { target[prop] = obj[prop]; } }\n    return target\n  }\n\n  // Counts the column offset in a string, taking tabs into account.\n  // Used mostly to find indentation.\n  function countColumn(string, end, tabSize, startIndex, startValue) {\n    if (end == null) {\n      end = string.search(/[^\\s\\u00a0]/);\n      if (end == -1) { end = string.length; }\n    }\n    for (var i = startIndex || 0, n = startValue || 0;;) {\n      var nextTab = string.indexOf(\"\\t\", i);\n      if (nextTab < 0 || nextTab >= end)\n        { return n + (end - i) }\n      n += nextTab - i;\n      n += tabSize - (n % tabSize);\n      i = nextTab + 1;\n    }\n  }\n\n  function nothing() {}\n\n  function createObj(base, props) {\n    var inst;\n    if (Object.create) {\n      inst = Object.create(base);\n    } else {\n      nothing.prototype = base;\n      inst = new nothing();\n    }\n    if (props) { copyObj(props, inst); }\n    return inst\n  }\n\n  // STRING STREAM\n\n  // Fed to the mode parsers, provides helper functions to make\n  // parsers more succinct.\n\n  var StringStream = function(string, tabSize, lineOracle) {\n    this.pos = this.start = 0;\n    this.string = string;\n    this.tabSize = tabSize || 8;\n    this.lastColumnPos = this.lastColumnValue = 0;\n    this.lineStart = 0;\n    this.lineOracle = lineOracle;\n  };\n\n  StringStream.prototype.eol = function () {return this.pos >= this.string.length};\n  StringStream.prototype.sol = function () {return this.pos == this.lineStart};\n  StringStream.prototype.peek = function () {return this.string.charAt(this.pos) || undefined};\n  StringStream.prototype.next = function () {\n    if (this.pos < this.string.length)\n      { return this.string.charAt(this.pos++) }\n  };\n  StringStream.prototype.eat = function (match) {\n    var ch = this.string.charAt(this.pos);\n    var ok;\n    if (typeof match == \"string\") { ok = ch == match; }\n    else { ok = ch && (match.test ? match.test(ch) : match(ch)); }\n    if (ok) {++this.pos; return ch}\n  };\n  StringStream.prototype.eatWhile = function (match) {\n    var start = this.pos;\n    while (this.eat(match)){}\n    return this.pos > start\n  };\n  StringStream.prototype.eatSpace = function () {\n    var start = this.pos;\n    while (/[\\s\\u00a0]/.test(this.string.charAt(this.pos))) { ++this.pos; }\n    return this.pos > start\n  };\n  StringStream.prototype.skipToEnd = function () {this.pos = this.string.length;};\n  StringStream.prototype.skipTo = function (ch) {\n    var found = this.string.indexOf(ch, this.pos);\n    if (found > -1) {this.pos = found; return true}\n  };\n  StringStream.prototype.backUp = function (n) {this.pos -= n;};\n  StringStream.prototype.column = function () {\n    if (this.lastColumnPos < this.start) {\n      this.lastColumnValue = countColumn(this.string, this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue);\n      this.lastColumnPos = this.start;\n    }\n    return this.lastColumnValue - (this.lineStart ? countColumn(this.string, this.lineStart, this.tabSize) : 0)\n  };\n  StringStream.prototype.indentation = function () {\n    return countColumn(this.string, null, this.tabSize) -\n      (this.lineStart ? countColumn(this.string, this.lineStart, this.tabSize) : 0)\n  };\n  StringStream.prototype.match = function (pattern, consume, caseInsensitive) {\n    if (typeof pattern == \"string\") {\n      var cased = function (str) { return caseInsensitive ? str.toLowerCase() : str; };\n      var substr = this.string.substr(this.pos, pattern.length);\n      if (cased(substr) == cased(pattern)) {\n        if (consume !== false) { this.pos += pattern.length; }\n        return true\n      }\n    } else {\n      var match = this.string.slice(this.pos).match(pattern);\n      if (match && match.index > 0) { return null }\n      if (match && consume !== false) { this.pos += match[0].length; }\n      return match\n    }\n  };\n  StringStream.prototype.current = function (){return this.string.slice(this.start, this.pos)};\n  StringStream.prototype.hideFirstChars = function (n, inner) {\n    this.lineStart += n;\n    try { return inner() }\n    finally { this.lineStart -= n; }\n  };\n  StringStream.prototype.lookAhead = function (n) {\n    var oracle = this.lineOracle;\n    return oracle && oracle.lookAhead(n)\n  };\n  StringStream.prototype.baseToken = function () {\n    var oracle = this.lineOracle;\n    return oracle && oracle.baseToken(this.pos)\n  };\n\n  // Known modes, by name and by MIME\n  var modes = {}, mimeModes = {};\n\n  // Extra arguments are stored as the mode's dependencies, which is\n  // used by (legacy) mechanisms like loadmode.js to automatically\n  // load a mode. (Preferred mechanism is the require/define calls.)\n  function defineMode(name, mode) {\n    if (arguments.length > 2)\n      { mode.dependencies = Array.prototype.slice.call(arguments, 2); }\n    modes[name] = mode;\n  }\n\n  function defineMIME(mime, spec) {\n    mimeModes[mime] = spec;\n  }\n\n  // Given a MIME type, a {name, ...options} config object, or a name\n  // string, return a mode config object.\n  function resolveMode(spec) {\n    if (typeof spec == \"string\" && mimeModes.hasOwnProperty(spec)) {\n      spec = mimeModes[spec];\n    } else if (spec && typeof spec.name == \"string\" && mimeModes.hasOwnProperty(spec.name)) {\n      var found = mimeModes[spec.name];\n      if (typeof found == \"string\") { found = {name: found}; }\n      spec = createObj(found, spec);\n      spec.name = found.name;\n    } else if (typeof spec == \"string\" && /^[\\w\\-]+\\/[\\w\\-]+\\+xml$/.test(spec)) {\n      return resolveMode(\"application/xml\")\n    } else if (typeof spec == \"string\" && /^[\\w\\-]+\\/[\\w\\-]+\\+json$/.test(spec)) {\n      return resolveMode(\"application/json\")\n    }\n    if (typeof spec == \"string\") { return {name: spec} }\n    else { return spec || {name: \"null\"} }\n  }\n\n  // Given a mode spec (anything that resolveMode accepts), find and\n  // initialize an actual mode object.\n  function getMode(options, spec) {\n    spec = resolveMode(spec);\n    var mfactory = modes[spec.name];\n    if (!mfactory) { return getMode(options, \"text/plain\") }\n    var modeObj = mfactory(options, spec);\n    if (modeExtensions.hasOwnProperty(spec.name)) {\n      var exts = modeExtensions[spec.name];\n      for (var prop in exts) {\n        if (!exts.hasOwnProperty(prop)) { continue }\n        if (modeObj.hasOwnProperty(prop)) { modeObj[\"_\" + prop] = modeObj[prop]; }\n        modeObj[prop] = exts[prop];\n      }\n    }\n    modeObj.name = spec.name;\n    if (spec.helperType) { modeObj.helperType = spec.helperType; }\n    if (spec.modeProps) { for (var prop$1 in spec.modeProps)\n      { modeObj[prop$1] = spec.modeProps[prop$1]; } }\n\n    return modeObj\n  }\n\n  // This can be used to attach properties to mode objects from\n  // outside the actual mode definition.\n  var modeExtensions = {};\n  function extendMode(mode, properties) {\n    var exts = modeExtensions.hasOwnProperty(mode) ? modeExtensions[mode] : (modeExtensions[mode] = {});\n    copyObj(properties, exts);\n  }\n\n  function copyState(mode, state) {\n    if (state === true) { return state }\n    if (mode.copyState) { return mode.copyState(state) }\n    var nstate = {};\n    for (var n in state) {\n      var val = state[n];\n      if (val instanceof Array) { val = val.concat([]); }\n      nstate[n] = val;\n    }\n    return nstate\n  }\n\n  // Given a mode and a state (for that mode), find the inner mode and\n  // state at the position that the state refers to.\n  function innerMode(mode, state) {\n    var info;\n    while (mode.innerMode) {\n      info = mode.innerMode(state);\n      if (!info || info.mode == mode) { break }\n      state = info.state;\n      mode = info.mode;\n    }\n    return info || {mode: mode, state: state}\n  }\n\n  function startState(mode, a1, a2) {\n    return mode.startState ? mode.startState(a1, a2) : true\n  }\n\n  var modeMethods = {\n    __proto__: null,\n    modes: modes,\n    mimeModes: mimeModes,\n    defineMode: defineMode,\n    defineMIME: defineMIME,\n    resolveMode: resolveMode,\n    getMode: getMode,\n    modeExtensions: modeExtensions,\n    extendMode: extendMode,\n    copyState: copyState,\n    innerMode: innerMode,\n    startState: startState\n  };\n\n  // declare global: globalThis, CodeMirror\n\n  // Create a minimal CodeMirror needed to use runMode, and assign to root.\n  var root = typeof globalThis !== 'undefined' ? globalThis : window;\n  root.CodeMirror = {};\n\n  // Copy StringStream and mode methods into CodeMirror object.\n  CodeMirror.StringStream = StringStream;\n  for (var exported in modeMethods) { CodeMirror[exported] = modeMethods[exported]; }\n\n  // Minimal default mode.\n  CodeMirror.defineMode(\"null\", function () { return ({token: function (stream) { return stream.skipToEnd(); }}); });\n  CodeMirror.defineMIME(\"text/plain\", \"null\");\n\n  CodeMirror.registerHelper = CodeMirror.registerGlobalHelper = Math.min;\n  CodeMirror.splitLines = function(string) { return string.split(/\\r?\\n|\\r/) };\n  CodeMirror.countColumn = countColumn;\n\n  CodeMirror.defaults = { indentUnit: 2 };\n\n  // CodeMirror, copyright (c) by Marijn Haverbeke and others\n  // Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n  (function(mod) {\n    if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n      { mod(require(\"../../lib/codemirror\")); }\n    else if (typeof define == \"function\" && define.amd) // AMD\n      { define([\"../../lib/codemirror\"], mod); }\n    else // Plain browser env\n      { mod(CodeMirror); }\n  })(function(CodeMirror) {\n\n  CodeMirror.runMode = function(string, modespec, callback, options) {\n    var mode = CodeMirror.getMode(CodeMirror.defaults, modespec);\n    var tabSize = (options && options.tabSize) || CodeMirror.defaults.tabSize;\n\n    // Create a tokenizing callback function if passed-in callback is a DOM element.\n    if (callback.appendChild) {\n      var ie = /MSIE \\d/.test(navigator.userAgent);\n      var ie_lt9 = ie && (document.documentMode == null || document.documentMode < 9);\n      var node = callback, col = 0;\n      node.textContent = \"\";\n      callback = function(text, style) {\n        if (text == \"\\n\") {\n          // Emitting LF or CRLF on IE8 or earlier results in an incorrect display.\n          // Emitting a carriage return makes everything ok.\n          node.appendChild(document.createTextNode(ie_lt9 ? '\\r' : text));\n          col = 0;\n          return;\n        }\n        var content = \"\";\n        // replace tabs\n        for (var pos = 0;;) {\n          var idx = text.indexOf(\"\\t\", pos);\n          if (idx == -1) {\n            content += text.slice(pos);\n            col += text.length - pos;\n            break;\n          } else {\n            col += idx - pos;\n            content += text.slice(pos, idx);\n            var size = tabSize - col % tabSize;\n            col += size;\n            for (var i = 0; i < size; ++i) { content += \" \"; }\n            pos = idx + 1;\n          }\n        }\n        // Create a node with token style and append it to the callback DOM element.\n        if (style) {\n          var sp = node.appendChild(document.createElement(\"span\"));\n          sp.className = \"cm-\" + style.replace(/ +/g, \" cm-\");\n          sp.appendChild(document.createTextNode(content));\n        } else {\n          node.appendChild(document.createTextNode(content));\n        }\n      };\n    }\n\n    var lines = CodeMirror.splitLines(string), state = (options && options.state) || CodeMirror.startState(mode);\n    for (var i = 0, e = lines.length; i < e; ++i) {\n      if (i) { callback(\"\\n\"); }\n      var stream = new CodeMirror.StringStream(lines[i], null, {\n        lookAhead: function(n) { return lines[i + n] },\n        baseToken: function() {}\n      });\n      if (!stream.string && mode.blankLine) { mode.blankLine(state); }\n      while (!stream.eol()) {\n        var style = mode.token(stream, state);\n        callback(stream.current(), style, i, stream.start, state, mode);\n        stream.start = stream.pos;\n      }\n    }\n  };\n\n  });\n\n}());\n"],"file":"runmode-standalone.js"}