{"version":3,"sources":["assets/new-project/assets/js/notification-ui.js"],"names":["CLOSE_TIMEOUT","CLOSE_CLICK_DISMISS","Notification","tooltip","this","$tooltip","_result","$","Deferred","_promise","promise","createNotificationFromTemplate","template","elementID","options","allowedPlacements","dismissOnClick","_createDomElementWithArrowElement","addClass","notification","autoCloseTimeS","setTimeout","close","click","prototype","closeType","removeClass","remove","resolve","done","callback","notificationWidgetCount","_computePlacementWithArrowElement","arrowElement","x","y","placement","middlewareData","Object","assign","style","left","top","arrowX","arrowY","arrow","staticSide","right","bottom","split","[object Object]","_updatePositions","onElement","middleWare","FloatingUIDOM","offset","autoPlacement","shift","padding","push","element","update","computePosition","middleware","then","domTemplate","document","getElementById","widgetID","arrowID","textTemplate","String","floatingDom","append"],"mappings":"AAuBA,MAAMA,cAAgB,eAChBC,oBAAsB,eAE5B,SAASC,aAAaC,SAClBC,KAAKC,SAAcF,QACnBC,KAAKE,QAAW,IAAIC,EAAEC,SACtBJ,KAAKK,SAAWL,KAAKE,QAAQI,UAuBjC,SAASC,+BAA+BC,SAAUC,UAAWC,SAEzDA,QAAQC,kBAAoBD,QAAQC,mBAAqB,CAAC,MAAO,SAAU,OAAQ,SACnFD,QAAQE,eAAiBF,QAAQE,iBAAkB,EAC/CH,YACAA,UAAY,+BAEhB,MAAMV,QAAUc,kCAAkCL,SAAUC,UAAWC,SACvEX,QAAQe,SAAS,2BACjB,IAAIC,aAAe,IAAKjB,aAAaC,SAarC,OAXGW,QAAQM,gBACPC,WAAW,KACPF,aAAaG,MAAMtB,gBACK,IAAzBc,QAAQM,gBAGZN,QAAQE,gBACPb,QAAQoB,MAAM,KACVJ,aAAaG,MAAMrB,uBAGpBkB,aA1CXjB,aAAasB,UAAUF,MAAQ,SAAUG,WACrC,IAAIpB,SAAWD,KAAKC,SACpB,OAAIA,UAGJA,SAASqB,YAAY,2BAChBR,SAAS,0BACdG,WAAW,KAEPhB,SAASsB,SACTvB,KAAKC,SAAW,KAChBD,KAAKE,QAAQsB,QAAQH,YACtB,KACIrB,MAVIA,MAafF,aAAasB,UAAUK,KAAO,SAAUC,UACpC1B,KAAKK,SAASoB,KAAKC,WA4BvB,IAAIC,wBAA0B,EAE9B,SAASC,kCAAkC7B,QAAS8B,cAAcC,EAACA,EAACC,EAAEA,EAACC,UAAEA,UAASC,eAAEA,iBAKhF,GAJAC,OAAOC,OAAOpC,QAAQqC,MAAO,CACzBC,QAASP,MACTQ,OAAQP,QAETF,aAAa,CACZ,MAAOC,EAAGS,OAAQR,EAAGS,QAAUP,eAAeQ,MAExCC,WAAa,CACfJ,IAAK,SACLK,MAAO,OACPC,OAAQ,MACRP,KAAM,SACRL,UAAUa,MAAM,KAAK,IAEvBX,OAAOC,OAAON,aAAaO,MAAO,CAC9BC,KAAgB,MAAVE,UAAoBA,WAAa,GACvCD,IAAe,MAAVE,UAAoBA,WAAa,GACtCG,MAAO,GACPC,OAAQ,GACRE,CAACJ,YAAa,UAK1B,SAASK,iBAAiBhD,QAASiD,UAAWnB,aAAcnB,SACxD,IAAIuC,WAAa,CACbC,cAAcC,OAAO,GACrBD,cAAcE,cAAc,CAExBzC,kBAAmBD,QAAQC,oBAE/BuC,cAAcG,MAAM,CAACC,QAAS,KAE/BzB,cACCoB,WAAWM,KAAKL,cAAcT,MAAM,CAACe,QAAS3B,gBAElD9B,QAAQ0D,OAAS,WACbP,cAAcQ,gBAAgBV,UAAWjD,QAAS,CAC9CiC,UAAW,MACX2B,WAAYV,aACbW,KAAK,EAAE9B,EAAAA,EAAGC,EAAAA,EAAGC,UAAAA,UAAWC,eAAAA,mBACvBL,kCAAkC7B,QAAS8B,aACvC,CAACC,EAAAA,EAAGC,EAAAA,EAAGC,UAAAA,UAAWC,eAAAA,oBAG9BlC,QAAQ0D,SAGZ,SAAS5C,kCAAkCgD,YAAapD,UAAWC,SAC/DiB,0BACA,MAAMqB,UAAYc,SAASC,eAAetD,WAC1C,IAAIoB,aACAmC,SACAC,iCAAmCtC,0BACnCuC,aAAe,MACQ,iBAAhBL,aAA4BA,uBAAuBM,UAC1DD,aAAeL,aAEnB,IAAIO,YAAcjE,wCANuBwB,2GAOfuC,cAAc,YAUxC,OATIA,cAAgBL,aAChBO,YAAYC,OAAOlE,EAAE0D,cAEtBb,YACCnB,aAAe1B,cAAc8D,iDAC7BG,YAAYC,OAAOxC,eAEvB1B,EAAE,QAAQkE,OAAOD,aACjBrB,iBAAiBqB,YAAY,GAAIpB,UAAWnB,aAAa,GAAInB,SACtD0D","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/*global FloatingUIDOM*/\n// this is a custom impl of utils/notification ui for iframes\n\nconst CLOSE_TIMEOUT = 'closeTimeout';\nconst CLOSE_CLICK_DISMISS = 'clickDismiss';\n\nfunction Notification(tooltip) {\n    this.$tooltip    = tooltip;\n    this._result  = new $.Deferred();\n    this._promise = this._result.promise();\n}\n\nNotification.prototype.close = function (closeType) {\n    let $tooltip = this.$tooltip;\n    if(!$tooltip){\n        return this; // if already closed\n    }\n    $tooltip.removeClass('notification-ui-visible')\n        .addClass('notification-ui-hidden');\n    setTimeout(()=>{\n        // wait for the animation to complete before removal\n        $tooltip.remove();\n        this.$tooltip = null;\n        this._result.resolve(closeType);\n    }, 1000);\n    return this;\n};\n\nNotification.prototype.done = function (callback) {\n    this._promise.done(callback);\n};\n\nfunction createNotificationFromTemplate(template, elementID, options) {\n    // https://floating-ui.com/docs/tutorial\n    options.allowedPlacements = options.allowedPlacements || ['top', 'bottom', 'left', 'right'];\n    options.dismissOnClick = options.dismissOnClick || true;\n    if(!elementID){\n        elementID = 'notificationUIDefaultAnchor';\n    }\n    const tooltip = _createDomElementWithArrowElement(template, elementID, options);\n    tooltip.addClass('notification-ui-visible');\n    let notification = (new Notification(tooltip));\n\n    if(options.autoCloseTimeS){\n        setTimeout(()=>{\n            notification.close(CLOSE_TIMEOUT);\n        }, options.autoCloseTimeS * 1000);\n    }\n\n    if(options.dismissOnClick){\n        tooltip.click(()=>{\n            notification.close(CLOSE_CLICK_DISMISS);\n        });\n    }\n    return notification;\n}\n\nlet notificationWidgetCount = 0;\n\nfunction _computePlacementWithArrowElement(tooltip, arrowElement, {x, y, placement, middlewareData}) {\n    Object.assign(tooltip.style, {\n        left: `${x}px`,\n        top: `${y}px`\n    });\n    if(arrowElement){\n        const {x: arrowX, y: arrowY} = middlewareData.arrow;\n\n        const staticSide = {\n            top: 'bottom',\n            right: 'left',\n            bottom: 'top',\n            left: 'right'\n        }[placement.split('-')[0]];\n\n        Object.assign(arrowElement.style, {\n            left: arrowX != null ? `${arrowX}px` : '',\n            top: arrowY != null ? `${arrowY}px` : '',\n            right: '',\n            bottom: '',\n            [staticSide]: '-4px'\n        });\n    }\n}\n\nfunction _updatePositions(tooltip, onElement, arrowElement, options) {\n    let middleWare=  [\n        FloatingUIDOM.offset(6),\n        FloatingUIDOM.autoPlacement({\n            // 'right' and 'left' won't be chosen\n            allowedPlacements: options.allowedPlacements\n        }),\n        FloatingUIDOM.shift({padding: 5})\n    ];\n    if(arrowElement){\n        middleWare.push(FloatingUIDOM.arrow({element: arrowElement}));\n    }\n    tooltip.update = function () {\n        FloatingUIDOM.computePosition(onElement, tooltip, {\n            placement: 'top',\n            middleware: middleWare\n        }).then(({x, y, placement, middlewareData}) => {\n            _computePlacementWithArrowElement(tooltip, arrowElement,\n                {x, y, placement, middlewareData});\n        });\n    };\n    tooltip.update();\n}\n\nfunction _createDomElementWithArrowElement(domTemplate, elementID, options) {\n    notificationWidgetCount++;\n    const onElement = document.getElementById(elementID);\n    let arrowElement;\n    let widgetID = `notification-ui-widget-${notificationWidgetCount}`;\n    let arrowID = `notification-ui-arrow-${notificationWidgetCount}`;\n    let textTemplate = null;\n    if (typeof domTemplate === 'string' || domTemplate instanceof String){\n        textTemplate = domTemplate;\n    }\n    let floatingDom = $(`<div id=\"${widgetID}\" class=\"notification-ui-tooltip\" role=\"tooltip\">\n                            ${textTemplate||''}</div>`);\n    if(!textTemplate && domTemplate){\n        floatingDom.append($(domTemplate));\n    }\n    if(onElement){\n        arrowElement = $(`<div id=\"${arrowID}\" class=\"notification-ui-arrow\"></div>`);\n        floatingDom.append(arrowElement);\n    }\n    $(\"body\").append(floatingDom);\n    _updatePositions(floatingDom[0], onElement, arrowElement[0], options);\n    return floatingDom;\n}\n\n"],"file":"notification-ui.js"}