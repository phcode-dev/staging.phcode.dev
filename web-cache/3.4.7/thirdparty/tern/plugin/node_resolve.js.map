{"version":3,"sources":["thirdparty/tern/plugin/node_resolve.js"],"names":["mod","exports","module","require","define","amd","tern","infer","_","resolve","name","parentFile","resolved","resolveToFile","cx","parent","normalizeFilename","findDeclaredDeps","module_","path","fs","findPackageFile","dir","JSON","parse","readFileSync","e","shorter","dirname","projectDir","fullParent","parentDir","test","parentModule","id","paths","_nodeModulePaths","concat","globalPaths","_resolveFilename","knownModules","packageFile","add","obj","dependencies","devDependencies","peerDependencies","resolvePath","base","slash","lastIndexOf","m","slice","exec","index","length","replace","registerPlugin","server","loadPlugin","modules","resolvers","push"],"mappings":"CAAA,SAAUA,KACc,iBAAXC,SAAwC,iBAAVC,OAChCF,IAAIG,QAAQ,gBAAiBA,QAAQ,eAAgBA,QAAQ,cAAeA,SAChE,mBAAVC,QAAwBA,OAAOC,IACjCD,OAAO,CAAC,eAAgB,cAAe,cAAeJ,KAC/DA,IAAIM,KAAMA,MALZ,CAMG,SAASC,MAAOD,KAAME,EAAGL,SAC1B,aAEA,SAASM,QAAQC,KAAMC,YACrB,IAAIC,SAAWC,cAAcH,KAAMC,YACnC,OAAOC,UAAYL,MAAMO,KAAKC,OAAOC,kBAAkBJ,UAGzD,IAAIK,iBAAmB,aAEnBJ,cACAV,QAAS,WACX,IAAIe,QAAUf,QAAQ,UAAWgB,KAAOhB,QAAQ,QAASiB,GAAKjB,QAAQ,MAoBtE,SAASkB,gBAAgBC,KACvB,OAAS,CACP,IACE,OAAOC,KAAKC,MAAMJ,GAAGK,aAAaN,KAAKV,QAAQa,IAAK,kBACpD,MAAMI,IACR,IAAIC,QAAUR,KAAKS,QAAQN,KAC3B,GAAIK,SAAWL,IAAK,OAAO,KAC3BA,IAAMK,SAzBVd,cAAgB,SAASH,KAAMC,YAC7B,IAAIkB,WAAatB,MAAMO,KAAKC,OAAOc,WAC/BC,WAAaX,KAAKV,QAAQoB,WAAYlB,YACtCoB,UAAYZ,KAAKS,QAAQE,YACzB,WAAWE,KAAKtB,QAClBA,KAAOS,KAAKV,QAAQoB,WAAYE,UAAWrB,OAE7C,IAAIuB,aAAe,CACjBC,GAAIJ,WACJK,MAAOjB,QAAQkB,iBAAiBL,WAAWM,OAAOnB,QAAQoB,cAE5D,IACE,OAAOpB,QAAQqB,iBAAiB7B,KAAMuB,cACtC,MAAMP,GACN,OAAO,OAeXT,iBAAmB,SAASE,KAAMqB,cAChC,IAAIC,YAAcpB,gBAAgBF,MAClC,IAAKsB,YAAa,OAAO,KAEzB,SAASC,IAAIC,KACX,IAAK,IAAIjC,QAAQiC,IAAWjC,QAAQ8B,eAAeA,aAAa9B,MAAQ,MAE1EgC,IAAID,YAAYG,cAChBF,IAAID,YAAYI,iBAChBH,IAAID,YAAYK,mBAzCP,GA4CF,WACT,SAASC,YAAYC,KAAM7B,MACzB,GAAe,KAAXA,KAAK,GAAW,OAAOA,KAC3B,IAAI8B,MAAQD,KAAKE,YAAY,KAAMC,EAEnC,IADIF,OAAS,IAAG9B,KAAO6B,KAAKI,MAAM,EAAGH,MAAQ,GAAK9B,MAC3CgC,EAAI,8BAA8BE,KAAKlC,OAC5CA,KAAOA,KAAKiC,MAAM,EAAGD,EAAEG,OAASnC,KAAKiC,MAAMD,EAAEG,MAAQH,EAAE,GAAGI,QAC5D,OAAOpC,KAAKqC,QAAQ,iBAAkB,MAGxC3C,cAAgB,SAASH,KAAMC,YAC7B,MAAO,WAAWqB,KAAKtB,MAAQqC,YAAYpC,WAAYD,MAAQA,MAXxD,GAeXJ,KAAKmD,eAAe,eAAgB,SAASC,QAC3CA,OAAOC,WAAW,YAClBD,OAAO1D,IAAI4D,QAAQC,UAAUC,KAAKrD,SAClCQ,iBAAiByC,OAAO7B,WAAY6B,OAAO1D,IAAI4D,QAAQpB","sourcesContent":["(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    return mod(require(\"../lib/infer\"), require(\"../lib/tern\"), require(\"./commonjs\"), require);\n  if (typeof define == \"function\" && define.amd) // AMD\n    return define([\"../lib/infer\", \"../lib/tern\", \"./commonjs\"], mod);\n  mod(tern, tern);\n})(function(infer, tern, _, require) {\n  \"use strict\";\n\n  function resolve(name, parentFile) {\n    var resolved = resolveToFile(name, parentFile);\n    return resolved && infer.cx().parent.normalizeFilename(resolved);\n  }\n\n  var findDeclaredDeps = function () {};\n\n  var resolveToFile;\n  if (require) (function() {\n    var module_ = require(\"module\"), path = require(\"path\"), fs = require(\"fs\");\n\n    resolveToFile = function(name, parentFile) {\n      var projectDir = infer.cx().parent.projectDir;\n      var fullParent = path.resolve(projectDir, parentFile);\n      var parentDir = path.dirname(fullParent);\n      if (/^\\.\\.?\\//.test(name))\n        name = path.resolve(projectDir, parentDir, name);\n\n      var parentModule = {\n        id: fullParent,\n        paths: module_._nodeModulePaths(parentDir).concat(module_.globalPaths)\n      };\n      try {\n        return module_._resolveFilename(name, parentModule);\n      } catch(e) {\n        return null;\n      }\n    };\n\n    function findPackageFile(dir) {\n      for (;;) {\n        try {\n          return JSON.parse(fs.readFileSync(path.resolve(dir, \"package.json\")));\n        } catch(e) {}\n        var shorter = path.dirname(dir);\n        if (shorter == dir) return null;\n        dir = shorter;\n      }\n    }\n\n    findDeclaredDeps = function(path, knownModules) {\n      var packageFile = findPackageFile(path);\n      if (!packageFile) return null;\n\n      function add(obj) {\n        for (var name in obj) if (!(name in knownModules)) knownModules[name] = null;\n      }\n      add(packageFile.dependencies);\n      add(packageFile.devDependencies);\n      add(packageFile.peerDependencies);\n    };\n\n  })(); else (function() {\n    function resolvePath(base, path) {\n      if (path[0] == \"/\") return path;\n      var slash = base.lastIndexOf(\"/\"), m;\n      if (slash >= 0) path = base.slice(0, slash + 1) + path;\n      while (m = /[^\\/]*[^\\/\\.][^\\/]*\\/\\.\\.\\//.exec(path))\n        path = path.slice(0, m.index) + path.slice(m.index + m[0].length);\n      return path.replace(/(^|[^\\.])\\.\\//g, \"$1\");\n    }\n\n    resolveToFile = function(name, parentFile) {\n      return /^\\.\\.?\\//.test(name) ? resolvePath(parentFile, name) : name;\n    };\n  })();\n\n  tern.registerPlugin(\"node_resolve\", function(server) {\n    server.loadPlugin(\"commonjs\");\n    server.mod.modules.resolvers.push(resolve);\n    findDeclaredDeps(server.projectDir, server.mod.modules.knownModules);\n  });\n});\n"],"file":"node_resolve.js"}