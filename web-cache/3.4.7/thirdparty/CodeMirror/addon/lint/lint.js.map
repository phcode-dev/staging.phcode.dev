{"version":3,"sources":["thirdparty/CodeMirror/addon/lint/lint.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","GUTTER_ID","LINT_LINE_ID","showTooltip","cm","e","content","tt","document","createElement","position","parentNode","off","style","top","Math","max","clientY","offsetHeight","left","clientX","className","options","theme","appendChild","cloneNode","state","lint","selfContain","getWrapperElement","body","on","opacity","rm","elt","removeChild","hideTooltip","setTimeout","showTooltipFor","node","tooltip","hide","poll","setInterval","n","nodeType","host","clearInterval","LintState","conf","hasGutter","prop","this","marked","Function","getAnnotations","linterOptions","defaults","hasOwnProperty","timeout","onMouseOver","waitingFor","highlightLines","tooltips","delay","lintOnChange","async","formatAnnotation","onUpdateLinting","clearMarks","clearGutter","clearErrorLines","i","length","clear","eachLine","line","has","wrapClass","exec","removeLineClass","makeMarker","labels","severity","multiple","marker","inner","getMaxSeverity","a","b","groupByLine","annotations","lines","ann","from","push","annotationTooltip","tip","messageHTML","innerHTML","createTextNode","message","lintAsync","id","abort","getValue","arg2","operation","updateLinting","startLinting","getHelper","Pos","then","issues","annotationsNotSorted","anns","filter","item","indexOf","maxSeverity","tipLabel","createDocumentFragment","to","markText","__annotation","setGutterMarker","addLineClass","onChange","clearTimeout","popupTooltips","target","srcElement","test","box","getBoundingClientRect","x","right","y","bottom","spans","findMarksAt","coordsChar","defineOption","val","old","Init","gutters","getOption","hasLintGutter","defineExtension"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n  var GUTTER_ID = \"CodeMirror-lint-markers\";\n  var LINT_LINE_ID = \"CodeMirror-lint-line-\";\n\n  function showTooltip(cm, e, content) {\n    var tt = document.createElement(\"div\");\n    tt.className = \"CodeMirror-lint-tooltip cm-s-\" + cm.options.theme;\n    tt.appendChild(content.cloneNode(true));\n    if (cm.state.lint.options.selfContain)\n      cm.getWrapperElement().appendChild(tt);\n    else\n      document.body.appendChild(tt);\n\n    function position(e) {\n      if (!tt.parentNode) return CodeMirror.off(document, \"mousemove\", position);\n      tt.style.top = Math.max(0, e.clientY - tt.offsetHeight - 5) + \"px\";\n      tt.style.left = (e.clientX + 5) + \"px\";\n    }\n    CodeMirror.on(document, \"mousemove\", position);\n    position(e);\n    if (tt.style.opacity != null) tt.style.opacity = 1;\n    return tt;\n  }\n  function rm(elt) {\n    if (elt.parentNode) elt.parentNode.removeChild(elt);\n  }\n  function hideTooltip(tt) {\n    if (!tt.parentNode) return;\n    if (tt.style.opacity == null) rm(tt);\n    tt.style.opacity = 0;\n    setTimeout(function() { rm(tt); }, 600);\n  }\n\n  function showTooltipFor(cm, e, content, node) {\n    var tooltip = showTooltip(cm, e, content);\n    function hide() {\n      CodeMirror.off(node, \"mouseout\", hide);\n      if (tooltip) { hideTooltip(tooltip); tooltip = null; }\n    }\n    var poll = setInterval(function() {\n      if (tooltip) for (var n = node;; n = n.parentNode) {\n        if (n && n.nodeType == 11) n = n.host;\n        if (n == document.body) return;\n        if (!n) { hide(); break; }\n      }\n      if (!tooltip) return clearInterval(poll);\n    }, 400);\n    CodeMirror.on(node, \"mouseout\", hide);\n  }\n\n  function LintState(cm, conf, hasGutter) {\n    this.marked = [];\n    if (conf instanceof Function) conf = {getAnnotations: conf};\n    if (!conf || conf === true) conf = {};\n    this.options = {};\n    this.linterOptions = conf.options || {};\n    for (var prop in defaults) this.options[prop] = defaults[prop];\n    for (var prop in conf) {\n      if (defaults.hasOwnProperty(prop)) {\n        if (conf[prop] != null) this.options[prop] = conf[prop];\n      } else if (!conf.options) {\n        this.linterOptions[prop] = conf[prop];\n      }\n    }\n    this.timeout = null;\n    this.hasGutter = hasGutter;\n    this.onMouseOver = function(e) { onMouseOver(cm, e); };\n    this.waitingFor = 0\n  }\n\n  var defaults = {\n    highlightLines: false,\n    tooltips: true,\n    delay: 500,\n    lintOnChange: true,\n    getAnnotations: null,\n    async: false,\n    selfContain: null,\n    formatAnnotation: null,\n    onUpdateLinting: null\n  }\n\n  function clearMarks(cm) {\n    var state = cm.state.lint;\n    if (state.hasGutter) cm.clearGutter(GUTTER_ID);\n    if (state.options.highlightLines) clearErrorLines(cm);\n    for (var i = 0; i < state.marked.length; ++i)\n      state.marked[i].clear();\n    state.marked.length = 0;\n  }\n\n  function clearErrorLines(cm) {\n    cm.eachLine(function(line) {\n      var has = line.wrapClass && /\\bCodeMirror-lint-line-\\w+\\b/.exec(line.wrapClass);\n      if (has) cm.removeLineClass(line, \"wrap\", has[0]);\n    })\n  }\n\n  function makeMarker(cm, labels, severity, multiple, tooltips) {\n    var marker = document.createElement(\"div\"), inner = marker;\n    marker.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-\" + severity;\n    if (multiple) {\n      inner = marker.appendChild(document.createElement(\"div\"));\n      inner.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-multiple\";\n    }\n\n    if (tooltips != false) CodeMirror.on(inner, \"mouseover\", function(e) {\n      showTooltipFor(cm, e, labels, inner);\n    });\n\n    return marker;\n  }\n\n  function getMaxSeverity(a, b) {\n    if (a == \"error\") return a;\n    else return b;\n  }\n\n  function groupByLine(annotations) {\n    var lines = [];\n    for (var i = 0; i < annotations.length; ++i) {\n      var ann = annotations[i], line = ann.from.line;\n      (lines[line] || (lines[line] = [])).push(ann);\n    }\n    return lines;\n  }\n\n  function annotationTooltip(ann) {\n    var severity = ann.severity;\n    if (!severity) severity = \"error\";\n    var tip = document.createElement(\"div\");\n    tip.className = \"CodeMirror-lint-message CodeMirror-lint-message-\" + severity;\n    if (typeof ann.messageHTML != 'undefined') {\n      tip.innerHTML = ann.messageHTML;\n    } else {\n      tip.appendChild(document.createTextNode(ann.message));\n    }\n    return tip;\n  }\n\n  function lintAsync(cm, getAnnotations) {\n    var state = cm.state.lint\n    var id = ++state.waitingFor\n    function abort() {\n      id = -1\n      cm.off(\"change\", abort)\n    }\n    cm.on(\"change\", abort)\n    getAnnotations(cm.getValue(), function(annotations, arg2) {\n      cm.off(\"change\", abort)\n      if (state.waitingFor != id) return\n      if (arg2 && annotations instanceof CodeMirror) annotations = arg2\n      cm.operation(function() {updateLinting(cm, annotations)})\n    }, state.linterOptions, cm);\n  }\n\n  function startLinting(cm) {\n    var state = cm.state.lint;\n    if (!state) return;\n    var options = state.options;\n    /*\n     * Passing rules in `options` property prevents JSHint (and other linters) from complaining\n     * about unrecognized rules like `onUpdateLinting`, `delay`, `lintOnChange`, etc.\n     */\n    var getAnnotations = options.getAnnotations || cm.getHelper(CodeMirror.Pos(0, 0), \"lint\");\n    if (!getAnnotations) return;\n    if (options.async || getAnnotations.async) {\n      lintAsync(cm, getAnnotations)\n    } else {\n      var annotations = getAnnotations(cm.getValue(), state.linterOptions, cm);\n      if (!annotations) return;\n      if (annotations.then) annotations.then(function(issues) {\n        cm.operation(function() {updateLinting(cm, issues)})\n      });\n      else cm.operation(function() {updateLinting(cm, annotations)})\n    }\n  }\n\n  function updateLinting(cm, annotationsNotSorted) {\n    var state = cm.state.lint;\n    if (!state) return;\n    var options = state.options;\n    clearMarks(cm);\n\n    var annotations = groupByLine(annotationsNotSorted);\n\n    for (var line = 0; line < annotations.length; ++line) {\n      var anns = annotations[line];\n      if (!anns) continue;\n\n      // filter out duplicate messages\n      var message = [];\n      anns = anns.filter(function(item) { return message.indexOf(item.message) > -1 ? false : message.push(item.message) });\n\n      var maxSeverity = null;\n      var tipLabel = state.hasGutter && document.createDocumentFragment();\n\n      for (var i = 0; i < anns.length; ++i) {\n        var ann = anns[i];\n        var severity = ann.severity;\n        if (!severity) severity = \"error\";\n        maxSeverity = getMaxSeverity(maxSeverity, severity);\n\n        if (options.formatAnnotation) ann = options.formatAnnotation(ann);\n        if (state.hasGutter) tipLabel.appendChild(annotationTooltip(ann));\n\n        if (ann.to) state.marked.push(cm.markText(ann.from, ann.to, {\n          className: \"CodeMirror-lint-mark CodeMirror-lint-mark-\" + severity,\n          __annotation: ann\n        }));\n      }\n      // use original annotations[line] to show multiple messages\n      if (state.hasGutter)\n        cm.setGutterMarker(line, GUTTER_ID, makeMarker(cm, tipLabel, maxSeverity, annotations[line].length > 1,\n                                                       options.tooltips));\n\n      if (options.highlightLines)\n        cm.addLineClass(line, \"wrap\", LINT_LINE_ID + maxSeverity);\n    }\n    if (options.onUpdateLinting) options.onUpdateLinting(annotationsNotSorted, annotations, cm);\n  }\n\n  function onChange(cm) {\n    var state = cm.state.lint;\n    if (!state) return;\n    clearTimeout(state.timeout);\n    state.timeout = setTimeout(function(){startLinting(cm);}, state.options.delay);\n  }\n\n  function popupTooltips(cm, annotations, e) {\n    var target = e.target || e.srcElement;\n    var tooltip = document.createDocumentFragment();\n    for (var i = 0; i < annotations.length; i++) {\n      var ann = annotations[i];\n      tooltip.appendChild(annotationTooltip(ann));\n    }\n    showTooltipFor(cm, e, tooltip, target);\n  }\n\n  function onMouseOver(cm, e) {\n    var target = e.target || e.srcElement;\n    if (!/\\bCodeMirror-lint-mark-/.test(target.className)) return;\n    var box = target.getBoundingClientRect(), x = (box.left + box.right) / 2, y = (box.top + box.bottom) / 2;\n    var spans = cm.findMarksAt(cm.coordsChar({left: x, top: y}, \"client\"));\n\n    var annotations = [];\n    for (var i = 0; i < spans.length; ++i) {\n      var ann = spans[i].__annotation;\n      if (ann) annotations.push(ann);\n    }\n    if (annotations.length) popupTooltips(cm, annotations, e);\n  }\n\n  CodeMirror.defineOption(\"lint\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      clearMarks(cm);\n      if (cm.state.lint.options.lintOnChange !== false)\n        cm.off(\"change\", onChange);\n      CodeMirror.off(cm.getWrapperElement(), \"mouseover\", cm.state.lint.onMouseOver);\n      clearTimeout(cm.state.lint.timeout);\n      delete cm.state.lint;\n    }\n\n    if (val) {\n      var gutters = cm.getOption(\"gutters\"), hasLintGutter = false;\n      for (var i = 0; i < gutters.length; ++i) if (gutters[i] == GUTTER_ID) hasLintGutter = true;\n      var state = cm.state.lint = new LintState(cm, val, hasLintGutter);\n      if (state.options.lintOnChange)\n        cm.on(\"change\", onChange);\n      if (state.options.tooltips != false && state.options.tooltips != \"gutter\")\n        CodeMirror.on(cm.getWrapperElement(), \"mouseover\", state.onMouseOver);\n\n      startLinting(cm);\n    }\n  });\n\n  CodeMirror.defineExtension(\"performLint\", function() {\n    startLinting(this);\n  });\n});\n"],"file":"lint.js"}