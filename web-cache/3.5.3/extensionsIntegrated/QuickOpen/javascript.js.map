{"version":3,"sources":["extensionsIntegrated/QuickOpen/javascript.js"],"names":["define","require","exports","module","QuickOpen","QuickOpenHelper","JSUtils","DocumentManager","StringMatch","FileLocation","fullPath","line","chFrom","chTo","functionName","this","createFunctionList","doc","getCurrentDocument","functionList","docText","getText","functions","findAllMatchingFunctionsInText","forEach","funcEntry","push","nameLineStart","columnStart","columnEnd","label","name","search","query","matcher","slice","indexOf","length","filteredList","$","map","fileLocation","searchResult","match","basicMatchSort","addQuickOpenPlugin","languageIds","itemFocus","itemSelect"],"mappings":"AAqBAA,OAAO,SAAUC,QAASC,QAASC,QAG/B,MAAMC,UAAsBH,QAAQ,oBAChCI,gBAAsBJ,QAAQ,0BAC9BK,QAAsBL,QAAQ,oBAC9BM,gBAAsBN,QAAQ,4BAC9BO,YAAsBP,QAAQ,qBAYlC,SAASQ,aAAaC,SAAUC,KAAMC,OAAQC,KAAMC,cAChDC,KAAKL,SAAWA,SAChBK,KAAKJ,KAAOA,KACZI,KAAKH,OAASA,OACdG,KAAKF,KAAOA,KACZE,KAAKD,aAAeA,aAQxB,SAASE,qBACL,IAAIC,IAAMV,gBAAgBW,qBAC1B,GAAKD,IAAL,CAIA,IAAIE,aAAe,GACfC,QAAUH,IAAII,UACdC,UAIJ,OAJgBhB,QAAQiB,+BAA+BH,QAAS,KACtDI,QAAQ,SAAUC,WACxBN,aAAaO,KAAK,IAAIjB,aAAa,KAAMgB,UAAUE,cAAeF,UAAUG,YAAaH,UAAUI,UAAWJ,UAAUK,OAASL,UAAUM,SAExIZ,cAUX,SAASa,OAAOC,MAAOC,SACnB,IAAIf,aAAee,QAAQf,aACtBA,eACDA,aAAeH,qBACfkB,QAAQf,aAAeA,cAE3Bc,MAAQA,MAAME,MAAMF,MAAMG,QAAQ,KAAO,EAAGH,MAAMI,QAGlD,IAAIC,aAAeC,EAAEC,IAAIrB,aAAc,SAAUsB,cAC7C,IAAIC,aAAeR,QAAQS,MAAMF,aAAa3B,aAAcmB,OAI5D,OAHIS,eACAA,aAAaD,aAAeA,cAEzBC,eAMX,OAFAlC,YAAYoC,eAAeN,cAEpBA,aAGXlC,UAAUyC,mBACN,CACId,KAAM,uBACNe,YAAa,CAAC,cACdd,OAAQA,OACRW,MAAOtC,gBAAgBsC,MACvBI,UAAW1C,gBAAgB0C,UAC3BC,WAAY3C,gBAAgB2C","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2012 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\ndefine(function (require, exports, module) {\n\n\n    const QuickOpen           = require(\"search/QuickOpen\"),\n        QuickOpenHelper     = require(\"search/QuickOpenHelper\"),\n        JSUtils             = require(\"language/JSUtils\"),\n        DocumentManager     = require(\"document/DocumentManager\"),\n        StringMatch         = require(\"utils/StringMatch\");\n\n\n   /**\n    * FileLocation class\n    * @constructor\n    * @param {string} fullPath\n    * @param {number} line\n    * @param {number} chFrom column start position\n    * @param {number} chTo column end position\n    * @param {string} functionName\n    */\n    function FileLocation(fullPath, line, chFrom, chTo, functionName) {\n        this.fullPath = fullPath;\n        this.line = line;\n        this.chFrom = chFrom;\n        this.chTo = chTo;\n        this.functionName = functionName;\n    }\n\n    /**\n     * Contains a list of information about functions for a single document.\n     *\n     * @return {?Array.<FileLocation>}\n     */\n    function createFunctionList() {\n        var doc = DocumentManager.getCurrentDocument();\n        if (!doc) {\n            return;\n        }\n\n        var functionList = [];\n        var docText = doc.getText();\n        var functions = JSUtils.findAllMatchingFunctionsInText(docText, \"*\");\n        functions.forEach(function (funcEntry) {\n            functionList.push(new FileLocation(null, funcEntry.nameLineStart, funcEntry.columnStart, funcEntry.columnEnd, funcEntry.label || funcEntry.name));\n        });\n        return functionList;\n    }\n\n\n\n    /**\n     * @param {string} query what the user is searching for\n     * @param {StringMatch.StringMatcher} matcher object that caches search-in-progress data\n     * @return {Array.<SearchResult>} sorted and filtered results that match the query\n     */\n    function search(query, matcher) {\n        var functionList = matcher.functionList;\n        if (!functionList) {\n            functionList = createFunctionList();\n            matcher.functionList = functionList;\n        }\n        query = query.slice(query.indexOf(\"@\") + 1, query.length);\n\n        // Filter and rank how good each match is\n        var filteredList = $.map(functionList, function (fileLocation) {\n            var searchResult = matcher.match(fileLocation.functionName, query);\n            if (searchResult) {\n                searchResult.fileLocation = fileLocation;\n            }\n            return searchResult;\n        });\n\n        // Sort based on ranking & basic alphabetical order\n        StringMatch.basicMatchSort(filteredList);\n\n        return filteredList;\n    }\n\n    QuickOpen.addQuickOpenPlugin(\n        {\n            name: \"JavaScript functions\",\n            languageIds: [\"javascript\"],\n            search: search,\n            match: QuickOpenHelper.match,\n            itemFocus: QuickOpenHelper.itemFocus,\n            itemSelect: QuickOpenHelper.itemSelect\n        }\n    );\n\n});\n"],"file":"javascript.js"}