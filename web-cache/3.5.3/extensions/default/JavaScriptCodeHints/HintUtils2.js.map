{"version":3,"sources":["extensions/default/JavaScriptCodeHints/HintUtils2.js"],"names":["define","require","exports","module","formatParameterHint","params","appendSeparators","appendParameter","typesOnly","result","pendingOptional","forEach","value","i","param","type","separators","isOptional","name"],"mappings":"AA6BAA,OAAO,SAAUC,QAASC,QAASC,QAkB/B,SAASC,oBAAoBC,OAAQC,iBAAkBC,gBAAiBC,WACpE,IAAIC,OAAS,GACTC,iBAAkB,EAmDtB,OAjDAL,OAAOM,QAAQ,SAAUC,MAAOC,GAC5B,IAAIC,MAAQF,MAAMG,KACdC,WAAa,GAEbJ,MAAMK,aAIFP,kBACAM,YAAc,KAGlBN,iBAAkB,GAGlBG,EAAI,IACJG,YAAc,MAGdJ,MAAMK,aACND,YAAc,KAGdV,kBACAA,iBAAiBU,YAGrBP,QAAUO,WAELR,YACDM,OAAS,IAAMF,MAAMM,MAGrBX,iBACAA,gBAAgBO,MAAOD,GAG3BJ,QAAUK,QAIVJ,kBACIJ,kBACAA,iBAAiB,KAGrBG,QAAU,KAGPA,OAGXP,QAAQE,oBAAsBA","sourcesContent":["/*\n * Copyright (c) 2013 - present Adobe Systems Incorporated. All rights reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n *\n */\n\n/**\n * HintUtils2 was created as a place to put utilities that do not require third party dependencies so\n * they can be used by tern-worker.js and other JS files.\n * This is done because of the require config in tern-worker.js needed to load tern libraries. Libraries\n * that include, say \"acorn\", will fail to load.\n */\ndefine(function (require, exports, module) {\n\n    /**\n     * Format the given parameter array. Handles separators between\n     * parameters, syntax for optional parameters, and the order of the\n     * parameter type and parameter name.\n     *\n     * @param {!Array.<{name: string, type: string, isOptional: boolean}>} params -\n     * array of parameter descriptors\n     * @param {function(string)=} appendSeparators - callback function to append separators.\n     * The separator is passed to the callback.\n     * @param {function(string, number)=} appendParameter - callback function to append parameter.\n     * The formatted parameter type and name is passed to the callback along with the\n     * current index of the parameter.\n     * @param {boolean=} typesOnly - only show parameter types. The\n     * default behavior is to include both parameter names and types.\n     * @return {string} - formatted parameter hint\n     */\n    function formatParameterHint(params, appendSeparators, appendParameter, typesOnly) {\n        var result = \"\",\n            pendingOptional = false;\n\n        params.forEach(function (value, i) {\n            var param = value.type,\n                separators = \"\";\n\n            if (value.isOptional) {\n                // if an optional param is following by an optional parameter, then\n                // terminate the bracket. Otherwise enclose a required parameter\n                // in the same bracket.\n                if (pendingOptional) {\n                    separators += \"]\";\n                }\n\n                pendingOptional = true;\n            }\n\n            if (i > 0) {\n                separators += \", \";\n            }\n\n            if (value.isOptional) {\n                separators += \"[\";\n            }\n\n            if (appendSeparators) {\n                appendSeparators(separators);\n            }\n\n            result += separators;\n\n            if (!typesOnly) {\n                param += \" \" + value.name;\n            }\n\n            if (appendParameter) {\n                appendParameter(param, i);\n            }\n\n            result += param;\n\n        });\n\n        if (pendingOptional) {\n            if (appendSeparators) {\n                appendSeparators(\"]\");\n            }\n\n            result += \"]\";\n        }\n\n        return result;\n    }\n\n    exports.formatParameterHint = formatParameterHint;\n});\n"],"file":"HintUtils2.js"}