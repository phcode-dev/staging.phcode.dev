{"version":3,"sources":["extensionsIntegrated/Phoenix-live-preview/utils.js"],"names":["define","require","exports","module","LIVE_PREVIEW_IFRAME_ID","EditorManager","getExtension","filePath","pathSplit","split","length","isPreviewableFile","extension","isSVG","isMarkdownFile","isHTMLFile","includes","toLowerCase","isImage","focusActiveEditorIfFocusInLivePreview","editor","getActiveEditor","document","activeElement","getElementById","focus"],"mappings":"AAqCAA,OAAO,SAAUC,QAASC,QAASC,QAC/B,MAAMC,uBAAyB,2BACzBC,cAAqBJ,QAAQ,wBACnC,SAASK,aAAaC,UAElB,IAAIC,WADJD,SAAWA,UAAY,IACEE,MAAM,KAC/B,OAAOD,WAAaA,UAAUE,OAAO,EAAIF,UAAUA,UAAUE,OAAO,GAAK,GAG7E,SAASC,kBAAkBJ,UACvB,IAAIK,UAAYN,aAAaC,UAG7B,OAAOM,MAAMN,WAAaO,eAAeP,WAAaQ,WAAWR,WAC7D,CAAC,OAAOS,SAASJ,UAAUK,eAGnC,SAASJ,MAAMN,UACX,IAAIK,UACJ,MAAqB,QADLN,aAAaC,UAIjC,SAASW,QAAQX,UACb,IAAIK,UAAYN,aAAaC,UAC7B,MAAO,CAAC,MAAO,OAAQ,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,QAC7DS,SAASJ,UAAUK,eAG5B,SAASH,eAAeP,UACpB,IAAIK,UAAYN,aAAaC,UAC7B,MAAO,CAAC,KAAM,YAAYS,SAASJ,UAAUK,eAGjD,SAASF,WAAWR,UAChB,IAAIK,UAAYN,aAAaC,UAC7B,MAAO,CAAC,OAAQ,MAAO,SAASS,SAASJ,UAAUK,eAGvD,SAASE,wCACL,MAAMC,OAAUf,cAAcgB,kBAC1BD,QAGAE,SAASC,gBAAkBD,SAASE,eAAepB,yBACnDgB,OAAOK,QAIfvB,QAAQI,aAAeA,aACvBJ,QAAQS,kBAAoBA,kBAC5BT,QAAQgB,QAAUA,QAClBhB,QAAQa,WAAaA,WACrBb,QAAQY,eAAiBA,eACzBZ,QAAQiB,sCAAwCA","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\ndefine(function (require, exports, module) {\n    const LIVE_PREVIEW_IFRAME_ID = \"panel-live-preview-frame\";\n    const EditorManager      = require(\"editor/EditorManager\");\n    function getExtension(filePath) {\n        filePath = filePath || '';\n        let pathSplit = filePath.split('.');\n        return pathSplit && pathSplit.length>1 ? pathSplit[pathSplit.length-1] : '';\n    }\n\n    function isPreviewableFile(filePath) {\n        let extension = getExtension(filePath);\n        // only svg images should appear in the live preview as it needs text editor.\n        // All other image types should appear in the image previewer\n        return isSVG(filePath) || isMarkdownFile(filePath) || isHTMLFile(filePath) ||\n            ['pdf'].includes(extension.toLowerCase());\n    }\n\n    function isSVG(filePath) {\n        let extension = getExtension(filePath);\n        return extension === \"svg\";\n    }\n\n    function isImage(filePath) {\n        let extension = getExtension(filePath);\n        return [\"jpg\", \"jpeg\", \"png\", \"gif\", \"svg\", \"webp\", \"bmp\", \"ico\", \"avif\"]\n            .includes(extension.toLowerCase());\n    }\n\n    function isMarkdownFile(filePath) {\n        let extension = getExtension(filePath);\n        return ['md', 'markdown'].includes(extension.toLowerCase());\n    }\n\n    function isHTMLFile(filePath) {\n        let extension = getExtension(filePath);\n        return ['html', 'htm', 'xhtml'].includes(extension.toLowerCase());\n    }\n\n    function focusActiveEditorIfFocusInLivePreview() {\n        const editor  = EditorManager.getActiveEditor();\n        if(!editor){\n            return;\n        }\n        if (document.activeElement === document.getElementById(LIVE_PREVIEW_IFRAME_ID)) {\n            editor.focus();\n        }\n    }\n\n    exports.getExtension = getExtension;\n    exports.isPreviewableFile = isPreviewableFile;\n    exports.isImage = isImage;\n    exports.isHTMLFile = isHTMLFile;\n    exports.isMarkdownFile = isMarkdownFile;\n    exports.focusActiveEditorIfFocusInLivePreview = focusActiveEditorIfFocusInLivePreview;\n});\n\n\n"],"file":"utils.js"}