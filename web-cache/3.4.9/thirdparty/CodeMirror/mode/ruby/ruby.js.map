{"version":3,"sources":["thirdparty/CodeMirror/mode/ruby/ruby.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","wordObj","words","o","i","e","length","keywordList","keywords","indentWords","dedentWords","opening","[","{","(","closing","]","}",")","defineMode","config","curPunc","chain","newtok","stream","state","tokenize","push","tokenBase","sol","match","eol","readBlockComment","eatSpace","ch","next","m","readQuoted","regexpAhead","style","embed","eat","delim","propertyIsEnumerable","skipToEnd","readHereDoc","eatWhile","test","varList","lastTok","more","start","pos","depth","found","escaped","indexOf","backUp","tokenBaseUntilBrace","peek","pop","tokenBaseOnce","alreadyCalled","quote","unescaped","context","type","prev","phrase","mayIndent","startState","indented","indentUnit","continuedLine","token","indentation","kwtype","thisTok","word","current","column","indent","textAfter","Pass","firstChar","charAt","ct","closed","electricInput","lineComment","fold","defineMIME","registerHelper"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction wordObj(words) {\n  var o = {};\n  for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n  return o;\n}\n\nvar keywordList = [\n  \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n  \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n  \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n  \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n  \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n  \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n], keywords = wordObj(keywordList);\n\nvar indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\",\n                           \"catch\", \"loop\", \"proc\", \"begin\"]);\nvar dedentWords = wordObj([\"end\", \"until\"]);\nvar opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\nvar closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\n\nCodeMirror.defineMode(\"ruby\", function(config) {\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n      state.tokenize.push(readBlockComment);\n      return \"comment\";\n    }\n    if (stream.eatSpace()) return null;\n    var ch = stream.next(), m;\n    if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n      return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n    } else if (ch == \"/\") {\n      if (regexpAhead(stream))\n        return chain(readQuoted(ch, \"string-2\", true), stream, state);\n      else\n        return \"operator\";\n    } else if (ch == \"%\") {\n      var style = \"string\", embed = true;\n      if (stream.eat(\"s\")) style = \"atom\";\n      else if (stream.eat(/[WQ]/)) style = \"string\";\n      else if (stream.eat(/[r]/)) style = \"string-2\";\n      else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n      var delim = stream.eat(/[^\\w\\s=]/);\n      if (!delim) return \"operator\";\n      if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n      return chain(readQuoted(delim, style, embed, true), stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n      return chain(readHereDoc(m[2], m[1]), stream, state);\n    } else if (ch == \"0\") {\n      if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n      else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n      else stream.eatWhile(/[0-7]/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n      return \"number\";\n    } else if (ch == \"?\") {\n      while (stream.match(/^\\\\[CM]-/)) {}\n      if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n      else stream.next();\n      return \"string\";\n    } else if (ch == \":\") {\n      if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n      if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n      // :> :>> :< :<< are valid symbols\n      if (stream.eat(/[\\<\\>]/)) {\n        stream.eat(/[\\<\\>]/);\n        return \"atom\";\n      }\n\n      // :+ :- :/ :* :| :& :! are valid symbols\n      if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n        return \"atom\";\n      }\n\n      // Symbols can't start by a digit\n      if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n        stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n        // Only one ? ! = is allowed and only as the last character\n        stream.eat(/[\\?\\!\\=]/);\n        return \"atom\";\n      }\n      return \"operator\";\n    } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n      stream.eat(\"@\");\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      return \"variable-2\";\n    } else if (ch == \"$\") {\n      if (stream.eat(/[a-zA-Z_]/)) {\n        stream.eatWhile(/[\\w]/);\n      } else if (stream.eat(/\\d/)) {\n        stream.eat(/\\d/);\n      } else {\n        stream.next(); // Must be a special global like $: or $!\n      }\n      return \"variable-3\";\n    } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      stream.eat(/[\\?\\!]/);\n      if (stream.eat(\":\")) return \"atom\";\n      return \"ident\";\n    } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n      curPunc = \"|\";\n      return null;\n    } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    } else if (ch == \"-\" && stream.eat(\">\")) {\n      return \"arrow\";\n    } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n      var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n      if (ch == \".\" && !more) curPunc = \".\";\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function regexpAhead(stream) {\n    var start = stream.pos, depth = 0, next, found = false, escaped = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (\"[{(\".indexOf(next) > -1) {\n          depth++\n        } else if (\"]})\".indexOf(next) > -1) {\n          depth--\n          if (depth < 0) break\n        } else if (next == \"/\" && depth == 0) {\n          found = true\n          break\n        }\n        escaped = next == \"\\\\\"\n      } else {\n        escaped = false\n      }\n    }\n    stream.backUp(stream.pos - start)\n    return found\n  }\n\n  function tokenBaseUntilBrace(depth) {\n    if (!depth) depth = 1;\n    return function(stream, state) {\n      if (stream.peek() == \"}\") {\n        if (depth == 1) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        } else {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n        }\n      } else if (stream.peek() == \"{\") {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n      }\n      return tokenBase(stream, state);\n    };\n  }\n  function tokenBaseOnce() {\n    var alreadyCalled = false;\n    return function(stream, state) {\n      if (alreadyCalled) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n      alreadyCalled = true;\n      return tokenBase(stream, state);\n    };\n  }\n  function readQuoted(quote, style, embed, unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n\n      if (state.context.type === 'read-quoted-paused') {\n        state.context = state.context.prev;\n        stream.eat(\"}\");\n      }\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        if (embed && ch == \"#\" && !escaped) {\n          if (stream.eat(\"{\")) {\n            if (quote == \"}\") {\n              state.context = {prev: state.context, type: 'read-quoted-paused'};\n            }\n            state.tokenize.push(tokenBaseUntilBrace());\n            break;\n          } else if (/[@\\$]/.test(stream.peek())) {\n            state.tokenize.push(tokenBaseOnce());\n            break;\n          }\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return style;\n    };\n  }\n  function readHereDoc(phrase, mayIndent) {\n    return function(stream, state) {\n      if (mayIndent) stream.eatSpace()\n      if (stream.match(phrase)) state.tokenize.pop();\n      else stream.skipToEnd();\n      return \"string\";\n    };\n  }\n  function readBlockComment(stream, state) {\n    if (stream.sol() && stream.match(\"=end\") && stream.eol())\n      state.tokenize.pop();\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase],\n              indented: 0,\n              context: {type: \"top\", indented: -config.indentUnit},\n              continuedLine: false,\n              lastTok: null,\n              varList: false};\n    },\n\n    token: function(stream, state) {\n      curPunc = null;\n      if (stream.sol()) state.indented = stream.indentation();\n      var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n      var thisTok = curPunc;\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = state.lastTok == \".\" ? \"property\"\n          : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : /^[A-Z]/.test(word) ? \"tag\"\n          : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n          : \"variable\";\n        if (style == \"keyword\") {\n          thisTok = word;\n          if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n          else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n          else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n            kwtype = \"indent\";\n          else if (word == \"do\" && state.context.indented < state.indented)\n            kwtype = \"indent\";\n        }\n      }\n      if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n      if (curPunc == \"|\") state.varList = !state.varList;\n\n      if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n        state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n      else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n        state.context = state.context.prev;\n\n      if (stream.eol())\n        state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize[state.tokenize.length-1] != tokenBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0);\n      var ct = state.context;\n      var closed = ct.type == closing[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n      return ct.indented + (closed ? 0 : config.indentUnit) +\n        (state.continuedLine ? config.indentUnit : 0);\n    },\n\n    electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n\nCodeMirror.registerHelper(\"hintWords\", \"ruby\", keywordList);\n\n});\n"],"file":"ruby.js"}