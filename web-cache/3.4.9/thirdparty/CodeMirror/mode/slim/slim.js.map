{"version":3,"sources":["thirdparty/CodeMirror/mode/slim/slim.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","htmlMode","getMode","name","rubyMode","modes","html","ruby","embedded","javascript","css","sass","scss","less","styl","coffee","asciidoc","markdown","textile","creole","wiki","mediawiki","rdoc","builder","nokogiri","erb","embeddedRegexp","map","arr","key","push","RegExp","join","styleMap","commentLine","slimSwitch","slimTag","slimId","slimClass","slimAttribute","slimSubmode","closeAttributeTag","slimDoctype","lineContinuation","closing","{","[","(","nameStartChar","nameChar","nameRegexp","attributeNameRegexp","wrappedAttributeNameRegexp","classNameRegexp","classIdRegexp","backup","pos","tokenize","style","restore","stream","state","maybeBackup","pat","offset","cur","current","idx","search","backUp","length","continueLine","column","stack","parent","indented","line","finishContinue","lineContinuable","match","eol","commaContinuable","rubyInQuote","endQuote","ch","peek","rubyState","next","startRubySplat","runSplat","context","prev","eatSpace","startState","token","htmlLine","htmlState","startHtmlLine","lastTokenize","startHtmlMode","comment","skipToEnd","commentMode","attributeWrapper","eat","attributeWrapperAssign","attributeWrapperValue","readQuoted","startAttributeWrapperMode","sub","subStream","StringStream","string","slice","tabSize","start","lastColumnPos","lastColumnValue","subMode","subState","firstSub","createMode","mode","query","spec","mimeModes","factory","hasOwnProperty","startSubMode","doctypeLine","_state","startLine","m","slim","startOfLine","slimTagExtras","$1","slimAttributeAssign","slimContent","slimAttributeValue","slimAttributeSymbols","quote","embed","unescaped","nextTokenize","fresh","escaped","last","copyState","sol","indentation","blankLine","innerMode","defineMIME"],"mappings":"CAKA,SAAUA,KACc,iBAAXC,SAAwC,iBAAVC,OACvCF,IAAIG,QAAQ,wBAAyBA,QAAQ,0BAA2BA,QAAQ,iBACxD,mBAAVC,QAAwBA,OAAOC,IAC7CD,OAAO,CAAC,uBAAwB,yBAA0B,gBAAiBJ,KAE3EA,IAAIM,YANR,CAOG,SAASA,YACZ,aAEEA,WAAWC,WAAW,OAAQ,SAASC,QACrC,IAAIC,SAAWH,WAAWI,QAAQF,OAAQ,CAACG,KAAM,cAC7CC,SAAWN,WAAWI,QAAQF,OAAQ,QACtCK,MAAQ,CAAEC,KAAML,SAAUM,KAAMH,UAChCI,SAAW,CACbD,KAAM,OACNE,WAAY,aACZC,IAAK,WACLC,KAAM,cACNC,KAAM,cACNC,KAAM,cACNC,KAAM,cACNC,OAAQ,eACRC,SAAU,kBACVC,SAAU,kBACVC,QAAS,iBACTC,OAAQ,gBACRC,KAAM,cACNC,UAAW,mBACXC,KAAM,cACNC,QAAS,iBACTC,SAAU,kBACVC,IAAK,qBAEHC,eAAiB,SAASC,KAC5B,IAAIC,IAAM,GACV,IAAI,IAAIC,OAAOF,IAAKC,IAAIE,KAAKD,KAC7B,OAAO,IAAIE,OAAO,KAAKH,IAAII,KAAK,KAAK,MAHlB,CAInBxB,UAEEyB,SAAW,CACbC,YAAe,UACfC,WAAc,mBACdC,QAAW,MACXC,OAAU,gBACVC,UAAa,sBACbC,cAAiB,YACjBC,YAAe,kBACfC,kBAAqB,KACrBC,YAAe,KACfC,iBAAoB,MAElBC,QAAU,CACZC,IAAK,IACLC,IAAK,IACLC,IAAK,KAGHC,cAAgB,2CAChBC,SAAWD,cAAgB,gBAC3BE,WAAa,IAAInB,OAAO,MAAMiB,cAAc,SAASC,SAAS,MAAMA,SAAS,OAC7EE,oBAAsB,IAAIpB,OAAO,MAAMiB,cAAc,SAASC,SAAS,eACvEG,2BAA6B,IAAIrB,OAAO,MAAMiB,cAAc,SAASC,SAAS,MAC9EI,gBAAkB,yBAClBC,cAAgB,sBAEpB,SAASC,OAAOC,IAAKC,SAAUC,OAC7B,IAAIC,QAAU,SAASC,OAAQC,OAE7B,OADAA,MAAMJ,SAAWA,SACbG,OAAOJ,IAAMA,KACfI,OAAOJ,IAAMA,IACNE,OAEFG,MAAMJ,SAASG,OAAQC,QAEhC,OAAO,SAASD,OAAQC,OAEtB,OADAA,MAAMJ,SAAWE,QACVF,SAASG,OAAQC,QAI5B,SAASC,YAAYF,OAAQC,MAAOE,IAAKC,OAAQN,OAC/C,IAAIO,IAAML,OAAOM,UACbC,IAAMF,IAAIG,OAAOL,KAKrB,OAJII,KAAO,IACTN,MAAMJ,SAAWF,OAAOK,OAAOJ,IAAKK,MAAMJ,SAAUC,OACpDE,OAAOS,OAAOJ,IAAIK,OAASH,IAAMH,SAE5BN,MAGT,SAASa,aAAaV,MAAOW,QAC3BX,MAAMY,MAAQ,CACZC,OAAQb,MAAMY,MACdf,MAAO,eACPiB,SAAUH,OACVf,SAAUI,MAAMe,MAElBf,MAAMe,KAAOf,MAAMJ,SAErB,SAASoB,eAAehB,OAClBA,MAAMe,MAAQf,MAAMJ,WACtBI,MAAMe,KAAOf,MAAMY,MAAMhB,SACzBI,MAAMY,MAAQZ,MAAMY,MAAMC,QAI9B,SAASI,gBAAgBN,OAAQf,UAC/B,OAAO,SAASG,OAAQC,OAEtB,GADAgB,eAAehB,OACXD,OAAOmB,MAAM,QAEf,OADAR,aAAaV,MAAOW,QACb,mBAET,IAAId,MAAQD,SAASG,OAAQC,OAI7B,OAHID,OAAOoB,OAASpB,OAAOM,UAAUa,MAAM,4BACzCnB,OAAOS,OAAO,GAETX,OAGX,SAASuB,iBAAiBT,OAAQf,UAChC,OAAO,SAASG,OAAQC,OACtBgB,eAAehB,OACf,IAAIH,MAAQD,SAASG,OAAQC,OAI7B,OAHID,OAAOoB,OAASpB,OAAOM,UAAUa,MAAM,OACzCR,aAAaV,MAAOW,QAEfd,OAIX,SAASwB,YAAYC,SAAU1B,UAE7B,OAAO,SAASG,OAAQC,OACtB,IAAIuB,GACJ,OADSxB,OAAOyB,QACNF,UAA+C,GAAnCtB,MAAMyB,UAAU7B,SAASa,QAE7CV,OAAO2B,OACP1B,MAAMJ,SAAWA,SACV,qBAEAlD,KAAKqD,OAAQC,QAI1B,SAAS2B,eAAe/B,UACtB,IAAI6B,UACAG,SAAW,SAAS7B,OAAQC,OAC9B,GAAuC,GAAnCA,MAAMyB,UAAU7B,SAASa,SAAgBT,MAAMyB,UAAUI,QAAQC,KAAM,CAEzE,GADA/B,OAAOS,OAAO,GACVT,OAAOgC,WAGT,OAFA/B,MAAMyB,UAAYA,UAClBzB,MAAMJ,SAAWA,SACVA,SAASG,OAAQC,OAE1BD,OAAO2B,OAET,OAAOhF,KAAKqD,OAAQC,QAEtB,OAAO,SAASD,OAAQC,OAItB,OAHAyB,UAAYzB,MAAMyB,UAClBzB,MAAMyB,UAAYxF,WAAW+F,WAAWzF,UACxCyD,MAAMJ,SAAWgC,SACVlF,KAAKqD,OAAQC,QAIxB,SAAStD,KAAKqD,OAAQC,OACpB,OAAOzD,SAAS0F,MAAMlC,OAAQC,MAAMyB,WAGtC,SAASS,SAASnC,OAAQC,OACxB,OAAID,OAAOmB,MAAM,QACR,mBAEFzE,KAAKsD,OAAQC,OAEtB,SAASvD,KAAKsD,OAAQC,OACpB,OAAID,OAAOmB,MAAM,SACflB,MAAMJ,SAAWyB,YAAY,IAAKrB,MAAMJ,UACjC,MAEFK,YAAYF,OAAQC,MAAO,WAAY,EAAG5D,SAAS6F,MAAMlC,OAAQC,MAAMmC,YAGhF,SAASC,cAAcC,cACrB,OAAO,SAAStC,OAAQC,OACtB,IAAIH,MAAQqC,SAASnC,OAAQC,OAE7B,OADID,OAAOoB,QAAOnB,MAAMJ,SAAWyC,cAC5BxC,OAIX,SAASyC,cAAcvC,OAAQC,MAAOG,QAQpC,OAPAH,MAAMY,MAAQ,CACZC,OAAQb,MAAMY,MACdf,MAAO,OACPiB,SAAUf,OAAOY,SAAWR,OAC5BP,SAAUI,MAAMe,MAElBf,MAAMe,KAAOf,MAAMJ,SAAWnD,KACvB,KAGT,SAAS8F,QAAQxC,OAAQC,OAEvB,OADAD,OAAOyC,YACAxC,MAAMY,MAAMf,MAGrB,SAAS4C,YAAY1C,OAAQC,OAQ3B,OAPAA,MAAMY,MAAQ,CACZC,OAAQb,MAAMY,MACdf,MAAO,UACPiB,SAAUd,MAAMc,SAAW,EAC3BlB,SAAUI,MAAMe,MAElBf,MAAMe,KAAOwB,QACNA,QAAQxC,OAAQC,OAGzB,SAAS0C,iBAAiB3C,OAAQC,OAChC,OAAID,OAAO4C,IAAI3C,MAAMY,MAAMU,WACzBtB,MAAMe,KAAOf,MAAMY,MAAMG,KACzBf,MAAMJ,SAAWI,MAAMY,MAAMhB,SAC7BI,MAAMY,MAAQZ,MAAMY,MAAMC,OACnB,MAELd,OAAOmB,MAAM3B,6BACfS,MAAMJ,SAAWgD,uBACV,kBAET7C,OAAO2B,OACA,MAET,SAASkB,uBAAuB7C,OAAQC,OACtC,OAAID,OAAOmB,MAAM,SACflB,MAAMJ,SAAWiD,sBACV,MAEFH,iBAAiB3C,OAAQC,OAElC,SAAS6C,sBAAsB9C,OAAQC,OACrC,IAAIuB,GAAKxB,OAAOyB,OAChB,MAAU,KAAND,IAAmB,KAANA,IACfvB,MAAMJ,SAAWkD,WAAWvB,GAAI,UAAU,GAAM,EAAOmB,kBACvD3C,OAAO2B,OACA1B,MAAMJ,SAASG,OAAQC,QAEtB,KAANuB,GACKI,eAAee,iBAAff,CAAiC5B,OAAQC,OAE9CD,OAAOmB,MAAM,wBACflB,MAAMJ,SAAW8C,iBACV,WAEFf,eAAee,iBAAff,CAAiC5B,OAAQC,OAGlD,SAAS+C,0BAA0B/C,MAAOsB,SAAU1B,UAUlD,OATAI,MAAMY,MAAQ,CACZC,OAAQb,MAAMY,MACdf,MAAO,UACPiB,SAAUd,MAAMc,SAAW,EAC3BlB,SAAUA,SACVmB,KAAMf,MAAMe,KACZO,SAAUA,UAEZtB,MAAMe,KAAOf,MAAMJ,SAAW8C,iBACvB,KAGT,SAASM,IAAIjD,OAAQC,OACnB,GAAID,OAAOmB,MAAM,QAEf,OADAlB,MAAMJ,SAAWyB,YAAY,IAAKrB,MAAMJ,UACjC,KAET,IAAIqD,UAAY,IAAIhH,WAAWiH,aAAanD,OAAOoD,OAAOC,MAAMpD,MAAMY,MAAME,UAAWf,OAAOsD,SAC9FJ,UAAUtD,IAAMI,OAAOJ,IAAMK,MAAMY,MAAME,SACzCmC,UAAUK,MAAQvD,OAAOuD,MAAQtD,MAAMY,MAAME,SAC7CmC,UAAUM,cAAgBxD,OAAOwD,cAAgBvD,MAAMY,MAAME,SAC7DmC,UAAUO,gBAAkBzD,OAAOyD,gBAAkBxD,MAAMY,MAAME,SACjE,IAAIjB,MAAQG,MAAMyD,QAAQxB,MAAMgB,UAAWjD,MAAM0D,UAEjD,OADA3D,OAAOJ,IAAMsD,UAAUtD,IAAMK,MAAMY,MAAME,SAClCjB,MAET,SAAS8D,SAAS5D,OAAQC,OAGxB,OAFAA,MAAMY,MAAME,SAAWf,OAAOY,SAC9BX,MAAMe,KAAOf,MAAMJ,SAAWoD,IACvBhD,MAAMJ,SAASG,OAAQC,OAGhC,SAAS4D,WAAWC,MAClB,IAAIC,MAAQnH,SAASkH,MACjBE,KAAO9H,WAAW+H,UAAUF,OAChC,GAAIC,KACF,OAAO9H,WAAWI,QAAQF,OAAQ4H,MAEpC,IAAIE,QAAUhI,WAAWO,MAAMsH,OAC/B,OAAIG,QACKA,QAAQ9H,OAAQ,CAACG,KAAMwH,QAEzB7H,WAAWI,QAAQF,OAAQ,QAGpC,SAASE,QAAQwH,MACf,OAAKrH,MAAM0H,eAAeL,MAGnBrH,MAAMqH,MAFJrH,MAAMqH,MAAQD,WAAWC,MAKpC,SAASM,aAAaN,KAAM7D,OAC1B,IAAIyD,QAAUpH,QAAQwH,MAClBH,SAAWzH,WAAW+F,WAAWyB,SAYrC,OAVAzD,MAAMyD,QAAUA,QAChBzD,MAAM0D,SAAWA,SAEjB1D,MAAMY,MAAQ,CACZC,OAAQb,MAAMY,MACdf,MAAO,MACPiB,SAAUd,MAAMc,SAAW,EAC3BlB,SAAUI,MAAMe,MAElBf,MAAMe,KAAOf,MAAMJ,SAAW+D,SACvB,cAGT,SAASS,YAAYrE,OAAQsE,QAE3B,OADAtE,OAAOyC,YACA,cAGT,SAAS8B,UAAUvE,OAAQC,OACzB,IAAIuB,GACJ,GAAU,KADDxB,OAAOyB,OAEd,OAAQxB,MAAMJ,SAAWwC,cAAcpC,MAAMJ,WAAWG,OAAQC,OAElE,GAAID,OAAOmB,MAAM,SACf,OAAOoB,cAAcvC,OAAQC,MAAO,GAEtC,GAAID,OAAOmB,MAAM,kBACf,OAAOuB,YAAY1C,OAAQC,OAE7B,GAAID,OAAOmB,MAAM,iBAEf,OADAlB,MAAMJ,SAAWqB,gBAAgBlB,OAAOY,SAAUS,iBAAiBrB,OAAOY,SAAUjE,OAC7E,aAET,GAAIqD,OAAOmB,MAAM,cAEf,OADAlB,MAAMJ,SAAWwE,YACV,UAGT,IAAIG,EAAIxE,OAAOmB,MAAMrD,gBACrB,OAAI0G,EACKJ,aAAaI,EAAE,GAAIvE,OAGrBzB,QAAQwB,OAAQC,OAGzB,SAASwE,KAAKzE,OAAQC,OACpB,OAAIA,MAAMyE,YACDH,UAAUvE,OAAQC,OAEpBzB,QAAQwB,OAAQC,OAGzB,SAASzB,QAAQwB,OAAQC,OACvB,OAAID,OAAO4C,IAAI,MACb3C,MAAMJ,SAAW+B,eAAe+C,eACzB,MAEL3E,OAAOmB,MAAM7B,aACfW,MAAMJ,SAAW8E,cACV,WAEFjG,UAAUsB,OAAQC,OAE3B,SAAS0E,cAAc3E,OAAQC,OAC7B,OAAID,OAAOmB,MAAM,eACflB,MAAMJ,SAAWnB,UACV,MAEFA,UAAUsB,OAAQC,OAE3B,SAASvB,UAAUsB,OAAQC,OACzB,OAAID,OAAOmB,MAAMzB,gBACfO,MAAMJ,SAAWnB,UACV,UAELsB,OAAOmB,MAAM1B,kBACfQ,MAAMJ,SAAWnB,UACV,aAEFC,cAAcqB,OAAQC,OAE/B,SAAStB,cAAcqB,OAAQC,OAC7B,OAAID,OAAOmB,MAAM,eACR6B,0BAA0B/C,MAAOjB,QAAQb,OAAOyG,IAAKjG,eAE1DqB,OAAOmB,MAAM5B,sBACfU,MAAMJ,SAAWgF,oBACV,iBAEY,KAAjB7E,OAAOyB,QACTzB,OAAO2B,OACP1B,MAAMJ,SAAW+B,eAAekD,aACzB,MAEFA,YAAY9E,OAAQC,OAE7B,SAAS4E,oBAAoB7E,OAAQC,OACnC,OAAID,OAAOmB,MAAM,SACflB,MAAMJ,SAAWkF,mBACV,MAGFpG,cAAcqB,OAAQC,OAG/B,SAAS8E,mBAAmB/E,OAAQC,OAClC,IAAIuB,GAAKxB,OAAOyB,OAChB,MAAU,KAAND,IAAmB,KAANA,IACfvB,MAAMJ,SAAWkD,WAAWvB,GAAI,UAAU,GAAM,EAAO7C,eACvDqB,OAAO2B,OACA1B,MAAMJ,SAASG,OAAQC,QAEtB,KAANuB,GACKI,eAAejD,cAAfiD,CAA8B5B,OAAQC,OAErC,KAANuB,GACKI,eAAeoD,qBAAfpD,CAAqC5B,OAAQC,OAElDD,OAAOmB,MAAM,wBACflB,MAAMJ,SAAWlB,cACV,WAEFiD,eAAejD,cAAfiD,CAA8B5B,OAAQC,OAE/C,SAAS+E,qBAAqBhF,OAAQC,OAEpC,OADAD,OAAOS,OAAO,GACVT,OAAOmB,MAAM,iBACflB,MAAMJ,SAAW+B,eAAeoD,sBACzB,OAEThF,OAAO2B,OACAhD,cAAcqB,OAAQC,QAE/B,SAAS8C,WAAWkC,MAAOnF,MAAOoF,MAAOC,UAAWC,cAClD,OAAO,SAASpF,OAAQC,OACtBgB,eAAehB,OACf,IAAIoF,MAAmC,GAA3BrF,OAAOM,UAAUI,OAC7B,GAAIV,OAAOmB,MAAM,OAAQkE,OACvB,OAAKA,OACL1E,aAAaV,MAAOA,MAAMc,UACnB,oBAFYjB,MAIrB,GAAIE,OAAOmB,MAAM,OAAQkE,OACvB,OAAKA,OACLpF,MAAMJ,SAAWyB,YAAY,IAAKrB,MAAMJ,UACjC,MAFYC,MAKrB,IADA,IAAIwF,SAAU,EAAO9D,GACU,OAAvBA,GAAKxB,OAAO2B,SAAiB,CACnC,GAAIH,IAAMyD,QAAUE,YAAcG,SAAU,CAC1CrF,MAAMJ,SAAWuF,aACjB,MAEF,GAAIF,OAAe,KAAN1D,KAAc8D,SACrBtF,OAAO4C,IAAI,KAAM,CACnB5C,OAAOS,OAAO,GACd,MAGJ6E,SAAWA,SAAiB,MAAN9D,GAKxB,OAHIxB,OAAOoB,OAASkE,SAClBtF,OAAOS,OAAO,GAETX,OAGX,SAASgF,YAAY9E,OAAQC,OAC3B,OAAID,OAAOmB,MAAM,SACflB,MAAMJ,SAAWlD,KACV,cAELqD,OAAOmB,MAAM,SACflB,MAAMJ,SAAW4E,KACV,MAELzE,OAAOmB,MAAM,OACflB,MAAMJ,SAAWrB,QACV,eAET+D,cAAcvC,OAAQC,MAAO,GACtBA,MAAMJ,SAASG,OAAQC,QAGhC,IAAI6D,KAAO,CAET7B,WAAY,WACV,IAAIG,UACAV,UACJ,MAAO,CACLU,UAHclG,WAAW+F,WAAW5F,UAIpCqF,UAHcxF,WAAW+F,WAAWzF,UAIpCqE,MAAO,KACP0E,KAAM,KACN1F,SAAU4E,KACVzD,KAAMyD,KACN1D,SAAU,IAIdyE,UAAW,SAASvF,OAClB,MAAO,CACLmC,UAAYlG,WAAWsJ,UAAUnJ,SAAU4D,MAAMmC,WACjDV,UAAWxF,WAAWsJ,UAAUhJ,SAAUyD,MAAMyB,WAChDgC,QAASzD,MAAMyD,QACfC,SAAU1D,MAAMyD,SAAWxH,WAAWsJ,UAAUvF,MAAMyD,QAASzD,MAAM0D,UACrE9C,MAAOZ,MAAMY,MACb0E,KAAMtF,MAAMsF,KACZ1F,SAAUI,MAAMJ,SAChBmB,KAAMf,MAAMe,OAIhBkB,MAAO,SAASlC,OAAQC,OACtB,GAAID,OAAOyF,MAIT,IAHAxF,MAAMc,SAAWf,OAAO0F,cACxBzF,MAAMyE,aAAc,EACpBzE,MAAMJ,SAAWI,MAAMe,KAChBf,MAAMY,OAASZ,MAAMY,MAAME,SAAWd,MAAMc,UAA0B,eAAdd,MAAMsF,MACnEtF,MAAMe,KAAOf,MAAMJ,SAAWI,MAAMY,MAAMhB,SAC1CI,MAAMY,MAAQZ,MAAMY,MAAMC,OAC1Bb,MAAMyD,QAAU,KAChBzD,MAAM0D,SAAW,KAGrB,GAAI3D,OAAOgC,WAAY,OAAO,KAC9B,IAAIlC,MAAQG,MAAMJ,SAASG,OAAQC,OAGnC,OAFAA,MAAMyE,aAAc,EAChB5E,QAAOG,MAAMsF,KAAOzF,OACjBzB,SAAS8F,eAAerE,OAASzB,SAASyB,OAASA,OAG5D6F,UAAW,SAAS1F,OAClB,GAAIA,MAAMyD,SAAWzD,MAAMyD,QAAQiC,UACjC,OAAO1F,MAAMyD,QAAQiC,UAAU1F,MAAM0D,WAIzCiC,UAAW,SAAS3F,OAClB,OAAIA,MAAMyD,QAAgB,CAACzD,MAAOA,MAAM0D,SAAUG,KAAM7D,MAAMyD,SACvD,CAACzD,MAAOA,MAAO6D,KAAMA,QAOhC,OAAOA,MACN,YAAa,QAEhB5H,WAAW2J,WAAW,cAAe,QACrC3J,WAAW2J,WAAW,qBAAsB","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// Slim Highlighting for CodeMirror copyright (c) HicknHack Software Gmbh\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\n  CodeMirror.defineMode(\"slim\", function(config) {\n    var htmlMode = CodeMirror.getMode(config, {name: \"htmlmixed\"});\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n    var modes = { html: htmlMode, ruby: rubyMode };\n    var embedded = {\n      ruby: \"ruby\",\n      javascript: \"javascript\",\n      css: \"text/css\",\n      sass: \"text/x-sass\",\n      scss: \"text/x-scss\",\n      less: \"text/x-less\",\n      styl: \"text/x-styl\", // no highlighting so far\n      coffee: \"coffeescript\",\n      asciidoc: \"text/x-asciidoc\",\n      markdown: \"text/x-markdown\",\n      textile: \"text/x-textile\", // no highlighting so far\n      creole: \"text/x-creole\", // no highlighting so far\n      wiki: \"text/x-wiki\", // no highlighting so far\n      mediawiki: \"text/x-mediawiki\", // no highlighting so far\n      rdoc: \"text/x-rdoc\", // no highlighting so far\n      builder: \"text/x-builder\", // no highlighting so far\n      nokogiri: \"text/x-nokogiri\", // no highlighting so far\n      erb: \"application/x-erb\"\n    };\n    var embeddedRegexp = function(map){\n      var arr = [];\n      for(var key in map) arr.push(key);\n      return new RegExp(\"^(\"+arr.join('|')+\"):\");\n    }(embedded);\n\n    var styleMap = {\n      \"commentLine\": \"comment\",\n      \"slimSwitch\": \"operator special\",\n      \"slimTag\": \"tag\",\n      \"slimId\": \"attribute def\",\n      \"slimClass\": \"attribute qualifier\",\n      \"slimAttribute\": \"attribute\",\n      \"slimSubmode\": \"keyword special\",\n      \"closeAttributeTag\": null,\n      \"slimDoctype\": null,\n      \"lineContinuation\": null\n    };\n    var closing = {\n      \"{\": \"}\",\n      \"[\": \"]\",\n      \"(\": \")\"\n    };\n\n    var nameStartChar = \"_a-zA-Z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\";\n    var nameChar = nameStartChar + \"\\\\-0-9\\xB7\\u0300-\\u036F\\u203F-\\u2040\";\n    var nameRegexp = new RegExp(\"^[:\"+nameStartChar+\"](?::[\"+nameChar+\"]|[\"+nameChar+\"]*)\");\n    var attributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*(?=\\\\s*=)\");\n    var wrappedAttributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*\");\n    var classNameRegexp = /^\\.-?[_a-zA-Z]+[\\w\\-]*/;\n    var classIdRegexp = /^#[_a-zA-Z]+[\\w\\-]*/;\n\n    function backup(pos, tokenize, style) {\n      var restore = function(stream, state) {\n        state.tokenize = tokenize;\n        if (stream.pos < pos) {\n          stream.pos = pos;\n          return style;\n        }\n        return state.tokenize(stream, state);\n      };\n      return function(stream, state) {\n        state.tokenize = restore;\n        return tokenize(stream, state);\n      };\n    }\n\n    function maybeBackup(stream, state, pat, offset, style) {\n      var cur = stream.current();\n      var idx = cur.search(pat);\n      if (idx > -1) {\n        state.tokenize = backup(stream.pos, state.tokenize, style);\n        stream.backUp(cur.length - idx - offset);\n      }\n      return style;\n    }\n\n    function continueLine(state, column) {\n      state.stack = {\n        parent: state.stack,\n        style: \"continuation\",\n        indented: column,\n        tokenize: state.line\n      };\n      state.line = state.tokenize;\n    }\n    function finishContinue(state) {\n      if (state.line == state.tokenize) {\n        state.line = state.stack.tokenize;\n        state.stack = state.stack.parent;\n      }\n    }\n\n    function lineContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        if (stream.match(/^\\\\$/)) {\n          continueLine(state, column);\n          return \"lineContinuation\";\n        }\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/(?:^|[^\\\\])(?:\\\\\\\\)*\\\\$/)) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function commaContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/,$/)) {\n          continueLine(state, column);\n        }\n        return style;\n      };\n    }\n\n    function rubyInQuote(endQuote, tokenize) {\n      // TODO: add multi line support\n      return function(stream, state) {\n        var ch = stream.peek();\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = tokenize;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n    function startRubySplat(tokenize) {\n      var rubyState;\n      var runSplat = function(stream, state) {\n        if (state.rubyState.tokenize.length == 1 && !state.rubyState.context.prev) {\n          stream.backUp(1);\n          if (stream.eatSpace()) {\n            state.rubyState = rubyState;\n            state.tokenize = tokenize;\n            return tokenize(stream, state);\n          }\n          stream.next();\n        }\n        return ruby(stream, state);\n      };\n      return function(stream, state) {\n        rubyState = state.rubyState;\n        state.rubyState = CodeMirror.startState(rubyMode);\n        state.tokenize = runSplat;\n        return ruby(stream, state);\n      };\n    }\n\n    function ruby(stream, state) {\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function htmlLine(stream, state) {\n      if (stream.match(/^\\\\$/)) {\n        return \"lineContinuation\";\n      }\n      return html(stream, state);\n    }\n    function html(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      return maybeBackup(stream, state, /[^\\\\]#\\{/, 1, htmlMode.token(stream, state.htmlState));\n    }\n\n    function startHtmlLine(lastTokenize) {\n      return function(stream, state) {\n        var style = htmlLine(stream, state);\n        if (stream.eol()) state.tokenize = lastTokenize;\n        return style;\n      };\n    }\n\n    function startHtmlMode(stream, state, offset) {\n      state.stack = {\n        parent: state.stack,\n        style: \"html\",\n        indented: stream.column() + offset, // pipe + space\n        tokenize: state.line\n      };\n      state.line = state.tokenize = html;\n      return null;\n    }\n\n    function comment(stream, state) {\n      stream.skipToEnd();\n      return state.stack.style;\n    }\n\n    function commentMode(stream, state) {\n      state.stack = {\n        parent: state.stack,\n        style: \"comment\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = comment;\n      return comment(stream, state);\n    }\n\n    function attributeWrapper(stream, state) {\n      if (stream.eat(state.stack.endQuote)) {\n        state.line = state.stack.line;\n        state.tokenize = state.stack.tokenize;\n        state.stack = state.stack.parent;\n        return null;\n      }\n      if (stream.match(wrappedAttributeNameRegexp)) {\n        state.tokenize = attributeWrapperAssign;\n        return \"slimAttribute\";\n      }\n      stream.next();\n      return null;\n    }\n    function attributeWrapperAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = attributeWrapperValue;\n        return null;\n      }\n      return attributeWrapper(stream, state);\n    }\n    function attributeWrapperValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, attributeWrapper);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(attributeWrapper)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = attributeWrapper;\n        return \"keyword\";\n      }\n      return startRubySplat(attributeWrapper)(stream, state);\n    }\n\n    function startAttributeWrapperMode(state, endQuote, tokenize) {\n      state.stack = {\n        parent: state.stack,\n        style: \"wrapper\",\n        indented: state.indented + 1,\n        tokenize: tokenize,\n        line: state.line,\n        endQuote: endQuote\n      };\n      state.line = state.tokenize = attributeWrapper;\n      return null;\n    }\n\n    function sub(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      var subStream = new CodeMirror.StringStream(stream.string.slice(state.stack.indented), stream.tabSize);\n      subStream.pos = stream.pos - state.stack.indented;\n      subStream.start = stream.start - state.stack.indented;\n      subStream.lastColumnPos = stream.lastColumnPos - state.stack.indented;\n      subStream.lastColumnValue = stream.lastColumnValue - state.stack.indented;\n      var style = state.subMode.token(subStream, state.subState);\n      stream.pos = subStream.pos + state.stack.indented;\n      return style;\n    }\n    function firstSub(stream, state) {\n      state.stack.indented = stream.column();\n      state.line = state.tokenize = sub;\n      return state.tokenize(stream, state);\n    }\n\n    function createMode(mode) {\n      var query = embedded[mode];\n      var spec = CodeMirror.mimeModes[query];\n      if (spec) {\n        return CodeMirror.getMode(config, spec);\n      }\n      var factory = CodeMirror.modes[query];\n      if (factory) {\n        return factory(config, {name: query});\n      }\n      return CodeMirror.getMode(config, \"null\");\n    }\n\n    function getMode(mode) {\n      if (!modes.hasOwnProperty(mode)) {\n        return modes[mode] = createMode(mode);\n      }\n      return modes[mode];\n    }\n\n    function startSubMode(mode, state) {\n      var subMode = getMode(mode);\n      var subState = CodeMirror.startState(subMode);\n\n      state.subMode = subMode;\n      state.subState = subState;\n\n      state.stack = {\n        parent: state.stack,\n        style: \"sub\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = state.tokenize = firstSub;\n      return \"slimSubmode\";\n    }\n\n    function doctypeLine(stream, _state) {\n      stream.skipToEnd();\n      return \"slimDoctype\";\n    }\n\n    function startLine(stream, state) {\n      var ch = stream.peek();\n      if (ch == '<') {\n        return (state.tokenize = startHtmlLine(state.tokenize))(stream, state);\n      }\n      if (stream.match(/^[|']/)) {\n        return startHtmlMode(stream, state, 1);\n      }\n      if (stream.match(/^\\/(!|\\[\\w+])?/)) {\n        return commentMode(stream, state);\n      }\n      if (stream.match(/^(-|==?[<>]?)/)) {\n        state.tokenize = lineContinuable(stream.column(), commaContinuable(stream.column(), ruby));\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^doctype\\b/)) {\n        state.tokenize = doctypeLine;\n        return \"keyword\";\n      }\n\n      var m = stream.match(embeddedRegexp);\n      if (m) {\n        return startSubMode(m[1], state);\n      }\n\n      return slimTag(stream, state);\n    }\n\n    function slim(stream, state) {\n      if (state.startOfLine) {\n        return startLine(stream, state);\n      }\n      return slimTag(stream, state);\n    }\n\n    function slimTag(stream, state) {\n      if (stream.eat('*')) {\n        state.tokenize = startRubySplat(slimTagExtras);\n        return null;\n      }\n      if (stream.match(nameRegexp)) {\n        state.tokenize = slimTagExtras;\n        return \"slimTag\";\n      }\n      return slimClass(stream, state);\n    }\n    function slimTagExtras(stream, state) {\n      if (stream.match(/^(<>?|><?)/)) {\n        state.tokenize = slimClass;\n        return null;\n      }\n      return slimClass(stream, state);\n    }\n    function slimClass(stream, state) {\n      if (stream.match(classIdRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimId\";\n      }\n      if (stream.match(classNameRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimClass\";\n      }\n      return slimAttribute(stream, state);\n    }\n    function slimAttribute(stream, state) {\n      if (stream.match(/^([\\[\\{\\(])/)) {\n        return startAttributeWrapperMode(state, closing[RegExp.$1], slimAttribute);\n      }\n      if (stream.match(attributeNameRegexp)) {\n        state.tokenize = slimAttributeAssign;\n        return \"slimAttribute\";\n      }\n      if (stream.peek() == '*') {\n        stream.next();\n        state.tokenize = startRubySplat(slimContent);\n        return null;\n      }\n      return slimContent(stream, state);\n    }\n    function slimAttributeAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = slimAttributeValue;\n        return null;\n      }\n      // should never happen, because of forward lookup\n      return slimAttribute(stream, state);\n    }\n\n    function slimAttributeValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, slimAttribute);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(slimAttribute)(stream, state);\n      }\n      if (ch == ':') {\n        return startRubySplat(slimAttributeSymbols)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = slimAttribute;\n        return \"keyword\";\n      }\n      return startRubySplat(slimAttribute)(stream, state);\n    }\n    function slimAttributeSymbols(stream, state) {\n      stream.backUp(1);\n      if (stream.match(/^[^\\s],(?=:)/)) {\n        state.tokenize = startRubySplat(slimAttributeSymbols);\n        return null;\n      }\n      stream.next();\n      return slimAttribute(stream, state);\n    }\n    function readQuoted(quote, style, embed, unescaped, nextTokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var fresh = stream.current().length == 0;\n        if (stream.match(/^\\\\$/, fresh)) {\n          if (!fresh) return style;\n          continueLine(state, state.indented);\n          return \"lineContinuation\";\n        }\n        if (stream.match(/^#\\{/, fresh)) {\n          if (!fresh) return style;\n          state.tokenize = rubyInQuote(\"}\", state.tokenize);\n          return null;\n        }\n        var escaped = false, ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize = nextTokenize;\n            break;\n          }\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              stream.backUp(2);\n              break;\n            }\n          }\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        if (stream.eol() && escaped) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function slimContent(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = ruby;\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^\\/$/)) { // tag close hint\n        state.tokenize = slim;\n        return null;\n      }\n      if (stream.match(/^:/)) { // inline tag\n        state.tokenize = slimTag;\n        return \"slimSwitch\";\n      }\n      startHtmlMode(stream, state, 0);\n      return state.tokenize(stream, state);\n    }\n\n    var mode = {\n      // default to html mode\n      startState: function() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          stack: null,\n          last: null,\n          tokenize: slim,\n          line: slim,\n          indented: 0\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          htmlState : CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          subMode: state.subMode,\n          subState: state.subMode && CodeMirror.copyState(state.subMode, state.subState),\n          stack: state.stack,\n          last: state.last,\n          tokenize: state.tokenize,\n          line: state.line\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n          state.tokenize = state.line;\n          while (state.stack && state.stack.indented > state.indented && state.last != \"slimSubmode\") {\n            state.line = state.tokenize = state.stack.tokenize;\n            state.stack = state.stack.parent;\n            state.subMode = null;\n            state.subState = null;\n          }\n        }\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        if (style) state.last = style;\n        return styleMap.hasOwnProperty(style) ? styleMap[style] : style;\n      },\n\n      blankLine: function(state) {\n        if (state.subMode && state.subMode.blankLine) {\n          return state.subMode.blankLine(state.subState);\n        }\n      },\n\n      innerMode: function(state) {\n        if (state.subMode) return {state: state.subState, mode: state.subMode};\n        return {state: state, mode: mode};\n      }\n\n      //indent: function(state) {\n      //  return state.indented;\n      //}\n    };\n    return mode;\n  }, \"htmlmixed\", \"ruby\");\n\n  CodeMirror.defineMIME(\"text/x-slim\", \"slim\");\n  CodeMirror.defineMIME(\"application/x-slim\", \"slim\");\n});\n"],"file":"slim.js"}