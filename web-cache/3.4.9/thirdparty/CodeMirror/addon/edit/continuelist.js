!function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("../../lib/codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],mod):mod(CodeMirror)}(function(CodeMirror){"use strict";var listRE=/^(\s*)(>[> ]*|[*+-] \[[x ]\]\s|[*+-]\s|(\d+)([.)]))(\s*)/,emptyListRE=/^(\s*)(>[> ]*|[*+-] \[[x ]\]|[*+-]|(\d+)[.)])(\s*)$/,unorderedListRE=/[*+-]\s/;function incrementRemainingMarkdownListNumbers(cm,pos){var startLine=pos.line,lookAhead=0,skipCount=0,startItem=listRE.exec(cm.getLine(startLine)),startIndent=startItem[1];do{var nextLineNumber=startLine+(lookAhead+=1),nextLine=cm.getLine(nextLineNumber),nextItem=listRE.exec(nextLine);if(nextItem){var nextIndent=nextItem[1],newNumber=parseInt(startItem[3],10)+lookAhead-skipCount,nextNumber=parseInt(nextItem[3],10),itemNumber=nextNumber;if(startIndent!==nextIndent||isNaN(nextNumber)){if(startIndent.length>nextIndent.length)return;if(startIndent.length<nextIndent.length&&1===lookAhead)return;skipCount+=1}else newNumber===nextNumber&&(itemNumber=nextNumber+1),newNumber>nextNumber&&(itemNumber=newNumber+1),cm.replaceRange(nextLine.replace(listRE,nextIndent+itemNumber+nextItem[4]+nextItem[5]),{line:nextLineNumber,ch:0},{line:nextLineNumber,ch:nextLine.length})}}while(nextItem)}CodeMirror.commands.newlineAndIndentContinueMarkdownList=function(cm){if(cm.getOption("disableInput"))return CodeMirror.Pass;for(var ranges=cm.listSelections(),replacements=[],i=0;i<ranges.length;i++){var pos=ranges[i].head,eolState=cm.getStateAfter(pos.line),inner=CodeMirror.innerMode(cm.getMode(),eolState);if("markdown"!==inner.mode.name&&"markdown"!==inner.mode.helperType)return void cm.execCommand("newlineAndIndent");var inList=!1!==(eolState=inner.state).list,inQuote=0!==eolState.quote,line=cm.getLine(pos.line),match=listRE.exec(line),cursorBeforeBullet=/^\s*$/.test(line.slice(0,pos.ch));if(!ranges[i].empty()||!inList&&!inQuote||!match||cursorBeforeBullet)return void cm.execCommand("newlineAndIndent");if(emptyListRE.test(line)){var endOfQuote=inQuote&&/>\s*$/.test(line),endOfList=!/>\s*$/.test(line);(endOfQuote||endOfList)&&cm.replaceRange("",{line:pos.line,ch:0},{line:pos.line,ch:pos.ch+1}),replacements[i]="\n"}else{var indent=match[1],after=match[5],numbered=!(unorderedListRE.test(match[2])||match[2].indexOf(">")>=0),bullet=numbered?parseInt(match[3],10)+1+match[4]:match[2].replace("x"," ");replacements[i]="\n"+indent+bullet+after,numbered&&incrementRemainingMarkdownListNumbers(cm,pos)}}cm.replaceSelections(replacements)}});
//# sourceMappingURL=continuelist.js.map
