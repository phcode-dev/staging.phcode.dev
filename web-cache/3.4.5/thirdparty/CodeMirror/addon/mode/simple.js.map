{"version":3,"sources":["thirdparty/CodeMirror/addon/mode/simple.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","ensureState","states","name","hasOwnProperty","Error","toRegex","val","caret","flags","RegExp","ignoreCase","unicode","source","String","asToken","apply","replace","result","i","length","push","Rule","data","next","this","regex","token","tokenFunction","config","stream","state","pending","pend","shift","pos","text","local","end","match","tok","endToken","localState","mode","m","endScan","exec","current","start","index","curState","rule","matches","sol","stack","pop","enterLocalMode","indent","indentation","indentUnit","dedent","j","backUp","join","cmp","a","b","props","prop","spec","pers","persistent","p","persistentStates","getMode","lState","startState","forceEnd","indexOf","arr","indentFunction","meta","textAfter","line","dontIndentStates","Pass","rules","scan","dedentIfLineStart","slice","defineSimpleMode","defineMode","simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode"],"mappings":"CAGA,SAAUA,KACc,iBAAXC,SAAwC,iBAAVC,OACvCF,IAAIG,QAAQ,yBACY,mBAAVC,QAAwBA,OAAOC,IAC7CD,OAAO,CAAC,wBAAyBJ,KAEjCA,IAAIM,YANR,CAOG,SAASA,YACV,aAiDA,SAASC,YAAYC,OAAQC,MAC3B,IAAKD,OAAOE,eAAeD,MACzB,MAAM,IAAIE,MAAM,mBAAqBF,KAAO,mBAGhD,SAASG,QAAQC,IAAKC,OACpB,IAAKD,IAAK,MAAO,OACjB,IAAIE,MAAQ,GAQZ,OAPIF,eAAeG,QACbH,IAAII,aAAYF,MAAQ,KACxBF,IAAIK,UAASH,OAAS,KAC1BF,IAAMA,IAAIM,QAEVN,IAAMO,OAAOP,KAER,IAAIG,SAAkB,IAAVF,MAAkB,GAAK,KAAO,MAAQD,IAAM,IAAKE,OAGtE,SAASM,QAAQR,KACf,IAAKA,IAAK,OAAO,KACjB,GAAIA,IAAIS,MAAO,OAAOT,IACtB,GAAkB,iBAAPA,IAAiB,OAAOA,IAAIU,QAAQ,MAAO,KAEtD,IADA,IAAIC,OAAS,GACJC,EAAI,EAAGA,EAAIZ,IAAIa,OAAQD,IAC9BD,OAAOG,KAAKd,IAAIY,IAAMZ,IAAIY,GAAGF,QAAQ,MAAO,MAC9C,OAAOC,OAGT,SAASI,KAAKC,KAAMrB,SACdqB,KAAKC,MAAQD,KAAKF,OAAMpB,YAAYC,OAAQqB,KAAKC,MAAQD,KAAKF,MAClEI,KAAKC,MAAQpB,QAAQiB,KAAKG,OAC1BD,KAAKE,MAAQZ,QAAQQ,KAAKI,OAC1BF,KAAKF,KAAOA,KAGd,SAASK,cAAc1B,OAAQ2B,QAC7B,OAAO,SAASC,OAAQC,OACtB,GAAIA,MAAMC,QAAS,CACjB,IAAIC,KAAOF,MAAMC,QAAQE,QAGzB,OAF4B,GAAxBH,MAAMC,QAAQZ,SAAaW,MAAMC,QAAU,MAC/CF,OAAOK,KAAOF,KAAKG,KAAKhB,OACjBa,KAAKN,MAGd,GAAII,MAAMM,MAAO,CACf,GAAIN,MAAMM,MAAMC,KAAOR,OAAOS,MAAMR,MAAMM,MAAMC,KAAM,CACpD,IAAIE,IAAMT,MAAMM,MAAMI,UAAY,KAElC,OADAV,MAAMM,MAAQN,MAAMW,WAAa,KAC1BF,IAEP,IAAIA,IAAMT,MAAMM,MAAMM,KAAKhB,MAAMG,OAAQC,MAAMW,YAAaE,EAG5D,OAFIb,MAAMM,MAAMQ,UAAYD,EAAIb,MAAMM,MAAMQ,QAAQC,KAAKhB,OAAOiB,cAC9DjB,OAAOK,IAAML,OAAOkB,MAAQJ,EAAEK,OACzBT,IAKX,IADA,IAAIU,SAAWhD,OAAO6B,MAAMA,OACnBZ,EAAI,EAAGA,EAAI+B,SAAS9B,OAAQD,IAAK,CACxC,IAAIgC,KAAOD,SAAS/B,GAChBiC,UAAYD,KAAK5B,KAAK8B,KAAOvB,OAAOuB,QAAUvB,OAAOS,MAAMY,KAAKzB,OACpE,GAAI0B,QAAS,CACPD,KAAK5B,KAAKC,KACZO,MAAMA,MAAQoB,KAAK5B,KAAKC,KACf2B,KAAK5B,KAAKF,OAClBU,MAAMuB,QAAUvB,MAAMuB,MAAQ,KAAKjC,KAAKU,MAAMA,OAC/CA,MAAMA,MAAQoB,KAAK5B,KAAKF,MACf8B,KAAK5B,KAAKgC,KAAOxB,MAAMuB,OAASvB,MAAMuB,MAAMlC,SACrDW,MAAMA,MAAQA,MAAMuB,MAAMC,OAGxBJ,KAAK5B,KAAKoB,MACZa,eAAe3B,OAAQE,MAAOoB,KAAK5B,KAAKoB,KAAMQ,KAAKxB,OACjDwB,KAAK5B,KAAKkC,QACZ1B,MAAM0B,OAAOpC,KAAKS,OAAO4B,cAAgB7B,OAAO8B,YAC9CR,KAAK5B,KAAKqC,QACZ7B,MAAM0B,OAAOF,MACf,IAAI5B,MAAQwB,KAAKxB,MAEjB,GADIA,OAASA,MAAMX,QAAOW,MAAQA,MAAMyB,UACpCA,QAAQhC,OAAS,GAAK+B,KAAKxB,OAA8B,iBAAdwB,KAAKxB,MAAmB,CACrE,IAAK,IAAIkC,EAAI,EAAGA,EAAIT,QAAQhC,OAAQyC,IAC9BT,QAAQS,KACT9B,MAAMC,UAAYD,MAAMC,QAAU,KAAKX,KAAK,CAACe,KAAMgB,QAAQS,GAAIlC,MAAOwB,KAAKxB,MAAMkC,EAAI,KAE1F,OADA/B,OAAOgC,OAAOV,QAAQ,GAAGhC,QAAUgC,QAAQ,GAAKA,QAAQ,GAAGhC,OAAS,IAC7DO,MAAM,GACR,OAAIA,OAASA,MAAMoC,KACjBpC,MAAM,GAENA,OAKb,OADAG,OAAON,OACA,MAIX,SAASwC,IAAIC,EAAGC,GACd,GAAID,IAAMC,EAAG,OAAO,EACpB,IAAKD,GAAiB,iBAALA,IAAkBC,GAAiB,iBAALA,EAAe,OAAO,EACrE,IAAIC,MAAQ,EACZ,IAAK,IAAIC,QAAQH,EAAG,GAAIA,EAAE7D,eAAegE,MAAO,CAC9C,IAAKF,EAAE9D,eAAegE,QAAUJ,IAAIC,EAAEG,MAAOF,EAAEE,OAAQ,OAAO,EAC9DD,QAEF,IAAK,IAAIC,QAAQF,EAAOA,EAAE9D,eAAegE,OAAOD,QAChD,OAAgB,GAATA,MAGT,SAASX,eAAe3B,OAAQE,MAAOsC,KAAM1C,OAC3C,IAAI2C,KACJ,GAAID,KAAKE,WAAY,IAAK,IAAIC,EAAIzC,MAAM0C,iBAAkBD,IAAMF,KAAME,EAAIA,EAAEhD,MACtE6C,KAAKA,KAAOL,IAAIK,KAAKA,KAAMG,EAAEH,MAAQA,KAAK1B,MAAQ6B,EAAE7B,QAAM2B,KAAOE,GACvE,IAAI7B,KAAO2B,KAAOA,KAAK3B,KAAO0B,KAAK1B,MAAQ3C,WAAW0E,QAAQ7C,OAAQwC,KAAKA,MACvEM,OAASL,KAAOA,KAAKvC,MAAQ/B,WAAW4E,WAAWjC,MACnD0B,KAAKE,aAAeD,OACtBvC,MAAM0C,iBAAmB,CAAC9B,KAAMA,KAAM0B,KAAMA,KAAKA,KAAMtC,MAAO4C,OAAQnD,KAAMO,MAAM0C,mBAEpF1C,MAAMW,WAAaiC,OACnB5C,MAAMM,MAAQ,CAACM,KAAMA,KACNL,IAAK+B,KAAK/B,KAAOhC,QAAQ+D,KAAK/B,KAC9BO,QAASwB,KAAK/B,MAAyB,IAAlB+B,KAAKQ,UAAsBvE,QAAQ+D,KAAK/B,KAAK,GAClEG,SAAUd,OAASA,MAAMoC,KAAOpC,MAAMA,MAAMP,OAAS,GAAKO,OAG3E,SAASmD,QAAQvE,IAAKwE,KACpB,IAAK,IAAI5D,EAAI,EAAGA,EAAI4D,IAAI3D,OAAQD,IAAK,GAAI4D,IAAI5D,KAAOZ,IAAK,OAAO,EAGlE,SAASyE,eAAe9E,OAAQ+E,MAC9B,OAAO,SAASlD,MAAOmD,UAAWC,MAChC,GAAIpD,MAAMM,OAASN,MAAMM,MAAMM,KAAKc,OAClC,OAAO1B,MAAMM,MAAMM,KAAKc,OAAO1B,MAAMW,WAAYwC,UAAWC,MAC9D,GAAoB,MAAhBpD,MAAM0B,QAAkB1B,MAAMM,OAAS4C,KAAKG,kBAAoBN,QAAQ/C,MAAMA,MAAOkD,KAAKG,mBAAqB,EACjH,OAAOpF,WAAWqF,KAEpB,IAAIlD,IAAMJ,MAAM0B,OAAOrC,OAAS,EAAGkE,MAAQpF,OAAO6B,MAAMA,OACxDwD,KAAM,OAAS,CACb,IAAK,IAAIpE,EAAI,EAAGA,EAAImE,MAAMlE,OAAQD,IAAK,CACrC,IAAIgC,KAAOmC,MAAMnE,GACjB,GAAIgC,KAAK5B,KAAKqC,SAA0C,IAAhCT,KAAK5B,KAAKiE,kBAA6B,CAC7D,IAAI5C,EAAIO,KAAKzB,MAAMoB,KAAKoC,WACxB,GAAItC,GAAKA,EAAE,GAAI,CACbT,OACIgB,KAAK3B,MAAQ2B,KAAK9B,QAAMiE,MAAQpF,OAAOiD,KAAK3B,MAAQ2B,KAAK9B,OAC7D6D,UAAYA,UAAUO,MAAM7C,EAAE,GAAGxB,QACjC,SAASmE,OAIf,MAEF,OAAOpD,IAAM,EAAI,EAAIJ,MAAM0B,OAAOtB,MAvMtCnC,WAAW0F,iBAAmB,SAASvF,KAAMD,QAC3CF,WAAW2F,WAAWxF,KAAM,SAAS0B,QACnC,OAAO7B,WAAW4F,WAAW/D,OAAQ3B,WAIzCF,WAAW4F,WAAa,SAAS/D,OAAQ3B,QACvCD,YAAYC,OAAQ,SACpB,IAAI2F,QAAU,GAAIZ,KAAO/E,OAAO+E,MAAQ,GAAIa,gBAAiB,EAC7D,IAAK,IAAI/D,SAAS7B,OAAQ,GAAI6B,OAASkD,MAAQ/E,OAAOE,eAAe2B,OAEnE,IADA,IAAIgE,KAAOF,QAAQ9D,OAAS,GAAIiE,KAAO9F,OAAO6B,OACrCZ,EAAI,EAAGA,EAAI6E,KAAK5E,OAAQD,IAAK,CACpC,IAAII,KAAOyE,KAAK7E,GAChB4E,KAAK1E,KAAK,IAAIC,KAAKC,KAAMrB,UACrBqB,KAAKkC,QAAUlC,KAAKqC,UAAQkC,gBAAiB,GAGrD,IAAInD,KAAO,CACTiC,WAAY,WACV,MAAO,CAAC7C,MAAO,QAASC,QAAS,KACzBK,MAAO,KAAMK,WAAY,KACzBe,OAAQqC,eAAiB,GAAK,OAExCG,UAAW,SAASlE,OAClB,IAAImE,EAAI,CAACnE,MAAOA,MAAMA,MAAOC,QAASD,MAAMC,QACnCK,MAAON,MAAMM,MAAOK,WAAY,KAChCe,OAAQ1B,MAAM0B,QAAU1B,MAAM0B,OAAOgC,MAAM,IAChD1D,MAAMW,aACRwD,EAAExD,WAAa1C,WAAWiG,UAAUlE,MAAMM,MAAMM,KAAMZ,MAAMW,aAC1DX,MAAMuB,QACR4C,EAAE5C,MAAQvB,MAAMuB,MAAMmC,MAAM,IAC9B,IAAK,IAAInB,KAAOvC,MAAM0C,iBAAkBH,KAAMA,KAAOA,KAAK9C,KACxD0E,EAAEzB,iBAAmB,CAAC9B,KAAM2B,KAAK3B,KACX0B,KAAMC,KAAKD,KACXtC,MAAOuC,KAAKvC,OAASA,MAAMW,WAAawD,EAAExD,WAAa1C,WAAWiG,UAAU3B,KAAK3B,KAAM2B,KAAKvC,OAC5FP,KAAM0E,EAAEzB,kBAChC,OAAOyB,GAETvE,MAAOC,cAAciE,QAAShE,QAC9BsE,UAAW,SAASpE,OAAS,OAAOA,MAAMM,OAAS,CAACM,KAAMZ,MAAMM,MAAMM,KAAMZ,MAAOA,MAAMW,aACzFe,OAAQuB,eAAea,QAASZ,OAElC,GAAIA,KAAM,IAAK,IAAIb,QAAQa,KAAUA,KAAK7E,eAAegE,QACvDzB,KAAKyB,MAAQa,KAAKb,OACpB,OAAOzB","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function(name, states) {\n    CodeMirror.defineMode(name, function(config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function(config, states) {\n    ensureState(states, \"start\");\n    var states_ = {}, meta = states.meta || {}, hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [], orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function() {\n        return {state: \"start\", pending: null,\n                local: null, localState: null,\n                indent: hasIndentation ? [] : null};\n      },\n      copyState: function(state) {\n        var s = {state: state.state, pending: state.pending,\n                 local: state.local, localState: null,\n                 indent: state.indent && state.indent.slice(0)};\n        if (state.localState)\n          s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack)\n          s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next)\n          s.persistentStates = {mode: pers.mode,\n                                spec: pers.spec,\n                                state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n                                next: s.persistentStates};\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function(state) { return state.local && {mode: state.local.mode, state: state.localState}; },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop))\n      mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name))\n      throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      if (val.unicode) flags += \"u\"\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++)\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function(stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState), m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current())))\n            stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode)\n            enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent)\n            state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent)\n            state.indent.pop();\n          var token = rule.token\n          if (token && token.apply) token = token(matches)\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            for (var j = 2; j < matches.length; j++)\n              if (matches[j])\n                (state.pending || (state.pending = [])).push({text: matches[j], token: rule.token[j - 1]});\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers)\n      state.persistentStates = {mode: mode, spec: spec.spec, state: lState, next: state.persistentStates};\n\n    state.localState = lState;\n    state.local = {mode: mode,\n                   end: spec.end && toRegex(spec.end),\n                   endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n                   endToken: token && token.join ? token[token.length - 1] : token};\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function(state, textAfter, line) {\n      if (state.local && state.local.mode.indent)\n        return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1)\n        return CodeMirror.Pass;\n\n      var pos = state.indent.length - 1, rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});\n"],"file":"simple.js"}