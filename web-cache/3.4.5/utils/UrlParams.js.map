{"version":3,"sources":["utils/UrlParams.js"],"names":["define","require","exports","module","_","UrlParams","this","_store","prototype","parse","url","queryString","urlParams","p","self","indexOf","substring","window","document","location","search","trimRight","split","forEach","param","decodeURIComponent","put","name","value","get","remove","isEmpty","toString","strs","key","push","encodeURIComponent","join"],"mappings":"AAqBAA,OAAO,SAAUC,QAASC,QAASC,QAG/B,IAAIC,EAAIH,QAAQ,qBAKhB,SAASI,YACLC,KAAKC,OAAS,GAOlBF,UAAUG,UAAUC,MAAQ,SAAUC,KAClC,IAAIC,YAAc,GACdC,UACAC,EACAC,KAAOR,KAEXQ,KAAKP,OAAS,GAETG,KAE4B,IAAtBA,IAAIK,QAAQ,OACnBJ,YAAcD,IAAIM,UAAUN,IAAIK,QAAQ,KAAO,IAF/CJ,YAAcM,OAAOC,SAASC,SAASC,OAAOJ,UAAU,IAK5DL,YAAcA,YAAYU,eAGtBT,UAAYD,YAAYW,MAAM,MAEpBC,QAAQ,SAAUC,QACxBX,EAAIW,MAAMF,MAAM,MACd,GAAKT,EAAE,IAAM,GACfC,KAAKP,OAAOkB,mBAAmBZ,EAAE,KAAOY,mBAAmBZ,EAAE,OAUzER,UAAUG,UAAUkB,IAAM,SAAUC,KAAMC,OACtCtB,KAAKC,OAAOoB,MAAQC,OAQxBvB,UAAUG,UAAUqB,IAAM,SAAUF,MAChC,OAAOrB,KAAKC,OAAOoB,OAOvBtB,UAAUG,UAAUsB,OAAS,SAAUH,aAC5BrB,KAAKC,OAAOoB,OAOvBtB,UAAUG,UAAUuB,QAAU,SAAUJ,MACpC,OAAOvB,EAAE2B,QAAQzB,KAAKC,SAO1BF,UAAUG,UAAUwB,SAAW,WAC3B,IAAIC,KAAO,GACPnB,KAAOR,KAMX,OAJAF,EAAEmB,QAFSjB,KAEIC,OAAQ,SAAUqB,MAAOM,KACpCD,KAAKE,KAAKC,mBAAmBF,KAAO,IAAME,mBAAmBR,UAG1DK,KAAKI,KAAK,MAIrBnC,QAAQG,UAAYA","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2012 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\ndefine(function (require, exports, module) {\n\n\n    var _ = require(\"thirdparty/lodash\");\n\n    /**\n     * Convert between URL querystring and name/value pairs. Decodes and encodes URL parameters.\n     */\n    function UrlParams() {\n        this._store = {};\n    }\n\n    /**\n     * Parse the window location by default. Optionally specify a URL to parse.\n     * @param {string} url\n     */\n    UrlParams.prototype.parse = function (url) {\n        var queryString = \"\",\n            urlParams,\n            p,\n            self = this;\n\n        self._store = {};\n\n        if (!url) {\n            queryString = window.document.location.search.substring(1);\n        } else if (url.indexOf(\"?\") !== -1) {\n            queryString = url.substring(url.indexOf(\"?\") + 1);\n        }\n\n        queryString = queryString.trimRight();\n\n        if (queryString) {\n            urlParams = queryString.split(\"&\");\n\n            urlParams.forEach(function (param) {\n                p = param.split(\"=\");\n                p[1] = p[1] || \"\";\n                self._store[decodeURIComponent(p[0])] = decodeURIComponent(p[1]);\n            });\n        }\n    };\n\n    /**\n     * Store a name/value string pair\n     * @param {!string} name\n     * @param {!string} value\n     */\n    UrlParams.prototype.put = function (name, value) {\n        this._store[name] = value;\n    };\n\n    /**\n     * Retrieve a value by name\n     * @param {!string} name\n     * @return {string}\n     */\n    UrlParams.prototype.get = function (name) {\n        return this._store[name];\n    };\n\n    /**\n     * Remove a name/value string pair\n     * @param {!string} name\n     */\n    UrlParams.prototype.remove = function (name) {\n        delete this._store[name];\n    };\n\n    /**\n     * Returns true if the parameter list is empty, else returns false.\n     * @return {boolean}\n     */\n    UrlParams.prototype.isEmpty = function (name) {\n        return _.isEmpty(this._store);\n    };\n\n    /**\n     * Encode name/value pairs as URI components.\n     * @return {string}\n     */\n    UrlParams.prototype.toString = function () {\n        var strs = [],\n            self = this;\n\n        _.forEach(self._store, function (value, key) {\n            strs.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(value));\n        });\n\n        return strs.join(\"&\");\n    };\n\n    // Define public API\n    exports.UrlParams = UrlParams;\n});\n"],"file":"UrlParams.js"}