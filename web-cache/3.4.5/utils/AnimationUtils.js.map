{"version":3,"sources":["utils/AnimationUtils.js"],"names":["define","require","exports","module","_","Async","_detectTransitionEvent","event","el","window","document","createElement","transitions","OTransition","MozTransition","WebkitTransition","transition","forEach","value","key","undefined","style","_transitionEvent","animateUsingClass","target","animClass","timeoutDuration","result","$","Deferred","$target","finish","e","resolve","cleanup","removeClass","off","is","addClass","on","withTimeout","promise","done"],"mappings":"AAwBAA,OAAO,SAAUC,QAASC,QAASC,QAG/B,IAAIC,EAAQH,QAAQ,qBAChBI,MAAQJ,QAAQ,eAOpB,SAASK,yBACL,IAAIC,MAAOC,GAAKC,OAAOC,SAASC,cAAc,eAE1CC,YAAc,CACdC,YAAe,iBACfC,cAAiB,gBACjBC,iBAAoB,sBACpBC,WAAc,iBAQlB,OALAZ,EAAEa,QAAQL,YAAa,SAAUM,MAAOC,UACdC,IAAlBZ,GAAGa,MAAMF,OACTZ,MAAQW,SAGTX,MAGX,IAAIe,iBAAmBhB,yBAYvB,SAASiB,kBAAkBC,OAAQC,UAAWC,iBAC1C,IAAIC,OAAU,IAAIC,EAAEC,SAChBC,QAAUF,EAAEJ,QAIhB,SAASO,OAAOC,GACRA,EAAER,SAAWA,QACbG,OAAOM,UAIf,SAASC,UACLJ,QACKK,YAAYV,WACZW,IAAId,iBAAkBS,QAgB/B,OA3BAL,gBAAkBA,iBAAmB,IAcjCI,QAAQO,GAAG,WAEXV,OAAOM,UAKPH,QACKQ,SAASb,WACTc,GAAGjB,iBAAkBS,QAIvB1B,MAAMmC,YAAYb,OAAOc,UAAWf,iBAAiB,GACvDgB,KAAKR,SAGdhC,QAAQqB,kBAAoBA","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2013 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/**\n * Utilities for dealing with animations in the UI.\n */\ndefine(function (require, exports, module) {\n\n\n    var _     = require(\"thirdparty/lodash\"),\n        Async = require(\"utils/Async\");\n\n    /**\n     * @private\n     * Detect the browser's supported transitionend event.\n     * @return {string} The supported transitionend event name.\n     */\n    function _detectTransitionEvent() {\n        var event, el = window.document.createElement(\"fakeelement\");\n\n        var transitions = {\n            \"OTransition\": \"oTransitionEnd\",\n            \"MozTransition\": \"transitionend\",\n            \"WebkitTransition\": \"webkitTransitionEnd\",\n            \"transition\": \"transitionend\"\n        };\n\n        _.forEach(transitions, function (value, key) {\n            if (el.style[key] !== undefined) {\n                event = value;\n            }\n        });\n        return event;\n    }\n\n    var _transitionEvent = _detectTransitionEvent();\n\n    /**\n     * Start an animation by adding the given class to the given target. When the\n     * animation is complete, removes the class, clears the event handler we attach\n     * to watch for the animation to finish, and resolves the returned promise.\n     *\n     * @param {Element} target The DOM node to animate.\n     * @param {string} animClass The class that applies the animation/transition to the target.\n     * @param {number=} timeoutDuration Time to wait in ms before rejecting promise. Default is 400.\n     * @return {$.Promise} A promise that is resolved when the animation completes. Never rejected.\n     */\n    function animateUsingClass(target, animClass, timeoutDuration) {\n        var result  = new $.Deferred(),\n            $target = $(target);\n\n        timeoutDuration = timeoutDuration || 400;\n\n        function finish(e) {\n            if (e.target === target) {\n                result.resolve();\n            }\n        }\n\n        function cleanup() {\n            $target\n                .removeClass(animClass)\n                .off(_transitionEvent, finish);\n        }\n\n        if ($target.is(\":hidden\")) {\n            // Don't do anything if the element is hidden because transitionEnd wouldn't fire\n            result.resolve();\n        } else {\n            // Note that we can't just use $.one() here because we only want to remove\n            // the handler when we get the transition end event for the correct target (not\n            // a child).\n            $target\n                .addClass(animClass)\n                .on(_transitionEvent, finish);\n        }\n\n        // Use timeout in case transition end event is not sent\n        return Async.withTimeout(result.promise(), timeoutDuration, true)\n            .done(cleanup);\n    }\n\n    exports.animateUsingClass = animateUsingClass;\n});\n"],"file":"AnimationUtils.js"}