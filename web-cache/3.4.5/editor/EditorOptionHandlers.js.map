{"version":3,"sources":["editor/EditorOptionHandlers.js"],"names":["define","require","exports","module","AppInit","Editor","Commands","CommandManager","PreferencesManager","Strings","_","SHOW_LINE_NUMBERS","STYLE_ACTIVE_LINE","WORD_WRAP","CLOSE_BRACKETS","AUTO_HIDE_SEARCH","_optionMapping","_updateCheckedState","name","mapping","get","setChecked","_getToggler","prefName","set","_init","each","commandName","getShowLineNumbers","_toggleLinePadding","TOGGLE_LINE_NUMBERS","TOGGLE_ACTIVE_LINE","TOGGLE_WORD_WRAP","TOGGLE_CLOSE_BRACKETS","TOGGLE_SEARCH_AUTOHIDE","Object","keys","forEach","preference","on","register","CMD_TOGGLE_LINE_NUMBERS","CMD_TOGGLE_ACTIVE_LINE","CMD_TOGGLE_WORD_WRAP","CMD_TOGGLE_CLOSE_BRACKETS","CMD_TOGGLE_SEARCH_AUTOHIDE","htmlReady"],"mappings":"AAqBAA,OAAO,SAAUC,QAASC,QAASC,QAG/B,IAAIC,QAAsBH,QAAQ,iBAC9BI,OAAsBJ,QAAQ,iBAAiBI,OAC/CC,SAAsBL,QAAQ,oBAC9BM,eAAsBN,QAAQ,0BAC9BO,mBAAsBP,QAAQ,kCAC9BQ,QAAsBR,QAAQ,WAC9BS,EAAsBT,QAAQ,qBAG9BU,kBAAoB,kBACpBC,kBAAoB,kBACpBC,UAAoB,WACpBC,eAAoB,gBACpBC,iBAAoB,iBAQpBC,eAAiB,GAgBrB,SAASC,oBAAoBC,MACzB,IAAIC,QAAUH,eAAeE,MACxBC,SAGLZ,eAAea,IAAID,SAASE,WAAWb,mBAAmBY,IAAIF,OAgBlE,SAASI,YAAYC,UACjB,OAAO,WACHf,mBAAmBgB,IAAID,UAAWf,mBAAmBY,IAAIG,YAIjE,SAASE,QACLf,EAAEgB,KAAKV,eAAgB,SAAUW,YAAaJ,UAC1ChB,eAAea,IAAIO,aAAaN,WAAWb,mBAAmBY,IAAIG,aAGjElB,OAAOuB,sBACRvB,OAAOwB,oBAAmB,GAhDlCb,eAAgC,gBAAIV,SAASwB,oBAC7Cd,eAAgC,gBAAIV,SAASyB,mBAC7Cf,eAAwB,SAAIV,SAAS0B,iBACrChB,eAA6B,cAAIV,SAAS2B,sBAC1CjB,eAA+B,eAAIV,SAAS4B,uBAoB5CC,OAAOC,KAAKpB,gBAAgBqB,QAAQ,SAAUC,YAC1C9B,mBAAmB+B,GAAG,SAAUD,WAAY,WACxCrB,oBAAoBqB,gBA0B5B/B,eAAeiC,SAAS/B,QAAQgC,wBAAyBnC,SAASwB,oBAAqBR,YAjE/D,oBAkExBf,eAAeiC,SAAS/B,QAAQiC,uBAAwBpC,SAASyB,mBAAoBT,YAjE7D,oBAkExBf,eAAeiC,SAAS/B,QAAQkC,qBAAsBrC,SAAS0B,iBAAkBV,YAAYT,YAC7FN,eAAeiC,SAAS/B,QAAQmC,0BAA2BtC,SAAS2B,sBAAuBX,YAAYR,iBACvGP,eAAeiC,SAAS/B,QAAQoC,2BAA4BvC,SAAS4B,uBAAwBZ,YAjErE,mBAmExBlB,QAAQ0C,UAAUrB","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2013 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\ndefine(function (require, exports, module) {\n\n\n    var AppInit             = require(\"utils/AppInit\"),\n        Editor              = require(\"editor/Editor\").Editor,\n        Commands            = require(\"command/Commands\"),\n        CommandManager      = require(\"command/CommandManager\"),\n        PreferencesManager  = require(\"preferences/PreferencesManager\"),\n        Strings             = require(\"strings\"),\n        _                   = require(\"thirdparty/lodash\");\n\n    // Constants for the preferences referred to in this file\n    var SHOW_LINE_NUMBERS = \"showLineNumbers\",\n        STYLE_ACTIVE_LINE = \"styleActiveLine\",\n        WORD_WRAP         = \"wordWrap\",\n        CLOSE_BRACKETS    = \"closeBrackets\",\n        AUTO_HIDE_SEARCH  = \"autoHideSearch\";\n\n\n    /**\n     * @private\n     *\n     * Maps from preference names to the command names needed to update the checked status.\n     */\n    var _optionMapping = {};\n    _optionMapping[SHOW_LINE_NUMBERS] = Commands.TOGGLE_LINE_NUMBERS;\n    _optionMapping[STYLE_ACTIVE_LINE] = Commands.TOGGLE_ACTIVE_LINE;\n    _optionMapping[WORD_WRAP] = Commands.TOGGLE_WORD_WRAP;\n    _optionMapping[CLOSE_BRACKETS] = Commands.TOGGLE_CLOSE_BRACKETS;\n    _optionMapping[AUTO_HIDE_SEARCH] = Commands.TOGGLE_SEARCH_AUTOHIDE;\n\n\n\n    /**\n     * @private\n     *\n     * Updates the command checked status based on the preference name given.\n     *\n     * @param {string} name Name of preference that has changed\n     */\n    function _updateCheckedState(name) {\n        var mapping = _optionMapping[name];\n        if (!mapping) {\n            return;\n        }\n        CommandManager.get(mapping).setChecked(PreferencesManager.get(name));\n    }\n\n    // Listen to preference changes for the preferences we care about\n    Object.keys(_optionMapping).forEach(function (preference) {\n        PreferencesManager.on(\"change\", preference, function () {\n            _updateCheckedState(preference);\n        });\n    });\n\n    /**\n     * @private\n     * Creates a function that will toggle the named preference.\n     *\n     * @param {string} prefName Name of preference that should be toggled by the function\n     */\n    function _getToggler(prefName) {\n        return function () {\n            PreferencesManager.set(prefName, !PreferencesManager.get(prefName));\n        };\n    }\n\n    function _init() {\n        _.each(_optionMapping, function (commandName, prefName) {\n            CommandManager.get(commandName).setChecked(PreferencesManager.get(prefName));\n        });\n\n        if (!Editor.getShowLineNumbers()) {\n            Editor._toggleLinePadding(true);\n        }\n    }\n\n    CommandManager.register(Strings.CMD_TOGGLE_LINE_NUMBERS, Commands.TOGGLE_LINE_NUMBERS, _getToggler(SHOW_LINE_NUMBERS));\n    CommandManager.register(Strings.CMD_TOGGLE_ACTIVE_LINE, Commands.TOGGLE_ACTIVE_LINE, _getToggler(STYLE_ACTIVE_LINE));\n    CommandManager.register(Strings.CMD_TOGGLE_WORD_WRAP, Commands.TOGGLE_WORD_WRAP, _getToggler(WORD_WRAP));\n    CommandManager.register(Strings.CMD_TOGGLE_CLOSE_BRACKETS, Commands.TOGGLE_CLOSE_BRACKETS, _getToggler(CLOSE_BRACKETS));\n    CommandManager.register(Strings.CMD_TOGGLE_SEARCH_AUTOHIDE, Commands.TOGGLE_SEARCH_AUTOHIDE, _getToggler(AUTO_HIDE_SEARCH));\n\n    AppInit.htmlReady(_init);\n});\n"],"file":"EditorOptionHandlers.js"}