{"version":3,"sources":["thirdparty/tinycolor.js"],"names":["Math","trimLeft","trimRight","tinyCounter","mathRound","round","mathMin","min","mathMax","max","mathRandom","random","tinycolor","color","opts","this","rgb","inputToRGB","_originalInput","_r","r","_g","g","_b","b","_a","a","_roundA","_format","format","_gradientType","gradientType","_ok","ok","_tc_id","s","v","l","stringInputToObject","isValidCSSUnit","rgbToRgb","String","substr","h","convertToPercentage","hsvToRgb","hslToRgb","hasOwnProperty","boundAlpha","bound01","rgbToHsl","d","hue2rgb","p","q","t","rgbToHsv","i","floor","f","mod","rgbToHex","allow3Char","hex","pad2","toString","charAt","join","rgbaToHex","allow4Char","convertDecimalToHex","rgbaToArgbHex","desaturate","amount","hsl","toHsl","clamp01","saturate","greyscale","lighten","brighten","toRgb","darken","spin","hue","complement","triad","tetrad","splitcomplement","analogous","results","slices","part","ret","push","monochromatic","hsv","toHsv","modification","prototype","isDark","getBrightness","isLight","isValid","getOriginalInput","getFormat","getAlpha","getLuminance","RsRGB","GsRGB","BsRGB","R","G","B","pow","setAlpha","value","toHsvString","toHslString","toHex","toHexString","toHex8","toHex8String","toRgbString","toPercentageRgb","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","secondHex8String","formatSet","formattedString","hasAlpha","needsAlphaFormat","clone","_applyModification","fn","args","apply","concat","slice","call","arguments","_applyCombination","fromRatio","newColor","equals","color1","color2","mix","rgb1","rgb2","rgba","readability","c1","c2","isReadable","wcag2","wcag2Parms","out","validateWCAG2Parms","level","size","mostReadable","baseColor","colorList","bestColor","bestScore","includeFallbackColors","length","names","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","flip","o","flipped","parseFloat","isNaN","n","isOnePointZero","processPercent","isPercentage","parseInt","abs","val","parseIntFromHex","indexOf","c","convertHexToDecimal","matchers","PERMISSIVE_MATCH3","CSS_UNIT","PERMISSIVE_MATCH4","RegExp","hsla","hsva","hex3","hex6","hex4","hex8","CSS_INTEGER","CSS_NUMBER","exec","replace","toLowerCase","named","match","parms","toUpperCase","module","exports","define","amd","window"],"mappings":"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","sourcesContent":["// TinyColor v1.4.2\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n"],"file":"tinycolor.js"}