{"version":3,"sources":["thirdparty/CodeMirror/keymap/sublime.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","cmds","commands","Pos","findPosSubword","doc","start","dir","ch","clipPos","line","getLine","length","state","type","startPos","pos","e","i","next","charAt","cat","isWordChar","toUpperCase","moveSubword","cm","extendSelectionsBy","range","display","shift","extend","empty","head","from","to","insertLine","above","isReadOnly","Pass","operation","len","listSelections","newSelection","last","at","replaceRange","indentLine","push","anchor","setSelections","execCommand","wordAt","end","word","slice","addCursorToSelection","ranges","newRanges","newAnchor","findPosV","goalColumn","newHead","cursorCoords","left","newRange","isSelectedRange","cmpPos","goSubwordLeft","goSubwordRight","scrollLineUp","info","getScrollInfo","somethingSelected","visibleBottomLine","lineAtHeight","top","clientHeight","getCursor","scrollTo","defaultTextHeight","scrollLineDown","visibleTopLine","splitSelectionByLine","lineRanges","singleSelectionTop","setSelection","scroll","selectLine","extended","insertLineAfter","insertLineBefore","selectNextOccurrence","fullWord","sublimeFindFullWord","sel","text","getRange","query","RegExp","cur","getSearchCursor","found","findNext","firstLine","addSelection","skipAndSelectNextOccurrence","prevAnchor","prevHead","filter","addCursorToPrevLine","addCursorToNextLine","mirror","selectBetweenBrackets","opening","scanForBracket","closing","indexOf","puncType","test","undefined","sortLines","caseSensitive","direction","toSort","selected","lastLine","lines","sort","a","b","au","bu","modifyWordOrSelection","indices","replacements","replaceSelections","getTarget","findAndGoTo","forward","target","findPrevious","selectScope","goToBracket","getTokenTypeAt","prev","swapLineUp","linesToMove","newSels","scrollIntoView","swapLineDown","toggleCommentIndented","toggleComment","indent","joinLines","joined","offset","obj","actual","exec","duplicateLine","rangeCount","reverseSortLines","sortLinesInsensitive","reverseSortLinesInsensitive","nextBookmark","marks","sublimeBookmarks","current","find","prevBookmark","unshift","pop","toggleBookmark","findMarksAt","findMarks","j","sublimeBookmark","clear","k","splice","markText","clearWhenEmpty","clearBookmarks","selectBookmarks","smartBackspace","cursors","indentUnit","getOption","cursor","toStartOfLine","column","countColumn","deletePos","findPosH","prevIndent","findColumn","delLineRight","upcaseAtCursor","str","downcaseAtCursor","toLowerCase","setSublimeMark","sublimeMark","setBookmark","selectToSublimeMark","deleteToSublimeMark","tmp","sublimeKilled","swapWithSublimeMark","setCursor","sublimeYank","replaceSelection","showInCenter","bottom","findUnder","findUnderPrevious","findAllUnder","matches","primaryIndex","keyMap","macSublime","Cmd-Left","Shift-Tab","Shift-Ctrl-K","Alt-Q","Ctrl-Left","Ctrl-Right","Ctrl-Alt-Up","Ctrl-Alt-Down","Cmd-L","Shift-Cmd-L","Esc","Cmd-Enter","Shift-Cmd-Enter","Cmd-D","Shift-Cmd-Space","Shift-Cmd-M","Cmd-M","Cmd-Ctrl-Up","Cmd-Ctrl-Down","Cmd-/","Cmd-J","Shift-Cmd-D","F5","Shift-F5","Cmd-F5","Shift-Cmd-F5","F2","Shift-F2","Cmd-F2","Shift-Cmd-F2","Alt-F2","Backspace","Cmd-K Cmd-D","Cmd-K Cmd-K","Cmd-K Cmd-U","Cmd-K Cmd-L","Cmd-K Cmd-Space","Cmd-K Cmd-A","Cmd-K Cmd-W","Cmd-K Cmd-X","Cmd-K Cmd-Y","Cmd-K Cmd-C","Cmd-K Cmd-G","Cmd-K Cmd-Backspace","Cmd-K Cmd-1","Cmd-K Cmd-0","Cmd-K Cmd-J","Ctrl-Shift-Up","Ctrl-Shift-Down","Cmd-F3","Shift-Cmd-F3","Alt-F3","Shift-Cmd-[","Shift-Cmd-]","Cmd-I","Shift-Cmd-I","Cmd-H","F3","Shift-F3","fallthrough","normalizeKeyMap","pcSublime","Ctrl-T","Alt-Left","Alt-Right","Ctrl-Up","Ctrl-Down","Ctrl-L","Shift-Ctrl-L","Ctrl-Enter","Shift-Ctrl-Enter","Ctrl-D","Shift-Ctrl-Space","Shift-Ctrl-M","Ctrl-M","Shift-Ctrl-Up","Shift-Ctrl-Down","Ctrl-/","Ctrl-J","Shift-Ctrl-D","F9","Shift-F9","Ctrl-F9","Shift-Ctrl-F9","Ctrl-F2","Shift-Ctrl-F2","Ctrl-K Ctrl-D","Ctrl-K Ctrl-K","Ctrl-K Ctrl-U","Ctrl-K Ctrl-L","Ctrl-K Ctrl-Space","Ctrl-K Ctrl-A","Ctrl-K Ctrl-W","Ctrl-K Ctrl-X","Ctrl-K Ctrl-Y","Ctrl-K Ctrl-C","Ctrl-K Ctrl-G","Ctrl-K Ctrl-Backspace","Ctrl-K Ctrl-1","Ctrl-K Ctrl-0","Ctrl-K Ctrl-J","Ctrl-F3","Shift-Ctrl-F3","Shift-Ctrl-[","Shift-Ctrl-]","Ctrl-I","Shift-Ctrl-I","Ctrl-H","mac","default","macDefault","sublime"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// A rough approximation of Sublime Text's keybindings\n// Depends on addon/search/searchcursor.js and optionally addon/dialog/dialogs.js\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"), require(\"../addon/search/searchcursor\"), require(\"../addon/edit/matchbrackets\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\", \"../addon/search/searchcursor\", \"../addon/edit/matchbrackets\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var cmds = CodeMirror.commands;\n  var Pos = CodeMirror.Pos;\n\n  // This is not exactly Sublime's algorithm. I couldn't make heads or tails of that.\n  function findPosSubword(doc, start, dir) {\n    if (dir < 0 && start.ch == 0) return doc.clipPos(Pos(start.line - 1));\n    var line = doc.getLine(start.line);\n    if (dir > 0 && start.ch >= line.length) return doc.clipPos(Pos(start.line + 1, 0));\n    var state = \"start\", type, startPos = start.ch;\n    for (var pos = startPos, e = dir < 0 ? 0 : line.length, i = 0; pos != e; pos += dir, i++) {\n      var next = line.charAt(dir < 0 ? pos - 1 : pos);\n      var cat = next != \"_\" && CodeMirror.isWordChar(next) ? \"w\" : \"o\";\n      if (cat == \"w\" && next.toUpperCase() == next) cat = \"W\";\n      if (state == \"start\") {\n        if (cat != \"o\") { state = \"in\"; type = cat; }\n        else startPos = pos + dir\n      } else if (state == \"in\") {\n        if (type != cat) {\n          if (type == \"w\" && cat == \"W\" && dir < 0) pos--;\n          if (type == \"W\" && cat == \"w\" && dir > 0) { // From uppercase to lowercase\n            if (pos == startPos + 1) { type = \"w\"; continue; }\n            else pos--;\n          }\n          break;\n        }\n      }\n    }\n    return Pos(start.line, pos);\n  }\n\n  function moveSubword(cm, dir) {\n    cm.extendSelectionsBy(function(range) {\n      if (cm.display.shift || cm.doc.extend || range.empty())\n        return findPosSubword(cm.doc, range.head, dir);\n      else\n        return dir < 0 ? range.from() : range.to();\n    });\n  }\n\n  cmds.goSubwordLeft = function(cm) { moveSubword(cm, -1); };\n  cmds.goSubwordRight = function(cm) { moveSubword(cm, 1); };\n\n  cmds.scrollLineUp = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleBottomLine = cm.lineAtHeight(info.top + info.clientHeight, \"local\");\n      if (cm.getCursor().line >= visibleBottomLine)\n        cm.execCommand(\"goLineUp\");\n    }\n    cm.scrollTo(null, info.top - cm.defaultTextHeight());\n  };\n  cmds.scrollLineDown = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleTopLine = cm.lineAtHeight(info.top, \"local\")+1;\n      if (cm.getCursor().line <= visibleTopLine)\n        cm.execCommand(\"goLineDown\");\n    }\n    cm.scrollTo(null, info.top + cm.defaultTextHeight());\n  };\n\n  cmds.splitSelectionByLine = function(cm) {\n    var ranges = cm.listSelections(), lineRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      for (var line = from.line; line <= to.line; ++line)\n        if (!(to.line > from.line && line == to.line && to.ch == 0))\n          lineRanges.push({anchor: line == from.line ? from : Pos(line, 0),\n                           head: line == to.line ? to : Pos(line)});\n    }\n    cm.setSelections(lineRanges, 0);\n  };\n\n  cmds.singleSelectionTop = function(cm) {\n    var range = cm.listSelections()[0];\n    cm.setSelection(range.anchor, range.head, {scroll: false});\n  };\n\n  cmds.selectLine = function(cm) {\n    var ranges = cm.listSelections(), extended = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      extended.push({anchor: Pos(range.from().line, 0),\n                     head: Pos(range.to().line + 1, 0)});\n    }\n    cm.setSelections(extended);\n  };\n\n  function insertLine(cm, above) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    cm.operation(function() {\n      var len = cm.listSelections().length, newSelection = [], last = -1;\n      for (var i = 0; i < len; i++) {\n        var head = cm.listSelections()[i].head;\n        if (head.line <= last) continue;\n        var at = Pos(head.line + (above ? 0 : 1), 0);\n        cm.replaceRange(\"\\n\", at, null, \"+insertLine\");\n        cm.indentLine(at.line, null, true);\n        newSelection.push({head: at, anchor: at});\n        last = head.line + 1;\n      }\n      cm.setSelections(newSelection);\n    });\n    cm.execCommand(\"indentAuto\");\n  }\n\n  cmds.insertLineAfter = function(cm) { return insertLine(cm, false); };\n\n  cmds.insertLineBefore = function(cm) { return insertLine(cm, true); };\n\n  function wordAt(cm, pos) {\n    var start = pos.ch, end = start, line = cm.getLine(pos.line);\n    while (start && CodeMirror.isWordChar(line.charAt(start - 1))) --start;\n    while (end < line.length && CodeMirror.isWordChar(line.charAt(end))) ++end;\n    return {from: Pos(pos.line, start), to: Pos(pos.line, end), word: line.slice(start, end)};\n  }\n\n  cmds.selectNextOccurrence = function(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    var fullWord = cm.state.sublimeFindFullWord == cm.doc.sel;\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      cm.setSelection(word.from, word.to);\n      fullWord = true;\n    } else {\n      var text = cm.getRange(from, to);\n      var query = fullWord ? new RegExp(\"\\\\b\" + text + \"\\\\b\") : text;\n      var cur = cm.getSearchCursor(query, to);\n      var found = cur.findNext();\n      if (!found) {\n        cur = cm.getSearchCursor(query, Pos(cm.firstLine(), 0));\n        found = cur.findNext();\n      }\n      if (!found || isSelectedRange(cm.listSelections(), cur.from(), cur.to())) return\n      cm.addSelection(cur.from(), cur.to());\n    }\n    if (fullWord)\n      cm.state.sublimeFindFullWord = cm.doc.sel;\n  };\n\n  cmds.skipAndSelectNextOccurrence = function(cm) {\n    var prevAnchor = cm.getCursor(\"anchor\"), prevHead = cm.getCursor(\"head\");\n    cmds.selectNextOccurrence(cm);\n    if (CodeMirror.cmpPos(prevAnchor, prevHead) != 0) {\n      cm.doc.setSelections(cm.doc.listSelections()\n          .filter(function (sel) {\n            return sel.anchor != prevAnchor || sel.head != prevHead;\n          }));\n    }\n  }\n\n  function addCursorToSelection(cm, dir) {\n    var ranges = cm.listSelections(), newRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      var newAnchor = cm.findPosV(\n          range.anchor, dir, \"line\", range.anchor.goalColumn);\n      var newHead = cm.findPosV(\n          range.head, dir, \"line\", range.head.goalColumn);\n      newAnchor.goalColumn = range.anchor.goalColumn != null ?\n          range.anchor.goalColumn : cm.cursorCoords(range.anchor, \"div\").left;\n      newHead.goalColumn = range.head.goalColumn != null ?\n          range.head.goalColumn : cm.cursorCoords(range.head, \"div\").left;\n      var newRange = {anchor: newAnchor, head: newHead};\n      newRanges.push(range);\n      newRanges.push(newRange);\n    }\n    cm.setSelections(newRanges);\n  }\n  cmds.addCursorToPrevLine = function(cm) { addCursorToSelection(cm, -1); };\n  cmds.addCursorToNextLine = function(cm) { addCursorToSelection(cm, 1); };\n\n  function isSelectedRange(ranges, from, to) {\n    for (var i = 0; i < ranges.length; i++)\n      if (CodeMirror.cmpPos(ranges[i].from(), from) == 0 &&\n          CodeMirror.cmpPos(ranges[i].to(), to) == 0) return true\n    return false\n  }\n\n  var mirror = \"(){}[]\";\n  function selectBetweenBrackets(cm) {\n    var ranges = cm.listSelections(), newRanges = []\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], pos = range.head, opening = cm.scanForBracket(pos, -1);\n      if (!opening) return false;\n      for (;;) {\n        var closing = cm.scanForBracket(pos, 1);\n        if (!closing) return false;\n        if (closing.ch == mirror.charAt(mirror.indexOf(opening.ch) + 1)) {\n          var startPos = Pos(opening.pos.line, opening.pos.ch + 1);\n          if (CodeMirror.cmpPos(startPos, range.from()) == 0 &&\n              CodeMirror.cmpPos(closing.pos, range.to()) == 0) {\n            opening = cm.scanForBracket(opening.pos, -1);\n            if (!opening) return false;\n          } else {\n            newRanges.push({anchor: startPos, head: closing.pos});\n            break;\n          }\n        }\n        pos = Pos(closing.pos.line, closing.pos.ch + 1);\n      }\n    }\n    cm.setSelections(newRanges);\n    return true;\n  }\n\n  cmds.selectScope = function(cm) {\n    selectBetweenBrackets(cm) || cm.execCommand(\"selectAll\");\n  };\n  cmds.selectBetweenBrackets = function(cm) {\n    if (!selectBetweenBrackets(cm)) return CodeMirror.Pass;\n  };\n\n  function puncType(type) {\n    return !type ? null : /\\bpunctuation\\b/.test(type) ? type : undefined\n  }\n\n  cmds.goToBracket = function(cm) {\n    cm.extendSelectionsBy(function(range) {\n      var next = cm.scanForBracket(range.head, 1, puncType(cm.getTokenTypeAt(range.head)));\n      if (next && CodeMirror.cmpPos(next.pos, range.head) != 0) return next.pos;\n      var prev = cm.scanForBracket(range.head, -1, puncType(cm.getTokenTypeAt(Pos(range.head.line, range.head.ch + 1))));\n      return prev && Pos(prev.pos.line, prev.pos.ch + 1) || range.head;\n    });\n  };\n\n  cmds.swapLineUp = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.firstLine() - 1, newSels = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from().line - 1, to = range.to().line;\n      newSels.push({anchor: Pos(range.anchor.line - 1, range.anchor.ch),\n                    head: Pos(range.head.line - 1, range.head.ch)});\n      if (range.to().ch == 0 && !range.empty()) --to;\n      if (from > at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = 0; i < linesToMove.length; i += 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        if (to > cm.lastLine())\n          cm.replaceRange(\"\\n\" + line, Pos(cm.lastLine()), null, \"+swapLine\");\n        else\n          cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.setSelections(newSels);\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.swapLineDown = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.lastLine() + 1;\n    for (var i = ranges.length - 1; i >= 0; i--) {\n      var range = ranges[i], from = range.to().line + 1, to = range.from().line;\n      if (range.to().ch == 0 && !range.empty()) from--;\n      if (from < at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = linesToMove.length - 2; i >= 0; i -= 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        if (from == cm.lastLine())\n          cm.replaceRange(\"\", Pos(from - 1), Pos(from), \"+swapLine\");\n        else\n          cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.toggleCommentIndented = function(cm) {\n    cm.toggleComment({ indent: true });\n  }\n\n  cmds.joinLines = function(cm) {\n    var ranges = cm.listSelections(), joined = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from();\n      var start = from.line, end = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == end)\n        end = ranges[++i].to().line;\n      joined.push({start: start, end: end, anchor: !range.empty() && from});\n    }\n    cm.operation(function() {\n      var offset = 0, ranges = [];\n      for (var i = 0; i < joined.length; i++) {\n        var obj = joined[i];\n        var anchor = obj.anchor && Pos(obj.anchor.line - offset, obj.anchor.ch), head;\n        for (var line = obj.start; line <= obj.end; line++) {\n          var actual = line - offset;\n          if (line == obj.end) head = Pos(actual, cm.getLine(actual).length + 1);\n          if (actual < cm.lastLine()) {\n            cm.replaceRange(\" \", Pos(actual), Pos(actual + 1, /^\\s*/.exec(cm.getLine(actual + 1))[0].length));\n            ++offset;\n          }\n        }\n        ranges.push({anchor: anchor || head, head: head});\n      }\n      cm.setSelections(ranges, 0);\n    });\n  };\n\n  cmds.duplicateLine = function(cm) {\n    cm.operation(function() {\n      var rangeCount = cm.listSelections().length;\n      for (var i = 0; i < rangeCount; i++) {\n        var range = cm.listSelections()[i];\n        if (range.empty())\n          cm.replaceRange(cm.getLine(range.head.line) + \"\\n\", Pos(range.head.line, 0));\n        else\n          cm.replaceRange(cm.getRange(range.from(), range.to()), range.from());\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n\n  function sortLines(cm, caseSensitive, direction) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), toSort = [], selected;\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      if (range.empty()) continue;\n      var from = range.from().line, to = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == to)\n        to = ranges[++i].to().line;\n      if (!ranges[i].to().ch) to--;\n      toSort.push(from, to);\n    }\n    if (toSort.length) selected = true;\n    else toSort.push(cm.firstLine(), cm.lastLine());\n\n    cm.operation(function() {\n      var ranges = [];\n      for (var i = 0; i < toSort.length; i += 2) {\n        var from = toSort[i], to = toSort[i + 1];\n        var start = Pos(from, 0), end = Pos(to);\n        var lines = cm.getRange(start, end, false);\n        if (caseSensitive)\n          lines.sort(function(a, b) { return a < b ? -direction : a == b ? 0 : direction; });\n        else\n          lines.sort(function(a, b) {\n            var au = a.toUpperCase(), bu = b.toUpperCase();\n            if (au != bu) { a = au; b = bu; }\n            return a < b ? -direction : a == b ? 0 : direction;\n          });\n        cm.replaceRange(lines, start, end);\n        if (selected) ranges.push({anchor: start, head: Pos(to + 1, 0)});\n      }\n      if (selected) cm.setSelections(ranges, 0);\n    });\n  }\n\n  cmds.sortLines = function(cm) { sortLines(cm, true, 1); };\n  cmds.reverseSortLines = function(cm) { sortLines(cm, true, -1); };\n  cmds.sortLinesInsensitive = function(cm) { sortLines(cm, false, 1); };\n  cmds.reverseSortLinesInsensitive = function(cm) { sortLines(cm, false, -1); };\n\n  cmds.nextBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      var current = marks.shift();\n      var found = current.find();\n      if (found) {\n        marks.push(current);\n        return cm.setSelection(found.from, found.to);\n      }\n    }\n  };\n\n  cmds.prevBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      marks.unshift(marks.pop());\n      var found = marks[marks.length - 1].find();\n      if (!found)\n        marks.pop();\n      else\n        return cm.setSelection(found.from, found.to);\n    }\n  };\n\n  cmds.toggleBookmark = function(cm) {\n    var ranges = cm.listSelections();\n    var marks = cm.state.sublimeBookmarks || (cm.state.sublimeBookmarks = []);\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      var found = ranges[i].empty() ? cm.findMarksAt(from) : cm.findMarks(from, to);\n      for (var j = 0; j < found.length; j++) {\n        if (found[j].sublimeBookmark) {\n          found[j].clear();\n          for (var k = 0; k < marks.length; k++)\n            if (marks[k] == found[j])\n              marks.splice(k--, 1);\n          break;\n        }\n      }\n      if (j == found.length)\n        marks.push(cm.markText(from, to, {sublimeBookmark: true, clearWhenEmpty: false}));\n    }\n  };\n\n  cmds.clearBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) for (var i = 0; i < marks.length; i++) marks[i].clear();\n    marks.length = 0;\n  };\n\n  cmds.selectBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks, ranges = [];\n    if (marks) for (var i = 0; i < marks.length; i++) {\n      var found = marks[i].find();\n      if (!found)\n        marks.splice(i--, 0);\n      else\n        ranges.push({anchor: found.from, head: found.to});\n    }\n    if (ranges.length)\n      cm.setSelections(ranges, 0);\n  };\n\n  function modifyWordOrSelection(cm, mod) {\n    cm.operation(function() {\n      var ranges = cm.listSelections(), indices = [], replacements = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.empty()) { indices.push(i); replacements.push(\"\"); }\n        else replacements.push(mod(cm.getRange(range.from(), range.to())));\n      }\n      cm.replaceSelections(replacements, \"around\", \"case\");\n      for (var i = indices.length - 1, at; i >= 0; i--) {\n        var range = ranges[indices[i]];\n        if (at && CodeMirror.cmpPos(range.head, at) > 0) continue;\n        var word = wordAt(cm, range.head);\n        at = word.from;\n        cm.replaceRange(mod(word.word), word.from, word.to);\n      }\n    });\n  }\n\n  cmds.smartBackspace = function(cm) {\n    if (cm.somethingSelected()) return CodeMirror.Pass;\n\n    cm.operation(function() {\n      var cursors = cm.listSelections();\n      var indentUnit = cm.getOption(\"indentUnit\");\n\n      for (var i = cursors.length - 1; i >= 0; i--) {\n        var cursor = cursors[i].head;\n        var toStartOfLine = cm.getRange({line: cursor.line, ch: 0}, cursor);\n        var column = CodeMirror.countColumn(toStartOfLine, null, cm.getOption(\"tabSize\"));\n\n        // Delete by one character by default\n        var deletePos = cm.findPosH(cursor, -1, \"char\", false);\n\n        if (toStartOfLine && !/\\S/.test(toStartOfLine) && column % indentUnit == 0) {\n          var prevIndent = new Pos(cursor.line,\n            CodeMirror.findColumn(toStartOfLine, column - indentUnit, indentUnit));\n\n          // Smart delete only if we found a valid prevIndent location\n          if (prevIndent.ch != cursor.ch) deletePos = prevIndent;\n        }\n\n        cm.replaceRange(\"\", deletePos, cursor, \"+delete\");\n      }\n    });\n  };\n\n  cmds.delLineRight = function(cm) {\n    cm.operation(function() {\n      var ranges = cm.listSelections();\n      for (var i = ranges.length - 1; i >= 0; i--)\n        cm.replaceRange(\"\", ranges[i].anchor, Pos(ranges[i].to().line), \"+delete\");\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.upcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toUpperCase(); });\n  };\n  cmds.downcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toLowerCase(); });\n  };\n\n  cmds.setSublimeMark = function(cm) {\n    if (cm.state.sublimeMark) cm.state.sublimeMark.clear();\n    cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n  };\n  cmds.selectToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) cm.setSelection(cm.getCursor(), found);\n  };\n  cmds.deleteToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      var from = cm.getCursor(), to = found;\n      if (CodeMirror.cmpPos(from, to) > 0) { var tmp = to; to = from; from = tmp; }\n      cm.state.sublimeKilled = cm.getRange(from, to);\n      cm.replaceRange(\"\", from, to);\n    }\n  };\n  cmds.swapWithSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      cm.state.sublimeMark.clear();\n      cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n      cm.setCursor(found);\n    }\n  };\n  cmds.sublimeYank = function(cm) {\n    if (cm.state.sublimeKilled != null)\n      cm.replaceSelection(cm.state.sublimeKilled, null, \"paste\");\n  };\n\n  cmds.showInCenter = function(cm) {\n    var pos = cm.cursorCoords(null, \"local\");\n    cm.scrollTo(null, (pos.top + pos.bottom) / 2 - cm.getScrollInfo().clientHeight / 2);\n  };\n\n  function getTarget(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      from = word.from;\n      to = word.to;\n    }\n    return {from: from, to: to, query: cm.getRange(from, to), word: word};\n  }\n\n  function findAndGoTo(cm, forward) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var query = target.query;\n    var cur = cm.getSearchCursor(query, forward ? target.to : target.from);\n\n    if (forward ? cur.findNext() : cur.findPrevious()) {\n      cm.setSelection(cur.from(), cur.to());\n    } else {\n      cur = cm.getSearchCursor(query, forward ? Pos(cm.firstLine(), 0)\n                                              : cm.clipPos(Pos(cm.lastLine())));\n      if (forward ? cur.findNext() : cur.findPrevious())\n        cm.setSelection(cur.from(), cur.to());\n      else if (target.word)\n        cm.setSelection(target.from, target.to);\n    }\n  };\n  cmds.findUnder = function(cm) { findAndGoTo(cm, true); };\n  cmds.findUnderPrevious = function(cm) { findAndGoTo(cm,false); };\n  cmds.findAllUnder = function(cm) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var cur = cm.getSearchCursor(target.query);\n    var matches = [];\n    var primaryIndex = -1;\n    while (cur.findNext()) {\n      matches.push({anchor: cur.from(), head: cur.to()});\n      if (cur.from().line <= target.from.line && cur.from().ch <= target.from.ch)\n        primaryIndex++;\n    }\n    cm.setSelections(matches, primaryIndex);\n  };\n\n\n  var keyMap = CodeMirror.keyMap;\n  keyMap.macSublime = {\n    \"Cmd-Left\": \"goLineStartSmart\",\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-Left\": \"goSubwordLeft\",\n    \"Ctrl-Right\": \"goSubwordRight\",\n    \"Ctrl-Alt-Up\": \"scrollLineUp\",\n    \"Ctrl-Alt-Down\": \"scrollLineDown\",\n    \"Cmd-L\": \"selectLine\",\n    \"Shift-Cmd-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Cmd-Enter\": \"insertLineAfter\",\n    \"Shift-Cmd-Enter\": \"insertLineBefore\",\n    \"Cmd-D\": \"selectNextOccurrence\",\n    \"Shift-Cmd-Space\": \"selectScope\",\n    \"Shift-Cmd-M\": \"selectBetweenBrackets\",\n    \"Cmd-M\": \"goToBracket\",\n    \"Cmd-Ctrl-Up\": \"swapLineUp\",\n    \"Cmd-Ctrl-Down\": \"swapLineDown\",\n    \"Cmd-/\": \"toggleCommentIndented\",\n    \"Cmd-J\": \"joinLines\",\n    \"Shift-Cmd-D\": \"duplicateLine\",\n    \"F5\": \"sortLines\",\n    \"Shift-F5\": \"reverseSortLines\",\n    \"Cmd-F5\": \"sortLinesInsensitive\",\n    \"Shift-Cmd-F5\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Cmd-F2\": \"toggleBookmark\",\n    \"Shift-Cmd-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Cmd-K Cmd-D\": \"skipAndSelectNextOccurrence\",\n    \"Cmd-K Cmd-K\": \"delLineRight\",\n    \"Cmd-K Cmd-U\": \"upcaseAtCursor\",\n    \"Cmd-K Cmd-L\": \"downcaseAtCursor\",\n    \"Cmd-K Cmd-Space\": \"setSublimeMark\",\n    \"Cmd-K Cmd-A\": \"selectToSublimeMark\",\n    \"Cmd-K Cmd-W\": \"deleteToSublimeMark\",\n    \"Cmd-K Cmd-X\": \"swapWithSublimeMark\",\n    \"Cmd-K Cmd-Y\": \"sublimeYank\",\n    \"Cmd-K Cmd-C\": \"showInCenter\",\n    \"Cmd-K Cmd-G\": \"clearBookmarks\",\n    \"Cmd-K Cmd-Backspace\": \"delLineLeft\",\n    \"Cmd-K Cmd-1\": \"foldAll\",\n    \"Cmd-K Cmd-0\": \"unfoldAll\",\n    \"Cmd-K Cmd-J\": \"unfoldAll\",\n    \"Ctrl-Shift-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Shift-Down\": \"addCursorToNextLine\",\n    \"Cmd-F3\": \"findUnder\",\n    \"Shift-Cmd-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Cmd-[\": \"fold\",\n    \"Shift-Cmd-]\": \"unfold\",\n    \"Cmd-I\": \"findIncremental\",\n    \"Shift-Cmd-I\": \"findIncrementalReverse\",\n    \"Cmd-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"macDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.macSublime);\n\n  keyMap.pcSublime = {\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-T\": \"transposeChars\",\n    \"Alt-Left\": \"goSubwordLeft\",\n    \"Alt-Right\": \"goSubwordRight\",\n    \"Ctrl-Up\": \"scrollLineUp\",\n    \"Ctrl-Down\": \"scrollLineDown\",\n    \"Ctrl-L\": \"selectLine\",\n    \"Shift-Ctrl-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Ctrl-Enter\": \"insertLineAfter\",\n    \"Shift-Ctrl-Enter\": \"insertLineBefore\",\n    \"Ctrl-D\": \"selectNextOccurrence\",\n    \"Shift-Ctrl-Space\": \"selectScope\",\n    \"Shift-Ctrl-M\": \"selectBetweenBrackets\",\n    \"Ctrl-M\": \"goToBracket\",\n    \"Shift-Ctrl-Up\": \"swapLineUp\",\n    \"Shift-Ctrl-Down\": \"swapLineDown\",\n    \"Ctrl-/\": \"toggleCommentIndented\",\n    \"Ctrl-J\": \"joinLines\",\n    \"Shift-Ctrl-D\": \"duplicateLine\",\n    \"F9\": \"sortLines\",\n    \"Shift-F9\": \"reverseSortLines\",\n    \"Ctrl-F9\": \"sortLinesInsensitive\",\n    \"Shift-Ctrl-F9\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Ctrl-F2\": \"toggleBookmark\",\n    \"Shift-Ctrl-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Ctrl-K Ctrl-D\": \"skipAndSelectNextOccurrence\",\n    \"Ctrl-K Ctrl-K\": \"delLineRight\",\n    \"Ctrl-K Ctrl-U\": \"upcaseAtCursor\",\n    \"Ctrl-K Ctrl-L\": \"downcaseAtCursor\",\n    \"Ctrl-K Ctrl-Space\": \"setSublimeMark\",\n    \"Ctrl-K Ctrl-A\": \"selectToSublimeMark\",\n    \"Ctrl-K Ctrl-W\": \"deleteToSublimeMark\",\n    \"Ctrl-K Ctrl-X\": \"swapWithSublimeMark\",\n    \"Ctrl-K Ctrl-Y\": \"sublimeYank\",\n    \"Ctrl-K Ctrl-C\": \"showInCenter\",\n    \"Ctrl-K Ctrl-G\": \"clearBookmarks\",\n    \"Ctrl-K Ctrl-Backspace\": \"delLineLeft\",\n    \"Ctrl-K Ctrl-1\": \"foldAll\",\n    \"Ctrl-K Ctrl-0\": \"unfoldAll\",\n    \"Ctrl-K Ctrl-J\": \"unfoldAll\",\n    \"Ctrl-Alt-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Alt-Down\": \"addCursorToNextLine\",\n    \"Ctrl-F3\": \"findUnder\",\n    \"Shift-Ctrl-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Ctrl-[\": \"fold\",\n    \"Shift-Ctrl-]\": \"unfold\",\n    \"Ctrl-I\": \"findIncremental\",\n    \"Shift-Ctrl-I\": \"findIncrementalReverse\",\n    \"Ctrl-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"pcDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.pcSublime);\n\n  var mac = keyMap.default == keyMap.macDefault;\n  keyMap.sublime = mac ? keyMap.macSublime : keyMap.pcSublime;\n});\n"],"file":"sublime.js"}