{"version":3,"sources":["extensions/default/MDNDocs/InlineDocsViewer.js"],"names":["define","require","exports","module","Dialogs","brackets","getModule","ExtensionUtils","InlineWidget","KeyEvent","Strings","Mustache","Metrics","inlineEditorTemplate","SCROLL_LINE_HEIGHT","InlineDocsViewer","PropName","PropDetails","call","this","templateVars","propName","summary","SUMMARY","fullscreenSummary","VALUES","length","propValues","url","URL","html","render","$wrapperDiv","$","$htmlContent","append","addLinkTooltips","_sizeEditorToContent","bind","_handleWheelScroll","$scroller","find","on","$moreinfo","_logAnalyticsData","_onKeydown","loadStyleSheet","prototype","Object","create","constructor","parentClass","_handleScrolling","event","scrollingUp","scroller","stopPropagation","scrollTop","preventDefault","clientHeight","scrollHeight","originalEvent","wheelDeltaY","currentTarget","keyCode","scrollPos","altKey","ctrlKey","metaKey","shiftKey","DOM_VK_UP","Math","max","DOM_VK_PAGE_UP","DOM_VK_DOWN","min","DOM_VK_PAGE_DOWN","onAdded","apply","arguments","window","focus","addEventListener","onClosed","off","removeEventListener","hostEditor","setInlineWidgetHeight","height","countEvent"],"mappings":"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","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2013 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/**\n * Inline widget to display MDNDocs JSON data nicely formatted\n */\ndefine(function (require, exports, module) {\n\n\n    // Load Brackets modules\n    var Dialogs         = brackets.getModule(\"widgets/Dialogs\"),\n        ExtensionUtils  = brackets.getModule(\"utils/ExtensionUtils\"),\n        InlineWidget    = brackets.getModule(\"editor/InlineWidget\").InlineWidget,\n        KeyEvent        = brackets.getModule(\"utils/KeyEvent\"),\n        Strings         = brackets.getModule(\"strings\"),\n        Mustache        = brackets.getModule(\"thirdparty/mustache/mustache\"),\n        Metrics    = brackets.getModule(\"utils/Metrics\");\n\n    // Load template\n    var inlineEditorTemplate = require(\"text!InlineDocsViewer.html\");\n\n    // Lines height for scrolling\n    var SCROLL_LINE_HEIGHT = 40;\n\n    // Load CSS\n    ExtensionUtils.loadStyleSheet(module, \"MDNDocs.less\");\n\n\n    /**\n     * @param {!string} cssPropName\n     * @param {!{SUMMARY:string, URL:string, VALUES:?Array.<{value:string, description:string}>}} cssPropDetails\n     */\n    function InlineDocsViewer(PropName, PropDetails) {\n        InlineWidget.call(this);\n\n        var templateVars = {\n            propName: PropName,\n            summary: PropDetails.SUMMARY,\n            fullscreenSummary: !(PropDetails.VALUES && PropDetails.VALUES.length),\n            propValues: PropDetails.VALUES || [],\n            url: PropDetails.URL,\n            Strings: Strings\n        };\n\n        var html = Mustache.render(inlineEditorTemplate, templateVars);\n\n        this.$wrapperDiv = $(html);\n        this.$htmlContent.append(this.$wrapperDiv);\n\n        Dialogs.addLinkTooltips(this.$wrapperDiv);\n\n        this._sizeEditorToContent   = this._sizeEditorToContent.bind(this);\n        this._handleWheelScroll     = this._handleWheelScroll.bind(this);\n\n        this.$scroller = this.$wrapperDiv.find(\".scroller\");\n        this.$scroller.on(\"mousewheel\", this._handleWheelScroll);\n        this.$moreinfo = this.$wrapperDiv.find(\".more-info\");\n        this.$moreinfo.on(\"click\", this._logAnalyticsData);\n        this._onKeydown = this._onKeydown.bind(this);\n    }\n\n    InlineDocsViewer.prototype = Object.create(InlineWidget.prototype);\n    InlineDocsViewer.prototype.constructor = InlineDocsViewer;\n    InlineDocsViewer.prototype.parentClass = InlineWidget.prototype;\n\n    InlineDocsViewer.prototype.$wrapperDiv = null;\n    InlineDocsViewer.prototype.$scroller = null;\n\n    /**\n     * Handle scrolling.\n     *\n     * @param {Event} event Keyboard event or mouse scrollwheel event\n     * @param {boolean} scrollingUp Is event to scroll up?\n     * @param {DOMElement} scroller Element to scroll\n     * @return {boolean} indication whether key was handled\n     */\n    InlineDocsViewer.prototype._handleScrolling = function (event, scrollingUp, scroller) {\n        // We need to block the event from both the host CodeMirror code (by stopping bubbling) and the\n        // browser's native behavior (by preventing default). We preventDefault() *only* when the docs\n        // scroller is at its limit (when an ancestor would get scrolled instead); otherwise we'd block\n        // normal scrolling of the docs themselves.\n        event.stopPropagation();\n        if (scrollingUp && scroller.scrollTop === 0) {\n            event.preventDefault();\n            return true;\n        } else if (!scrollingUp && scroller.scrollTop + scroller.clientHeight >= scroller.scrollHeight) {\n            event.preventDefault();\n            return true;\n        }\n\n        return false;\n    };\n\n    /** Don't allow scrollwheel/trackpad to bubble up to host editor - makes scrolling docs painful */\n    InlineDocsViewer.prototype._handleWheelScroll = function (event) {\n        var scrollingUp = (event.originalEvent.wheelDeltaY > 0),\n            scroller = event.currentTarget;\n\n        // If content has no scrollbar, let host editor scroll normally\n        if (scroller.clientHeight >= scroller.scrollHeight) {\n            return;\n        }\n\n        this._handleScrolling(event, scrollingUp, scroller);\n    };\n\n\n    /**\n     * Convert keydown events into navigation actions.\n     *\n     * @param {KeyboardEvent} event\n     * @return {boolean} indication whether key was handled\n     */\n    InlineDocsViewer.prototype._onKeydown = function (event) {\n        var keyCode  = event.keyCode,\n            scroller = this.$scroller[0],\n            scrollPos;\n\n        // Ignore key events with modifier keys\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n            return false;\n        }\n\n        // Handle keys that we're interested in\n        scrollPos = scroller.scrollTop;\n\n        switch (keyCode) {\n        case KeyEvent.DOM_VK_UP:\n            scrollPos = Math.max(0, scrollPos - SCROLL_LINE_HEIGHT);\n            break;\n        case KeyEvent.DOM_VK_PAGE_UP:\n            scrollPos = Math.max(0, scrollPos - scroller.clientHeight);\n            break;\n        case KeyEvent.DOM_VK_DOWN:\n            scrollPos = Math.min(scroller.scrollHeight - scroller.clientHeight,\n                                 scrollPos + SCROLL_LINE_HEIGHT);\n            break;\n        case KeyEvent.DOM_VK_PAGE_DOWN:\n            scrollPos = Math.min(scroller.scrollHeight - scroller.clientHeight,\n                                 scrollPos + scroller.clientHeight);\n            break;\n        default:\n            // Ignore other keys\n            return false;\n        }\n\n        scroller.scrollTop = scrollPos;\n\n        // Disallow further processing\n        event.stopPropagation();\n        event.preventDefault();\n        return true;\n    };\n\n    InlineDocsViewer.prototype.onAdded = function () {\n        InlineDocsViewer.prototype.parentClass.onAdded.apply(this, arguments);\n\n        // Set height initially, and again whenever width might have changed (word wrap)\n        this._sizeEditorToContent();\n        $(window).on(\"resize\", this._sizeEditorToContent);\n\n        // Set focus\n        this.$scroller[0].focus();\n        this.$wrapperDiv[0].addEventListener(\"keydown\", this._onKeydown, true);\n    };\n\n    InlineDocsViewer.prototype.onClosed = function () {\n        InlineDocsViewer.prototype.parentClass.onClosed.apply(this, arguments);\n\n        $(window).off(\"resize\", this._sizeEditorToContent);\n        this.$wrapperDiv[0].removeEventListener(\"keydown\", this._onKeydown, true);\n    };\n\n    InlineDocsViewer.prototype._sizeEditorToContent = function () {\n        this.hostEditor.setInlineWidgetHeight(this, this.$wrapperDiv.height() + 20, true);\n    };\n\n    /**\n     * Send analytics data for Quick Doc \"readMore\" action\n     *\n     * @return {boolean} false\n     */\n    InlineDocsViewer.prototype._logAnalyticsData = function () {\n        Metrics.countEvent(\n            \"MDNDocs\",\n            \"QuickDoc\",\n            \"ReadMore\"\n        );\n        return false;\n    };\n\n\n    module.exports = InlineDocsViewer;\n});\n"],"file":"InlineDocsViewer.js"}