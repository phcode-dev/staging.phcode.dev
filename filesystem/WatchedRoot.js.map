{"version":3,"sources":["filesystem/WatchedRoot.js"],"names":["define","require","exports","module","WatchedRoot","entry","filter","filterGlobs","this","INACTIVE","STARTING","ACTIVE","prototype","status"],"mappings":"AAqBAA,OAAO,SAAUC,QAASC,QAASC,QAkB/B,SAASC,YAAYC,MAAOC,OAAQC,aAChCC,KAAKH,MAAQA,MACbG,KAAKF,OAASA,OACdE,KAAKD,YAAcA,YAIvBH,YAAYK,SAAW,EACvBL,YAAYM,SAAW,EACvBN,YAAYO,OAAS,EAKrBP,YAAYQ,UAAUP,MAAQ,KAK9BD,YAAYQ,UAAUN,OAAS,KAK/BF,YAAYQ,UAAUL,YAAc,KAKpCH,YAAYQ,UAAUC,OAAST,YAAYK,SAI3CN,OAAOD,QAAUE","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2013 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\ndefine(function (require, exports, module) {\n\n\n    /*\n     * Represents file or directory structure watched by the FileSystem. If the\n     * entry is a directory, all children (that pass the supplied filter function)\n     * are also watched. A WatchedRoot object begins and ends its life in the\n     * INACTIVE state. While in the process of starting up watchers, the WatchedRoot\n     * is in the STARTING state. When watchers are ready, the WatchedRoot enters\n     * the ACTIVE state.\n     *\n     * See the FileSystem class for more details.\n     *\n     * @constructor\n     * @param {File|Directory} entry\n     * @param {function(string, string):boolean} filter\n     * @param {Array<string>} filterGlobs\n     */\n    function WatchedRoot(entry, filter, filterGlobs) {\n        this.entry = entry;\n        this.filter = filter;\n        this.filterGlobs = filterGlobs;\n    }\n\n    // Status constants\n    WatchedRoot.INACTIVE = 0;\n    WatchedRoot.STARTING = 1;\n    WatchedRoot.ACTIVE = 2;\n\n    /**\n     * @type {File|Directory}\n     */\n    WatchedRoot.prototype.entry = null;\n\n    /**\n     * @type {function(string, string):boolean}\n     */\n    WatchedRoot.prototype.filter = null;\n\n    /**\n     * @type {Array<string>}\n     */\n    WatchedRoot.prototype.filterGlobs = null;\n\n    /**\n     * @type {number}\n     */\n    WatchedRoot.prototype.status = WatchedRoot.INACTIVE;\n\n\n    // Export this class\n    module.exports = WatchedRoot;\n});\n"],"file":"WatchedRoot.js"}