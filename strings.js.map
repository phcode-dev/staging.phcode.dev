{"version":3,"sources":["strings.js"],"names":["define","require","exports","module","_","strings","urls","stringsApp","StringUtils","additionalGlobals","$","extend","parsedVersion","exec","brackets","metadata","version","APP_NAME","name","APP_TITLE","config","app_title","TWITTER_NAME","twitter_name","VERSION","VERSION_MAJOR","VERSION_MINOR","VERSION_PATCH","buildtype","BUILD_TYPE","RELEASE_BUILD","PRERELEASE_BUILD","DEVELOPMENT_BUILD","forEach","value","key","item","replace","RegExp"],"mappings":"AA2BAA,OAAO,SAAUC,QAASC,QAASC,QAG/B,IAAIC,EAAIH,QAAQ,qBAEZI,QAAcJ,QAAQ,oBACtBK,KAAcL,QAAQ,iBACtBM,WAAcN,QAAQ,wBACtBO,YAAcP,QAAQ,qBAG1BA,QAAQ,gBAGR,IAAIQ,kBAAoBC,EAAEC,OAAO,GAAIL,MACjCM,cAAgB,+BAA+BC,KAAKC,SAASC,SAASC,SAE1EP,kBAAkBQ,SAAgBH,SAASC,SAASG,MAAQb,QAAQY,SACpER,kBAAkBU,UAAgBL,SAASM,OAAOC,WAAahB,QAAQY,SACvER,kBAAkBa,aAAgBR,SAASM,OAAOG,aAClDd,kBAAkBe,QAAgBV,SAASC,SAASC,QACpDP,kBAAkBgB,cAAgBb,cAAc,GAChDH,kBAAkBiB,cAAgBd,cAAc,GAChDH,kBAAkBkB,cAAgBf,cAAc,GAEd,eAA9BE,SAASM,OAAOQ,UAChBnB,kBAAkBoB,WAAaxB,QAAQyB,cACF,YAA9BhB,SAASM,OAAOQ,UACvBnB,kBAAkBoB,WAAaxB,QAAQ0B,iBAEvCtB,kBAAkBoB,WAAaxB,QAAQ2B,kBAI3C5B,EAAE6B,QAAQ5B,QAAS,SAAU6B,MAAOC,KAChC/B,EAAE6B,QAAQxB,kBAAmB,SAAU2B,KAAMlB,MACzCb,QAAQ8B,KAAO9B,QAAQ8B,KAAKE,QAAQ,IAAIC,OAAO,IAAMpB,KAAO,IAAK,KAAMT,kBAAkBS,WAKjGd,EAAE6B,QAAQ1B,WAAY,SAAU2B,MAAOC,KACnC/B,EAAE6B,QAAQxB,kBAAmB,SAAU2B,KAAMlB,MACzCX,WAAW4B,KAAO5B,WAAW4B,KAAKE,QAAQ,IAAIC,OAAO,IAAMpB,KAAO,IAAK,KAAMT,kBAAkBS,SAEnGb,QAAQ8B,KAAO5B,WAAW4B,OAG9BhC,OAAOD,QAAUG","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2012 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/**\n * This file provides the interface to user visible strings in Brackets. Code that needs\n * to display strings should should load this module by calling `var Strings = require(\"strings\")`.\n * The i18n plugin will dynamically load the strings for the right locale and populate\n * the exports variable. See src\\nls\\strings.js for the master file of English strings.\n */\ndefine(function (require, exports, module) {\n\n\n    var _ = require(\"thirdparty/lodash\");\n\n    var strings     = require(\"i18n!nls/strings\"),\n        urls        = require(\"i18n!nls/urls\"),\n        stringsApp  = require(\"i18n!nls/strings-app\"),\n        StringUtils = require(\"utils/StringUtils\");\n\n    // make sure the global brackets variable is loaded\n    require(\"utils/Global\");\n\n    // Add URLs as additional globals\n    var additionalGlobals = $.extend({}, urls),\n        parsedVersion = /([0-9]+)\\.([0-9]+)\\.([0-9]+)/.exec(brackets.metadata.version);\n\n    additionalGlobals.APP_NAME      = brackets.metadata.name || strings.APP_NAME;\n    additionalGlobals.APP_TITLE     = brackets.config.app_title || strings.APP_NAME;\n    additionalGlobals.TWITTER_NAME  = brackets.config.twitter_name;\n    additionalGlobals.VERSION       = brackets.metadata.version;\n    additionalGlobals.VERSION_MAJOR = parsedVersion[1];\n    additionalGlobals.VERSION_MINOR = parsedVersion[2];\n    additionalGlobals.VERSION_PATCH = parsedVersion[3];\n\n    if (brackets.config.buildtype === 'production') {\n        additionalGlobals.BUILD_TYPE = strings.RELEASE_BUILD;\n    } else if (brackets.config.buildtype === 'staging') {\n        additionalGlobals.BUILD_TYPE = strings.PRERELEASE_BUILD;\n    } else {\n        additionalGlobals.BUILD_TYPE = strings.DEVELOPMENT_BUILD;\n    }\n\n    // Insert application strings\n    _.forEach(strings, function (value, key) {\n        _.forEach(additionalGlobals, function (item, name) {\n            strings[key] = strings[key].replace(new RegExp(\"{\" + name + \"}\", \"g\"), additionalGlobals[name]);\n        });\n    });\n\n    // Append or overlay additional, product-specific strings\n    _.forEach(stringsApp, function (value, key) {\n        _.forEach(additionalGlobals, function (item, name) {\n            stringsApp[key] = stringsApp[key].replace(new RegExp(\"{\" + name + \"}\", \"g\"), additionalGlobals[name]);\n        });\n        strings[key] = stringsApp[key];\n    });\n\n    module.exports = strings;\n\n});\n"],"file":"strings.js"}