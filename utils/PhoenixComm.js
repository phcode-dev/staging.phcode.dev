define(function(require,exports,module){const EventDispatcher=require("utils/EventDispatcher"),_phoenixBroadcastChannel=new BroadcastChannel("PhoenixComm"),PHOENIX_INSTANCE_ID="PH-"+Math.round(1e12*Math.random());Phoenix.PHOENIX_INSTANCE_ID=PHOENIX_INSTANCE_ID;const EVENT_PHOENIX_CLOSING="phoenixClosing",EVENT_PHOENIX_OPENED="phoenixOpened",_EVENT_PHOENIX_INSTANCE_DETAILS="phoenixInstanceDetails",_phoenixInstanceDetails={};function broadcast(eventType,data){_phoenixBroadcastChannel.postMessage({eventType:eventType,data:data})}function getAllInstanceDetails(){return _phoenixInstanceDetails}function _processBroadcastMessage(event){event.data&&event.data.eventType?exports.trigger(event.data.eventType,event.data.data):console.error("Unknown event type for _phoenixBroadcastChannel message: ",event)}function _getInstanceDetails(){return{instanceID:PHOENIX_INSTANCE_ID,isTestWindow:Phoenix.isTestWindow}}Phoenix.PHOENIX_INSTANCE_DETAILS=_phoenixInstanceDetails,_phoenixBroadcastChannel.onmessage=_processBroadcastMessage,EventDispatcher.makeEventDispatcher(exports),broadcast("phoenixOpened",_getInstanceDetails()),addEventListener("beforeunload",function(){broadcast("phoenixClosing",PHOENIX_INSTANCE_ID)}),exports.on("phoenixClosing",(_event,instanceID)=>{delete _phoenixInstanceDetails[instanceID]}),exports.on("phoenixOpened",(_event,instanceDetails)=>{_phoenixInstanceDetails[instanceDetails.instanceID]=instanceDetails,broadcast("phoenixInstanceDetails",_getInstanceDetails())}),exports.on("phoenixInstanceDetails",(_event,instanceDetails)=>{_phoenixInstanceDetails[instanceDetails.instanceID]=instanceDetails}),exports.EVENT_PHOENIX_CLOSING="phoenixClosing",exports.EVENT_PHOENIX_OPENED="phoenixOpened",exports.broadcast=broadcast,exports.getAllInstanceDetails=getAllInstanceDetails,exports.PHOENIX_INSTANCE_ID=PHOENIX_INSTANCE_ID});
//# sourceMappingURL=PhoenixComm.js.map
