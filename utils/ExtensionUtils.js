define(function(require,exports,module){var Async=require("utils/Async"),FileSystem=require("filesystem/FileSystem"),FileUtils=require("file/FileUtils"),PathUtils=require("thirdparty/path-utils/path-utils"),PreferencesManager=require("preferences/PreferencesManager");function addEmbeddedStyleSheet(css){return $("<style>").text(css).appendTo("head")[0]}function addLinkedStyleSheet(url,deferred){var attributes={type:"text/css",rel:"stylesheet",href:url},$link=$("<link/>").attr(attributes);return deferred&&$link.on("load",deferred.resolve).on("error",deferred.reject),$link.appendTo("head"),$link[0]}function isAbsolutePathOrUrl(pathOrUrl){return"win"===brackets.platform?PathUtils.isAbsoluteUrl(pathOrUrl):FileSystem.isAbsolutePath(pathOrUrl)}function parseLessCode(code,url){var result=new $.Deferred,options;if(url){var dir=url.slice(0,url.lastIndexOf("/")+1);options={filename:url,rootpath:dir},isAbsolutePathOrUrl(url)&&(options.currentFileInfo={currentDirectory:dir,entryPath:dir,filename:url,rootFilename:url,rootpath:dir})}return less.render(code,options,function onParse(err,tree){err?result.reject(err):result.resolve(tree.css)}),result.promise()}function getModulePath(module,path){var modulePath=module.uri.substr(0,module.uri.lastIndexOf("/")+1);return path&&(modulePath+=path),modulePath}function getModuleUrl(module,path){return encodeURI(getModulePath(module,path))}function loadFile(module,path){var url=PathUtils.isAbsoluteUrl(path)?path:getModuleUrl(module,path);let result=new $.Deferred;return $.get(url).done(function(content){result.resolve(content,url)}).fail(result.reject),result}function loadStyleSheet(module,path){var result=new $.Deferred;return loadFile(module,path).done(function(content,URL){var url=URL||this.url;if(".less"===url.slice(-5))parseLessCode(content,url).done(function(css){result.resolve(addEmbeddedStyleSheet(css))}).fail(result.reject);else{var deferred=new $.Deferred,link=addLinkedStyleSheet(url,deferred);deferred.done(function(){result.resolve(link)}).fail(result.reject)}}).fail(result.reject),result.fail(function(error,textStatus,httpError){void 0!==error.readyState?console.error("[Extension] Unable to read stylesheet "+path+":",textStatus,httpError):console.error("[Extension] Unable to process stylesheet "+path,error)}),result.promise()}function _loadLocalMetadata(folder){var packageJSONFile=FileSystem.getFileForPath(folder+"/package.json"),disabledFile=FileSystem.getFileForPath(folder+"/.disabled"),baseName=FileUtils.getBaseName(folder),result=new $.Deferred,jsonPromise=new $.Deferred,disabledPromise=new $.Deferred,json,disabled;return FileUtils.readAsText(packageJSONFile).then(function(text){try{json=JSON.parse(text),jsonPromise.resolve()}catch(e){jsonPromise.reject()}}).fail(jsonPromise.reject),disabledFile.exists(function(err,exists){disabled=!err&&exists;var defaultDisabled=PreferencesManager.get("extensions.default.disabled");Array.isArray(defaultDisabled)&&-1!==defaultDisabled.indexOf(folder)&&(console.warn("Default extension has been disabled on startup: "+baseName),disabled=!0),disabledPromise.resolve()}),Async.waitForAll([jsonPromise,disabledPromise]).always(function(){json||(json={name:baseName}),json.disabled=disabled,result.resolve(json)}),result.promise()}function _loadDefaultExtensionMetadata(baseExtensionUrl,extensionName){var packageJSONFile=baseExtensionUrl+"/package.json",result=new $.Deferred,json={name:extensionName};return $.get(packageJSONFile).then(function(result){json=result}).always(function(){var disabled,defaultDisabled=PreferencesManager.get("extensions.default.disabled");Array.isArray(defaultDisabled)&&-1!==defaultDisabled.indexOf(extensionName)&&(console.warn("Default extension has been disabled on startup: "+baseExtensionUrl),disabled=!0),json.disabled=disabled,result.resolve(json)}),result.promise()}function loadMetadata(folder,extensionName){return folder.startsWith("http://")||folder.startsWith("https://")?_loadDefaultExtensionMetadata(folder,extensionName):_loadLocalMetadata(folder)}exports.addEmbeddedStyleSheet=addEmbeddedStyleSheet,exports.addLinkedStyleSheet=addLinkedStyleSheet,exports.parseLessCode=parseLessCode,exports.getModulePath=getModulePath,exports.getModuleUrl=getModuleUrl,exports.loadFile=loadFile,exports.loadStyleSheet=loadStyleSheet,exports.loadMetadata=loadMetadata});
//# sourceMappingURL=ExtensionUtils.js.map
