import initVFS from"./init_vfs.js";import ERR_CODES from"./errno.js";initVFS();const MAX_ALLOWED_TAURI_WINDOWS=30,CLI_ARGS_QUERY_PARAM="CLI_ARGS";let cliArgs,singleInstanceCLIHandler;const PHOENIX_WINDOW_PREFIX="phcode-",PHOENIX_EXTENSION_WINDOW_PREFIX="extn-";async function _getTauriWindowLabel(prefix){const tauriWindowLabels=await window.__TAURI__.invoke("_get_window_labels"),windowLabels={};for(let label of tauriWindowLabels)label.startsWith(prefix)&&(windowLabels[label]=!0);for(let i=1;i<=MAX_ALLOWED_TAURI_WINDOWS;i++){const windowLabel=`${prefix}${i}`;if(!windowLabels[windowLabel])return windowLabel}throw new Error("Could not get a free window label to create tauri window")}async function openURLInPhoenixWindow(url,{windowTitle:windowTitle,fullscreen:fullscreen,resizable:resizable,height:height,minHeight:minHeight,width:width,minWidth:minWidth,acceptFirstMouse:acceptFirstMouse,preferTabs:preferTabs,_prefixPvt:_prefixPvt=PHOENIX_EXTENSION_WINDOW_PREFIX}={}){const defaultHeight=900,defaultWidth=1366;if(window.__TAURI__){const windowLabel=await _getTauriWindowLabel(_prefixPvt),tauriWindow=new window.__TAURI__.window.WebviewWindow(windowLabel,{url:url,title:windowTitle||windowLabel||url,fullscreen:fullscreen,resizable:void 0===resizable||resizable,height:height||900,minHeight:minHeight||600,width:width||1366,minWidth:minWidth||800,acceptFirstMouse:void 0===acceptFirstMouse||acceptFirstMouse});return tauriWindow.isTauriWindow=!0,tauriWindow}let features="toolbar=no,location=no, status=no, menubar=no, scrollbars=yes";features=`${features}, width=${width||1366}, height=${height||900}`,(void 0===resizable||resizable)&&(features+=", resizable=yes"),preferTabs&&(features="");const nativeWindow=window.open(url,"_blank",features);return nativeWindow.isTauriWindow=!1,nativeWindow}Phoenix.app={getNodeState:function(cbfn){cbfn(new Error("Node cannot be run in phoenix browser mode"))},toggleDevtools:async function(){if(!Phoenix.browser.isTauri)throw new Error("toggle_devtools is not supported in browsers");return window.__TAURI__.invoke("toggle_devtools",{})},closeWindow:function(){if(!Phoenix.browser.isTauri)throw new Error("closeWindow is not supported in browsers");window.__TAURI__.window.getCurrent().close()},focusWindow:function(){if(!Phoenix.browser.isTauri)return Promise.reject(new Error("focusWindow is not supported in browsers"));window.__TAURI__.window.getCurrent().setAlwaysOnTop(!0),window.__TAURI__.window.getCurrent().setFocus(),window.__TAURI__.window.getCurrent().setAlwaysOnTop(!1)},clipboardReadText:function(){return Phoenix.browser.isTauri?window.__TAURI__.clipboard.readText():window.navigator&&window.navigator.clipboard?window.navigator.clipboard.readText():Promise.reject(new Error("clipboardReadText: Not supported."))},getCommandLineArgs:function(){return new Promise(resolve=>{if(!Phoenix.browser.isTauri)return void resolve(null);const phoenixURL=new URL(location.href),cliQueryParam=phoenixURL.searchParams.get("CLI_ARGS");cliQueryParam&&(cliArgs=JSON.parse(decodeURIComponent(cliQueryParam))),cliArgs?resolve(cliArgs):(cliArgs=null,window.__TAURI__.invoke("_get_commandline_args").then(args=>{cliArgs=args}).finally(()=>{resolve(cliArgs)}))})},setSingleInstanceCLIArgsHandler:function(handlerFn){if(singleInstanceCLIHandler)throw new Error("A single instance handler is already registered!");handlerFn&&(singleInstanceCLIHandler=handlerFn),Phoenix.browser.isTauri&&(window.__TAURI__.event.listen("single-instance",({payload:payload})=>{handlerFn(payload.args,payload.cwd)}),window.__TAURI__.event.listen("scheme-request-received",receivedEvent=>{console.log("Macos received Event from OS:",receivedEvent);const fileURL=receivedEvent.payload,fileURLArray=receivedEvent.payload.fileURLArray;window.__TAURI__.tauri.invoke("get_mac_deep_link_requests");const eventToUse=["macOSEvent"];if("string"==typeof fileURL)eventToUse.push(fileURL.replace("file://",""));else if(fileURLArray)for(let fileUrlEntry of fileURLArray)eventToUse.push(fileUrlEntry.replace("file://",""));handlerFn(eventToUse,"")}),window.__TAURI__.tauri.invoke("get_mac_deep_link_requests").then(filesURLList=>{filesURLList.length&&Phoenix.app.isPrimaryDesktopPhoenixWindow().then(isPrimary=>{if(isPrimary){const eventToUse=["macOSEvent"];for(let fileUrlEntry of filesURLList)eventToUse.push(fileUrlEntry.replace("file://",""));handlerFn(eventToUse,"")}else window.__TAURI__.event.emit("scheme-request-received",{fileURLArray:filesURLList})})}))},clipboardReadFiles:function(){return new Promise((resolve,reject)=>{Phoenix.browser.isTauri?window.__TAURI__.tauri.invoke("_get_clipboard_files").then(files=>{if(!files)return void resolve(files);const vfsPaths=[];for(let platformPath of files)vfsPaths.push(Phoenix.VFS.getTauriVirtualPath(platformPath));resolve(vfsPaths)}).catch(reject):resolve()})},copyToClipboard:function(textToCopy){if(Phoenix.browser.isTauri)return window.__TAURI__.clipboard.writeText(textToCopy);if(window.navigator&&window.navigator.clipboard)return window.navigator.clipboard.writeText(textToCopy);const textArea=document.createElement("textarea");return textArea.value=textToCopy,document.body.appendChild(textArea),textArea.select(),document.execCommand("copy"),document.body.removeChild(textArea),Promise.resolve()},isFullscreen:function(){return Phoenix.browser.isTauri?window.__TAURI__.window.appWindow.isFullscreen():Promise.resolve(!!document.fullscreenElement)},setFullscreen:function(enable){return Phoenix.browser.isTauri?window.__TAURI__.window.appWindow.setFullscreen(enable):enable?document.documentElement.requestFullscreen():document.exitFullscreen?document.exitFullscreen():Promise.resolve()},getDisplayLocation:function(fullVFSPath){return fullVFSPath.startsWith(Phoenix.VFS.getTauriDir())?Phoenix.fs.getTauriPlatformPath(fullVFSPath):fullVFSPath.startsWith(Phoenix.VFS.getMountDir())?fullVFSPath.replace(Phoenix.VFS.getMountDir(),""):window.Strings.STORED_IN_YOUR_BROWSER},getDisplayPath:function(fullOrRelativeVFSPath){return fullOrRelativeVFSPath?fullOrRelativeVFSPath.startsWith(Phoenix.VFS.getTauriDir())?Phoenix.fs.getTauriPlatformPath(fullOrRelativeVFSPath):fullOrRelativeVFSPath.startsWith(Phoenix.VFS.getMountDir())?fullOrRelativeVFSPath.replace(Phoenix.VFS.getMountDir(),""):fullOrRelativeVFSPath:""},setWindowTitle:async function(title){window.document.title=title,Phoenix.browser.isTauri&&await window.__TAURI__.window.appWindow.setTitle(title)},getWindowTitle:async function(){return Phoenix.browser.isTauri?window.__TAURI__.window.appWindow.title():window.document.title},openPathInFileBrowser:function(fullVFSPath){return new Promise((resolve,reject)=>{if(!window.__TAURI__||!fullVFSPath.startsWith(Phoenix.VFS.getTauriDir()))return void reject("openPathInFileBrowser is only currently supported in Native builds for tauri paths!");if(fullVFSPath.toLowerCase().startsWith("http://")||fullVFSPath.toLowerCase().startsWith("https://")||fullVFSPath.toLowerCase().startsWith("file://"))return void reject("Please use openPathInFileBrowser API to open URLs");const platformPath=Phoenix.fs.getTauriPlatformPath(fullVFSPath);window.__TAURI__.tauri.invoke("show_in_folder",{path:platformPath}).then(resolve).catch(reject)})},openURLInDefaultBrowser:function(url,tabIdentifier="_blank"){return new Promise((resolve,reject)=>{window.__TAURI__?url.toLowerCase().startsWith("http://")||url.toLowerCase().startsWith("https://")?window.__TAURI__.shell.open(url).then(resolve).catch(reject):reject("openURLInDefaultBrowser: URL should be http or https, but was "+url):resolve(window.open(url,tabIdentifier,"noopener,noreferrer"))})},isPrimaryDesktopPhoenixWindow:async function(){if(!Phoenix.browser.isTauri)return console.error("isPrimaryDesktopPhoenixWindow is not supported in browsers!"),!0;const currentWindowLabel=window.__TAURI__.window.getCurrent().label;if("main"===currentWindowLabel)return!0;const allTauriWindowsLabels=await window.__TAURI__.invoke("_get_window_labels");if(allTauriWindowsLabels.includes("main"))return!1;for(let tauriWindowLabel of allTauriWindowsLabels)if(tauriWindowLabel&&tauriWindowLabel.startsWith("phcode-")&&currentWindowLabel!==tauriWindowLabel&&currentWindowLabel>tauriWindowLabel)return!1;return!0},openNewPhoenixEditorWindow:async function(preferredWidth,preferredHeight,_cliArgsArray){const phoenixURL=new URL(location.href);if(_cliArgsArray){const cliVal=encodeURIComponent(JSON.stringify(_cliArgsArray));phoenixURL.searchParams.set("CLI_ARGS",cliVal)}else phoenixURL.searchParams.delete("CLI_ARGS");await openURLInPhoenixWindow(phoenixURL.href,{width:preferredWidth,height:preferredHeight,preferTabs:!0,_prefixPvt:"phcode-"})},openURLInPhoenixWindow:openURLInPhoenixWindow,zoomWebView:function(scaleFactor=1){if(!Phoenix.browser.isTauri)throw new Error("zoomWebView is not supported in browsers");if(scaleFactor<.1||scaleFactor>2)throw new Error("zoomWebView scale factor should be between .1 and 2");return window.__TAURI__.tauri.invoke("zoom_window",{scaleFactor:scaleFactor})},getApplicationSupportDirectory:Phoenix.VFS.getAppSupportDir,getExtensionsDirectory:Phoenix.VFS.getExtensionDir,getUserDocumentsDirectory:Phoenix.VFS.getUserDocumentsDirectory,getUserProjectsDirectory:Phoenix.VFS.getUserProjectsDirectory,getTempDirectory:Phoenix.VFS.getTempDir,ERR_CODES:ERR_CODES,getTimeSinceStartup:function(){return Date.now()-Phoenix.startTime},language:navigator.language},window.appshell||(window.appshell=Phoenix);
//# sourceMappingURL=shell.js.map
