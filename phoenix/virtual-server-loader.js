import{Workbox}from"https://storage.googleapis.com/workbox-cdn/releases/6.4.1/workbox-window.prod.mjs";function _getBaseURL(){let baseURL=window.location.href;return location.href.indexOf("?")>-1&&(baseURL=location.href.substring(0,location.href.indexOf("?"))),location.href.indexOf("#")>-1&&(baseURL=baseURL.substring(0,baseURL.indexOf("#"))),location.href.indexOf("/")>-1&&(baseURL=baseURL.substring(0,baseURL.lastIndexOf("/"))),baseURL.endsWith("/")||(baseURL+="/"),baseURL}function getRoute(){return"phoenix/vfs"}function _isServiceWorkerLoaderPage(){const indexUrl=`${location.origin}/index.html`,baseUrl=`${location.origin}/`,devURL="http://localhost:8000/src/",currentURL=_getBaseURL();return console.log("currentURL",currentURL,indexUrl,baseUrl,devURL),currentURL===baseUrl||currentURL===indexUrl||currentURL===devURL}async function shouldUpdate(){return!0}if(window.fsServerUrl=_getBaseURL()+getRoute()+"/",_isServiceWorkerLoaderPage()&&"serviceWorker"in navigator){console.log("Service worker loader: Loading  from page...",window.location.href);const wb=new Workbox(`virtual-server-main.js?debug=false&route=${getRoute()}`,{updateViaCache:"none"});function _forceClearCacheIfNeeded(){const cacheKey="browserCacheVersionKey",newCacheVersion="V1";if(window.Phoenix.firstBoot)return localStorage.setItem(cacheKey,"V1"),!1;const lastClearedVersion=window.localStorage.getItem(cacheKey);return"V1"!==lastClearedVersion&&(console.log("Service worker loader: triggering CLEAR_CACHE for live preview service worker upgrade"),window.Phoenix.updatePendingReload=!0,wb.messageSW({type:"CLEAR_CACHE"}),localStorage.setItem(cacheKey,"V1"),!0)}function _refreshCache(){_forceClearCacheIfNeeded()||(console.log("Service worker loader: triggering REFRESH_CACHE"),wb.messageSW({type:"REFRESH_CACHE"}).then(({updatedFilesCount:updatedFilesCount})=>{console.log("Service worker loader: updatedFilesCount: ",updatedFilesCount),updatedFilesCount>0&&(window.Phoenix.updatePendingReload=!0)}).catch(err=>{console.error("Service worker loader: Error while triggering cache refresh",err)}))}function serverReady(){console.log("Service worker loader: Server ready."),wb.messageSW({type:"INIT_PHOENIX_CONFIG",debugMode:"true"===window.logToConsolePref,logLivePreview:window.loggingOptions.logLivePreview}).then(config=>{console.log(`Service worker loader: Server ready! Service worker inited at base url: ${config.baseURL}`)}).catch(err=>{console.error("Service worker loader: Error while init of service worker",err)}),_refreshCache()}function serverInstall(){console.log("Service worker loader: Web server Worker installed.")}window.messageSW=function(params){return wb.messageSW(params)};const showSkipWaitingPrompt=async event=>{const updateAccepted=await shouldUpdate();updateAccepted&&wb.messageSkipWaiting()};wb.addEventListener("waiting",event=>{console.log("Service worker loader: A new service worker is pending load. Trying to update the worker now."),window.Phoenix.updatePendingReload=!0,showSkipWaitingPrompt(event)}),wb.controlling.then(serverReady),wb.addEventListener("installed",event=>{event.isUpdate||serverInstall()}),wb.register()}
//# sourceMappingURL=virtual-server-loader.js.map
