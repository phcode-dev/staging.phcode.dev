{"version":3,"sources":["assets/new-project/assets/js/phoenix.js"],"names":["NEW_PROJECT_EXTENSION_INTERFACE","RECENT_PROJECTS_INTERFACE","selfFileName","location","href","split","pop","_getTranslatedString","templateStr","replace","match","key","window","Strings","_localiseWithBracketsStrings","allLocElements","document","getElementsByClassName","el","stringToTranslate","textContent","trim","_addQueryString","url","queryString","value","getNewProjectFromURL","suggestedProjectName","title","license","licenseURL","credits","creditsURL","previewURL","backURL","newProjectFromURLScreen","getPhoenixAbsURL","relativePath","startsWith","parent","Phoenix","baseURL","init","getElementById","onclick","newProjectExtension","closeDialogue","Metrics","countEvent","EVENT_TYPE","NEW_PROJECT","onkeydown","e","acceptedCode","code","target","tagName","$","tabNext","tabPrev","focus","addClass","blur","removeClass","on","path","ExtensionInterface","waitAndGetExtensionInterface","then","interfaceObj","recentProjectExtension"],"mappings":"AAyBA,MAAMA,gCAAkC,0BAClCC,0BAA4B,8BAC5BC,aAAeC,SAASC,KAAKC,MAAM,KAAK,GAAGA,MAAM,KAAKC,MAe5D,SAASC,qBAAqBC,aAC1B,OAAOA,YAAYC,QACf,aACA,SAAUC,MAAOC,KACb,OAAOC,OAAOC,QAAQF,KAAOC,OAAOC,QAAQF,KAAOA,MAK/D,SAASG,+BACL,IAAIC,eAAiBC,SAASC,uBAAuB,YACrD,IAAI,IAAIC,MAAMH,eAAe,CACzB,IAAII,kBAAoBD,GAAGE,YAAYC,OACvCH,GAAGE,YAAcb,qBAAqBY,oBAI9C,SAASG,gBAAgBC,IAAKC,YAAaC,OACvC,OAAGA,SACWF,OAAOC,eAAeC,QAE7BF,IAGX,SAASG,qBAAqBH,IAAKI,qBAAsBC,OACxBC,QAACA,QAAOC,WAAEA,WAAUC,QAAEA,QAAOC,WAAEA,WAAUC,WAAEA,WAAUC,QAAEA,UACpF,IAAI9B,sCAAwCmB,qBAAqBI,8BAA8BC,QAO/F,OANAxB,KAAOkB,gBAAgBlB,KAAM,UAAWyB,SACxCzB,KAAOkB,gBAAgBlB,KAAM,aAAc0B,YAC3C1B,KAAOkB,gBAAgBlB,KAAM,UAAW2B,SACxC3B,KAAOkB,gBAAgBlB,KAAM,aAAc4B,YAC3C5B,KAAOkB,gBAAgBlB,KAAM,aAAc6B,YAC3C7B,KAAOkB,gBAAgBlB,KAAM,UAAW8B,SAI5C,SAASC,wBAAwBZ,IAAKI,qBAAsBC,OACxDC,QAACA,QAAOC,WAAEA,WAAUC,QAAEA,QAAOC,WAAEA,WAAUC,WAAEA,WAAUC,QAAEA,UACvD,IAAI9B,KAAMsB,qBAAqBH,IAAKI,qBAAsBC,MACtD,CAACC,QAAAA,QAASC,WAAAA,WAAYC,QAAAA,QAASC,WAAAA,WAAYC,WAAAA,WAAYC,QAAAA,UAC3DtB,OAAOT,SAASC,KAAOA,KAG3B,SAASgC,iBAAiBC,cACtB,OAAIA,aAGDA,aAAaC,WAAW,YAAcD,aAAaC,WAAW,YACtDD,gBAEDzB,OAAO2B,OAAOC,QAAQC,UAAUJ,eAL/B,KAQf,SAASK,OACL5B,+BACAE,SAAS2B,eAAe,uBAAuBC,QAAU,WACrDhC,OAAOiC,oBAAoBC,gBAC3BC,QAAQC,WAAWD,QAAQE,WAAWC,YAAa,cAAehD,eAEtEc,SAAS2B,eAAe,OAAOQ,UAAY,SAASC,GAChD,IAAIC,cAAe,EACL,WAAXD,EAAEE,MACD1C,OAAOiC,oBAAoBC,gBAC3BO,cAAe,GACE,eAAXD,EAAEE,MAA8C,UAArBF,EAAEG,OAAOC,SAC1CC,EAAEC,UACFL,cAAe,GACE,cAAXD,EAAEE,MAA4C,UAArBF,EAAEG,OAAOC,SACxCC,EAAEE,UACFN,cAAe,GACE,QAAXD,EAAEE,MAAsC,UAArBF,EAAEG,OAAOC,UAClCH,cAAe,GAEhBA,cACCN,QAAQC,WAAWD,QAAQE,WAAWC,YAAa,cAAehD,eAI1EuD,EAAE,YAAYG,MAAM,SAAS1C,IACzBuC,EAAEvC,GAAGqC,QAAQM,SAAS,YACvBC,KAAK,SAAS5C,IACbuC,EAAEvC,GAAGqC,QAAQQ,YAAY,YAG7BN,EAAE,iBAAiBO,GAAG,QAAS,WAE3BP,EAAE,uBAAuBG,UApGjChD,OAAOC,QAAUD,OAAO2B,OAAO1B,QAC/BD,OAAOqD,KAAOrD,OAAO2B,OAAO0B,KAC5BrD,OAAO2B,OAAO2B,mBAAmBC,6BALO,2BAMnCC,KAAKC,eACFzD,OAAOiC,oBAAsBwB,aAC7BzD,OAAOmC,QAAUnC,OAAOiC,oBAAoBE,QAC5CA,QAAQC,WAAWD,QAAQE,WAAWC,YAAa,QAAShD,gBAEpEU,OAAO2B,OAAO2B,mBAAmBC,6BAA6BlE,2BACzDmE,KAAKC,eACFzD,OAAO0D,uBAAyBD","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/*global Metrics*/\n/*eslint no-console: 0*/\n/*eslint strict: [\"error\", \"global\"]*/\n/* jshint ignore:start */\n\nconst NEW_PROJECT_EXTENSION_INTERFACE = \"Extn.Phoenix.newProject\";\nconst RECENT_PROJECTS_INTERFACE = \"Extn.Phoenix.recentProjects\";\nconst selfFileName = location.href.split('?')[0].split('/').pop();\nwindow.Strings = window.parent.Strings;\nwindow.path = window.parent.path;\nwindow.parent.ExtensionInterface.waitAndGetExtensionInterface(NEW_PROJECT_EXTENSION_INTERFACE)\n    .then(interfaceObj => {\n        window.newProjectExtension = interfaceObj;\n        window.Metrics = window.newProjectExtension.Metrics;\n        Metrics.countEvent(Metrics.EVENT_TYPE.NEW_PROJECT, 'shown', selfFileName);\n    });\nwindow.parent.ExtensionInterface.waitAndGetExtensionInterface(RECENT_PROJECTS_INTERFACE)\n    .then(interfaceObj => {\n        window.recentProjectExtension = interfaceObj;\n    });\n\n// string of the form `hello {{world}}`\nfunction _getTranslatedString(templateStr) {\n    return templateStr.replace(\n        /{{(\\w*)}}/g,\n        function( match, key ){\n            return window.Strings[key] ? window.Strings[key] : key;\n        }\n    );\n}\n\nfunction _localiseWithBracketsStrings() {\n    let allLocElements = document.getElementsByClassName(\"localize\");\n    for(let el of allLocElements){\n        let stringToTranslate = el.textContent.trim();\n        el.textContent = _getTranslatedString(stringToTranslate);\n    }\n}\n\nfunction _addQueryString(url, queryString, value) {\n    if(value){\n        return `${url}&${queryString}=${value}`;\n    }\n    return url;\n}\n\nfunction getNewProjectFromURL(url, suggestedProjectName, title,\n                                 {license, licenseURL, credits, creditsURL, previewURL, backURL}) {\n    let href = `new-project-from-url.html?url=${url}&suggestedName=${suggestedProjectName}&title=${title}`;\n    href = _addQueryString(href, \"license\", license);\n    href = _addQueryString(href, \"licenseURL\", licenseURL);\n    href = _addQueryString(href, \"credits\", credits);\n    href = _addQueryString(href, \"creditsURL\", creditsURL);\n    href = _addQueryString(href, \"previewURL\", previewURL);\n    href = _addQueryString(href, \"backURL\", backURL);\n    return href;\n}\n\nfunction newProjectFromURLScreen(url, suggestedProjectName, title,\n    {license, licenseURL, credits, creditsURL, previewURL, backURL}) {\n    let href= getNewProjectFromURL(url, suggestedProjectName, title,\n        {license, licenseURL, credits, creditsURL, previewURL, backURL});\n    window.location.href = href;\n}\n\nfunction getPhoenixAbsURL(relativePath) {\n    if(!relativePath){\n        return null;\n    }\n    if(relativePath.startsWith('http://') || relativePath.startsWith('https://')){\n        return relativePath;\n    }\n    return `${window.parent.Phoenix.baseURL}${relativePath}`;\n}\n\nfunction init() {\n    _localiseWithBracketsStrings();\n    document.getElementById(\"closeDialogueButton\").onclick = function() {\n        window.newProjectExtension.closeDialogue();\n        Metrics.countEvent(Metrics.EVENT_TYPE.NEW_PROJECT, 'close.click', selfFileName);\n    };\n    document.getElementById(\"top\").onkeydown = function(e) {\n        let acceptedCode = false;\n        if(e.code === 'Escape'){\n            window.newProjectExtension.closeDialogue();\n            acceptedCode = true;\n        } else if(e.code === 'ArrowRight' && e.target.tagName !== 'INPUT') {\n            $.tabNext();\n            acceptedCode = true;\n        } else if(e.code === 'ArrowLeft'&& e.target.tagName !== 'INPUT') {\n            $.tabPrev();\n            acceptedCode = true;\n        } else if(e.code === 'Tab'&& e.target.tagName !== 'INPUT') {\n            acceptedCode = true; // will be handled by focus handler below\n        }\n        if(acceptedCode){\n            Metrics.countEvent(Metrics.EVENT_TYPE.NEW_PROJECT, `keyboardNav`, selfFileName);\n        }\n    };\n    // Accessibility and keyboard navigation with Tab and Esc, Enter keys.\n    $('.tabable').focus(function(el) {\n        $(el.target).addClass('active');\n    }).blur(function(el) {\n        $(el.target).removeClass('active');\n    });\n\n    $('#focusguard-2').on('focus', function() {\n        // \"last\" focus guard got focus: set focus to the first field\n        $('#firstInputTabIndex').focus();\n    });\n    // Accessibility and keyboard navigation with Tab and Esc, Enter keys end.\n}\n"],"file":"phoenix.js"}