{"version":3,"sources":["extensions/default/Phoenix/main.js"],"names":["define","require","exports","module","Survey","serverSync","newProject","defaultProjects","newFeature","AppInit","brackets","getModule","Strings","Dialogs","Mustache","unSupportedBrowserTemplate","PERSIST_STORAGE_DIALOG_DELAY_SECS","$icon","unsupportedBrowserDialogShown","_addToolbarIcon","helpButtonID","$","attr","id","href","class","title","CMD_SUPPORT","appendTo","on","window","open","config","support_url","_showUnSupportedBrowserDialogue","templateVars","surveyURL","showModalDialogUsingTemplate","render","_detectUnSupportedBrowser","supportedBrowser","Phoenix","browser","isDeskTop","desktop","isChrome","isEdgeChromium","isOperaChromium","async","_persistBrowserStorage","navigator","storage","persist","isPersisted","persisted","console","log","setTimeout","error","appReady","init"],"mappings":"AAyBAA,OAAO,SAAUC,QAASC,QAASC,QAC/B,MAAMC,OAAeH,QAAQ,UACzBI,WAAeJ,QAAQ,cACvBK,WAAeL,QAAQ,eACvBM,gBAAoBN,QAAQ,oBAC5BO,WAAeP,QAAQ,wBACvBQ,QAAeC,SAASC,UAAU,iBAClCC,QAAeF,SAASC,UAAU,WAClCE,QAAeH,SAASC,UAAU,mBAClCG,SAAeJ,SAASC,UAAU,gCAClCI,2BAAiCd,QAAQ,sCAEvCe,kCAAoC,IAC1C,IAAIC,MAAOC,8BAEX,SAASC,kBACL,MAAMC,aAAe,eACrBH,MAAQI,EAAE,OACLC,KAAK,CACFC,GAAIH,aACJI,KAAM,IACNC,MAAO,OACPC,MAAOd,QAAQe,cAElBC,SAASP,EAAE,mCACVQ,GAAG,QAAS,KACdC,OAAOC,KAAKrB,SAASsB,OAAOC,eAGpC,SAASC,kCACL,GAAGhB,8BACC,OAEJA,+BAAgC,EAChC,IAAIiB,aAAe,CACfvB,QAASA,QACTwB,UAAW,uDAEfvB,QAAQwB,6BAA6BvB,SAASwB,OAAOvB,2BAA4BoB,eAGrF,SAASI,4BACL,IAAIC,iBAAmBC,QAAQC,QAAQC,YAAcF,QAAQC,QAAQE,QAAQC,UACzEJ,QAAQC,QAAQE,QAAQE,gBAAkBL,QAAQC,QAAQE,QAAQG,kBAElEb,kCAIRc,eAAeC,yBACX,GAAGC,UAAUC,SAAWD,UAAUC,QAAQC,QAAQ,CAC9C,IAAIC,kBAAoBH,UAAUC,QAAQG,YAC1CC,QAAQC,2CAA2CH,eACnDI,WAAWT,UACHK,cACAE,QAAQC,IAAI,wCACZH,kBAAoBH,UAAUC,QAAQC,UACtCG,QAAQC,2CAA2CH,iBAExDrC,wCAEHuC,QAAQG,MAAM,qDACdxB,kCAIRzB,QAAQkD,SAAS,WACbxC,kBACAf,OAAOwD,OACPvD,WAAWuD,OACXrD,gBAAgBqD,OAChBtD,WAAWsD,OACXpD,WAAWoD,OACXrB,4BACAU","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/*global Phoenix*/\n/*eslint no-console: 0*/\n/*eslint strict: [\"error\", \"global\"]*/\n/* jshint ignore:start */\n\ndefine(function (require, exports, module) {\n    const Survey       = require(\"survey\"),\n        serverSync   = require(\"serverSync\"),\n        newProject   = require(\"new-project\"),\n        defaultProjects   = require(\"default-projects\"),\n        newFeature   = require(\"newly-added-features\"),\n        AppInit      = brackets.getModule(\"utils/AppInit\"),\n        Strings      = brackets.getModule(\"strings\"),\n        Dialogs      = brackets.getModule(\"widgets/Dialogs\"),\n        Mustache     = brackets.getModule(\"thirdparty/mustache/mustache\"),\n        unSupportedBrowserTemplate     = require(\"text!html/unsupported-browser.html\");\n\n    const PERSIST_STORAGE_DIALOG_DELAY_SECS = 60000;\n    let $icon, unsupportedBrowserDialogShown;\n\n    function _addToolbarIcon() {\n        const helpButtonID = \"help-button\";\n        $icon = $(\"<a>\")\n            .attr({\n                id: helpButtonID,\n                href: \"#\",\n                class: \"help\",\n                title: Strings.CMD_SUPPORT\n            })\n            .appendTo($(\"#main-toolbar .bottom-buttons\"));\n        $icon.on('click', ()=>{\n            window.open(brackets.config.support_url);\n        });\n    }\n    function _showUnSupportedBrowserDialogue() {\n        if(unsupportedBrowserDialogShown){\n            return;\n        }\n        unsupportedBrowserDialogShown = true;\n        let templateVars = {\n            Strings: Strings,\n            surveyURL: \"https://s.surveyplanet.com/6208d1eccd51c561fc8e59ca\"\n        };\n        Dialogs.showModalDialogUsingTemplate(Mustache.render(unSupportedBrowserTemplate, templateVars));\n    }\n\n    function _detectUnSupportedBrowser() {\n        let supportedBrowser = Phoenix.browser.isDeskTop && (Phoenix.browser.desktop.isChrome ||\n            Phoenix.browser.desktop.isEdgeChromium || Phoenix.browser.desktop.isOperaChromium);\n        if(!supportedBrowser){\n            _showUnSupportedBrowserDialogue();\n        }\n    }\n\n    async function _persistBrowserStorage() {\n        if(navigator.storage && navigator.storage.persist){\n            let isPersisted = await navigator.storage.persisted();\n            console.log(`Browser Persisted storage granted?: ${isPersisted}`);\n            setTimeout(async ()=>{\n                if(!isPersisted){\n                    console.log(`Browser Persisted storage requesting`);\n                    isPersisted = await navigator.storage.persist();\n                    console.log(`Browser Persisted storage granted?: ${isPersisted}`);\n                }\n            }, PERSIST_STORAGE_DIALOG_DELAY_SECS);\n        } else {\n            console.error(\"Browser does not support storage persistence APIs\");\n            _showUnSupportedBrowserDialogue();\n        }\n    }\n\n    AppInit.appReady(function () {\n        _addToolbarIcon();\n        Survey.init();\n        serverSync.init();\n        defaultProjects.init();\n        newProject.init();\n        newFeature.init();\n        _detectUnSupportedBrowser();\n        _persistBrowserStorage();\n    });\n});\n"],"file":"main.js"}