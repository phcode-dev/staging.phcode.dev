define(function(require,exports,module){var Commands=brackets.getModule("command/Commands"),CommandManager=brackets.getModule("command/CommandManager"),MainViewManager=brackets.getModule("view/MainViewManager"),DocumentManager=brackets.getModule("document/DocumentManager"),EditorManager=brackets.getModule("editor/EditorManager"),FileSystem=brackets.getModule("filesystem/FileSystem"),FileUtils=brackets.getModule("file/FileUtils"),PreferencesManager=brackets.getModule("preferences/PreferencesManager"),SpecRunnerUtils=brackets.getModule("spec/SpecRunnerUtils"),JSCodeHints=require("main"),Preferences=brackets.getModule("JSUtils/Preferences"),ScopeManager=brackets.getModule("JSUtils/ScopeManager"),HintUtils=brackets.getModule("JSUtils/HintUtils"),HintUtils2=require("HintUtils2"),ParameterHintProvider,phProvider=new(0,require("ParameterHintsProvider").JSParameterHintsProvider),extensionPath=FileUtils.getNativeModuleDirectoryPath(module),testPath=extensionPath+"/unittest-files/basic-test-files/file1.js",testHtmlPath=extensionPath+"/unittest-files/basic-test-files/index.html",testDoc=null,testEditor,preTestText;CommandManager.register("test-file-open",Commands.FILE_OPEN,function(fileInfo){return DocumentManager.getDocumentForPath(fileInfo.fullPath).done(function(doc){MainViewManager._edit(MainViewManager.ACTIVE_PANE,doc)})}),describe("extension:JavaScript Code Hinting",function(){function fixPos(pos){return"sticky"in pos||(pos.sticky=null),pos}function expectHints(provider,key){return void 0===key&&(key=null),expect(provider.hasHints(testEditor,key)).toBe(!0),provider.getHints(null)}function expectNoHints(provider,key){void 0===key&&(key=null),expect(provider.hasHints(testEditor,key)).toBe(!1)}function _indexOf(hintList,hint){for(var index=-1,counter=0;counter<hintList.length;counter++)if(hintList[counter].data("token").value===hint){index=counter;break}return index}function _waitForHints(hintObj,callback){var complete=!1,hintList=null;hintObj.hasOwnProperty("hints")?(complete=!0,hintList=hintObj.hints):hintObj.done(function(obj){complete=!0,hintList=obj.hints}),waitsFor(function(){return complete},"Expected hints did not resolve",3e3),runs(function(){callback(hintList)})}function expectCloseHints(provider,hintObj,newPos,expectedValue){_waitForHints(hintObj,function(hintList){testEditor.setCursorPos(newPos),expect(provider.shouldCloseHints(JSCodeHints.getSession())).toBe(expectedValue)})}function hintsAbsent(hintObj,absentHints){_waitForHints(hintObj,function(hintList){expect(hintList).toBeTruthy(),absentHints.forEach(function(absentHint){expect(_indexOf(hintList,absentHint)).toBe(-1)})})}function hintsPresent(hintObj,expectedHints){_waitForHints(hintObj,function(hintList){expect(hintList).toBeTruthy(),expectedHints.forEach(function(expectedHint){expect(_indexOf(hintList,expectedHint)).not.toBe(-1)})})}function hintsPresentOrdered(hintObj,expectedHints){var prevIndex=-1,currIndex;_waitForHints(hintObj,function(hintList){expect(hintList).toBeTruthy(),expectedHints.forEach(function(expectedHint){currIndex=_indexOf(hintList,expectedHint),expect(currIndex).toBeGreaterThan(prevIndex),prevIndex=currIndex})})}function hintsPresentExact(hintObj,expectedHints){_waitForHints(hintObj,function(hintList){expect(hintList).toBeTruthy(),expect(hintList.length).toBe(expectedHints.length),expectedHints.forEach(function(expectedHint,index){expect(hintList[index].data("token").value).toBe(expectedHint)})})}function findHint(hintList,hintSelection){var i,l;for(i=0,l=hintList.length;i<l;++i){var current;if(hintSelection===hintList[i].data("token").value)return i}return-1}function selectHint(provider,hintObj,hintSelection){expectHints(provider),_waitForHints(hintObj,function(hintList){expect(hintList).toBeTruthy();var index=findHint(hintList,hintSelection);expect(hintList[index].data("token")).toBeTruthy(),expect(provider.insertHint(hintList[index])).toBe(!1)})}function _waitForJump(jumpPromise,callback){var cursor=null,complete=!1;jumpPromise.done(function(){complete=!0}),waitsFor(function(){var activeEditor=EditorManager.getActiveEditor();return cursor=activeEditor.getCursorPos(),complete},"Expected jump did not occur",3e3),runs(function(){callback(cursor)})}function editorJumped(expectedLocation){var jumpPromise;_waitForJump(JSCodeHints.handleJumpToDefinition(),function(newCursor){if(expect(newCursor.line).toBe(expectedLocation.line),expect(newCursor.ch).toBe(expectedLocation.ch),expectedLocation.file){var activeEditor=EditorManager.getActiveEditor();expect(activeEditor.document.file.name).toBe(expectedLocation.file)}})}function expectNoParameterHint(){var requestStatus=void 0;runs(function(){var request=phProvider._getParameterHint();request.fail(function(status){requestStatus=status}),waitsForFail(request,"ParameterHints")}),runs(function(){expect(requestStatus).toBe(null)})}function expectParameterHintClosed(){expect(phProvider.isHintDisplayed()).toBe(!1)}function expectParameterHint(expectedParams,expectedParameter){var requestHints=void 0,request=null;function expectHint(hint){var params=hint.parameters,n=params.length,i;for(expect(params.length).toBe(expectedParams.length),expect(hint.currentIndex).toBe(expectedParameter),i=0;i<n;i++)expect(params[i].name).toBe(expectedParams[i].name),expect(params[i].type).toBe(expectedParams[i].type),params[i].isOptional?expect(expectedParams[i].isOptional).toBeTruthy():expect(expectedParams[i].isOptional).toBeFalsy()}runs(function(){request=phProvider._getParameterHint(),null===expectedParams?(request.fail(function(result){requestHints=result}),waitsForFail(request,"ParameterHints")):(request.done(function(result){requestHints=result}),waitsForDone(request,"ParameterHints"))}),null===expectedParams?expect(requestHints).toBe(null):expectHint(requestHints)}function setupTest(path,primePump){DocumentManager.getDocumentForPath(path).done(function(doc){testDoc=doc}),waitsFor(function(){return null!==testDoc},"Unable to open test document",1e4),runs(function(){testEditor=SpecRunnerUtils.createMockEditorForDocument(testDoc),preTestText=testDoc.getText(),waitsForDone(ScopeManager._readyPromise()),waitsForDone(ScopeManager._maybeReset(JSCodeHints.getSession(),testDoc,!0))})}function tearDownTest(){testDoc.setText(preTestText),MainViewManager._closeAll(MainViewManager.ALL_PANES),SpecRunnerUtils.destroyMockEditor(testDoc),testEditor=null,testDoc=null}describe("JavaScript Code Hinting Basic",function(){beforeFirst(function(){brackets._configureJSCodeHints({noReset:!0})}),afterLast(function(){brackets._configureJSCodeHints({noReset:!1})}),beforeEach(function(){setupTest(testPath,!1)}),afterEach(function(){tearDownTest()}),it("should not list hints in string literal",function(){testEditor.setCursorPos({line:20,ch:22}),expectNoHints(JSCodeHints.jsHintProvider)}),it("should list declared variable and function names in outer scope",function(){var hintObj;testEditor.setCursorPos({line:6,ch:0}),hintsPresent(expectHints(JSCodeHints.jsHintProvider),["A2","A3","funB","A1"])}),it("should filter hints by query",function(){testEditor.setCursorPos({line:5,ch:10});var hintObj=expectHints(JSCodeHints.jsHintProvider);hintsPresent(hintObj,["A1","A2","A3"]),hintsAbsent(hintObj,["funB"])}),it("should list keywords",function(){var hintObj;testEditor.setCursorPos({line:6,ch:0}),hintsPresent(expectHints(JSCodeHints.jsHintProvider),["break","case","catch"])}),xit("should list explicitly defined globals from JSLint annotations",function(){var hintObj;testEditor.setCursorPos({line:6,ch:0}),hintsPresent(expectHints(JSCodeHints.jsHintProvider),["brackets","$"])}),xit("should list implicitly defined globals from JSLint annotations",function(){var hintObj;testEditor.setCursorPos({line:6,ch:0}),hintsPresent(expectHints(JSCodeHints.jsHintProvider),["alert","console","confirm","navigator","window","frames"])}),it("should NOT list implicitly defined globals from missing JSLint annotations",function(){var hintObj;testEditor.setCursorPos({line:6,ch:0}),hintsAbsent(expectHints(JSCodeHints.jsHintProvider),["ActiveXObject","CScript","VBArray"])}),it("should NOT list explicitly defined globals from JSLint annotations in other files",function(){var hintObj;testEditor.setCursorPos({line:6,ch:0}),hintsAbsent(expectHints(JSCodeHints.jsHintProvider),["crazyGlobal","anotherCrazyGlobal"])}),it("should NOT list implicitly defined globals from JSLint annotations in other files",function(){var hintObj;testEditor.setCursorPos({line:6,ch:0}),hintsAbsent(expectHints(JSCodeHints.jsHintProvider),["spawn","version","toint32"])}),it("should list literal constants",function(){var hintObj;testEditor.setCursorPos({line:6,ch:0}),hintsPresent(expectHints(JSCodeHints.jsHintProvider),["null","undefined","true","false"])}),it("should NOT list variables, function names and parameter names out of scope",function(){var hintObj;testEditor.setCursorPos({line:6,ch:0}),hintsAbsent(expectHints(JSCodeHints.jsHintProvider),["paramB2","paramB1"])}),it("should NOT list variables, function names and parameter names in other files",function(){var hintObj;testEditor.setCursorPos({line:6,ch:0}),hintsAbsent(expectHints(JSCodeHints.jsHintProvider),["E1","E2"])}),it("should NOT list property names on value lookups",function(){var hintObj;testEditor.setCursorPos({line:6,ch:0}),hintsAbsent(expectHints(JSCodeHints.jsHintProvider),["propA","propB","propC"])}),it("should list declared variable, function and parameter names in inner scope",function(){var hintObj;testEditor.setCursorPos({line:12,ch:0}),hintsPresent(expectHints(JSCodeHints.jsHintProvider),["B1","B2","funC","paramB1","paramB2","funB","A1","A2","A3"])}),xit("should list string literals that occur in the file",function(){var hintObj;testEditor.setCursorPos({line:12,ch:0}),hintsPresent(expectHints(JSCodeHints.jsHintProvider),["use strict"])}),it("should NOT list string literals from other files",function(){var hintObj;testEditor.setCursorPos({line:6,ch:0}),hintsAbsent(expectHints(JSCodeHints.jsHintProvider),["a very nice string"])}),it("should list property names that have been declared in the file",function(){var hintObj;testEditor.setCursorPos({line:17,ch:11}),hintsPresent(expectHints(JSCodeHints.jsHintProvider),["propB"])}),it("should list identifier names that occur in other files",function(){var hintObj;testEditor.setCursorPos({line:16,ch:0}),hintsPresent(expectHints(JSCodeHints.jsHintProvider),["D1","D2"])}),it("should NOT list variable, parameter or function names on property lookups",function(){var hintObj;testEditor.setCursorPos({line:17,ch:11}),hintsAbsent(expectHints(JSCodeHints.jsHintProvider),["A1","A2","funB","paramB1","paramB2","B1","B2","funC","paramC1","paramC2"])}),it("should NOT list keywords on property lookups",function(){var hintObj;testEditor.setCursorPos({line:17,ch:11}),hintsAbsent(expectHints(JSCodeHints.jsHintProvider),["case","function","var"])}),it("should close hints when move over '.' ",function(){testEditor.setCursorPos({line:17,ch:11});var hintObj=expectHints(JSCodeHints.jsHintProvider);expectCloseHints(JSCodeHints.jsHintProvider,hintObj,{line:17,ch:10},!0)}),it("should close hints only when move off the end of a property ",function(){testEditor.setCursorPos({line:17,ch:11});var hintObj=expectHints(JSCodeHints.jsHintProvider);expectCloseHints(JSCodeHints.jsHintProvider,hintObj,{line:17,ch:12},!1),expectCloseHints(JSCodeHints.jsHintProvider,hintObj,{line:17,ch:13},!1),expectCloseHints(JSCodeHints.jsHintProvider,hintObj,{line:17,ch:14},!1),expectCloseHints(JSCodeHints.jsHintProvider,hintObj,{line:17,ch:15},!1),expectCloseHints(JSCodeHints.jsHintProvider,hintObj,{line:17,ch:16},!1),expectCloseHints(JSCodeHints.jsHintProvider,hintObj,{line:17,ch:17},!0)}),it("should close hints only when move off the beginning of an identifier ",function(){testEditor.setCursorPos({line:17,ch:10});var hintObj=expectHints(JSCodeHints.jsHintProvider);expectCloseHints(JSCodeHints.jsHintProvider,hintObj,{line:17,ch:9},!1),expectCloseHints(JSCodeHints.jsHintProvider,hintObj,{line:17,ch:8},!1),expectCloseHints(JSCodeHints.jsHintProvider,hintObj,{line:17,ch:7},!0)}),it("should close hints only when move off the beginning of a keyword ",function(){testEditor.setCursorPos({line:24,ch:7});var hintObj=expectHints(JSCodeHints.jsHintProvider);hintsPresent(hintObj,["var"]),expectCloseHints(JSCodeHints.jsHintProvider,hintObj,{line:24,ch:6},!1),expectCloseHints(JSCodeHints.jsHintProvider,hintObj,{line:24,ch:5},!1),expectCloseHints(JSCodeHints.jsHintProvider,hintObj,{line:24,ch:4},!1),expectCloseHints(JSCodeHints.jsHintProvider,hintObj,{line:24,ch:3},!0)}),it("should NOT list implicit hints on left-brace",function(){testEditor.setCursorPos({line:6,ch:0}),expectNoHints(JSCodeHints.jsHintProvider,"{")}),it("should list explicit hints for variable and function names",function(){var hintObj;testEditor.setCursorPos({line:6,ch:0}),hintsPresent(expectHints(JSCodeHints.jsHintProvider,null),["A2","A3","funB","A1"])}),it("should list implicit hints when typing property lookups",function(){var hintObj;testEditor.setCursorPos({line:17,ch:10}),hintsPresent(expectHints(JSCodeHints.jsHintProvider,"."),["B1","paramB1"])}),it("should give priority to identifier names associated with the current context",function(){testEditor.setCursorPos({line:16,ch:0});var hintObj=expectHints(JSCodeHints.jsHintProvider);hintsPresentOrdered(hintObj,["C1","B1"]),hintsPresentOrdered(hintObj,["C2","B2"])}),it("should give priority to property names associated with the current context from other files",function(){testEditor.setCursorPos({line:16,ch:0});var hintObj=expectHints(JSCodeHints.jsHintProvider);hintsPresentOrdered(hintObj,["C1","D1"]),hintsPresentOrdered(hintObj,["B1","D1"]),hintsPresentOrdered(hintObj,["A1","D1"]),hintsPresentOrdered(hintObj,["funB","funE"])}),xit("should choose the correct delimiter for string literal hints with no query",function(){var start={line:18,ch:0},end={line:18,ch:18};testEditor.setCursorPos(start);var hintObj=expectHints(JSCodeHints.jsHintProvider);selectHint(JSCodeHints.jsHintProvider,hintObj,13),runs(function(){expect(testEditor.getCursorPos()).toEqual(end),expect(testDoc.getRange(start,end)).toEqual('"hello\\\\\\" world!"')})}),it("should insert value hints with no current query",function(){var start={line:6,ch:0},end={line:6,ch:2};testEditor.setCursorPos(start);var hintObj=expectHints(JSCodeHints.jsHintProvider);selectHint(JSCodeHints.jsHintProvider,hintObj,"A2"),runs(function(){expect(testDoc.getRange(start,end)).toEqual("A2")})}),it("should insert value hints replacing the current query",function(){var start={line:5,ch:10},before={line:5,ch:9},end={line:5,ch:11};testEditor.setCursorPos(start);var hintObj=expectHints(JSCodeHints.jsHintProvider);hintsPresent(hintObj,["A1","A2","A3"]),selectHint(JSCodeHints.jsHintProvider,hintObj,"A1"),runs(function(){expect(testDoc.getRange(before,end)).toEqual("A1")})}),it("should insert property hints with no current query",function(){var start={line:6,ch:0},middle={line:6,ch:3},end={line:6,ch:8};testDoc.replaceRange("A1.",start,start),testEditor.setCursorPos(middle);var hintObj=expectHints(JSCodeHints.jsHintProvider);selectHint(JSCodeHints.jsHintProvider,hintObj,"propA"),runs(function(){expect(fixPos(testEditor.getCursorPos())).toEqual(fixPos(end)),expect(testDoc.getRange(start,end)).toEqual("A1.propA"),expect(testDoc.getLine(end.line).length).toEqual(8)})}),it("should insert, not replace, property hints with no current query",function(){var start={line:6,ch:0},middle={line:6,ch:3},end={line:6,ch:8},endplus={line:6,ch:12};testDoc.replaceRange("A1.prop",start,start),testEditor.setCursorPos(middle);var hintObj=expectHints(JSCodeHints.jsHintProvider);selectHint(JSCodeHints.jsHintProvider,hintObj,"propA"),runs(function(){expect(fixPos(testEditor.getCursorPos())).toEqual(fixPos(end)),expect(testDoc.getRange(start,endplus)).toEqual("A1.propAprop"),expect(testDoc.getLine(end.line).length).toEqual(12)})}),it("should insert, not replace, property hints with a partial current query",function(){var start={line:6,ch:0},middle={line:6,ch:6},end={line:6,ch:8};testDoc.replaceRange("A1.pro",start,start),testEditor.setCursorPos(middle);var hintObj=expectHints(JSCodeHints.jsHintProvider);selectHint(JSCodeHints.jsHintProvider,hintObj,"propA"),runs(function(){expect(fixPos(testEditor.getCursorPos())).toEqual(fixPos(end)),expect(testDoc.getRange(start,end)).toEqual("A1.propA"),expect(testDoc.getLine(end.line).length).toEqual(8)})}),it("should replace property hints replacing a partial current query",function(){var start={line:6,ch:0},middle={line:6,ch:6},end={line:6,ch:8},endplus={line:6,ch:10};testDoc.replaceRange("A1.propB",start,start),testEditor.setCursorPos(middle);var hintObj=expectHints(JSCodeHints.jsHintProvider);selectHint(JSCodeHints.jsHintProvider,hintObj,"propA"),runs(function(){expect(fixPos(testEditor.getCursorPos())).toEqual(fixPos(end)),expect(testDoc.getRange(start,endplus)).toEqual("A1.propApB"),expect(testDoc.getLine(end.line).length).toEqual(10)})}),it("should replace property hints but not following delimiters",function(){var start={line:6,ch:0},middle={line:6,ch:4},end={line:6,ch:9},endplus={line:6,ch:14};testDoc.replaceRange("(A1.prop)",start,start),testEditor.setCursorPos(middle);var hintObj=expectHints(JSCodeHints.jsHintProvider);selectHint(JSCodeHints.jsHintProvider,hintObj,"propA"),runs(function(){expect(fixPos(testEditor.getCursorPos())).toEqual(fixPos(end)),expect(testDoc.getRange(start,endplus)).toEqual("(A1.propAprop)"),expect(testDoc.getLine(endplus.line).length).toEqual(14)})}),it("should list hints for string, as string assigned to 's', 's' assigned to 'r' and 'r' assigned to 't'",function(){var start={line:26,ch:0},middle={line:26,ch:6};testDoc.replaceRange("    t.",start),testEditor.setCursorPos(middle);var hintObj=expectHints(JSCodeHints.jsHintProvider);runs(function(){hintsPresentOrdered(hintObj,["charAt","charCodeAt","concat","indexOf"])})}),it("should list function type",function(){var start={line:37,ch:0},middle={line:37,ch:5};testDoc.replaceRange("funD(",start,start),testEditor.setCursorPos(middle),runs(function(){expectParameterHint([{name:"a",type:"String"},{name:"b",type:"Number"}],0)})}),it("should list exports from a requirejs module",function(){var start={line:40,ch:21};testEditor.setCursorPos(start);var hintObj=expectHints(JSCodeHints.jsHintProvider);runs(function(){hintsPresentExact(hintObj,["a","b","c","j"])})}),it("should list later defined property names",function(){var start={line:17,ch:11};testEditor.setCursorPos(start);var hintObj=expectHints(JSCodeHints.jsHintProvider);runs(function(){hintsPresentExact(hintObj,["foo","propB"])})}),it("should list matching property names",function(){var cursor1={line:12,ch:0},cursor2={line:12,ch:6};testDoc.replaceRange("paramB",cursor1,cursor1),testEditor.setCursorPos(cursor2);var hintObj=expectHints(JSCodeHints.jsHintProvider);runs(function(){hintsPresentExact(hintObj,["paramB1","paramB2"])})}),it("should take anotation parameter type:String",function(){var start={line:37,ch:21};testDoc.replaceRange("var k= funD(10,11).x.",start,start),testEditor.setCursorPos(start);var hintObj=expectHints(JSCodeHints.jsHintProvider);runs(function(){hintsPresentOrdered(hintObj,["charAt","charCodeAt","concat","indexOf"])})}),it("should take anotation parameter type:Number",function(){var start={line:37,ch:21};testDoc.replaceRange("var k= funD(10,11).y.",start,start),testEditor.setCursorPos(start);var hintObj=expectHints(JSCodeHints.jsHintProvider);runs(function(){hintsPresentOrdered(hintObj,["toExponential","toFixed","toString"])})}),it("should add new method on String .prototype",function(){var start={line:37,ch:0},testPos={line:40,ch:12};testDoc.replaceRange("String.prototype.times = function (count) {\n\treturn count < 1 ? '' : new Array[count + 1].join(this);\n};\n\"hello\".tim",start,start),testEditor.setCursorPos(testPos);var hintObj=expectHints(JSCodeHints.jsHintProvider);runs(function(){hintsPresentOrdered(hintObj,["times","trim"])})}),it("should list function defined from .prototype",function(){var start={line:59,ch:5};testEditor.setCursorPos(start);var hintObj=expectHints(JSCodeHints.jsHintProvider);runs(function(){hintsPresentExact(hintObj,["calc"])})}),it("should list function type defined from .prototype",function(){var start={line:59,ch:10};testEditor.setCursorPos(start),runs(function(){expectParameterHint([{name:"a4",type:"Number"},{name:"b4",type:"Number"}],0)})}),it("should list function inherited from super class",function(){var start={line:79,ch:11};testEditor.setCursorPos(start);var hintObj=expectHints(JSCodeHints.jsHintProvider);runs(function(){hintsPresentExact(hintObj,["amountDue","getAmountDue","getName","name","setAmountDue"])})}),it("should show argument from from .prototype.Method",function(){var start={line:80,ch:0},testPos={line:80,ch:24};testDoc.replaceRange("myCustomer.setAmountDue(",start),testEditor.setCursorPos(testPos),runs(function(){expectParameterHint([{name:"amountDue",type:"Object"}],0)})}),it("should show inner function type",function(){var testPos={line:96,ch:23};testEditor.setCursorPos(testPos),runs(function(){expectParameterHint([{name:"arg",type:"String"}],0)})}),it("should show type for inner function returned function",function(){var testPos={line:96,ch:33};testEditor.setCursorPos(testPos),expectHints(JSCodeHints.jsHintProvider),runs(function(){expectParameterHint([],0)})}),xit("should list parameter Date,boolean type",function(){var start={line:109,ch:0},testPos={line:109,ch:11};testDoc.replaceRange("funTypeAn1(",start),testEditor.setCursorPos(testPos);var hintObj=expectHints(JSCodeHints.jsHintProvider);runs(function(){hintsPresentExact(hintObj,["funTypeAn1((a: bool, b: Date) -> {x, y}"])})}),xit("should list parameter function type and best guess for its argument/return types",function(){var testPos={line:123,ch:11};testEditor.setCursorPos(testPos),runs(function(){expectParameterHint([{name:"f",type:"function(): number"}],0)})}),it("should list parameter function type and best guess for function call/return types",function(){var testPos={line:139,ch:12};testEditor.setCursorPos(testPos),runs(function(){expectParameterHint([{name:"f",type:"function(String, Number):String"}],0)})}),it("should list array containing functions",function(){var testPos={line:142,ch:7};testEditor.setCursorPos(testPos);var hintObj=expectHints(JSCodeHints.jsHintProvider);runs(function(){hintsPresent(hintObj,["index1","index2"])})}),it("should list function reference",function(){var start={line:144,ch:0},testPos={line:144,ch:14};testDoc.replaceRange("funArr.index1(",start),testEditor.setCursorPos(testPos),runs(function(){expectParameterHint([],0)})}),it("should insert hint as [\"my-key\"] since 'my-key' is not a valid property name",function(){var start={line:49,ch:0},middle={line:49,ch:5},end={line:49,ch:13};testDoc.replaceRange("arr.m",start,start),testEditor.setCursorPos(middle);var hintObj=expectHints(JSCodeHints.jsHintProvider);selectHint(JSCodeHints.jsHintProvider,hintObj,"my-key"),runs(function(){expect(fixPos(testEditor.getCursorPos())).toEqual(fixPos(end)),expect(testDoc.getRange(start,end)).toEqual('arr["my-key"]'),expect(testDoc.getLine(end.line).length).toEqual(13)})}),it("should insert hint as [\"my-key\"] make sure this works if nothing is typed after the '.'",function(){var start={line:49,ch:0},middle={line:49,ch:4},end={line:49,ch:13};testDoc.replaceRange("arr.",start,start),testEditor.setCursorPos(middle);var hintObj=expectHints(JSCodeHints.jsHintProvider);selectHint(JSCodeHints.jsHintProvider,hintObj,"my-key"),runs(function(){expect(fixPos(testEditor.getCursorPos())).toEqual(fixPos(end)),expect(testDoc.getRange(start,end)).toEqual('arr["my-key"]'),expect(testDoc.getLine(end.line).length).toEqual(13)})}),it("should insert hint as '.for' since keywords can be used as property names",function(){var start={line:49,ch:0},middle={line:49,ch:5},end={line:49,ch:7};testDoc.replaceRange("arr.f",start,start),testEditor.setCursorPos(middle);var hintObj=expectHints(JSCodeHints.jsHintProvider);selectHint(JSCodeHints.jsHintProvider,hintObj,"for"),runs(function(){expect(fixPos(testEditor.getCursorPos())).toEqual(fixPos(end)),expect(testDoc.getRange(start,end)).toEqual("arr.for"),expect(testDoc.getLine(end.line).length).toEqual(7)})}),it("should jump to function",function(){var start={line:43,ch:0};testEditor.setCursorPos(start),runs(function(){editorJumped({line:7,ch:13})})}),it("should jump to var",function(){var start={line:44,ch:10};testEditor.setCursorPos(start),runs(function(){editorJumped({line:3,ch:6})})}),it("should jump to closure, early defined var",function(){var start={line:17,ch:9};testEditor.setCursorPos(start),runs(function(){editorJumped({line:10,ch:10})})}),it("should jump to the definition in new module file",function(){var start={line:40,ch:22};testEditor.setCursorPos(start),runs(function(){editorJumped({line:4,ch:13,file:"MyModule.js"})})}),it("should jump to the method definition in .prototype",function(){var start={line:59,ch:8};testEditor.setCursorPos(start),runs(function(){editorJumped({line:53,ch:21})})}),it("should jump to parameter passed in the method",function(){var start={line:63,ch:20};testEditor.setCursorPos(start),runs(function(){editorJumped({line:61,ch:27})})}),it("should jump to parameter passed in anonymous method",function(){var start={line:83,ch:25};testEditor.setCursorPos(start),runs(function(){editorJumped({line:81,ch:53})})}),it("should jump to inner method",function(){var start={line:96,ch:32};testEditor.setCursorPos(start),runs(function(){editorJumped({line:94,ch:17})})}),it("should jump to the actual function definition, and not the exports line",function(){var start={line:159,ch:22};testEditor.setCursorPos(start),runs(function(){editorJumped({line:11,ch:14,file:"MyModule.js"})})}),it("should not hint function, variable, or param decls",function(){var func={line:7,ch:12},param={line:7,ch:18},variable={line:10,ch:10};runs(function(){testEditor.setCursorPos(func),expectNoParameterHint(),testEditor.setCursorPos(param),expectNoHints(JSCodeHints.jsHintProvider),testEditor.setCursorPos(variable),expectNoHints(JSCodeHints.jsHintProvider)})}),it("should sort underscore names to the bottom",function(){var hintObj;testEditor.setCursorPos({line:146,ch:0}),hintsPresentOrdered(expectHints(JSCodeHints.jsHintProvider),["A1","A2","A3","funB","_A1"])}),it("should list all properties for unknown type",function(){var start={line:149,ch:0},end={line:149,ch:5},hintObj;testDoc.replaceRange("help.",start,start),testEditor.setCursorPos(end),hintsPresentOrdered(expectHints(JSCodeHints.jsHintProvider),["apply","charCodeAt","concat"])}),it("should switch to guesses after typing a query that does not match any hints",function(){var start={line:150,ch:0},end={line:150,ch:5},hintObj;testDoc.replaceRange("s.shift",start,start),testEditor.setCursorPos(end),hintsPresentOrdered(expectHints(JSCodeHints.jsHintProvider),["shift","shiftKey"])}),it("should handle valid non-ascii characters in a property name",function(){var start={line:153,ch:0},end={line:153,ch:13},hintObj;testDoc.replaceRange("hope.frenchçP",start,start),testEditor.setCursorPos(end),hintsPresentOrdered(expectHints(JSCodeHints.jsHintProvider),["frenchçProp"])}),it("should show guessed argument type from current passing parameter",function(){var start={line:80,ch:0},testPos={line:80,ch:24};testDoc.replaceRange("myCustomer.setAmountDue(10)",start),testEditor.setCursorPos(testPos),runs(function(){expectParameterHint([{name:"amountDue",type:"Number"}],0)})}),it("should list parameter hint for record type annotation",function(){var testPos={line:178,ch:25};testEditor.setCursorPos(testPos),runs(function(){expectParameterHint([{name:"t",type:"{index: Number, name: String}"}],-1)})}),it("should list parameter hint for optional parameters",function(){var testPos={line:214,ch:17};testEditor.setCursorPos(testPos),runs(function(){expectParameterHint([{name:"a",type:"Number",isOptional:!0},{name:"b",type:"String",isOptional:!0}],0)})}),it("should list parameter hint for a function parameter",function(){var testPos={line:181,ch:12};testEditor.setCursorPos(testPos),runs(function(){expectParameterHint([{name:"compare",type:"function(Object, Object):Number",isOptional:!0}],-1)})}),it("should list parameter hint for an array parameter",function(){var testPos={line:184,ch:12};testEditor.setCursorPos(testPos),runs(function(){expectParameterHint([{name:"other",type:"Array.<Object>"}],-1)})}),it("should list parameter hint for a source array annotation",function(){var testPos={line:200,ch:20};testEditor.setCursorPos(testPos),runs(function(){expectParameterHint([{name:"a",type:"Array.<String>"}],0)})}),it("should close parameter hint when move off function",function(){var testPos={line:184,ch:12},endPos={line:184,ch:19};testEditor.setCursorPos(testPos),runs(function(){expectParameterHint([{name:"other",type:"Array.<Object>"}],-1)}),runs(function(){testEditor.setCursorPos(endPos),expectParameterHintClosed()})}),it("should close parameter hint when move off function to another function",function(){var testPos={line:184,ch:12},newPos={line:181,ch:12};testEditor.setCursorPos(testPos),runs(function(){expectParameterHint([{name:"other",type:"Array.<Object>"}],-1)}),runs(function(){testEditor.setCursorPos(newPos),expectParameterHintClosed()})}),it("should update current parameter as the cursor moves",function(){var testPos={line:186,ch:19},newPos={line:186,ch:20};testEditor.setCursorPos(testPos),runs(function(){expectParameterHint([{name:"char",type:"String"},{name:"from",type:"Number",isOptional:!0}],0)}),runs(function(){testEditor.setCursorPos(newPos),expectParameterHint([{name:"char",type:"String"},{name:"from",type:"Number",isOptional:!0}],1)})}),it("should consider dot a hintable key based on preference",function(){var noHintsOnDot=PreferencesManager.get("jscodehints.noHintsOnDot");testEditor.setCursorPos({line:44,ch:10}),expect(noHintsOnDot).toBeFalsy(),expectHints(JSCodeHints.jsHintProvider,"."),PreferencesManager.set("jscodehints.noHintsOnDot",!0),expectNoHints(JSCodeHints.jsHintProvider,"."),PreferencesManager.set("jscodehints.noHintsOnDot",!!noHintsOnDot)})}),describe("JavaScript Code Hinting in a HTML file",function(){beforeEach(function(){setupTest(testHtmlPath,!1)}),afterEach(function(){tearDownTest()}),it("basic codehints in html file",function(){var start={line:37,ch:9},end={line:37,ch:13};testDoc.replaceRange("x100.",start),testEditor.setCursorPos(end);var hintObj=expectHints(JSCodeHints.jsHintProvider);runs(function(){hintsPresentOrdered(hintObj,["charAt","charCodeAt","concat","indexOf"])})}),it("function type hint in html file",function(){var start={line:36,ch:12};testEditor.setCursorPos(start),runs(function(){expectParameterHint([{name:"a",type:"Number"}],0)})}),it("should show function type code hint for function in script file inside html file",function(){var start={line:22,ch:17};testEditor.setCursorPos(start),runs(function(){expectParameterHint([{name:"a",type:"String"},{name:"b",type:"Number"}],0)})}),it("should show function type code hint for function in another script file inside html file",function(){var start={line:23,ch:17};testEditor.setCursorPos(start),runs(function(){expectParameterHint([{name:"paramE1",type:"D1"},{name:"paramE2",type:"Number"}],0)})}),it("should show global variable in another script file inside html file",function(){var start={line:27,ch:8},end={line:27,ch:13},testPosStart={line:27,ch:11},testPosEnd={line:27,ch:21};testDoc.replaceRange("arr.m",start),testEditor.setCursorPos(end);var hintObj=expectHints(JSCodeHints.jsHintProvider);runs(function(){hintsPresent(hintObj,["my-key"])}),selectHint(JSCodeHints.jsHintProvider,hintObj,"my-key"),runs(function(){expect(testDoc.getRange(testPosStart,testPosEnd)).toEqual('["my-key"]')})}),it("should jump to definition inside html file",function(){var start={line:36,ch:10};testEditor.setCursorPos(start),runs(function(){editorJumped({line:19,ch:20})})}),it("should jump to funtion definition to loaded file1",function(){var start={line:22,ch:15};testEditor.setCursorPos(start),runs(function(){editorJumped({line:33,ch:13})})}),it("should jump to funtion definition to loaded file2",function(){var start={line:23,ch:15};testEditor.setCursorPos(start),runs(function(){editorJumped({line:6,ch:13})})}),it("should jump to property definition to loaded file1",function(){var start={line:23,ch:28};testEditor.setCursorPos(start),runs(function(){editorJumped({line:4,ch:16})})}),it("should jump to property definition to loaded file2",function(){var start={line:23,ch:18};testEditor.setCursorPos(start),runs(function(){editorJumped({line:3,ch:6})})})}),describe("JavaScript Code Hinting without modules",function(){var testPath=extensionPath+"/unittest-files/non-module-test-files/app.js";ScopeManager.handleProjectOpen(extensionPath+"/unittest-files/non-module-test-files/"),beforeEach(function(){setupTest(testPath,!0)}),afterEach(function(){tearDownTest()}),xit("should handle reading all files when modules not used",function(){var start={line:8,ch:8};runs(function(){var hintObj;testEditor.setCursorPos(start),hintsPresentExact(expectHints(JSCodeHints.jsHintProvider),["a","b","b1","c","d"])})})}),describe("JavaScript Code Hinting with modules",function(){var testPath=extensionPath+"/unittest-files/module-test-files/module_tests.js";beforeEach(function(){setupTest(testPath,!0)}),afterEach(function(){tearDownTest()}),it("should read methods created in submodule on this",function(){var start={line:8,ch:17};runs(function(){var hintObj;testEditor.setCursorPos(start),hintsPresentExact(expectHints(JSCodeHints.jsHintProvider),["addMessage","name","privilegedMethod","publicMethod1"])})}),xit("should read methods created in submodule",function(){var start={line:19,ch:15};runs(function(){var hintObj;testEditor.setCursorPos(start),hintsPresentExact(expectHints(JSCodeHints.jsHintProvider),["addMessage","name","privilegedMethod","publicMethod1"])})}),it("should read properties created in parent module",function(){var start={line:30,ch:8},testPos={line:30,ch:15};testDoc.replaceRange("parent.",start),runs(function(){var hintObj;testEditor.setCursorPos(testPos),hintsPresentExact(expectHints(JSCodeHints.jsHintProvider),["addMessage","name","privilegedMethod","publicMethod1"])})}),xit("should read methods created in submodule module",function(){var start={line:62,ch:0},testPos={line:62,ch:13};testDoc.replaceRange("SearchEngine.",start),runs(function(){var hintObj;testEditor.setCursorPos(testPos),hintsPresentExact(expectHints(JSCodeHints.jsHintProvider),["getYourLuckyNumber","subSearch"])})}),it("should read methods created in parent module",function(){var start={line:78,ch:41};runs(function(){var hintObj;testEditor.setCursorPos(start),hintsPresentExact(expectHints(JSCodeHints.jsHintProvider),["getYourLuckyNumber","subSearch"])})}),it("should load module by file path from require",function(){var start={line:88,ch:20};runs(function(){var hintObj;testEditor.setCursorPos(start),hintsPresentExact(expectHints(JSCodeHints.jsHintProvider),["color","material","size"])})}),xit("should read properties from exported module",function(){var start={line:96,ch:0},testPos={line:96,ch:9};testDoc.replaceRange("hondaCar.",start),runs(function(){var hintObj;testEditor.setCursorPos(testPos),hintsPresentExact(expectHints(JSCodeHints.jsHintProvider),["model","name"])})}),xit("should jump to a module, depending module",function(){var start={line:93,ch:25},testPos={line:8,ch:35};testEditor.setCursorPos(start),runs(function(){editorJumped({line:5,ch:23})}),testEditor.setCursorPos(testPos),runs(function(){editorJumped({line:5,ch:23})})})}),describe("JavaScript Code Hinting preference tests",function(){var testPath=extensionPath+"/unittest-files/preference-test-files/",preferences;function getPreferences(path){preferences=null,FileSystem.resolve(path,function(err,file){err?preferences=new Preferences:FileUtils.readAsText(file).done(function(text){var configObj=null;try{configObj=JSON.parse(text)}catch(e){console.log(e)}preferences=new Preferences(configObj)}).fail(function(error){preferences=new Preferences})})}it("should handle reading an empty configuration file",function(){getPreferences(testPath+"defaults-test/.jscodehints"),waitsFor(function(){return null!==preferences}),runs(function(){expect(preferences.getExcludedDirectories()).toEqual(/node_modules/),expect(preferences.getExcludedFiles().source).toBe(/^require.*\.js$|^jquery.*\.js$/.source),expect(preferences.getMaxFileCount()).toBe(100),expect(preferences.getMaxFileSize()).toBe(524288)})}),it("should handle reading an invalid configuration file",function(){getPreferences(testPath+"negative-test/.jscodehints"),waitsFor(function(){return null!==preferences}),runs(function(){expect(preferences.getExcludedDirectories()).toEqual(/node_modules/),expect(preferences.getExcludedFiles().source).toBe(/^require.*\.js$|^jquery.*\.js$/.source),expect(preferences.getMaxFileCount()).toBe(100),expect(preferences.getMaxFileSize()).toBe(524288)})}),it("should handle a valid configuration file",function(){getPreferences(testPath+"positive-test/.jscodehints"),waitsFor(function(){return null!==preferences}),runs(function(){var excludedDirs=preferences.getExcludedDirectories(),excludedFiles=preferences.getExcludedFiles();expect(excludedDirs.test("excluded-dir1")).toBeTruthy(),expect(excludedDirs.test("xexcluded-dir1")).toBeFalsy(),expect(excludedDirs.test("excluded-dir2-1")).toBeTruthy(),expect(excludedDirs.test("excluded-dir2-12")).toBeFalsy(),expect(excludedDirs.test("excluded-dir2-z")).toBeFalsy(),expect(excludedDirs.test("excluded-dir2-")).toBeFalsy(),expect(excludedDirs.test("xexcluded-dir2-1")).toBeFalsy(),expect(excludedFiles.test("file1.js")).toBeTruthy(),expect(excludedFiles.test("file12.js")).toBeTruthy(),expect(excludedFiles.test("file123.js")).toBeFalsy(),expect(excludedFiles.test("file2.js")).toBeTruthy(),expect(excludedFiles.test("file2xxx.js")).toBeTruthy(),expect(excludedFiles.test("filexxxx.js")).toBeFalsy(),expect(excludedFiles.test("file3.js")).toBeTruthy(),expect(excludedFiles.test("xfile3.js")).toBeFalsy(),expect(excludedFiles.test("file4.js")).toBeTruthy(),expect(excludedFiles.test("file4x.js")).toBeTruthy(),expect(excludedFiles.test("file4y.js")).toBeTruthy(),expect(excludedFiles.test("file4z.js")).toBeTruthy(),expect(excludedFiles.test("file4b.js")).toBeFalsy(),expect(excludedFiles.test("file4xyz.js")).toBeFalsy(),expect(excludedFiles.test("xfile4.js")).toBeTruthy(),expect(excludedFiles.test("require.js")).toBeTruthy(),expect(excludedFiles.test("jquery.js")).toBeTruthy(),expect(preferences.getMaxFileCount()).toBe(512),expect(preferences.getMaxFileSize()).toBe(1e5)})})}),describe("regression tests",function(){it("should return true for valid identifier, false for invalid one",function(){var identifierList=["ᾩ","ĦĔĽĻŎ","〱〱〱〱","जावास्क्रि","KingGeorgeⅦ","π","ಠ_ಠ","price_9̶9̶_89","$_3423","TRUE","FALSE","IV"],invalidIdentifierList;[" break","\tif","\ntrade"].forEach(function(element){var result=HintUtils.maybeIdentifier(element);expect(result).toBe(!1)}),identifierList.forEach(function(element){var result=HintUtils.maybeIdentifier(element);expect(result).toBe(!0)})})}),describe("JavaScript Code Hinting with test.html file",function(){var testFile=extensionPath+"/unittest-files/basic-test-files/test.html";beforeEach(function(){setupTest(testFile,!0)}),afterEach(function(){tearDownTest()}),xit("should read function name has double byte chars",function(){var start={line:15,ch:8},testPos={line:15,ch:10};runs(function(){var hintObj;testEditor.setCursorPos(start),hintsPresentExact(expectHints(JSCodeHints.jsHintProvider),["fun測试"])}),runs(function(){var hintObj;testEditor.setCursorPos(testPos),hintsPresentExact(expectHints(JSCodeHints.jsHintProvider),["fun測试()"])})}),it("should jump to function name with double byte chars",function(){var start={line:16,ch:9};testEditor.setCursorPos(start),runs(function(){editorJumped({line:12,ch:20})})}),xit("should read function name has non ascii chars",function(){var start={line:16,ch:16};runs(function(){var hintObj;testEditor.setCursorPos(start),hintsPresentExact(expectHints(JSCodeHints.jsHintProvider),["frenchçProp()"])})}),it("should jump to function name with non ascii chars",function(){var start={line:16,ch:12};testEditor.setCursorPos(start),runs(function(){editorJumped({line:12,ch:20})})})}),describe("Code Hinting Regression",function(){var testFile=extensionPath+"/unittest-files/module-test-files/china/cupFiller.js";beforeEach(function(){setupTest(testFile,!0)}),afterEach(function(){tearDownTest()}),xit("should show hints for members of referenced class",function(){var start={line:8,ch:15};runs(function(){var hintObj;testEditor.setCursorPos(start),hintsPresentExact(expectHints(JSCodeHints.jsHintProvider),["empty","emptyIt","fill","full"])})})}),describe("JavaScript Code Hinting format parameters tests",function(){it("should format parameters with no params",function(){var params=[];expect(HintUtils2.formatParameterHint(params)).toBe("")}),it("should format parameters with one param",function(){var params=[{name:"param1",type:"String"}];expect(HintUtils2.formatParameterHint(params)).toBe("String param1")}),it("should format parameters with one optional param",function(){var params=[{name:"param1",type:"String",isOptional:!0}];expect(HintUtils2.formatParameterHint(params)).toBe("[String param1]")}),it("should format parameters with one required, one optional param",function(){var params=[{name:"param1",type:"String"},{name:"param2",type:"String",isOptional:!0}];expect(HintUtils2.formatParameterHint(params)).toBe("String param1, [String param2]")}),it("should format parameters with required param following an optional param",function(){var params=[{name:"param1",type:"String"},{name:"param2",type:"String",isOptional:!0},{name:"param3",type:"String"}];expect(HintUtils2.formatParameterHint(params)).toBe("String param1, [String param2, String param3]")}),it("should format parameters with optional param following an optional param",function(){var params=[{name:"param1",type:"String"},{name:"param2",type:"String",isOptional:!0},{name:"param3",type:"String",isOptional:!0}];expect(HintUtils2.formatParameterHint(params)).toBe("String param1, [String param2], [String param3]")}),it("should format parameters with optional param following optional and required params",function(){var params=[{name:"param1",type:"String"},{name:"param2",type:"String",isOptional:!0},{name:"param3",type:"String"},{name:"param4",type:"String",isOptional:!0}];expect(HintUtils2.formatParameterHint(params)).toBe("String param1, [String param2, String param3], [String param4]")})})})});
//# sourceMappingURL=unittestsx.js.map
