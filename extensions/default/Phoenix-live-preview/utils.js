define(function(require,exports,module){const ProjectManager=brackets.getModule("project/ProjectManager"),DocumentManager=brackets.getModule("document/DocumentManager"),FileSystem=brackets.getModule("filesystem/FileSystem");function getExtension(filePath){let pathSplit=(filePath=filePath||"").split(".");return pathSplit&&pathSplit.length>1?pathSplit[pathSplit.length-1]:""}function _isPreviewableFile(filePath){let extension=getExtension(filePath);return["html","htm","jpg","jpeg","png","svg","pdf","md","markdown"].includes(extension.toLowerCase())}function _isMarkdownFile(filePath){let extension=getExtension(filePath);return["md","markdown"].includes(extension.toLowerCase())}function getNoPreviewURL(){return`${window.Phoenix.baseURL}assets/phoenix-splash/no-preview.html`}async function _getDefaultPreviewDetails(){return new Promise(async(resolve,reject)=>{try{let projectRoot=ProjectManager.getProjectRoot().fullPath;const projectRootUrl=`${window.fsServerUrl}${projectRoot}`;let indexFiles=["index.html","index.htm"];for(let indexFile of indexFiles){let file=FileSystem.getFileForPath(`${projectRoot}${indexFile}`);if(await file.existsAsync()){const relativePath=path.relative(projectRoot,file.fullPath);return void resolve({URL:`${projectRootUrl}${relativePath}`,filePath:relativePath})}}resolve({URL:getNoPreviewURL()})}catch(e){reject(e)}})}async function getPreviewDetails(){return new Promise(async(resolve,reject)=>{try{const projectRoot=ProjectManager.getProjectRoot().fullPath,projectRootUrl=`${window.fsServerUrl}${projectRoot}`,currentDocument=DocumentManager.getCurrentDocument(),currentFile=currentDocument?currentDocument.file:ProjectManager.getSelectedItem();if(currentFile){let fullPath=currentFile.fullPath,httpFilePath=null;if((fullPath.startsWith("http://")||fullPath.startsWith("https://"))&&(httpFilePath=fullPath),_isPreviewableFile(fullPath)){const filePath=httpFilePath||path.relative(projectRoot,fullPath);resolve({URL:httpFilePath||`${projectRootUrl}${filePath}`,filePath:filePath,fullPath:fullPath,isMarkdownFile:_isMarkdownFile(fullPath)})}else resolve({})}resolve(await _getDefaultPreviewDetails())}catch(e){reject(e)}})}exports.getPreviewDetails=getPreviewDetails,exports.getNoPreviewURL=getNoPreviewURL,exports.getExtension=getExtension});
//# sourceMappingURL=utils.js.map
