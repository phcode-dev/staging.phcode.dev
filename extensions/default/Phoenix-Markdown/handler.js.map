{"version":3,"sources":["extensions/default/Phoenix-Markdown/handler.js"],"names":["define","require","exports","module","EditorManager","brackets","getModule","Lines","Paragraphs","Selections","Dialogs","MATCH_H1","MATCH_H2","MATCH_H3","MATCH_H4","MATCH_H5","MATCH_H6","MATCH_HD","MATCH_BULLET","MATCH_NUMBERED","MATCH_QUOTE","MATCH_LIST","check","editor","mode","_getModeFromDocument","cursor","getCursorPos","line","handleLineButton","regexp","replace","after","insert","getActiveEditor","allLinesOn","turnLinesOff","turnLinesOn","handleSelectionButton","match","badMatch","allSelectionsOn","turnSelectionsOff","turnSelectionsOn","h1","h2","h3","h4","h5","h6","bold","italic","strikethrough","code","image","link","bullet","numbered","quote","codeblock","paragraph","reflow"],"mappings":"AAwCAA,OAAO,SAAUC,QAASC,QAASC,QAG/B,IAAIC,cAAkBC,SAASC,UAAU,wBAErCC,MAAQN,QAAQ,SAChBO,WAAaP,QAAQ,cACrBQ,WAAaR,QAAQ,cACrBS,QAAUT,QAAQ,WAmBlBU,SAAW,2BACXC,SAAW,4BACXC,SAAW,6BACXC,SAAW,8BACXC,SAAW,+BACXC,SAAW,gCACXC,SAAW,4BACXC,aAAe,WACfC,eAAiB,aACjBC,YAAc,UACdC,WAAa,oBAOjB,SAASC,MAAMC,QACX,IAAKA,OACD,OAAO,EAGX,IAAIC,KAAOD,OAAOE,uBAKdC,OAJJ,OAAa,QAATF,MAA2B,aAATA,SAITD,OAAOI,cAAa,EAAO,MAC5BC,KAkBhB,SAASC,iBAAiBC,OAAQC,QAASC,MAAOC,QAC9C,IAAIV,OAASnB,cAAc8B,kBACtBZ,MAAMC,UAINhB,MAAM4B,WAAWZ,OAAQO,QAG1BvB,MAAM6B,aAAab,OAAQO,OAAQE,OAFnCzB,MAAM8B,YAAYd,OAAQO,OAAQC,QAASC,MAAOC,SAW1D,SAASK,sBAAsBC,MAAOC,UAClC,IAAIjB,OAASnB,cAAc8B,kBACtBZ,MAAMC,UAGNd,WAAWgC,gBAAgBlB,OAAQgB,MAAOC,UAG3C/B,WAAWiC,kBAAkBnB,OAAQgB,MAAOC,UAF5C/B,WAAWkC,iBAAiBpB,OAAQgB,MAAOC,WASnDtC,QAAQ0C,GAAK,WACTf,iBAAiBlB,SAAUM,SAAUC,aAAc,OAGvDhB,QAAQ2C,GAAK,WACThB,iBAAiBjB,SAAUK,SAAUC,aAAc,QAGvDhB,QAAQ4C,GAAK,WACTjB,iBAAiBhB,SAAUI,SAAUC,aAAc,SAGvDhB,QAAQ6C,GAAK,WACTlB,iBAAiBf,SAAUG,SAAUC,aAAc,UAGvDhB,QAAQ8C,GAAK,WACTnB,iBAAiBd,SAAUE,SAAUC,aAAc,WAGvDhB,QAAQ+C,GAAK,WACTpB,iBAAiBb,SAAUC,SAAUC,aAAc,YAGvDhB,QAAQgD,KAAO,WACXZ,sBAAsB,KAAM,KAGhCpC,QAAQiD,OAAS,WACbb,sBAAsB,IAAK,OAG/BpC,QAAQkD,cAAgB,WACpBd,sBAAsB,KAAM,KAGhCpC,QAAQmD,KAAO,WACXf,sBAAsB,IAAK,KAG/BpC,QAAQoD,MAAQ,WACZ,IAAI/B,OAASnB,cAAc8B,kBACtBZ,MAAMC,SAGXb,QAAQ4C,MAAM/B,SAGlBrB,QAAQqD,KAAO,WACX,IAAIhC,OAASnB,cAAc8B,kBACtBZ,MAAMC,SAGXb,QAAQ6C,KAAKhC,SAGjBrB,QAAQsD,OAAS,WACb3B,iBAAiBX,aAAcG,WAAY,KAAM,OAGrDnB,QAAQuD,SAAW,WACf5B,iBAAiBV,eAAgBE,WAAY,KAAM,QAGvDnB,QAAQwD,MAAQ,WACZ7B,iBAAiBT,YAAaC,WAAY,KAAM,OAGpDnB,QAAQyD,UAAY,WAChB,IAAIpC,OAASnB,cAAc8B,kBACtBZ,MAAMC,SAGXf,WAAWmD,UAAUpC,SAGzBrB,QAAQ0D,UAAY,WAChB,IAAIrC,OAASnB,cAAc8B,kBACtBZ,MAAMC,SAGXf,WAAWoD,UAAUrC,SAGzBrB,QAAQ2D,OAAS,WACb,IAAItC,OAASnB,cAAc8B,kBACtBZ,MAAMC,SAGXf,WAAWqD,OAAOtC","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2016 Alan Hohn\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/*jslint vars: true, plusplus: true, devel: true, nomen: true, indent: 4, maxerr: 50 */\n/*global define, brackets */\n\ndefine(function (require, exports, module) {\n\n\n    var EditorManager   = brackets.getModule(\"editor/EditorManager\");\n\n    var Lines = require(\"lines\"),\n        Paragraphs = require(\"paragraphs\"),\n        Selections = require(\"selections\"),\n        Dialogs = require(\"dialogs\");\n\n    /**\n     * Regular expressions do most of the heavy lifting, here\n     * and everywhere.\n     *\n     * Note that the heading items allow for the possibility\n     * that the heading is preceded by a bullet. This seems\n     * odd but it also works, at least in Markdown Preview,\n     * and it is a plausible edge case.\n     *\n     * Numbering in front of a heading just displays a bullet,\n     * so it didn't seem worth preserving.\n     *\n     * Also note that there is a limit on white space before\n     * a heading, as four lines equals raw monospace text.\n     * But there isn't a similar limitation on bullets, because\n     * it would interfere with bullets at level 3+.\n     */\n    var MATCH_H1 = /^(\\s{0,3}|\\s*\\*\\s*)(#\\s)/;\n    var MATCH_H2 = /^(\\s{0,3}|\\s*\\*\\s*)(##\\s)/;\n    var MATCH_H3 = /^(\\s{0,3}|\\s*\\*\\s*)(###\\s)/;\n    var MATCH_H4 = /^(\\s{0,3}|\\s*\\*\\s*)(####\\s)/;\n    var MATCH_H5 = /^(\\s{0,3}|\\s*\\*\\s*)(#####\\s)/;\n    var MATCH_H6 = /^(\\s{0,3}|\\s*\\*\\s*)(######\\s)/;\n    var MATCH_HD = /^(\\s{0,3}|\\s*\\*\\s*)(#+\\s)/;\n    var MATCH_BULLET = /^\\s*\\*\\s/;\n    var MATCH_NUMBERED = /^\\s*\\d\\.\\s/;\n    var MATCH_QUOTE = /^\\s*>\\s/;\n    var MATCH_LIST = /^\\s*(\\*|>|\\d\\.)\\s/;\n\n    /**\n     *  Check initial conditions for any buttons. Make sure\n     *  we have an editor, are in a Markdown document, and\n     *  have a cursor.\n     */\n    function check(editor) {\n        if (!editor) {\n            return false;\n        }\n\n        var mode = editor._getModeFromDocument();\n        if (mode !== \"gfm\" && mode !== \"markdown\") {\n            return false;\n        }\n\n        var cursor = editor.getCursorPos(false, \"to\");\n        if (!cursor.line) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Generic function to handle line-based tasks (headings and\n     * lists). For simple cases, this is a toggle. However, if\n     * multiple lines are selected, and the toggle is on for only\n     * some lines, it is turned on for all lines where it is off.\n     *\n     * This seems like the most intuitive behavior as it allows\n     * things like selecting across a bunch of lines, some already\n     * bulleted, and making them all bulleted. Even in that case,\n     * one extra click will then remove all the bullets.\n     */\n    function handleLineButton(regexp, replace, after, insert) {\n        var editor = EditorManager.getActiveEditor();\n        if (!check(editor)) {\n            return;\n        }\n\n        if (!Lines.allLinesOn(editor, regexp)) {\n            Lines.turnLinesOn(editor, regexp, replace, after, insert);\n        } else {\n            Lines.turnLinesOff(editor, regexp, after);\n        }\n    }\n\n    /**\n     * Generic function to handle selection-based tasks (bold,\n     * italic, strikethrough). Behaves similarly to line behavior\n     * above.\n     */\n    function handleSelectionButton(match, badMatch) {\n        var editor = EditorManager.getActiveEditor();\n        if (!check(editor)) {\n            return;\n        }\n        if (!Selections.allSelectionsOn(editor, match, badMatch)) {\n            Selections.turnSelectionsOn(editor, match, badMatch);\n        } else {\n            Selections.turnSelectionsOff(editor, match, badMatch);\n        }\n    }\n\n    // Define the exports; these are the functions that get wired\n    // into toolbar buttons when the toolbar is created.\n\n    exports.h1 = function () {\n        handleLineButton(MATCH_H1, MATCH_HD, MATCH_BULLET, \"# \");\n    };\n\n    exports.h2 = function () {\n        handleLineButton(MATCH_H2, MATCH_HD, MATCH_BULLET, \"## \");\n    };\n\n    exports.h3 = function () {\n        handleLineButton(MATCH_H3, MATCH_HD, MATCH_BULLET, \"### \");\n    };\n\n    exports.h4 = function () {\n        handleLineButton(MATCH_H4, MATCH_HD, MATCH_BULLET, \"#### \");\n    };\n\n    exports.h5 = function () {\n        handleLineButton(MATCH_H5, MATCH_HD, MATCH_BULLET, \"##### \");\n    };\n\n    exports.h6 = function () {\n        handleLineButton(MATCH_H6, MATCH_HD, MATCH_BULLET, \"###### \");\n    };\n\n    exports.bold = function () {\n        handleSelectionButton(\"**\", \"\");\n    };\n\n    exports.italic = function () {\n        handleSelectionButton(\"*\", \"**\");\n    };\n\n    exports.strikethrough = function () {\n        handleSelectionButton(\"~~\", \"\");\n    };\n\n    exports.code = function () {\n        handleSelectionButton(\"`\", \"\");\n    };\n\n    exports.image = function () {\n        var editor = EditorManager.getActiveEditor();\n        if (!check(editor)) {\n            return;\n        }\n        Dialogs.image(editor);\n    };\n\n    exports.link = function () {\n        var editor = EditorManager.getActiveEditor();\n        if (!check(editor)) {\n            return;\n        }\n        Dialogs.link(editor);\n    };\n\n    exports.bullet = function () {\n        handleLineButton(MATCH_BULLET, MATCH_LIST, null, \"* \");\n    };\n\n    exports.numbered = function () {\n        handleLineButton(MATCH_NUMBERED, MATCH_LIST, null, \"1. \");\n    };\n\n    exports.quote = function () {\n        handleLineButton(MATCH_QUOTE, MATCH_LIST, null, \"> \");\n    };\n\n    exports.codeblock = function () {\n        var editor = EditorManager.getActiveEditor();\n        if (!check(editor)) {\n            return;\n        }\n        Paragraphs.codeblock(editor);\n    };\n\n    exports.paragraph = function () {\n        var editor = EditorManager.getActiveEditor();\n        if (!check(editor)) {\n            return;\n        }\n        Paragraphs.paragraph(editor);\n    };\n\n    exports.reflow = function () {\n        var editor = EditorManager.getActiveEditor();\n        if (!check(editor)) {\n            return;\n        }\n        Paragraphs.reflow(editor);\n    };\n});\n"],"file":"handler.js"}