{"version":3,"sources":["extensions/default/Phoenix-Markdown/lines.js"],"names":["define","require","exports","module","MATCH_NONBLANK","_everySelectionLine","editor","fn","i","selections","getSelections","length","j","start","line","end","ch","document","getLine","test","state","done","result","_turnLineOn","lineno","replaceRE","afterRE","insert","loc","after","replace","exec","s","index","endloc","replaceRange","_turnLineOff","found","preserveRE","preserve","allLinesOn","regExp","hasSelection","curLine","getCursorPos","turnLinesOn","regexp","cursor","turnLinesOff"],"mappings":"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","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2016 Alan Hohn\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/*jslint vars: true, plusplus: true, devel: true, nomen: true, indent: 4, maxerr: 50 */\n/*global define */\n\ndefine(function (require, exports, module) {\n\n\n    var MATCH_NONBLANK = /\\S/;\n\n    /**\n     * Perform the provided action on every non-blank\n     * line in every selection (single or multiple).\n     * If the action returns an object, check if it\n     * indicates done, in which case return its result.\n     *\n     * Note that in CodeMirror a selection that includes\n     * the final newline is indicated by the selection\n     * ending at column 0 of the following line, so we\n     * have to handle that case.\n     */\n    function _everySelectionLine(editor, fn) {\n        var i, selections = editor.getSelections();\n        for (i = 0; i < selections.length; i++) {\n            var j, start = selections[i].start.line;\n            var end = (selections[i].end.ch === 0\n                ? selections[i].end.line : selections[i].end.line + 1);\n            for (j = start; j < end; j++) {\n                var line = editor.document.getLine(j);\n                if (MATCH_NONBLANK.test(line)) {\n                    var state = fn(j, line);\n                    if (state && state.done) {\n                        return state.result;\n                    }\n                }\n            }\n        }\n    }\n\n    function _turnLineOn(editor, lineno, line, replaceRE, afterRE, insert) {\n        var loc, after = null;\n        var replace = replaceRE.exec(line);\n        if (replace) {\n            after = (afterRE ? afterRE.exec(replace[0]) : null);\n            var s = (after ? after[0] : \"\");\n            loc = {line: lineno, ch: replace.index};\n            var endloc = {line: lineno, ch: replace.index + replace[0].length};\n            editor.document.replaceRange(s, loc, endloc, \"+mdbar\");\n            loc.ch += s.length;\n        } else {\n            after = (afterRE ? afterRE.exec(line) : null);\n            loc = {line: lineno, ch: (after ? after.index + after[0].length : 0)};\n        }\n        editor.document.replaceRange(insert, loc, null, \"+mdbar\");\n    }\n\n    function _turnLineOff(editor, lineno, found, preserveRE) {\n        var preserve = (preserveRE ? preserveRE.exec(found[0]) : null);\n        var replace = (preserve ? preserve[0] : \"\");\n        var loc = {line: lineno, ch: found.index};\n        var endloc = {line: lineno, ch: found.index + found[0].length};\n        editor.document.replaceRange(replace, loc, endloc, \"+mdbar\");\n    }\n\n    /**\n     * Returns true only if all non-blank lines in\n     * the selection(s) match the regular expression,\n     * or, if no selection, if the cursor line matches.\n     */\n    exports.allLinesOn = function (editor, regExp) {\n        if (editor.hasSelection()) {\n            var result = _everySelectionLine(editor, function (lineno, line) {\n                if (!regExp.test(line)) {\n                    return {done: true, result: false};\n                }\n            });\n            if (typeof result !== 'undefined') {\n                return result;\n            }\n        } else {\n            var curLine = editor.getCursorPos(false, \"to\").line;\n            if (!regExp.test(editor.document.getLine(curLine))) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * For all non-blank lines in the selection(s), or for the\n     * cursor line if no selection, insert the provided string if it is\n     * not already present (i.e. the regexp does not match). If found,\n     * the replaceRE is removed. If the afterRE is found, preserve it and\n     * insert the string after it.\n     *\n     * The replaceRE lets us switch between different kinds of headings\n     * or lists by just clicking the desired one rather than having to\n     * turn the old one off first. So it's super important even though\n     * it makes for a bit of a mess.\n     */\n    exports.turnLinesOn = function (editor, regexp, replaceRE, afterRE, insert) {\n        if (editor.hasSelection()) {\n            _everySelectionLine(editor, function (lineno, line) {\n                if (!regexp.test(line)) {\n                    _turnLineOn(editor, lineno, line, replaceRE, afterRE, insert);\n                }\n            });\n        } else {\n            var cursor = editor.getCursorPos(false, \"to\"),\n                line = editor.document.getLine(cursor.line);\n            _turnLineOn(editor, cursor.line, line, replaceRE, afterRE, insert);\n        }\n    };\n\n    /**\n     * For all lines in the selection(s), or for the cursor line,\n     * remove the matched regular expression, preserving the\n     * preserveRE if found within the matched regexp.\n     */\n    exports.turnLinesOff = function (editor, regexp, preserveRE) {\n        if (editor.hasSelection()) {\n            _everySelectionLine(editor, function (lineno, line) {\n                var found = regexp.exec(line);\n                if (found) {\n                    _turnLineOff(editor, lineno, found, preserveRE);\n                }\n            });\n        } else {\n            var cursor = editor.getCursorPos(false, \"to\");\n            var found = regexp.exec(editor.document.getLine(cursor.line));\n            if (found) {\n                _turnLineOff(editor, cursor.line, found, preserveRE);\n            }\n        }\n    };\n\n});\n"],"file":"lines.js"}