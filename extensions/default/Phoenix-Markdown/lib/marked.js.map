{"version":3,"sources":["extensions/default/Phoenix-Markdown/lib/marked.js"],"names":["global","block","newline","code","fences","noop","hr","heading","nptable","lheading","blockquote","list","html","def","table","paragraph","text","Lexer","options","this","tokens","links","marked","defaults","rules","normal","gfm","tables","bullet","item","replace","source","_tag","merge","lex","src","lexer","prototype","token","top","bq","next","loose","cap","bull","b","space","i","l","exec","substring","length","push","type","pedantic","lang","depth","header","split","align","cells","test","ordered","match","indexOf","RegExp","smartLists","slice","join","charAt","sanitize","pre","toLowerCase","href","title","Error","charCodeAt","inline","escape","autolink","url","tag","link","reflink","nolink","strong","em","br","del","InlineLexer","renderer","Renderer","breaks","Parser","encode","unescape","_","n","String","fromCharCode","parseInt","regex","opt","self","name","val","obj","target","key","arguments","Object","hasOwnProperty","call","callback","highlight","pending","e","done","err","out","parse","escaped","message","silent","_inside","_href","output","mangle","inLink","outputLink","codespan","smartypants","image","ch","Math","random","toString","langPrefix","quote","level","raw","headerPrefix","xhtml","body","listitem","tablerow","content","tablecell","flags","prot","decodeURIComponent","parser","reverse","tok","pop","peek","parseText","row","cell","j","setOptions","inlineLexer","module","exports","define","amd","window"],"mappings":"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","sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n//jshint: no-start\n;\n\nfunction global() {\n\n}\n\n(function() {\n\n    /**\n * Block-Level Grammar\n */\n\n    var block = {\n        newline: /^\\n+/,\n        code: /^( {4}[^\\n]+\\n*)+/,\n        fences: noop,\n        hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n        heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n        nptable: noop,\n        lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n        blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n        list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n        html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n        def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n        table: noop,\n        paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n        text: /^[^\\n]+/\n    };\n\n    block.bullet = /(?:[*+-]|\\d+\\.)/;\n    block.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\n    block.item = replace(block.item, 'gm')\n    (/bull/g, block.bullet)\n    ();\n\n    block.list = replace(block.list)\n    (/bull/g, block.bullet)\n    ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n    ('def', '\\\\n+(?=' + block.def.source + ')')\n    ();\n\n    block.blockquote = replace(block.blockquote)\n    ('def', block.def)\n    ();\n\n    block._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\n    block.html = replace(block.html)\n    ('comment', /<!--[\\s\\S]*?-->/)\n    ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n    ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n    (/tag/g, block._tag)\n    ();\n\n    block.paragraph = replace(block.paragraph)\n    ('hr', block.hr)\n    ('heading', block.heading)\n    ('lheading', block.lheading)\n    ('blockquote', block.blockquote)\n    ('tag', '<' + block._tag)\n    ('def', block.def)\n    ();\n\n    /**\n * Normal Block Grammar\n */\n\n    block.normal = merge({}, block);\n\n    /**\n * GFM Block Grammar\n */\n\n    block.gfm = merge({}, block.normal, {\n        fences: /^ *(`{3,}|~{3,}) *(\\S+)? *\\n([\\s\\S]+?)\\s*\\1 *(?:\\n+|$)/,\n        paragraph: /^/\n    });\n\n    block.gfm.paragraph = replace(block.paragraph)\n    ('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n    ();\n\n    /**\n * GFM + Tables Block Grammar\n */\n\n    block.tables = merge({}, block.gfm, {\n        nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n        table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n    });\n\n    /**\n * Block Lexer\n */\n\n    function Lexer(options) {\n        this.tokens = [];\n        this.tokens.links = {};\n        this.options = options || marked.defaults;\n        this.rules = block.normal;\n\n        if (this.options.gfm) {\n            if (this.options.tables) {\n                this.rules = block.tables;\n            } else {\n                this.rules = block.gfm;\n            }\n        }\n    }\n\n    /**\n * Expose Block Rules\n */\n\n    Lexer.rules = block;\n\n    /**\n * Static Lex Method\n */\n\n    Lexer.lex = function(src, options) {\n        var lexer = new Lexer(options);\n        return lexer.lex(src);\n    };\n\n    /**\n * Preprocessing\n */\n\n    Lexer.prototype.lex = function(src) {\n        src = src\n            .replace(/\\r\\n|\\r/g, '\\n')\n            .replace(/\\t/g, '    ')\n            .replace(/\\u00a0/g, ' ')\n            .replace(/\\u2424/g, '\\n');\n\n        return this.token(src, true);\n    };\n\n    /**\n * Lexing\n */\n\n    Lexer.prototype.token = function(src, top, bq) {\n        var src = src.replace(/^ +$/gm, ''),\n            next,\n            loose,\n            cap,\n            bull,\n            b,\n            item,\n            space,\n            i,\n            l;\n\n        while (src) {\n            // newline\n            if (cap = this.rules.newline.exec(src)) {\n                src = src.substring(cap[0].length);\n                if (cap[0].length > 1) {\n                    this.tokens.push({\n                        type: 'space'\n                    });\n                }\n            }\n\n            // code\n            if (cap = this.rules.code.exec(src)) {\n                src = src.substring(cap[0].length);\n                cap = cap[0].replace(/^ {4}/gm, '');\n                this.tokens.push({\n                    type: 'code',\n                    text: !this.options.pedantic\n                        ? cap.replace(/\\n+$/, '')\n                        : cap\n                });\n                continue;\n            }\n\n            // fences (gfm)\n            if (cap = this.rules.fences.exec(src)) {\n                src = src.substring(cap[0].length);\n                this.tokens.push({\n                    type: 'code',\n                    lang: cap[2],\n                    text: cap[3]\n                });\n                continue;\n            }\n\n            // heading\n            if (cap = this.rules.heading.exec(src)) {\n                src = src.substring(cap[0].length);\n                this.tokens.push({\n                    type: 'heading',\n                    depth: cap[1].length,\n                    text: cap[2]\n                });\n                continue;\n            }\n\n            // table no leading pipe (gfm)\n            if (top && (cap = this.rules.nptable.exec(src))) {\n                src = src.substring(cap[0].length);\n\n                item = {\n                    type: 'table',\n                    header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n                    align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n                    cells: cap[3].replace(/\\n$/, '').split('\\n')\n                };\n\n                for (i = 0; i < item.align.length; i++) {\n                    if (/^ *-+: *$/.test(item.align[i])) {\n                        item.align[i] = 'right';\n                    } else if (/^ *:-+: *$/.test(item.align[i])) {\n                        item.align[i] = 'center';\n                    } else if (/^ *:-+ *$/.test(item.align[i])) {\n                        item.align[i] = 'left';\n                    } else {\n                        item.align[i] = null;\n                    }\n                }\n\n                for (i = 0; i < item.cells.length; i++) {\n                    item.cells[i] = item.cells[i].split(/ *\\| */);\n                }\n\n                this.tokens.push(item);\n\n                continue;\n            }\n\n            // lheading\n            if (cap = this.rules.lheading.exec(src)) {\n                src = src.substring(cap[0].length);\n                this.tokens.push({\n                    type: 'heading',\n                    depth: cap[2] === '=' ? 1 : 2,\n                    text: cap[1]\n                });\n                continue;\n            }\n\n            // hr\n            if (cap = this.rules.hr.exec(src)) {\n                src = src.substring(cap[0].length);\n                this.tokens.push({\n                    type: 'hr'\n                });\n                continue;\n            }\n\n            // blockquote\n            if (cap = this.rules.blockquote.exec(src)) {\n                src = src.substring(cap[0].length);\n\n                this.tokens.push({\n                    type: 'blockquote_start'\n                });\n\n                cap = cap[0].replace(/^ *> ?/gm, '');\n\n                // Pass `top` to keep the current\n                // \"toplevel\" state. This is exactly\n                // how markdown.pl works.\n                this.token(cap, top, true);\n\n                this.tokens.push({\n                    type: 'blockquote_end'\n                });\n\n                continue;\n            }\n\n            // list\n            if (cap = this.rules.list.exec(src)) {\n                src = src.substring(cap[0].length);\n                bull = cap[2];\n\n                this.tokens.push({\n                    type: 'list_start',\n                    ordered: bull.length > 1\n                });\n\n                // Get each top-level item.\n                cap = cap[0].match(this.rules.item);\n\n                next = false;\n                l = cap.length;\n                i = 0;\n\n                for (; i < l; i++) {\n                    item = cap[i];\n\n                    // Remove the list item's bullet\n                    // so it is seen as the next token.\n                    space = item.length;\n                    item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n                    // Outdent whatever the\n                    // list item contains. Hacky.\n                    // eslint-disable-next-line no-bitwise\n                    if (~item.indexOf('\\n ')) {\n                        space -= item.length;\n                        item = !this.options.pedantic\n                            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n                            : item.replace(/^ {1,4}/gm, '');\n                    }\n\n                    // Determine whether the next list item belongs here.\n                    // Backpedal if it does not belong in this list.\n                    if (this.options.smartLists && i !== l - 1) {\n                        b = block.bullet.exec(cap[i + 1])[0];\n                        if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n                            src = cap.slice(i + 1).join('\\n') + src;\n                            i = l - 1;\n                        }\n                    }\n\n                    // Determine whether item is loose or not.\n                    // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n                    // for discount behavior.\n                    loose = next || /\\n\\n(?!\\s*$)/.test(item);\n                    if (i !== l - 1) {\n                        next = item.charAt(item.length - 1) === '\\n';\n                        if (!loose) { loose = next; }\n                    }\n\n                    this.tokens.push({\n                        type: loose\n                            ? 'loose_item_start'\n                            : 'list_item_start'\n                    });\n\n                    // Recurse.\n                    this.token(item, false, bq);\n\n                    this.tokens.push({\n                        type: 'list_item_end'\n                    });\n                }\n\n                this.tokens.push({\n                    type: 'list_end'\n                });\n\n                continue;\n            }\n\n            // html\n            if (cap = this.rules.html.exec(src)) {\n                src = src.substring(cap[0].length);\n                this.tokens.push({\n                    type: this.options.sanitize\n                        ? 'paragraph'\n                        : 'html',\n                    pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                    text: cap[0]\n                });\n                continue;\n            }\n\n            // def\n            if ((!bq && top) && (cap = this.rules.def.exec(src))) {\n                src = src.substring(cap[0].length);\n                this.tokens.links[cap[1].toLowerCase()] = {\n                    href: cap[2],\n                    title: cap[3]\n                };\n                continue;\n            }\n\n            // table (gfm)\n            if (top && (cap = this.rules.table.exec(src))) {\n                src = src.substring(cap[0].length);\n\n                item = {\n                    type: 'table',\n                    header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n                    align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n                    cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n                };\n\n                for (i = 0; i < item.align.length; i++) {\n                    if (/^ *-+: *$/.test(item.align[i])) {\n                        item.align[i] = 'right';\n                    } else if (/^ *:-+: *$/.test(item.align[i])) {\n                        item.align[i] = 'center';\n                    } else if (/^ *:-+ *$/.test(item.align[i])) {\n                        item.align[i] = 'left';\n                    } else {\n                        item.align[i] = null;\n                    }\n                }\n\n                for (i = 0; i < item.cells.length; i++) {\n                    item.cells[i] = item.cells[i]\n                        .replace(/^ *\\| *| *\\| *$/g, '')\n                        .split(/ *\\| */);\n                }\n\n                this.tokens.push(item);\n\n                continue;\n            }\n\n            // top-level paragraph\n            if (top && (cap = this.rules.paragraph.exec(src))) {\n                src = src.substring(cap[0].length);\n                this.tokens.push({\n                    type: 'paragraph',\n                    text: cap[1].charAt(cap[1].length - 1) === '\\n'\n                        ? cap[1].slice(0, -1)\n                        : cap[1]\n                });\n                continue;\n            }\n\n            // text\n            if (cap = this.rules.text.exec(src)) {\n                // Top-level should never reach here.\n                src = src.substring(cap[0].length);\n                this.tokens.push({\n                    type: 'text',\n                    text: cap[0]\n                });\n                continue;\n            }\n\n            if (src) {\n                throw new\n                Error('Infinite loop on byte: ' + src.charCodeAt(0));\n            }\n        }\n\n        return this.tokens;\n    };\n\n    /**\n * Inline-Level Grammar\n */\n\n    var inline = {\n        escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n        autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n        url: noop,\n        tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n        link: /^!?\\[(inside)\\]\\(href\\)/,\n        reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n        nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n        strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n        em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n        code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n        br: /^ {2,}\\n(?!\\s*$)/,\n        del: noop,\n        text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n    };\n\n    inline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\n    inline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\n    inline.link = replace(inline.link)\n    ('inside', inline._inside)\n    ('href', inline._href)\n    ();\n\n    inline.reflink = replace(inline.reflink)\n    ('inside', inline._inside)\n    ();\n\n    /**\n * Normal Inline Grammar\n */\n\n    inline.normal = merge({}, inline);\n\n    /**\n * Pedantic Inline Grammar\n */\n\n    inline.pedantic = merge({}, inline.normal, {\n        strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n        em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n    });\n\n    /**\n * GFM Inline Grammar\n */\n\n    inline.gfm = merge({}, inline.normal, {\n        escape: replace(inline.escape)('])', '~|])')(),\n        url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n        del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n        text: replace(inline.text)\n        (']|', '~]|')\n        ('|', '|https?://|')\n        ()\n    });\n\n    /**\n * GFM + Line Breaks Inline Grammar\n */\n\n    inline.breaks = merge({}, inline.gfm, {\n        br: replace(inline.br)('{2,}', '*')(),\n        text: replace(inline.gfm.text)('{2,}', '*')()\n    });\n\n    /**\n * Inline Lexer & Compiler\n */\n\n    function InlineLexer(links, options) {\n        this.options = options || marked.defaults;\n        this.links = links;\n        this.rules = inline.normal;\n        this.renderer = this.options.renderer || new Renderer();\n        this.renderer.options = this.options;\n\n        if (!this.links) {\n            throw new\n            Error('Tokens array requires a `links` property.');\n        }\n\n        if (this.options.gfm) {\n            if (this.options.breaks) {\n                this.rules = inline.breaks;\n            } else {\n                this.rules = inline.gfm;\n            }\n        } else if (this.options.pedantic) {\n            this.rules = inline.pedantic;\n        }\n    }\n\n    /**\n * Expose Inline Rules\n */\n\n    InlineLexer.rules = inline;\n\n    /**\n * Static Lexing/Compiling Method\n */\n\n    InlineLexer.output = function(src, links, options) {\n        var inline = new InlineLexer(links, options);\n        return inline.output(src);\n    };\n\n    /**\n * Lexing/Compiling\n */\n\n    InlineLexer.prototype.output = function(src) {\n        var out = '',\n            link,\n            text,\n            href,\n            cap;\n\n        while (src) {\n            // escape\n            if (cap = this.rules.escape.exec(src)) {\n                src = src.substring(cap[0].length);\n                out += cap[1];\n                continue;\n            }\n\n            // autolink\n            if (cap = this.rules.autolink.exec(src)) {\n                src = src.substring(cap[0].length);\n                if (cap[2] === '@') {\n                    text = cap[1].charAt(6) === ':'\n                        ? this.mangle(cap[1].substring(7))\n                        : this.mangle(cap[1]);\n                    href = this.mangle('mailto:') + text;\n                } else {\n                    text = escape(cap[1]);\n                    href = text;\n                }\n                out += this.renderer.link(href, null, text);\n                continue;\n            }\n\n            // url (gfm)\n            if (!this.inLink && (cap = this.rules.url.exec(src))) {\n                src = src.substring(cap[0].length);\n                text = escape(cap[1]);\n                href = text;\n                out += this.renderer.link(href, null, text);\n                continue;\n            }\n\n            // tag\n            if (cap = this.rules.tag.exec(src)) {\n                if (!this.inLink && /^<a /i.test(cap[0])) {\n                    this.inLink = true;\n                } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n                    this.inLink = false;\n                }\n                src = src.substring(cap[0].length);\n                out += this.options.sanitize\n                    ? escape(cap[0])\n                    : cap[0];\n                continue;\n            }\n\n            // link\n            if (cap = this.rules.link.exec(src)) {\n                src = src.substring(cap[0].length);\n                this.inLink = true;\n                out += this.outputLink(cap, {\n                    href: cap[2],\n                    title: cap[3]\n                });\n                this.inLink = false;\n                continue;\n            }\n\n            // reflink, nolink\n            if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n                src = src.substring(cap[0].length);\n                link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n                link = this.links[link.toLowerCase()];\n                if (!link || !link.href) {\n                    out += cap[0].charAt(0);\n                    src = cap[0].substring(1) + src;\n                    continue;\n                }\n                this.inLink = true;\n                out += this.outputLink(cap, link);\n                this.inLink = false;\n                continue;\n            }\n\n            // strong\n            if (cap = this.rules.strong.exec(src)) {\n                src = src.substring(cap[0].length);\n                out += this.renderer.strong(this.output(cap[2] || cap[1]));\n                continue;\n            }\n\n            // em\n            if (cap = this.rules.em.exec(src)) {\n                src = src.substring(cap[0].length);\n                out += this.renderer.em(this.output(cap[2] || cap[1]));\n                continue;\n            }\n\n            // code\n            if (cap = this.rules.code.exec(src)) {\n                src = src.substring(cap[0].length);\n                out += this.renderer.codespan(escape(cap[2], true));\n                continue;\n            }\n\n            // br\n            if (cap = this.rules.br.exec(src)) {\n                src = src.substring(cap[0].length);\n                out += this.renderer.br();\n                continue;\n            }\n\n            // del (gfm)\n            if (cap = this.rules.del.exec(src)) {\n                src = src.substring(cap[0].length);\n                out += this.renderer.del(this.output(cap[1]));\n                continue;\n            }\n\n            // text\n            if (cap = this.rules.text.exec(src)) {\n                src = src.substring(cap[0].length);\n                out += escape(this.smartypants(cap[0]));\n                continue;\n            }\n\n            if (src) {\n                throw new\n                Error('Infinite loop on byte: ' + src.charCodeAt(0));\n            }\n        }\n\n        return out;\n    };\n\n    /**\n * Compile Link\n */\n\n    InlineLexer.prototype.outputLink = function(cap, link) {\n        var href = escape(link.href),\n            title = link.title ? escape(link.title) : null;\n\n        return cap[0].charAt(0) !== '!'\n            ? this.renderer.link(href, title, this.output(cap[1]))\n            : this.renderer.image(href, title, escape(cap[1]));\n    };\n\n    /**\n * Smartypants Transformations\n */\n\n    InlineLexer.prototype.smartypants = function(text) {\n        if (!this.options.smartypants) { return text; }\n        return text\n        // em-dashes\n            .replace(/--/g, '\\u2014')\n        // opening singles\n            .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n        // closing singles & apostrophes\n            .replace(/'/g, '\\u2019')\n        // opening doubles\n            .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n        // closing doubles\n            .replace(/\"/g, '\\u201d')\n        // ellipses\n            .replace(/\\.{3}/g, '\\u2026');\n    };\n\n    /**\n * Mangle Links\n */\n\n    InlineLexer.prototype.mangle = function(text) {\n        var out = '',\n            l = text.length,\n            i = 0,\n            ch;\n\n        for (; i < l; i++) {\n            ch = text.charCodeAt(i);\n            if (Math.random() > 0.5) {\n                ch = 'x' + ch.toString(16);\n            }\n            out += '&#' + ch + ';';\n        }\n\n        return out;\n    };\n\n    /**\n * Renderer\n */\n\n    function Renderer(options) {\n        this.options = options || {};\n    }\n\n    Renderer.prototype.code = function(code, lang, escaped) {\n        if (this.options.highlight) {\n            var out = this.options.highlight(code, lang);\n            if (out != null && out !== code) {\n                escaped = true;\n                code = out;\n            }\n        }\n\n        if (!lang) {\n            return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n        }\n\n        return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n    };\n\n    Renderer.prototype.blockquote = function(quote) {\n        return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    Renderer.prototype.html = function(html) {\n        return html;\n    };\n\n    Renderer.prototype.heading = function(text, level, raw) {\n        return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n    };\n\n    Renderer.prototype.hr = function() {\n        return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    Renderer.prototype.list = function(body, ordered) {\n        var type = ordered ? 'ol' : 'ul';\n        return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    Renderer.prototype.listitem = function(text) {\n        return '<li>' + text + '</li>\\n';\n    };\n\n    Renderer.prototype.paragraph = function(text) {\n        return '<p>' + text + '</p>\\n';\n    };\n\n    Renderer.prototype.table = function(header, body) {\n        return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n    };\n\n    Renderer.prototype.tablerow = function(content) {\n        return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    Renderer.prototype.tablecell = function(content, flags) {\n        var type = flags.header ? 'th' : 'td';\n        var tag = flags.align\n            ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n            : '<' + type + '>';\n        return tag + content + '</' + type + '>\\n';\n    };\n\n    // span level renderer\n    Renderer.prototype.strong = function(text) {\n        return '<strong>' + text + '</strong>';\n    };\n\n    Renderer.prototype.em = function(text) {\n        return '<em>' + text + '</em>';\n    };\n\n    Renderer.prototype.codespan = function(text) {\n        return '<code>' + text + '</code>';\n    };\n\n    Renderer.prototype.br = function() {\n        return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    Renderer.prototype.del = function(text) {\n        return '<del>' + text + '</del>';\n    };\n\n    Renderer.prototype.link = function(href, title, text) {\n        if (this.options.sanitize) {\n            try {\n                var prot = decodeURIComponent(unescape(href))\n                    .replace(/[^\\w:]/g, '')\n                    .toLowerCase();\n            } catch (e) {\n                return '';\n            }\n            // eslint-disable-next-line no-script-url\n            if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0) {\n                return '';\n            }\n        }\n        var out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + title + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    };\n\n    Renderer.prototype.image = function(href, title, text) {\n        var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n        if (title) {\n            out += ' title=\"' + title + '\"';\n        }\n        out += this.options.xhtml ? '/>' : '>';\n        return out;\n    };\n\n    /**\n * Parsing & Compiling\n */\n\n    function Parser(options) {\n        this.tokens = [];\n        this.token = null;\n        this.options = options || marked.defaults;\n        this.options.renderer = this.options.renderer || new Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n    }\n\n    /**\n * Static Parse Method\n */\n\n    Parser.parse = function(src, options, renderer) {\n        var parser = new Parser(options, renderer);\n        return parser.parse(src);\n    };\n\n    /**\n * Parse Loop\n */\n\n    Parser.prototype.parse = function(src) {\n        this.inline = new InlineLexer(src.links, this.options, this.renderer);\n        this.tokens = src.reverse();\n\n        var out = '';\n        while (this.next()) {\n            out += this.tok();\n        }\n\n        return out;\n    };\n\n    /**\n * Next Token\n */\n\n    Parser.prototype.next = function() {\n        return this.token = this.tokens.pop();\n    };\n\n    /**\n * Preview Next Token\n */\n\n    Parser.prototype.peek = function() {\n        return this.tokens[this.tokens.length - 1] || 0;\n    };\n\n    /**\n * Parse Text Tokens\n */\n\n    Parser.prototype.parseText = function() {\n        var body = this.token.text;\n\n        while (this.peek().type === 'text') {\n            body += '\\n' + this.next().text;\n        }\n\n        return this.inline.output(body);\n    };\n\n    /**\n * Parse Current Token\n */\n\n    Parser.prototype.tok = function() {\n        switch (this.token.type) {\n        case 'space': {\n            return '';\n        }\n        case 'hr': {\n            return this.renderer.hr();\n        }\n        case 'heading': {\n            return this.renderer.heading(\n                this.inline.output(this.token.text),\n                this.token.depth,\n                this.token.text);\n        }\n        case 'code': {\n            return this.renderer.code(this.token.text,\n                this.token.lang,\n                this.token.escaped);\n        }\n        case 'table': {\n            var header = '',\n                body = '',\n                i,\n                row,\n                cell,\n                flags,\n                j;\n\n            // header\n            cell = '';\n            for (i = 0; i < this.token.header.length; i++) {\n                flags = { header: true, align: this.token.align[i] };\n                cell += this.renderer.tablecell(\n                    this.inline.output(this.token.header[i]),\n                    { header: true, align: this.token.align[i] }\n                );\n            }\n            header += this.renderer.tablerow(cell);\n\n            for (i = 0; i < this.token.cells.length; i++) {\n                row = this.token.cells[i];\n\n                cell = '';\n                for (j = 0; j < row.length; j++) {\n                    cell += this.renderer.tablecell(\n                        this.inline.output(row[j]),\n                        { header: false, align: this.token.align[j] }\n                    );\n                }\n\n                body += this.renderer.tablerow(cell);\n            }\n            return this.renderer.table(header, body);\n        }\n        case 'blockquote_start': {\n            var body = '';\n\n            while (this.next().type !== 'blockquote_end') {\n                body += this.tok();\n            }\n\n            return this.renderer.blockquote(body);\n        }\n        case 'list_start': {\n            var body = '',\n                ordered = this.token.ordered;\n\n            while (this.next().type !== 'list_end') {\n                body += this.tok();\n            }\n\n            return this.renderer.list(body, ordered);\n        }\n        case 'list_item_start': {\n            var body = '';\n\n            while (this.next().type !== 'list_item_end') {\n                body += this.token.type === 'text'\n                    ? this.parseText()\n                    : this.tok();\n            }\n\n            return this.renderer.listitem(body);\n        }\n        case 'loose_item_start': {\n            var body = '';\n\n            while (this.next().type !== 'list_item_end') {\n                body += this.tok();\n            }\n\n            return this.renderer.listitem(body);\n        }\n        case 'html': {\n            var html = !this.token.pre && !this.options.pedantic\n                ? this.inline.output(this.token.text)\n                : this.token.text;\n            return this.renderer.html(html);\n        }\n        case 'paragraph': {\n            return this.renderer.paragraph(this.inline.output(this.token.text));\n        }\n        case 'text': {\n            return this.renderer.paragraph(this.parseText());\n        }\n        }\n    };\n\n    /**\n * Helpers\n */\n\n    function escape(html, encode) {\n        return html\n            .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    }\n\n    function unescape(html) {\n        return html.replace(/&([#\\w]+);/g, function(_, n) {\n            n = n.toLowerCase();\n            if (n === 'colon') { return ':'; }\n            if (n.charAt(0) === '#') {\n                return n.charAt(1) === 'x'\n                    ? String.fromCharCode(parseInt(n.substring(2), 16))\n                    : String.fromCharCode(+n.substring(1));\n            }\n            return '';\n        });\n    }\n\n    function replace(regex, opt) {\n        regex = regex.source;\n        opt = opt || '';\n        return function self(name, val) {\n            if (!name) { return new RegExp(regex, opt); }\n            val = val.source || val;\n            val = val.replace(/(^|[^\\[])\\^/g, '$1');\n            regex = regex.replace(name, val);\n            return self;\n        };\n    }\n\n    function noop() {}\n    noop.exec = noop;\n\n    function merge(obj) {\n        var i = 1,\n            target,\n            key;\n\n        for (; i < arguments.length; i++) {\n            target = arguments[i];\n            for (key in target) {\n                if (Object.prototype.hasOwnProperty.call(target, key)) {\n                    obj[key] = target[key];\n                }\n            }\n        }\n\n        return obj;\n    }\n\n\n    /**\n * Marked\n */\n\n    function marked(src, opt, callback) {\n        if (callback || typeof opt === 'function') {\n            if (!callback) {\n                callback = opt;\n                opt = null;\n            }\n\n            opt = merge({}, marked.defaults, opt || {});\n\n            var highlight = opt.highlight,\n                tokens,\n                pending,\n                i = 0;\n\n            try {\n                tokens = Lexer.lex(src, opt);\n            } catch (e) {\n                return callback(e);\n            }\n\n            pending = tokens.length;\n\n            var done = function(err) {\n                if (err) {\n                    opt.highlight = highlight;\n                    return callback(err);\n                }\n\n                var out;\n\n                try {\n                    out = Parser.parse(tokens, opt);\n                } catch (e) {\n                    err = e;\n                }\n\n                opt.highlight = highlight;\n\n                return err\n                    ? callback(err)\n                    : callback(null, out);\n            };\n\n            if (!highlight || highlight.length < 3) {\n                return done();\n            }\n\n            delete opt.highlight;\n\n            if (!pending) { return done(); }\n\n            for (; i < tokens.length; i++) {\n                // eslint-disable-next-line no-loop-func\n                (function(token) {\n                    if (token.type !== 'code') {\n                        return --pending || done();\n                    }\n                    return highlight(token.text, token.lang, function(err, code) {\n                        if (err) { return done(err); }\n                        if (code == null || code === token.text) {\n                            return --pending || done();\n                        }\n                        token.text = code;\n                        token.escaped = true;\n                        --pending || done();\n                    });\n                }(tokens[i]));\n            }\n\n            return;\n        }\n        try {\n            if (opt) { opt = merge({}, marked.defaults, opt); }\n            return Parser.parse(Lexer.lex(src, opt), opt);\n        } catch (e) {\n            e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n            if ((opt || marked.defaults).silent) {\n                return '<p>An error occured:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n            }\n            throw e;\n        }\n    }\n\n    /**\n * Options\n */\n\n    marked.options =\nmarked.setOptions = function(opt) {\n    merge(marked.defaults, opt);\n    return marked;\n};\n\n    marked.defaults = {\n        gfm: true,\n        tables: true,\n        breaks: false,\n        pedantic: false,\n        sanitize: false,\n        smartLists: false,\n        silent: false,\n        highlight: null,\n        langPrefix: 'lang-',\n        smartypants: false,\n        headerPrefix: '',\n        renderer: new Renderer(),\n        xhtml: false\n    };\n\n    /**\n * Expose\n */\n\n    marked.Parser = Parser;\n    marked.parser = Parser.parse;\n\n    marked.Renderer = Renderer;\n\n    marked.Lexer = Lexer;\n    marked.lexer = Lexer.lex;\n\n    marked.InlineLexer = InlineLexer;\n    marked.inlineLexer = InlineLexer.output;\n\n    marked.parse = marked;\n\n    if (typeof module !== 'undefined' && typeof exports === 'object') {\n        // eslint-disable-next-line no-undef\n        module.exports = marked;\n    } else if (typeof define === 'function' && define.amd) {\n        define(function() { return marked; });\n    } else {\n        this.marked = marked;\n    }\n\n}).call(function() {\n    // eslint-disable-next-line no-invalid-this\n    return this || (typeof window !== 'undefined' ? window : global);\n}());\n"],"file":"marked.js"}