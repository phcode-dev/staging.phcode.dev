define(function(require,exports,module){const BaseServer=brackets.getModule("LiveDevelopment/Servers/BaseServer").BaseServer,LiveDevelopmentUtils=brackets.getModule("LiveDevelopment/LiveDevelopmentUtils"),marked=brackets.getModule("thirdparty/marked.min"),DocumentManager=brackets.getModule("document/DocumentManager"),Mustache=brackets.getModule("thirdparty/mustache/mustache"),markdownHTMLTemplate=require("text!markdown.html"),_serverBroadcastChannel=new BroadcastChannel("virtual_server_broadcast");let _staticServerInstance;function StaticServer(config){config.baseUrl=`${window.fsServerUrl}PHOENIX_LIVE_PREVIEW_${Phoenix.PHOENIX_INSTANCE_ID}`,this._sendInstrumentedContent=this._sendInstrumentedContent.bind(this),BaseServer.call(this,config)}function _sendMarkdown(fullPath,requestID){DocumentManager.getDocumentForPath(fullPath).done(function(doc){let text=doc.getText(),markdownHtml,templateVars={markdownContent:marked.parse(text),BOOTSTRAP_LIB_CSS:`${window.parent.Phoenix.baseURL}thirdparty/bootstrap/bootstrap.min.css`,HIGHLIGHT_JS_CSS:`${window.parent.Phoenix.baseURL}thirdparty/highlight.js/styles/github.min.css`,HIGHLIGHT_JS:`${window.parent.Phoenix.baseURL}thirdparty/highlight.js/highlight.min.js`,GFM_CSS:`${window.parent.Phoenix.baseURL}thirdparty/gfm.min.css`},html=Mustache.render(markdownHTMLTemplate,templateVars);_serverBroadcastChannel.postMessage({type:"REQUEST_RESPONSE",requestID:requestID,fullPath:fullPath,contents:html,headers:{"Content-Type":"text/html"}})}).fail(function(err){console.error(`Markdown rendering failed for ${fullPath}: `,err)})}function _getExtension(filePath){let pathSplit=(filePath=filePath||"").split(".");return pathSplit&&pathSplit.length>1?pathSplit[pathSplit.length-1]:""}function _isMarkdownFile(filePath){let extension=_getExtension(filePath);return["md","markdown"].includes(extension.toLowerCase())}marked.setOptions({renderer:new marked.Renderer,pedantic:!1,gfm:!0,breaks:!1,sanitize:!1,smartLists:!0,smartypants:!1,xhtml:!1}),StaticServer.prototype=Object.create(BaseServer.prototype),StaticServer.prototype.constructor=StaticServer,StaticServer.prototype.pathToUrl=function(path){const baseUrl=this.getBaseUrl(),relativePath=this._pathResolver(path);return relativePath!==path?`${baseUrl}${encodeURI(path)}`:null},StaticServer.prototype.urlToPath=function(url){let path,baseUrl="";return""!==(baseUrl=this.getBaseUrl())&&0===url.indexOf(baseUrl)?(path=url.replace(baseUrl,""),decodeURI(path)):null},StaticServer.prototype.canServe=function(localPath){return localPath!==this._pathResolver(localPath)&&(!!localPath.match(/\/$/)||LiveDevelopmentUtils.isStaticHtmlFileExt(localPath))},StaticServer.prototype._updateInstrumentedURLSInWorker=function(){let paths=Object.keys(this._liveDocuments);console.log("Static server _updateInstrumentedURLSInWorker: ",this._root,paths),window.messageSW({type:"setInstrumentedURLs",root:this._root,paths:paths}).then(status=>{console.log("Static server received msg from Service worker: setInstrumentedURLs done: ",status)}).catch(err=>{console.error("Static server received msg from Service worker: Error while setInstrumentedURLs",err)})},StaticServer.prototype.readyToServe=function(){return $.Deferred().resolve().promise()},StaticServer.prototype.add=function(liveDocument){liveDocument.setInstrumentationEnabled&&liveDocument.setInstrumentationEnabled(!0),BaseServer.prototype.add.call(this,liveDocument),this._updateInstrumentedURLSInWorker()},StaticServer.prototype.remove=function(liveDocument){BaseServer.prototype.remove.call(this,liveDocument),this._updateInstrumentedURLSInWorker()},StaticServer.prototype.clear=function(){BaseServer.prototype.clear.call(this),this._updateInstrumentedURLSInWorker()},StaticServer.prototype._send=function(location,response){this._nodeDomain.exec("writeFilteredResponse",location.root,location.pathname,response)},StaticServer.prototype._sendInstrumentedContent=function(data){if(data.phoenixInstanceID&&data.phoenixInstanceID!==Phoenix.PHOENIX_INSTANCE_ID)return;let path=this._documentKey(data.path),requestID=data.requestID,liveDocument=this._liveDocuments[path],response={};liveDocument&&liveDocument.getResponseData&&(response=liveDocument.getResponseData(),_serverBroadcastChannel.postMessage({type:"REQUEST_RESPONSE",requestID:requestID,path:path,contents:response.body}))},_serverBroadcastChannel.onmessage=(event=>{if(console.log("sss",event.data,Phoenix.PHOENIX_INSTANCE_ID),"getInstrumentedContent"===event.data.type&&event.data.phoenixInstanceID===Phoenix.PHOENIX_INSTANCE_ID){if(_isMarkdownFile(event.data.path))return void _sendMarkdown(event.data.path,event.data.requestID);_staticServerInstance&&_staticServerInstance._sendInstrumentedContent(event.data)}}),StaticServer.prototype.start=function(){_staticServerInstance=this},StaticServer.prototype.stop=function(){_staticServerInstance=void 0},module.exports=StaticServer});
//# sourceMappingURL=StaticServer.js.map
