{"version":3,"sources":["extensions/default/RemoteFileAdapter/unittests.js"],"names":["define","require","exports","module","SpecRunnerUtils","brackets","getModule","CommandManager","Commands","Dialogs","MainViewManager","REMOTE_FILE_PATH","INVALID_REMOTE_FILE_PATH","describe","testWindow","createRemoteFile","filePath","execute","FILE_OPEN","fullPath","deleteCurrentRemoteFile","FILE_DELETE","saveRemoteFile","FILE_SAVE","renameRemoteFile","FILE_RENAME","closeRemoteFile","FILE_CLOSE","beforeAll","async","createTestWindowAndRun","test","spyOn","and","callFake","dlgClass","title","message","buttons","console","warn","done","callback","DIALOG_BTN_OK","beforeEach","showModalDialog","calls","reset","afterAll","closeTestWindow","it","awaitsForDone","expect","getWorkingSet","ACTIVE_PANE","length","toEqual","awaitsForFail","toHaveBeenCalled","count","toBe"],"mappings":"AAuBAA,OAAO,SAAUC,QAASC,QAASC,QAG/B,IAAIC,gBAAkBC,SAASC,UAAU,wBACrCC,eACAC,SACAC,QACAC,gBAEAC,iBAAmB,wEACnBC,yBAA2B,uCAI/BC,SAAS,8BAA+B,WACpC,IAAIC,WAEJ,SAASC,iBAAiBC,UACtB,OAAOT,eAAeU,QAAQT,SAASU,UAAW,CAACC,SAAUH,WAGjE,SAASI,0BACL,OAAOb,eAAeU,QAAQT,SAASa,aAG3C,SAASC,iBACL,OAAOf,eAAeU,QAAQT,SAASe,WAG3C,SAASC,iBAAiBR,UACtB,OAAOT,eAAeU,QAAQT,SAASiB,aAG3C,SAASC,gBAAgBV,UACrB,OAAOT,eAAeU,QAAQT,SAASmB,WAAY,CAACR,SAAUH,WAGlEY,UAAUC,iBACNf,iBAAmBV,gBAAgB0B,yBACnCpB,gBAAkBI,WAAWT,SAAS0B,KAAKrB,gBAC3CH,eAAkBO,WAAWT,SAAS0B,KAAKxB,eAC3CE,QAAYK,WAAWT,SAAS0B,KAAKtB,QACrCD,SAAkBM,WAAWT,SAAS0B,KAAKvB,SAC3CwB,MAAMvB,QAAS,mBAAmBwB,IAAIC,SAAS,SAAUC,SAAUC,MAAOC,QAASC,SAE/E,OADAC,QAAQC,KAAKJ,MAAOC,SACb,CAACI,KAAM,SAAUC,UAAYA,SAASjC,QAAQkC,oBAE1D,KAEHC,WAAW,WACPnC,QAAQoC,gBAAgBC,MAAMC,UAGlCC,SAASnB,iBACLf,WAAgB,WACVV,gBAAgB6C,oBAI1BC,GAAG,+BAAgCrB,uBACzBsB,cAAcpC,iBAAiBJ,mBACrCyC,OAAO1C,gBAAgB2C,cAAc3C,gBAAgB4C,aAAaC,QAAQC,QAAQ,SAC5EL,cAAczB,gBAAgBf,mBACpCyC,OAAO1C,gBAAgB2C,cAAc3C,gBAAgB4C,aAAaC,QAAQC,QAAQ,KAGtFN,GAAG,2BAA4BrB,uBACrB4B,cAAc1C,iBAAiBH,2BACrCwC,OAAO1C,gBAAgB2C,cAAc3C,gBAAgB4C,aAAaC,QAAQC,QAAQ,GAClFJ,OAAO3C,QAAQoC,iBAAiBa,mBAChCN,OAAO3C,QAAQoC,gBAAgBC,MAAMa,SAASC,KAAK,KAGvDV,GAAG,mBAAoBrB,uBACbsB,cAAcpC,iBAAiBJ,mBACrCyC,OAAO1C,gBAAgB2C,cAAc3C,gBAAgB4C,aAAaC,QAAQC,QAAQ,SAC5EC,cAAcnC,wBACd6B,cAAczB,gBAAgBf,mBACpCyC,OAAO1C,gBAAgB2C,cAAc3C,gBAAgB4C,aAAaC,QAAQC,QAAQ,KAGtFN,GAAG,qBAAsBrB,uBACfsB,cAAcpC,iBAAiBJ,mBACrCyC,OAAO1C,gBAAgB2C,cAAc3C,gBAAgB4C,aAAaC,QAAQC,QAAQ,SAC5EL,cAAc/B,2BACpBgC,OAAO3C,QAAQoC,iBAAiBa,mBAChCN,OAAO1C,gBAAgB2C,cAAc3C,gBAAgB4C,aAAaC,QAAQC,QAAQ,SAC5EL,cAAczB,gBAAgBf,mBACpCyC,OAAO1C,gBAAgB2C,cAAc3C,gBAAgB4C,aAAaC,QAAQC,QAAQ,KAGtFN,GAAG,qBAAsBrB,uBACfsB,cAAcpC,iBAAiBJ,mBACrCyC,OAAO1C,gBAAgB2C,cAAc3C,gBAAgB4C,aAAaC,QAAQC,QAAQ,SAC5EC,cAAcjC,oBACpB4B,OAAO1C,gBAAgB2C,cAAc3C,gBAAgB4C,aAAaC,QAAQC,QAAQ","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2013 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\n/*global describe, it, expect, beforeEach, beforeAll, afterAll, spyOn, awaitsForDone, awaitsForFail */\n\ndefine(function (require, exports, module) {\n\n\n    var SpecRunnerUtils = brackets.getModule(\"spec/SpecRunnerUtils\"),\n        CommandManager,\n        Commands,\n        Dialogs,\n        MainViewManager;\n\n    var REMOTE_FILE_PATH = \"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\",\n        INVALID_REMOTE_FILE_PATH = \"https://something.not.present/a.html\";\n\n\n\n    describe(\"extension:RemoteFileAdapter\", function () {\n        var testWindow;\n\n        function createRemoteFile(filePath) {\n            return CommandManager.execute(Commands.FILE_OPEN, {fullPath: filePath});\n        }\n\n        function deleteCurrentRemoteFile() {\n            return CommandManager.execute(Commands.FILE_DELETE);\n        }\n\n        function saveRemoteFile() {\n            return CommandManager.execute(Commands.FILE_SAVE);\n        }\n\n        function renameRemoteFile(filePath) {\n            return CommandManager.execute(Commands.FILE_RENAME);\n        }\n\n        function closeRemoteFile(filePath) {\n            return CommandManager.execute(Commands.FILE_CLOSE, {fullPath: filePath});\n        }\n\n        beforeAll(async function () {\n            testWindow = await SpecRunnerUtils.createTestWindowAndRun();\n            MainViewManager = testWindow.brackets.test.MainViewManager;\n            CommandManager  = testWindow.brackets.test.CommandManager;\n            Dialogs\t\t\t= testWindow.brackets.test.Dialogs;\n            Commands        = testWindow.brackets.test.Commands;\n            spyOn(Dialogs, 'showModalDialog').and.callFake(function (dlgClass, title, message, buttons) {\n                console.warn(title, message);\n                return {done: function (callback) { callback(Dialogs.DIALOG_BTN_OK); } };\n            });\n        }, 30000);\n\n        beforeEach(function () {\n            Dialogs.showModalDialog.calls.reset();\n        });\n\n        afterAll(async function () {\n            testWindow    = null;\n            await SpecRunnerUtils.closeTestWindow();\n        });\n\n\n        it(\"Open/close remote https file\", async function () {\n            await awaitsForDone(createRemoteFile(REMOTE_FILE_PATH));\n            expect(MainViewManager.getWorkingSet(MainViewManager.ACTIVE_PANE).length).toEqual(1);\n            await awaitsForDone(closeRemoteFile(REMOTE_FILE_PATH));\n            expect(MainViewManager.getWorkingSet(MainViewManager.ACTIVE_PANE).length).toEqual(0);\n        });\n\n        it(\"Open invalid remote file\", async function () {\n            await awaitsForFail(createRemoteFile(INVALID_REMOTE_FILE_PATH));\n            expect(MainViewManager.getWorkingSet(MainViewManager.ACTIVE_PANE).length).toEqual(0);\n            expect(Dialogs.showModalDialog).toHaveBeenCalled();\n            expect(Dialogs.showModalDialog.calls.count()).toBe(1);\n        });\n\n        it(\"Save remote file\", async function () {\n            await awaitsForDone(createRemoteFile(REMOTE_FILE_PATH));\n            expect(MainViewManager.getWorkingSet(MainViewManager.ACTIVE_PANE).length).toEqual(1);\n            await awaitsForFail(saveRemoteFile());\n            await awaitsForDone(closeRemoteFile(REMOTE_FILE_PATH));\n            expect(MainViewManager.getWorkingSet(MainViewManager.ACTIVE_PANE).length).toEqual(0);\n        });\n\n        it(\"Delete remote file\", async function () {\n            await awaitsForDone(createRemoteFile(REMOTE_FILE_PATH));\n            expect(MainViewManager.getWorkingSet(MainViewManager.ACTIVE_PANE).length).toEqual(1);\n            await awaitsForDone(deleteCurrentRemoteFile());\n            expect(Dialogs.showModalDialog).toHaveBeenCalled();\n            expect(MainViewManager.getWorkingSet(MainViewManager.ACTIVE_PANE).length).toEqual(1);\n            await awaitsForDone(closeRemoteFile(REMOTE_FILE_PATH));\n            expect(MainViewManager.getWorkingSet(MainViewManager.ACTIVE_PANE).length).toEqual(0);\n        });\n\n        it(\"Rename remote file\", async function () {\n            await awaitsForDone(createRemoteFile(REMOTE_FILE_PATH));\n            expect(MainViewManager.getWorkingSet(MainViewManager.ACTIVE_PANE).length).toEqual(1);\n            await awaitsForFail(renameRemoteFile());\n            expect(MainViewManager.getWorkingSet(MainViewManager.ACTIVE_PANE).length).toEqual(1);\n        });\n    });\n});\n"],"file":"unittests.js"}