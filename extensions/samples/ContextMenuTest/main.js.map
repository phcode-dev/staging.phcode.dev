{"version":3,"sources":["extensions/samples/ContextMenuTest/main.js"],"names":["define","require","exports","module","CommandManager","brackets","getModule","EditorManager","Menus","TestCommand1","command1","get","command2","checked","getChecked","window","alert","setEnabled","setChecked","TestCommand2","TestCommand3","register","command3","updateEnabledState","editor","getFocusedEditor","getSelectedText","editor_cmenu","getContextMenu","ContextMenuIds","EDITOR_MENU","on","addMenuDivider","addMenuItem"],"mappings":"AAqBAA,OAAO,SAAUC,QAASC,QAASC,QAI/B,IAAIC,eAAkBC,SAASC,UAAU,0BACrCC,cAAkBF,SAASC,UAAU,wBACrCE,MAAkBH,SAASC,UAAU,iBAGzC,SAASG,eACL,IAAIC,SAAWN,eAAeO,IAAI,0BAClC,GAAKD,SAAL,CAGA,IAAIE,SAAWR,eAAeO,IAAI,0BAClC,GAAKC,SAAL,CAIA,IAAIC,QAAUH,SAASI,aACnBD,SACAE,OAAOC,MAAM,oCACbJ,SAASK,YAAW,KAEpBF,OAAOC,MAAM,iCACbJ,SAASK,YAAW,IAExBP,SAASQ,YAAYL,WAGzB,SAASM,eACLJ,OAAOC,MAAM,uBAGjB,SAASI,eACLL,OAAOC,MAAM,uBAIjB,IAAIN,SAAWN,eAAeiB,SAAS,mBAAoB,yBAA0BZ,cACjFG,SAAWR,eAAeiB,SAAS,mCAAoC,yBAA0BF,cACjGG,SAAWlB,eAAeiB,SAAS,6BAA8B,yBAA0BD,cAG/FV,SAASQ,YAAW,GACpBN,SAASK,YAAW,GACpBK,SAASL,YAAW,GAGpB,IAAIM,mBAAqB,WACrB,IAAIC,OAASjB,cAAckB,mBAC3BH,SAASL,WAAWO,QAAuC,KAA7BA,OAAOE,oBAErCC,aAAenB,MAAMoB,eAAepB,MAAMqB,eAAeC,aAC7DH,aAAaI,GAAG,wBAAyBR,oBAIrCI,eACAA,aAAaK,iBACbL,aAAaM,YAAY,0BACzBN,aAAaM,YAAY,0BACzBN,aAAaM,YAAY","sourcesContent":["/*\n * GNU AGPL-3.0 License\n *\n * Copyright (c) 2021 - present core.ai . All rights reserved.\n * Original work Copyright (c) 2012 - 2021 Adobe Systems Incorporated. All rights reserved.\n *\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see https://opensource.org/licenses/AGPL-3.0.\n *\n */\n\ndefine(function (require, exports, module) {\n\n\n    // Brackets modules\n    var CommandManager  = brackets.getModule(\"command/CommandManager\"),\n        EditorManager   = brackets.getModule(\"editor/EditorManager\"),\n        Menus           = brackets.getModule(\"command/Menus\");\n\n    // Define the functions that Commands will execute\n    function TestCommand1() {\n        var command1 = CommandManager.get(\"extensionTest.command1\");\n        if (!command1) {\n            return;\n        }\n        var command2 = CommandManager.get(\"extensionTest.command2\");\n        if (!command2) {\n            return;\n        }\n\n        var checked = command1.getChecked();\n        if (checked) {\n            window.alert(\"Unchecking self. Disabling next.\");\n            command2.setEnabled(false);\n        } else {\n            window.alert(\"Checking self. Enabling next.\");\n            command2.setEnabled(true);\n        }\n        command1.setChecked(!checked);\n    }\n\n    function TestCommand2() {\n        window.alert(\"Executing command 2\");\n    }\n\n    function TestCommand3() {\n        window.alert(\"Executing command 3\");\n    }\n\n    // Register the functions as commands\n    var command1 = CommandManager.register(\"Toggle Checkmark\", \"extensionTest.command1\", TestCommand1);\n    var command2 = CommandManager.register(\"Enabled when previous is Checked\", \"extensionTest.command2\", TestCommand2);\n    var command3 = CommandManager.register(\"Enabled when text selected\", \"extensionTest.command3\", TestCommand3);\n\n    // Set the Command initial state\n    command1.setChecked(true);\n    command2.setEnabled(true);\n    command3.setEnabled(false);\n\n    // Update the MenuItem by changing the underlying command\n    var updateEnabledState = function () {\n        var editor = EditorManager.getFocusedEditor();\n        command3.setEnabled(editor && editor.getSelectedText() !== \"\");\n    };\n    var editor_cmenu = Menus.getContextMenu(Menus.ContextMenuIds.EDITOR_MENU);\n    editor_cmenu.on(\"beforeContextMenuOpen\", updateEnabledState);\n\n\n    // Add the Commands as MenuItems of the Editor context menu\n    if (editor_cmenu) {\n        editor_cmenu.addMenuDivider();\n        editor_cmenu.addMenuItem(\"extensionTest.command1\");\n        editor_cmenu.addMenuItem(\"extensionTest.command2\");\n        editor_cmenu.addMenuItem(\"extensionTest.command3\");\n    }\n});\n"],"file":"main.js"}